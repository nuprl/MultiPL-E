language: java
name: HumanEval_145_order_by_points
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.remove(minIndex);\n            nums.remove(minIndex);\n    \
    \    }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5id6bd8.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.remove(minIndex);\n            nums.remove(minIndex);\n    \
    \    }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5id6bd8.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.remove(minIndex);\n            nums.remove(minIndex);\n    \
    \    }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5id6bd8.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        ArrayList<Integer> sums = new ArrayList<>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.remove(minIndex);\n            nums.remove(minIndex);\n    \
    \    }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6oox2vl.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo5xv176y.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = sums.get(i);\n            int minIndex = i;\n         \
    \   for (int j = i; j < nums.size(); j++) {\n                if (sums.get(j) <\
    \ min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.set(minIndex, sums.get(i));\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt9wwwmim.java:41)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        return\
    \ nums;\n}\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6slrkf2d.java:18)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        return\
    \ null;\n}\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmprbn5hdzr.java:18)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        ArrayList<Integer> sorted = new ArrayList<Integer>(sums);\n\
    \        Collections.sort(sorted);\n        for (int i = 0; i < sorted.size();\
    \ i++) {\n            int index = sums.indexOf(sorted.get(i));\n            result.add(nums.get(index));\n\
    \            sums.set(index, -1);\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ag6jwol.java:36)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo5xv176y.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp4uhh54we.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return nums;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi24m6y_5.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Your\
    \ code here\n        return nums;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ir7cz6d.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        return\
    \ null;\n}\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmprbn5hdzr.java:18)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo5xv176y.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sums.add(sumDigits(nums.get(i)));\n\
    \        }\n        for (int i = 0; i < nums.size(); i++) {\n            int min\
    \ = Collections.min(sums);\n            int index = sums.indexOf(min);\n     \
    \       result.add(nums.get(index));\n            sums.set(index, Integer.MAX_VALUE);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2io22fem.java:18: error: cannot find symbol\n            sums.add(sumDigits(nums.get(i)));\n\
    \                     ^\n  symbol:   method sumDigits(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpqkdvjpc_.java:19)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp4uhh54we.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sums.add(sumDigits(nums.get(i)));\n\
    \        }\n        for (int i = 0; i < nums.size(); i++) {\n            int min\
    \ = sums.get(0);\n            int minIndex = 0;\n            for (int j = 0; j\
    \ < sums.size(); j++) {\n                if (sums.get(j) < min) {\n          \
    \          min = sums.get(j);\n                    minIndex = j;\n           \
    \     }\n            }\n            result.add(nums.get(minIndex));\n        \
    \    sums.remove(minIndex);\n            nums.remove(minIndex);\n        }\n \
    \       return result;\n}\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx9vw3u6g.java:18: error: cannot find symbol\n            sums.add(sumDigits(nums.get(i)));\n\
    \                     ^\n  symbol:   method sumDigits(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.remove(minIndex);\n            nums.remove(minIndex);\n    \
    \    }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5id6bd8.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.remove(minIndex);\n            nums.remove(minIndex);\n    \
    \    }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5id6bd8.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpanf07jmw.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        ArrayList<Integer> sums = new ArrayList<>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        int[] indices = new int[nums.size()];\n\
    \        for (int i = 0; i < indices.length; i++) {\n            indices[i] =\
    \ i;\n        }\n        for (int i = 0; i < sums.size(); i++) {\n           \
    \ for (int j = i + 1; j < sums.size(); j++) {\n                if (sums.get(i)\
    \ > sums.get(j)) {\n                    int temp = sums.get(i);\n            \
    \        sums.set(i, sums.get(j));\n                    sums.set(j, temp);\n \
    \                   temp = indices[i];\n                    indices[i] = indices[j];\n\
    \                    indices[j] = temp;\n                }\n            }\n  \
    \      }\n        for (int i = 0; i < indices.length; i++) {\n            result.add(nums.get(indices[i]));\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8gkkp5g5.java:48)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpqkdvjpc_.java:19)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.remove(minIndex);\n            nums.remove(minIndex);\n    \
    \    }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5id6bd8.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpanf07jmw.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp4uhh54we.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp4uhh54we.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpanf07jmw.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sums.add(sumDigits(nums.get(i)));\n\
    \        }\n        for (int i = 0; i < nums.size(); i++) {\n            int min\
    \ = Collections.min(sums);\n            int index = sums.indexOf(min);\n     \
    \       result.add(nums.get(index));\n            sums.set(index, Integer.MAX_VALUE);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2io22fem.java:18: error: cannot find symbol\n            sums.add(sumDigits(nums.get(i)));\n\
    \                     ^\n  symbol:   method sumDigits(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        return\
    \ null;\n}\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmprbn5hdzr.java:18)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> temp = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            temp.add(nums.get(i));\n       \
    \ }\n        Collections.sort(temp);\n        for (int i = 0; i < temp.size();\
    \ i++) {\n            for (int j = 0; j < nums.size(); j++) {\n              \
    \  if (temp.get(i) == nums.get(j)) {\n                    result.add(nums.get(j));\n\
    \                    nums.set(j, -1);\n                    break;\n          \
    \      }\n            }\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6px_dhoh.java:34)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp4uhh54we.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // write\
    \ your code here\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> sum = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            int temp = nums.get(i);\n      \
    \      int sumTemp = 0;\n            while (temp > 0) {\n                sumTemp\
    \ += temp % 10;\n                temp /= 10;\n            }\n            sum.add(sumTemp);\n\
    \        }\n        for (int i = 0; i < nums.size(); i++) {\n            int min\
    \ = Integer.MAX_VALUE;\n            int index = -1;\n            for (int j =\
    \ 0; j < nums.size(); j++) {\n                if (sum.get(j) < min) {\n      \
    \              min = sum.get(j);\n                    index = j;\n           \
    \     }\n            }\n            result.add(nums.get(index));\n           \
    \ sum.set(index, Integer.MAX_VALUE);\n        }\n        return result;\n}\n \
    \   public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo524zs3t.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sumOfDigits =\
    \ new ArrayList<Integer>();\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int sum = 0;\n            int num = nums.get(i);\n            while\
    \ (num > 0) {\n                sum += num % 10;\n                num /= 10;\n\
    \            }\n            sumOfDigits.add(sum);\n        }\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            int min = Integer.MAX_VALUE;\n \
    \           int minIndex = -1;\n            for (int j = 0; j < sumOfDigits.size();\
    \ j++) {\n                if (sumOfDigits.get(j) < min) {\n                  \
    \  min = sumOfDigits.get(j);\n                    minIndex = j;\n            \
    \    }\n            }\n            result.add(nums.get(minIndex));\n         \
    \   sumOfDigits.set(minIndex, Integer.MAX_VALUE);\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47l9gfva.java:41)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> indices = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            int sum = 0;\n            int num\
    \ = nums.get(i);\n            while (num > 0) {\n                sum += num %\
    \ 10;\n                num /= 10;\n            }\n            sums.add(sum);\n\
    \            indices.add(i);\n        }\n        for (int i = 0; i < sums.size();\
    \ i++) {\n            int min = i;\n            for (int j = i + 1; j < sums.size();\
    \ j++) {\n                if (sums.get(j) < sums.get(min)) {\n               \
    \     min = j;\n                }\n            }\n            int temp = sums.get(i);\n\
    \            sums.set(i, sums.get(min));\n            sums.set(min, temp);\n \
    \           temp = indices.get(i);\n            indices.set(i, indices.get(min));\n\
    \            indices.set(min, temp);\n        }\n        for (int i = 0; i < indices.size();\
    \ i++) {\n            result.add(nums.get(indices.get(i)));\n        }\n     \
    \   return result;\n}\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6t6nzftc.java:48)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpqkdvjpc_.java:19)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code goes here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpgxj1qozy.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> sum = new ArrayList<Integer>();\n        int i = 0;\n\
    \        for (Integer num : nums) {\n            int temp = 0;\n            while\
    \ (num > 0) {\n                temp += num % 10;\n                num /= 10;\n\
    \            }\n            sum.add(temp);\n            i++;\n        }\n    \
    \    int j = 0;\n        while (j < nums.size()) {\n            int min = Integer.MAX_VALUE;\n\
    \            int index = 0;\n            for (int k = 0; k < sum.size(); k++)\
    \ {\n                if (sum.get(k) < min) {\n                    min = sum.get(k);\n\
    \                    index = k;\n                }\n            }\n          \
    \  result.add(nums.get(index));\n            sum.remove(index);\n            nums.remove(index);\n\
    \            j++;\n        }\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5diljh4l.java:46)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp4uhh54we.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        ArrayList<Integer> sums = new ArrayList<>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sums.add(sumDigits(nums.get(i)));\n\
    \        }\n        for (int i = 0; i < nums.size(); i++) {\n            int min\
    \ = Collections.min(sums);\n            int index = sums.indexOf(min);\n     \
    \       result.add(nums.get(index));\n            sums.set(index, Integer.MAX_VALUE);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe24mytky.java:18: error: cannot find symbol\n            sums.add(sumDigits(nums.get(i)));\n\
    \                     ^\n  symbol:   method sumDigits(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        ArrayList<Integer> sumOfDigits = new ArrayList<>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sumOfDigits.add(sum);\n        }\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            int min = Integer.MAX_VALUE;\n            int minIndex =\
    \ -1;\n            for (int j = 0; j < sumOfDigits.size(); j++) {\n          \
    \      if (sumOfDigits.get(j) < min) {\n                    min = sumOfDigits.get(j);\n\
    \                    minIndex = j;\n                }\n            }\n       \
    \     result.add(nums.get(minIndex));\n            sumOfDigits.set(minIndex, Integer.MAX_VALUE);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6t82ieyi.java:41)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp4uhh54we.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sums.add(sumDigits(nums.get(i)));\n\
    \        }\n        for (int i = 0; i < nums.size(); i++) {\n            int min\
    \ = Collections.min(sums);\n            int index = sums.indexOf(min);\n     \
    \       result.add(nums.get(index));\n            sums.set(index, Integer.MAX_VALUE);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2io22fem.java:18: error: cannot find symbol\n            sums.add(sumDigits(nums.get(i)));\n\
    \                     ^\n  symbol:   method sumDigits(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        Map<Integer, ArrayList<Integer>> map = new\
    \ HashMap<>();\n        for (int i = 0; i < nums.size(); i++) {\n            int\
    \ sum = 0;\n            int num = nums.get(i);\n            while (num > 0) {\n\
    \                sum += num % 10;\n                num /= 10;\n            }\n\
    \            if (!map.containsKey(sum)) {\n                map.put(sum, new ArrayList<>());\n\
    \            }\n            map.get(sum).add(nums.get(i));\n        }\n      \
    \  for (int key : map.keySet()) {\n            for (int num : map.get(key)) {\n\
    \                res.add(num);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu82yzp_z.java:37)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sums.add(sumDigits(nums.get(i)));\n\
    \        }\n        int min = sums.get(0);\n        int minIndex = 0;\n      \
    \  for (int i = 0; i < sums.size(); i++) {\n            min = sums.get(i);\n \
    \           minIndex = i;\n            for (int j = i; j < sums.size(); j++) {\n\
    \                if (sums.get(j) < min) {\n                    min = sums.get(j);\n\
    \                    minIndex = j;\n                }\n            }\n       \
    \     result.add(nums.get(minIndex));\n            sums.set(minIndex, Integer.MAX_VALUE);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4jneqnqx.java:18: error: cannot find symbol\n            sums.add(sumDigits(nums.get(i)));\n\
    \                     ^\n  symbol:   method sumDigits(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp4uhh54we.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo5xv176y.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> sums = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            int sum = 0;\n            int num\
    \ = nums.get(i);\n            while (num > 0) {\n                sum += num %\
    \ 10;\n                num /= 10;\n            }\n            sums.add(sum);\n\
    \        }\n        for (int i = 0; i < nums.size(); i++) {\n            int min\
    \ = sums.get(i);\n            int index = i;\n            for (int j = i + 1;\
    \ j < nums.size(); j++) {\n                if (sums.get(j) < min) {\n        \
    \            min = sums.get(j);\n                    index = j;\n            \
    \    }\n            }\n            int temp = sums.get(i);\n            sums.set(i,\
    \ sums.get(index));\n            sums.set(index, temp);\n            temp = nums.get(i);\n\
    \            nums.set(i, nums.get(index));\n            nums.set(index, temp);\n\
    \        }\n        return nums;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuj6y7vjn.java:46)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.remove(minIndex);\n            nums.remove(minIndex);\n    \
    \    }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5id6bd8.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpil1erp5o.java:19)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        return\
    \ null;\n}\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmprbn5hdzr.java:18)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        ArrayList<Integer> result = new ArrayList<>();\n   \
    \     ArrayList<Integer> sums = new ArrayList<>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            int sum = 0;\n            int num = nums.get(i);\n\
    \            while (num > 0) {\n                sum += num % 10;\n           \
    \     num /= 10;\n            }\n            sums.add(sum);\n        }\n     \
    \   for (int i = 0; i < nums.size(); i++) {\n            int min = Integer.MAX_VALUE;\n\
    \            int minIndex = -1;\n            for (int j = 0; j < sums.size();\
    \ j++) {\n                if (sums.get(j) < min) {\n                    min =\
    \ sums.get(j);\n                    minIndex = j;\n                }\n       \
    \     }\n            result.add(nums.get(minIndex));\n            sums.remove(minIndex);\n\
    \            nums.remove(minIndex);\n        }\n        return result;\n}\n  \
    \  public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph5uudd2q.java:43)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return nums;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi24m6y_5.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        ArrayList<Integer> sortedSums = new ArrayList<Integer>(sums);\n\
    \        Collections.sort(sortedSums);\n        for (int i = 0; i < sortedSums.size();\
    \ i++) {\n            int sum = sortedSums.get(i);\n            int index = sums.indexOf(sum);\n\
    \            res.add(nums.get(index));\n            sums.set(index, -1);\n   \
    \     }\n        return res;\n}\n    public static void main(String[] args) {\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpghbeulmu.java:37)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.remove(minIndex);\n            nums.remove(minIndex);\n    \
    \    }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5id6bd8.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.remove(minIndex);\n            nums.remove(minIndex);\n    \
    \    }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5id6bd8.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Your\
    \ code here\n        return nums;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ir7cz6d.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpanf07jmw.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sum = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int temp = 0;\n\
    \            int num = nums.get(i);\n            while (num > 0) {\n         \
    \       temp += num % 10;\n                num /= 10;\n            }\n       \
    \     sum.add(temp);\n        }\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            int min = Integer.MAX_VALUE;\n            int index = 0;\n  \
    \          for (int j = 0; j < sum.size(); j++) {\n                if (sum.get(j)\
    \ < min) {\n                    min = sum.get(j);\n                    index =\
    \ j;\n                }\n            }\n            result.add(nums.get(index));\n\
    \            sum.set(index, Integer.MAX_VALUE);\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmb242skb.java:41)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp4uhh54we.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return nums;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi24m6y_5.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        int min = sums.get(0);\n        int minIndex\
    \ = 0;\n        for (int i = 0; i < sums.size(); i++) {\n            if (sums.get(i)\
    \ < min) {\n                min = sums.get(i);\n                minIndex = i;\n\
    \            }\n        }\n        result.add(nums.get(minIndex));\n        sums.remove(minIndex);\n\
    \        nums.remove(minIndex);\n        while (sums.size() > 0) {\n         \
    \   min = sums.get(0);\n            minIndex = 0;\n            for (int i = 0;\
    \ i < sums.size(); i++) {\n                if (sums.get(i) < min) {\n        \
    \            min = sums.get(i);\n                    minIndex = i;\n         \
    \       }\n            }\n            result.add(nums.get(minIndex));\n      \
    \      sums.remove(minIndex);\n            nums.remove(minIndex);\n        }\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkwzhss17.java:53)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ sums = new ArrayList<Integer>();\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            sums.add(sumDigits(nums.get(i)));\n        }\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            int min = Collections.min(sums);\n\
    \            int index = sums.indexOf(min);\n            result.add(nums.get(index));\n\
    \            sums.set(index, Integer.MAX_VALUE);\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpze277wfa.java:21: error: cannot find symbol\n            sums.add(sumDigits(nums.get(i)));\n\
    \                     ^\n  symbol:   method sumDigits(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Pair<Integer, Integer>>\
    \ pairs = new ArrayList<Pair<Integer, Integer>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            int sum = 0;\n            int num = nums.get(i);\n\
    \            while (num > 0) {\n                sum += num % 10;\n           \
    \     num /= 10;\n            }\n            pairs.add(new Pair<Integer, Integer>(sum,\
    \ i));\n        }\n        pairs.sort((a, b) -> {\n            if (a.getValue0()\
    \ == b.getValue0()) {\n                return a.getValue1() - b.getValue1();\n\
    \            }\n            return a.getValue0() - b.getValue0();\n        });\n\
    \        for (int i = 0; i < pairs.size(); i++) {\n            result.add(nums.get(pairs.get(i).getValue1()));\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmps16icdhz.java:24)\n\tat Problem.main(tmps16icdhz.java:38)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        return\
    \ null;\n}\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmprbn5hdzr.java:18)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        ArrayList<Integer> sums = new ArrayList<>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.remove(minIndex);\n            nums.remove(minIndex);\n    \
    \    }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6oox2vl.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sums.add(sumDigits(nums.get(i)));\n\
    \        }\n        for (int i = 0; i < nums.size(); i++) {\n            int min\
    \ = sums.get(0);\n            int minIndex = 0;\n            for (int j = 0; j\
    \ < sums.size(); j++) {\n                if (sums.get(j) < min) {\n          \
    \          min = sums.get(j);\n                    minIndex = j;\n           \
    \     }\n            }\n            result.add(nums.get(minIndex));\n        \
    \    sums.remove(minIndex);\n            nums.remove(minIndex);\n        }\n \
    \       return result;\n}\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx9vw3u6g.java:18: error: cannot find symbol\n            sums.add(sumDigits(nums.get(i)));\n\
    \                     ^\n  symbol:   method sumDigits(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return nums;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi24m6y_5.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        ArrayList<Integer> result = new ArrayList<Integer>();\n \
    \       ArrayList<Integer> sum = new ArrayList<Integer>();\n        for (int i\
    \ = 0; i < nums.size(); i++) {\n            int temp = 0;\n            while (nums.get(i)\
    \ > 0) {\n                temp += nums.get(i) % 10;\n                nums.set(i,\
    \ nums.get(i) / 10);\n            }\n            sum.add(temp);\n        }\n \
    \       for (int i = 0; i < nums.size(); i++) {\n            int min = sum.get(i);\n\
    \            int index = i;\n            for (int j = i + 1; j < nums.size();\
    \ j++) {\n                if (sum.get(j) < min) {\n                    min = sum.get(j);\n\
    \                    index = j;\n                }\n            }\n          \
    \  int temp = sum.get(i);\n            sum.set(i, sum.get(index));\n         \
    \   sum.set(index, temp);\n            temp = nums.get(i);\n            nums.set(i,\
    \ nums.get(index));\n            nums.set(index, temp);\n        }\n        return\
    \ nums;\n}\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps8tiygl9.java:45)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = sums.get(i);\n            int minIndex = i;\n         \
    \   for (int j = i; j < nums.size(); j++) {\n                if (sums.get(j) <\
    \ min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            sums.set(minIndex, sums.get(i));\n\
    \            sums.set(i, min);\n            int temp = nums.get(minIndex);\n \
    \           nums.set(minIndex, nums.get(i));\n            nums.set(i, temp);\n\
    \        }\n        return nums;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp92l4uajx.java:44)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ Implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpcdlo0b4b.java:19)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ Implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpcdlo0b4b.java:19)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sums.add(sumDigits(nums.get(i)));\n\
    \        }\n        for (int i = 0; i < nums.size(); i++) {\n            int min\
    \ = Integer.MAX_VALUE;\n            int minIndex = -1;\n            for (int j\
    \ = 0; j < sums.size(); j++) {\n                if (sums.get(j) < min) {\n   \
    \                 min = sums.get(j);\n                    minIndex = j;\n    \
    \            }\n            }\n            result.add(nums.get(minIndex));\n \
    \           sums.set(minIndex, Integer.MAX_VALUE);\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptai4nzf7.java:18: error: cannot find symbol\n            sums.add(sumDigits(nums.get(i)));\n\
    \                     ^\n  symbol:   method sumDigits(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpqkdvjpc_.java:19)\n"
  stdout: ''
  timestamp: 1660011155
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.remove(minIndex);\n            nums.remove(minIndex);\n    \
    \    }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5id6bd8.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpanf07jmw.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ sums = new ArrayList<Integer>();\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            sums.add(sumDigits(nums.get(i)));\n        }\n        int min\
    \ = sums.get(0);\n        int minIndex = 0;\n        for (int i = 0; i < sums.size();\
    \ i++) {\n            min = sums.get(i);\n            minIndex = i;\n        \
    \    for (int j = i; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            int temp = sums.get(i);\n\
    \            sums.set(i, min);\n            sums.set(minIndex, temp);\n      \
    \      temp = nums.get(i);\n            nums.set(i, nums.get(minIndex));\n   \
    \         nums.set(minIndex, temp);\n        }\n        return nums;\n}\n    public\
    \ static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkx5fl9kf.java:21: error: cannot find symbol\n            sums.add(sumDigits(nums.get(i)));\n\
    \                     ^\n  symbol:   method sumDigits(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = sums.get(i);\n            int minIndex = i;\n         \
    \   for (int j = i; j < nums.size(); j++) {\n                if (sums.get(j) <\
    \ min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            sums.set(minIndex, sums.get(i));\n\
    \            sums.set(i, min);\n            result.add(nums.get(minIndex));\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8miwc__3.java:42)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        ArrayList<Integer> result = new ArrayList<>();\n   \
    \     ArrayList<Integer> sum = new ArrayList<>();\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            int temp = nums.get(i);\n            int sumDigits\
    \ = 0;\n            while (temp > 0) {\n                sumDigits += temp % 10;\n\
    \                temp /= 10;\n            }\n            sum.add(sumDigits);\n\
    \        }\n        for (int i = 0; i < nums.size(); i++) {\n            int min\
    \ = Collections.min(sum);\n            int index = sum.indexOf(min);\n       \
    \     result.add(nums.get(index));\n            sum.set(index, Integer.MAX_VALUE);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps7vyom9x.java:36)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // TODO:\
    \ implement this function\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpf6nof01g.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp4uhh54we.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n \
    \           int num = nums.get(i);\n            while (num > 0) {\n          \
    \      sum += num % 10;\n                num /= 10;\n            }\n         \
    \   sums.add(sum);\n        }\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < sums.size(); j++) {\n                if (sums.get(j)\
    \ < min) {\n                    min = sums.get(j);\n                    minIndex\
    \ = j;\n                }\n            }\n            result.add(nums.get(minIndex));\n\
    \            sums.remove(minIndex);\n            nums.remove(minIndex);\n    \
    \    }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5id6bd8.java:42)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // your\
    \ code here\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)11,\
    \ (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp4uhh54we.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpwlrqby6t.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        // Write\
    \ your code here\n        return nums;\n}\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)11, (int)-1, (int)-11, (int)-12)))).equals((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-11, (int)1, (int)-12, (int)11)))));\n    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234,\
    \ (int)423, (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37,\
    \ (int)3457, (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt738_uv.java:19)\n"
  stdout: ''
  timestamp: 1660011154
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    public static\
    \ ArrayList<Integer> orderByPoints(ArrayList<Integer> nums) {\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> sums = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sums.add(sumDigits(nums.get(i)));\n\
    \        }\n        for (int i = 0; i < nums.size(); i++) {\n            int min\
    \ = sums.get(0);\n            int minIndex = 0;\n            for (int j = 0; j\
    \ < sums.size(); j++) {\n                if (sums.get(j) < min) {\n          \
    \          min = sums.get(j);\n                    minIndex = j;\n           \
    \     }\n            }\n            result.add(nums.get(minIndex));\n        \
    \    sums.remove(minIndex);\n            nums.remove(minIndex);\n        }\n \
    \       return result;\n}\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
    \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
    \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
    \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
    \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
    \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
    \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
    \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
    \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx9vw3u6g.java:18: error: cannot find symbol\n            sums.add(sumDigits(nums.get(i)));\n\
    \                     ^\n  symbol:   method sumDigits(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011154

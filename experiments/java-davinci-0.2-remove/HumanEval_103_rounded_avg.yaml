name: HumanEval_103_rounded_avg
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given two positive integers n and m, and your task\
  \ is to compute the\n    // average of the integers from n through m (including\
  \ n and m). \n    // Round the answer to the nearest integer and convert that to\
  \ binary.\n    // If n is greater than m, return -1.\n    // Example:\n    public\
  \ static Union_String_int roundedAvg(int n, int m) {\n"
tests: "return new Union_String_int();\n    }\n    public static void main(String[]\
  \ args) {\n    assert(roundedAvg((1), (5)).equals((Union_String_int(\"0b11\"))));\n\
  \    assert(roundedAvg((7), (13)).equals((Union_String_int(\"0b1010\"))));\n   \
  \ assert(roundedAvg((964), (977)).equals((Union_String_int(\"0b1111001010\"))));\n\
  \    assert(roundedAvg((996), (997)).equals((Union_String_int(\"0b1111100100\"))));\n\
  \    assert(roundedAvg((560), (851)).equals((Union_String_int(\"0b1011000010\"))));\n\
  \    assert(roundedAvg((185), (546)).equals((Union_String_int(\"0b101101110\"))));\n\
  \    assert(roundedAvg((362), (496)).equals((Union_String_int(\"0b110101101\"))));\n\
  \    assert(roundedAvg((350), (902)).equals((Union_String_int(\"0b1001110010\"))));\n\
  \    assert(roundedAvg((197), (233)).equals((Union_String_int(\"0b11010111\"))));\n\
  \    assert(roundedAvg((7), (5)).equals((Union_String_int(-1))));\n    assert(roundedAvg((5),\
  \ (1)).equals((Union_String_int(-1))));\n    assert(roundedAvg((5), (5)).equals((Union_String_int(\"\
  0b101\"))));\n    }\n\n}\n"
completions: ["        if (n > m) {\n            return new Union_String_int(\"-1\"\
    );\n        }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        int avg = (int) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = (int) Math.round((double) sum / (m - n + 1));\n      \
    \  return new Union_String_int(Integer.toBinaryString(avg));", "        if (n\
    \ > m) {\n            return new Union_String_int(\"-1\");\n        }\n      \
    \  int sum = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n\
    \        }\n        int roundedAvg = Math.round((float) sum / (m - n + 1));\n\
    \        return new Union_String_int(Integer.toBinaryString(roundedAvg));", " \
    \       if (n > m) {\n            return new Union_String_int(new Union_String_int.Case_String(\"\
    -1\"));\n        }\n        int sum = 0;\n        for (int i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        int avg = sum / (m - n + 1);\n\
    \        String binary = Integer.toBinaryString(avg);\n        return new Union_String_int(new\
    \ Union_String_int.Case_int(binary));", "        if (n > m) {\n            return\
    \ new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n        for\
    \ (int i = n; i <= m; i++) {\n            sum += i;\n        }\n        int avg\
    \ = (int) Math.round((double) sum / (m - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) return new Union_String_int(\"-1\");\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = sum / (m - n + 1);\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = (int) Math.round((double) sum / (m - n + 1));\n      \
    \  return new Union_String_int(Integer.toBinaryString(avg));", "        if (n\
    \ > m) {\n            return new Union_String_int(\"-1\");\n        }\n      \
    \  int sum = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n\
    \        }\n        int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = (int) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) return\
    \ new Union_String_int(-1);\n        int sum = 0;\n        for (int i = n; i <=\
    \ m; i++) {\n            sum += i;\n        }\n        int avg = sum / (m - n\
    \ + 1);\n        return new Union_String_int(Integer.toBinaryString(avg));", " \
    \       if (n > m) {\n            return new Union_String_int(\"-1\");\n     \
    \   }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n        \
    \    sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        // Your code here.\n        if (n > m) {\n            return new Union_String_int(\"\
    -1\");\n        }\n        int sum = 0;\n        for (int i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        int avg = sum / (m - n + 1);\n\
    \        String binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) return new Union_String_int(\"-1\");\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = (int) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = (int)Math.round((double)sum / (m - n + 1));\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) return new\
    \ Union_String_int(\"-1\");\n        int sum = 0;\n        for (int i = n; i <=\
    \ m; i++) {\n            sum += i;\n        }\n        int avg = (int) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(-1);\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = (int) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) return\
    \ new Union_String_int(\"-1\");\n        int sum = 0;\n        for (int i = n;\
    \ i <= m; i++) {\n            sum += i;\n        }\n        int avg = (int) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) return\
    \ new Union_String_int(-1);\n        int sum = 0;\n        for (int i = n; i <=\
    \ m; i++) {\n            sum += i;\n        }\n        int avg = sum / (m - n\
    \ + 1);\n        String binary = Integer.toBinaryString(avg);\n        return\
    \ new Union_String_int(binary);", "        if (n > m) {\n            return new\
    \ Union_String_int(\"-1\");\n        }\n        int sum = 0;\n        for (int\
    \ i = n; i <= m; i++) {\n            sum += i;\n        }\n        int avg = (int)\
    \ Math.round((double) sum / (m - n + 1));\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) return new\
    \ Union_String_int(\"-1\");\n        int sum = 0;\n        for (int i = n; i <=\
    \ m; i++) {\n            sum += i;\n        }\n        int avg = sum / (m - n\
    \ + 1);\n        return new Union_String_int(Integer.toBinaryString(avg));", " \
    \       if (n > m) {\n            return new Union_String_int(\"-1\");\n     \
    \   }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n        \
    \    sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) return\
    \ new Union_String_int(-1);\n        int sum = 0;\n        for (int i = n; i <=\
    \ m; i++) {\n            sum += i;\n        }\n        int avg = (int)Math.round((double)sum\
    \ / (m - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int)Math.round((double)sum / (m -\
    \ n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) return new Union_String_int(\"-1\");\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = sum / (m - n + 1);\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(-1);\n        }\n\
    \        int sum = 0;\n        for (int i = n; i <= m; i++) {\n            sum\
    \ += i;\n        }\n        int avg = (int) Math.round((double) sum / (m - n +\
    \ 1));\n        return new Union_String_int(Integer.toBinaryString(avg));", " \
    \       if (n > m) {\n            return new Union_String_int(\"-1\");\n     \
    \   }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n        \
    \    sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) return new Union_String_int(-1);\n        int sum = 0;\n   \
    \     for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n     \
    \   int avg = (int) Math.round((double) sum / (m - n + 1));\n        return new\
    \ Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n   \
    \         return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = (int) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = (int) Math.round((double) sum / (m - n + 1));\n      \
    \  return new Union_String_int(Integer.toBinaryString(avg));", "        if (n\
    \ > m) {\n            return new Union_String_int(\"-1\");\n        }\n      \
    \  int avg = (n + m) / 2;\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) return new\
    \ Union_String_int(-1);\n        int sum = 0;\n        for (int i = n; i <= m;\
    \ i++) sum += i;\n        int avg = (int) Math.round((double) sum / (m - n + 1));\n\
    \        return new Union_String_int(Integer.toBinaryString(avg));", "       \
    \ if (n > m) {\n            return new Union_String_int(\"-1\");\n        }\n\
    \        int sum = 0;\n        for (int i = n; i <= m; i++) {\n            sum\
    \ += i;\n        }\n        int avg = sum / (m - n + 1);\n        String binary\
    \ = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = (int) Math.round((double) sum / (m - n + 1));\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        // Your code here\n        if (n > m) {\n            return new Union_String_int(\"\
    -1\");\n        }\n        int avg = (n + m) / 2;\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        // Your code here\n \
    \       if (n > m) {\n            return new Union_String_int(\"-1\");\n     \
    \   }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n        \
    \    sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int)Math.round((double)sum / (m -\
    \ n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(new String(\"-1\"\
    ));\n        }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        int avg = sum / (m - n + 1);\n    \
    \    String binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = (int) Math.round((double) sum / (m - n + 1));\n      \
    \  return new Union_String_int(Integer.toBinaryString(avg));", "        if (n\
    \ > m) {\n            return new Union_String_int(\"-1\");\n        }\n      \
    \  int sum = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n\
    \        }\n        int avg = sum / (m - n + 1);\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ bin = Integer.toBinaryString(avg);\n        return new Union_String_int(bin);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        // Your code here\n \
    \       if (n > m) {\n            return new Union_String_int(new Union_String_int.Type_int(),\
    \ -1);\n        }\n        int sum = 0;\n        for (int i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        int avg = (int) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_int(new Union_String_int.Type_String(),\
    \ Integer.toBinaryString(avg));", "        if (n > m) {\n            return new\
    \ Union_String_int(-1);\n        }\n        int sum = 0;\n        for (int i =\
    \ n; i <= m; i++) {\n            sum += i;\n        }\n        int avg = (int)\
    \ Math.round((double) sum / (m - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        int count = 0;\n        for (int i = n; i\
    \ <= m; i++) {\n            sum += i;\n            count++;\n        }\n     \
    \   int avg = sum / count;\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = (int) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = sum / (m - n + 1);\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(new String(\"-1\"\
    ));\n        }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        int avg = (int) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(new String(\"-1\"\
    ));\n        }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        int avg = sum / (m - n + 1);\n    \
    \    String binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ bin = Integer.toBinaryString(avg);\n        return new Union_String_int(bin);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        // if (n > m)\
    \ return -1;\n        // int sum = 0;\n        // for (int i = n; i <= m; i++)\
    \ {\n        //     sum += i;\n        // }\n        // int avg = sum / (m - n\
    \ + 1);\n        // String binary = Integer.toBinaryString(avg);\n        // return\
    \ binary;\n        return null;", "        if (n > m) {\n            return new\
    \ Union_String_int(\"-1\");\n        }\n        int sum = 0;\n        for (int\
    \ i = n; i <= m; i++) {\n            sum += i;\n        }\n        int avg = sum\
    \ / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n     \
    \   return new Union_String_int(binary);", "        if (n > m) {\n           \
    \ return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n    \
    \    int count = 0;\n        for (int i = n; i <= m; i++) {\n            sum +=\
    \ i;\n            count++;\n        }\n        int avg = sum / count;\n      \
    \  String binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        double avg = (double) sum / (m - n + 1);\n \
    \       int roundedAvg = (int) Math.round(avg);\n        String binary = Integer.toBinaryString(roundedAvg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) return new\
    \ Union_String_int(-1);\n        int sum = 0;\n        for (int i = n; i <= m;\
    \ i++) {\n            sum += i;\n        }\n        int avg = (int) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int)Math.round((double)sum / (m -\
    \ n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int avg = (n + m) / 2;\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = sum / (m - n + 1);\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        int count = 0;\n        for (int i = n; i\
    \ <= m; i++) {\n            sum += i;\n            count++;\n        }\n     \
    \   int avg = (int) Math.round((double) sum / count);\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        // Your code here\n        return null;", "        if (n > m) {\n     \
    \       return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = (int) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) return\
    \ new Union_String_int(-1);\n        int sum = 0;\n        for (int i = n; i <=\
    \ m; i++) {\n            sum += i;\n        }\n        int avg = sum / (m - n\
    \ + 1);\n        return new Union_String_int(Integer.toBinaryString(avg));", " \
    \       if (n > m) {\n            return new Union_String_int(\"-1\");\n     \
    \   }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n        \
    \    sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) return new Union_String_int(-1);\n        int sum = 0;\n   \
    \     for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n     \
    \   int avg = (int) Math.round((double) sum / (m - n + 1));\n        return new\
    \ Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n   \
    \         return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      double avg = sum / (double) (m - n + 1);\n        int roundedAvg = (int)\
    \ Math.round(avg);\n        String binary = Integer.toBinaryString(roundedAvg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = (int) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) return\
    \ new Union_String_int(-1);\n        int sum = 0;\n        for (int i = n; i <=\
    \ m; i++) {\n            sum += i;\n        }\n        int avg = (int) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) return new Union_String_int(\"-1\");\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = (int) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        // Your code here\n \
    \       if (n > m) {\n            return new Union_String_int(\"-1\");\n     \
    \   }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n        \
    \    sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        int count = 0;\n        for (int i = n; i\
    \ <= m; i++) {\n            sum += i;\n            count++;\n        }\n     \
    \   int avg = sum / count;\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = (int) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = (int) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) return new\
    \ Union_String_int(-1);\n        int sum = 0;\n        for (int i = n; i <= m;\
    \ i++) {\n            sum += i;\n        }\n        int avg = (int) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        int count = 0;\n        for (int i = n; i\
    \ <= m; i++) {\n            sum += i;\n            count++;\n        }\n     \
    \   int avg = (int) Math.round((double) sum / count);\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) return new Union_String_int(\"-1\");\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        } else {\n            int\
    \ sum = 0;\n            for (int i = n; i <= m; i++) {\n                sum +=\
    \ i;\n            }\n            int avg = (int)Math.round((double)sum / (m -\
    \ n + 1));\n            return new Union_String_int(Integer.toBinaryString(avg));\n\
    \        }", "        if (n > m) return new Union_String_int(-1);\n        int\
    \ sum = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n  \
    \      }\n        int avg = (int) Math.round((double) sum / (m - n + 1));\n  \
    \      return new Union_String_int(Integer.toBinaryString(avg));", "        if\
    \ (n > m) {\n            return new Union_String_int(\"-1\");\n        }\n   \
    \     int sum = 0;\n        for (int i = n; i <= m; i++) {\n            sum +=\
    \ i;\n        }\n        int avg = (int) Math.round((double) sum / (m - n + 1));\n\
    \        return new Union_String_int(Integer.toBinaryString(avg));", "       \
    \ if (n > m) return new Union_String_int(\"-1\");\n        int sum = 0;\n    \
    \    for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n      \
    \  int avg = sum / (m - n + 1);\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) return new Union_String_int(\"-1\");\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) sum += i;\n        int avg = (int) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        String binary = Integer.toBinaryString(avg);\n        return\
    \ new Union_String_int(binary);", "        if (n > m) {\n            return new\
    \ Union_String_int(\"-1\");\n        }\n        int sum = 0;\n        for (int\
    \ i = n; i <= m; i++) {\n            sum += i;\n        }\n        int avg = (int)\
    \ Math.round((double) sum / (m - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int roundedAvg = (int) Math.round((double) sum\
    \ / (m - n + 1));\n        return new Union_String_int(Integer.toBinaryString(roundedAvg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = (int) Math.round((double) sum / (m - n + 1));\n      \
    \  return new Union_String_int(Integer.toBinaryString(avg));", "        if (n\
    \ > m) {\n            return new Union_String_int(\"-1\");\n        }\n      \
    \  int sum = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n\
    \        }\n        int avg = sum / (m - n + 1);\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(-1);\n        }\n\
    \        int sum = 0;\n        for (int i = n; i <= m; i++) {\n            sum\
    \ += i;\n        }\n        int avg = (int) Math.round((double) sum / (m - n +\
    \ 1));\n        return new Union_String_int(Integer.toBinaryString(avg));", " \
    \       if (n > m) {\n            return new Union_String_int(\"-1\");\n     \
    \   }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n        \
    \    sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = (int) Math.round((double) sum / (m - n + 1));\n      \
    \  return new Union_String_int(Integer.toBinaryString(avg));", "        if (n\
    \ > m) {\n            return new Union_String_int(\"-1\");\n        }\n      \
    \  int sum = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n\
    \        }\n        int avg = sum / (m - n + 1);\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        // Your code here\n        return null;", "        if (n > m) {\n     \
    \       return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = (int) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_int(Integer.toBinaryString(avg));", "        if (n > m) {\n\
    \            return new Union_String_int(\"-1\");\n        }\n        int sum\
    \ = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n      \
    \  }\n        int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(new String(\"-1\"));\n        }\n        int\
    \ sum = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n  \
    \      }\n        int avg = sum / (m - n + 1);\n        return new Union_String_int(new\
    \ String(Integer.toBinaryString(avg)));", "        if (n > m) {\n            return\
    \ new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n        for\
    \ (int i = n; i <= m; i++) {\n            sum += i;\n        }\n        int avg\
    \ = sum / (m - n + 1);\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        int count = 0;\n        for (int i = n; i\
    \ <= m; i++) {\n            sum += i;\n            count++;\n        }\n     \
    \   int avg = sum / count;\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) {\n      \
    \      return new Union_String_int(\"-1\");\n        }\n        int sum = 0;\n\
    \        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n  \
    \      int avg = sum / (m - n + 1);\n        String binary = Integer.toBinaryString(avg);\n\
    \        return new Union_String_int(binary);", "        if (n > m) return new\
    \ Union_String_int(\"-1\");\n        int sum = 0;\n        for (int i = n; i <=\
    \ m; i++) {\n            sum += i;\n        }\n        int avg = sum / (m - n\
    \ + 1);\n        return new Union_String_int(Integer.toBinaryString(avg));", " \
    \       if (n > m) {\n            return new Union_String_int(\"-1\");\n     \
    \   }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n        \
    \    sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        String\
    \ binary = Integer.toBinaryString(avg);\n        return new Union_String_int(binary);",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));",
  "        if (n > m) {\n            return new Union_String_int(\"-1\");\n      \
    \  }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n         \
    \   sum += i;\n        }\n        int avg = (int) Math.round((double) sum / (m\
    \ - n + 1));\n        return new Union_String_int(Integer.toBinaryString(avg));"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

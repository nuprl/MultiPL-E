language: java
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int prod = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        prod *= digit;\n            }\n            n /= 10;\n        }\n    \
    \    return prod;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwc3mriry.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int prod = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        prod *= digit;\n            }\n            n /= 10;\n        }\n    \
    \    return prod;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwc3mriry.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6jx9tk7.java:20)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        // TODO: implement this function\n     \
    \   return 0;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n9lyf8_.java:21)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6jx9tk7.java:20)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6jx9tk7.java:20)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int prod = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        prod *= digit;\n            }\n            n /= 10;\n        }\n    \
    \    return prod;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwc3mriry.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6jx9tk7.java:20)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6jx9tk7.java:20)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6jx9tk7.java:20)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6jx9tk7.java:20)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6jx9tk7.java:20)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        // YOUR CODE HERE\n        return 0;\n}\n\
    \    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyxkbl9ln.java:21)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 1;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdps1krv6.java:34)\n"
  stdout: ''
  timestamp: 1660011405

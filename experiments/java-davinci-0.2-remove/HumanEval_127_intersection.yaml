name: HumanEval_127_intersection
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given two intervals,\n    // where each interval\
  \ is a pair of integers. For example, interval = (start, end) = (1, 2).\n    //\
  \ The given intervals are closed which means that the interval (start, end)\n  \
  \  // includes both start and end.\n    // For each given interval, it is assumed\
  \ that its start is less or equal its end.\n    // Your task is to determine whether\
  \ the length of intersection of these two \n    // intervals is a prime number.\n\
  \    // Example, the intersection of the intervals (1, 3), (2, 4) is (2, 3)\n  \
  \  // which its length is 1, which not a prime number.\n    // If the length of\
  \ the intersection is a prime number, return \"YES\",\n    // otherwise, return\
  \ \"NO\".\n    // If the two intervals don't intersect, return \"NO\".\n    // [input/output]\
  \ samples:\n    public static String intersection(Pair<Integer, Integer> interval1,\
  \ Pair<Integer, Integer> interval2) {\n"
tests: "return \"\";\n    }\n    public static void main(String[] args) {\n    assert(intersection((Pair.with(1,\
  \ 2)), (Pair.with(2, 3))).equals((\"NO\")));\n    assert(intersection((Pair.with(-1,\
  \ 1)), (Pair.with(0, 4))).equals((\"NO\")));\n    assert(intersection((Pair.with(-3,\
  \ -1)), (Pair.with(-5, 5))).equals((\"YES\")));\n    assert(intersection((Pair.with(-2,\
  \ 2)), (Pair.with(-4, 0))).equals((\"YES\")));\n    assert(intersection((Pair.with(-11,\
  \ 2)), (Pair.with(-1, -1))).equals((\"NO\")));\n    assert(intersection((Pair.with(1,\
  \ 2)), (Pair.with(3, 5))).equals((\"NO\")));\n    assert(intersection((Pair.with(1,\
  \ 2)), (Pair.with(1, 2))).equals((\"NO\")));\n    assert(intersection((Pair.with(-2,\
  \ -2)), (Pair.with(-3, -2))).equals((\"NO\")));\n    }\n\n}\n"
completions: ["        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";", "        // Your code here\n\
    \        return \"\";", "        // your code here\n        return \"\";", " \
    \       int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) return \"NO\";\n        if (isPrime(end - start + 1))\
    \ return \"YES\";\n        return \"NO\";", "        // your code here\n     \
    \   return \"\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) return \"NO\";\n        int length = end - start + 1;\n\
    \        if (length == 1) return \"NO\";\n        if (length == 2) return \"YES\"\
    ;\n        for (int i = 2; i < length; i++) {\n            if (length % i == 0)\
    \ return \"NO\";\n        }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        // your code here\n        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) return \"NO\";\n        return isPrime(end - start +\
    \ 1) ? \"YES\" : \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ len = end - start + 1;\n        if (len == 1) {\n            return \"NO\";\n\
    \        }\n        for (int i = 2; i < len; i++) {\n            if (len % i ==\
    \ 0) {\n                return \"NO\";\n            }\n        }\n        return\
    \ \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        if (length % 2 == 0) {\n            return \"NO\";\n       \
    \ }\n        for (int i = 3; i <= Math.sqrt(length); i += 2) {\n            if\
    \ (length % i == 0) {\n                return \"NO\";\n            }\n       \
    \ }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // your code here\n        return \"\";", "  \
    \      int start = Math.max(interval1.getValue0(), interval2.getValue0());\n \
    \       int end = Math.min(interval1.getValue1(), interval2.getValue1());\n  \
    \      if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) return \"NO\";\n        return isPrime(end - start +\
    \ 1) ? \"YES\" : \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        // your code here\n \
    \       int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        if (length % 2 == 0) {\n            return \"NO\";\n       \
    \ }\n        for (int i = 3; i * i <= length; i += 2) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // interval1 = (1, 3)\n        // interval2 =\
    \ (2, 4)\n        // intersection = (2, 3)\n        // length = 2 - 2 + 1 = 1\n\
    \        // 1 is not a prime number, so return \"NO\"\n        // interval1 =\
    \ (1, 3)\n        // interval2 = (2, 5)\n        // intersection = (2, 3)\n  \
    \      // length = 3 - 2 + 1 = 2\n        // 2 is a prime number, so return \"\
    YES\"\n        // interval1 = (1, 3)\n        // interval2 = (4, 5)\n        //\
    \ intersection = (4, 4)\n        // length = 4 - 4 + 1 = 1\n        // 1 is not\
    \ a prime number, so return \"NO\"\n        // interval1 = (1, 3)\n        //\
    \ interval2 = (4, 6)\n        // intersection = (4, 4)\n        // length = 4\
    \ - 4 + 1 = 1\n        // 1 is not a prime number, so return \"NO\"\n        //\
    \ interval1 = (1, 3)\n        // interval2 = (4, 7)\n        // intersection =\
    \ (4, 4)\n        // length = 4 - 4 + 1 = 1\n        // 1 is not a prime number,\
    \ so return \"NO\"\n        // interval1 = (1, 3)\n        // interval2 = (4,\
    \ 8)\n        // intersection = (4, 4)\n        // length = 4 - 4 + 1 = 1\n  \
    \      // 1 is not a prime number, so return \"NO\"\n        // interval1 = (1,\
    \ 3)\n        // interval2 = (4, 9)\n        // intersection = (4, 4)\n      \
    \  // length = 4 - 4 + 1 = 1\n        // 1 is not a prime number, so return \"\
    NO\"\n        // interval1 = (1, 3)\n        // interval2 = (4, 10)\n        //\
    \ intersection = (4, 4)\n        // length = 4 - 4 + 1 = 1\n        // 1 is not\
    \ a prime number, so return \"NO\"\n        // interval1 = (1, 3)\n        //\
    \ interval2 = (4, 11)\n        // intersection = (4, 4)\n        // length = 4\
    \ - 4 +", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        // your code here\n        return \"\";", "    \
    \    // your code here\n        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n           \
    \ if (length % i == 0) {\n                return \"NO\";\n            }\n    \
    \    }\n        return \"YES\";", "        // your code here\n        return \"\
    \";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // your code here\n        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ len = end - start + 1;\n        if (isPrime(len)) {\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // your code here\n        return \"\";", "  \
    \      int start = Math.max(interval1.getValue0(), interval2.getValue0());\n \
    \       int end = Math.min(interval1.getValue1(), interval2.getValue1());\n  \
    \      if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n           \
    \ if (length % i == 0) {\n                return \"NO\";\n            }\n    \
    \    }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n           \
    \ if (length % i == 0) {\n                return \"NO\";\n            }\n    \
    \    }\n        return \"YES\";", "        // your code here\n        return \"\
    \";", "        // your code goes here\n        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        if (interval1.getValue0() > interval2.getValue1()\
    \ || interval2.getValue0() > interval1.getValue1()) {\n            return \"NO\"\
    ;\n        }\n        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       int length = end - start + 1;\n        if (length == 1) {\n          \
    \  return \"NO\";\n        }\n        for (int i = 2; i < length; i++) {\n   \
    \         if (length % i == 0) {\n                return \"NO\";\n           \
    \ }\n        }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n           \
    \ if (length % i == 0) {\n                return \"NO\";\n            }\n    \
    \    }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) return \"NO\";\n        int len = end - start + 1;\n\
    \        if (len == 1) return \"NO\";\n        if (len == 2) return \"YES\";\n\
    \        for (int i = 2; i <= Math.sqrt(len); i++) {\n            if (len % i\
    \ == 0) return \"NO\";\n        }\n        return \"YES\";", "        // interval1\
    \ = (1, 3)\n        // interval2 = (2, 4)\n        // output = \"NO\"\n      \
    \  // interval1 = (1, 3)\n        // interval2 = (3, 4)\n        // output = \"\
    YES\"\n        // interval1 = (1, 3)\n        // interval2 = (4, 5)\n        //\
    \ output = \"NO\"\n        // interval1 = (1, 3)\n        // interval2 = (1, 3)\n\
    \        // output = \"YES\"\n        // interval1 = (1, 3)\n        // interval2\
    \ = (2, 2)\n        // output = \"YES\"\n        // interval1 = (1, 3)\n     \
    \   // interval2 = (3, 3)\n        // output = \"YES\"\n        // interval1 =\
    \ (1, 3)\n        // interval2 = (4, 4)\n        // output = \"NO\"\n        //\
    \ interval1 = (1, 3)\n        // interval2 = (5, 5)\n        // output = \"NO\"\
    \n        // interval1 = (1, 3)\n        // interval2 = (0, 0)\n        // output\
    \ = \"NO\"\n        // interval1 = (1, 3)\n        // interval2 = (0, 1)\n   \
    \     // output = \"YES\"\n        // interval1 = (1, 3)\n        // interval2\
    \ = (0, 2)\n        // output = \"YES\"\n        // interval1 = (1, 3)\n     \
    \   // interval2 = (0, 3)\n        // output = \"YES\"\n        // interval1 =\
    \ (1, 3)\n        // interval2 = (0, 4)\n        // output = \"YES\"\n       \
    \ // interval1 = (1, 3)\n        // interval2 = (0, 5)\n        // output = \"\
    YES\"\n        // interval1 = (1, 3)\n        // interval2 = (1, 1)\n        //\
    \ output = \"YES\"\n        // interval1 = (1, 3)\n        // interval2 = (1,\
    \ 2)\n        // output = \"YES\"\n        // interval1 = (1, 3)\n        // interval2\
    \ = (1, 3)\n        // output = \"YES\"\n       ", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n   \
    \         if (length % i == 0) {\n                return \"NO\";\n           \
    \ }\n        }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ len = end - start + 1;\n        if (isPrime(len)) {\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";", "        // your code here\n\
    \        return \"\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) return \"NO\";\n        int length = end - start + 1;\n\
    \        if (length == 1) return \"NO\";\n        if (length == 2) return \"YES\"\
    ;\n        for (int i = 2; i < length; i++) {\n            if (length % i == 0)\
    \ return \"NO\";\n        }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // your code here\n        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // your code goes here\n        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ len = end - start + 1;\n        if (len == 1) {\n            return \"NO\";\n\
    \        }\n        if (len == 2) {\n            return \"YES\";\n        }\n\
    \        for (int i = 2; i < len; i++) {\n            if (len % i == 0) {\n  \
    \              return \"NO\";\n            }\n        }\n        return \"YES\"\
    ;", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n   \
    \         if (length % i == 0) {\n                return \"NO\";\n           \
    \ }\n        }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n   \
    \         if (length % i == 0) {\n                return \"NO\";\n           \
    \ }\n        }\n        return \"YES\";", "        // your code here\n       \
    \ int start = Math.max(interval1.getValue0(), interval2.getValue0());\n      \
    \  int end = Math.min(interval1.getValue1(), interval2.getValue1());\n       \
    \ if (start > end) {\n            return \"NO\";\n        }\n        int len =\
    \ end - start + 1;\n        if (len == 1) {\n            return \"NO\";\n    \
    \    }\n        for (int i = 2; i <= Math.sqrt(len); i++) {\n            if (len\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ len = end - start + 1;\n        if (isPrime(len)) {\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // find the intersection of the two intervals\n\
    \        // if the intersection is empty, return \"NO\"\n        // if the intersection\
    \ is not empty, check if its length is a prime number\n        // if it is a prime\
    \ number, return \"YES\"\n        // if it is not a prime number, return \"NO\"\
    \n        // if the intersection is not empty, check if its length is a prime\
    \ number\n        // if it is a prime number, return \"YES\"\n        // if it\
    \ is not a prime number, return \"NO\"\n        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // your code here\n        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ len = end - start + 1;\n        if (isPrime(len)) {\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        // your code here\n        return\
    \ \"\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n           \
    \ if (length % i == 0) {\n                return \"NO\";\n            }\n    \
    \    }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ len = end - start + 1;\n        if (len == 1) {\n            return \"NO\";\n\
    \        }\n        for (int i = 2; i < len; i++) {\n            if (len % i ==\
    \ 0) {\n                return \"NO\";\n            }\n        }\n        return\
    \ \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        return isPrime(length) ? \"YES\" : \"NO\"\
    ;", "        // your code here\n        return \"\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        if\
    \ (isPrime(end - start + 1)) {\n            return \"YES\";\n        }\n     \
    \   return \"NO\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // Your code here\n        return \"\";", "  \
    \      int start = Math.max(interval1.getValue0(), interval2.getValue0());\n \
    \       int end = Math.min(interval1.getValue1(), interval2.getValue1());\n  \
    \      if (start > end) return \"NO\";\n        return isPrime(end - start + 1)\
    \ ? \"YES\" : \"NO\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        // interval1 = (1, 3)\n\
    \        // interval2 = (2, 4)\n        // intersection = (2, 3)\n        // length\
    \ = 1\n        // return \"NO\"\n        // interval1 = (1, 3)\n        // interval2\
    \ = (2, 5)\n        // intersection = (2, 3)\n        // length = 1\n        //\
    \ return \"NO\"\n        // interval1 = (1, 3)\n        // interval2 = (3, 5)\n\
    \        // intersection = (3, 3)\n        // length = 0\n        // return \"\
    NO\"\n        // interval1 = (1, 3)\n        // interval2 = (4, 5)\n        //\
    \ intersection = (0, 0)\n        // length = 0\n        // return \"NO\"\n   \
    \     // interval1 = (1, 3)\n        // interval2 = (1, 3)\n        // intersection\
    \ = (1, 3)\n        // length = 2\n        // return \"YES\"\n        // interval1\
    \ = (1, 3)\n        // interval2 = (1, 2)\n        // intersection = (1, 2)\n\
    \        // length = 1\n        // return \"NO\"\n        // interval1 = (1, 3)\n\
    \        // interval2 = (2, 3)\n        // intersection = (2, 3)\n        // length\
    \ = 1\n        // return \"NO\"\n        // interval1 = (1, 3)\n        // interval2\
    \ = (3, 3)\n        // intersection = (3, 3)\n        // length = 0\n        //\
    \ return \"NO\"\n        // interval1 = (1, 3)\n        // interval2 = (3, 4)\n\
    \        // intersection = (3, 3)\n        // length = 0\n        // return \"\
    NO\"\n        // interval1 = (1, 3)\n        // interval2 = (2, 2)\n        //\
    \ intersection = (2, 2)\n        // length = 0\n        // return \"NO\"\n   \
    \     // interval1 = (1, 3)\n        // interval2 = (1, 1)\n        // intersection\
    \ = (1, 1)\n        // length = 0\n        // return \"NO\"\n        // interval1\
    \ = (1, 3)\n        // interval2 =", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";", "        // your code here\n\
    \        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ len = end - start + 1;\n        if (isPrime(len)) {\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        // interval1 = (1, 3)\n\
    \        // interval2 = (2, 4)\n        // intersection = (2, 3)\n        // length\
    \ = 1\n        // return \"NO\"\n        // interval1 = (1, 3)\n        // interval2\
    \ = (3, 4)\n        // intersection = (3, 3)\n        // length = 0\n        //\
    \ return \"NO\"\n        // interval1 = (1, 3)\n        // interval2 = (4, 5)\n\
    \        // intersection = (0, 0)\n        // length = 0\n        // return \"\
    NO\"\n        // interval1 = (1, 3)\n        // interval2 = (2, 2)\n        //\
    \ intersection = (2, 2)\n        // length = 0\n        // return \"NO\"\n   \
    \     // interval1 = (1, 3)\n        // interval2 = (2, 4)\n        // intersection\
    \ = (2, 3)\n        // length = 1\n        // return \"NO\"\n        // interval1\
    \ = (1, 3)\n        // interval2 = (2, 5)\n        // intersection = (2, 3)\n\
    \        // length = 1\n        // return \"NO\"\n        // interval1 = (1, 3)\n\
    \        // interval2 = (2, 4)\n        // intersection = (2, 3)\n        // length\
    \ = 1\n        // return \"NO\"\n        // interval1 = (1, 3)\n        // interval2\
    \ = (2, 5)\n        // intersection = (2, 3)\n        // length = 1\n        //\
    \ return \"NO\"\n        // interval1 = (1, 3)\n        // interval2 = (2, 4)\n\
    \        // intersection = (2, 3)\n        // length = 1\n        // return \"\
    NO\"\n        // interval1 = (1, 3)\n        // interval2 = (2, 5)\n        //\
    \ intersection = (2, 3)\n        // length = 1\n        // return \"NO\"\n   \
    \     // interval1 = (1, 3)\n        // interval2 = (2, 4)\n        // intersection\
    \ = (2, 3)\n        // length = 1\n        // return \"NO\"\n        // interval1\
    \ = (1, 3)\n        // interval2 =", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        // your code here\n \
    \       return \"\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ len = end - start + 1;\n        if (isPrime(len)) {\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        // write your code here\n    \
    \    int start = Math.max(interval1.getValue0(), interval2.getValue0());\n   \
    \     int end = Math.min(interval1.getValue1(), interval2.getValue1());\n    \
    \    if (start > end) {\n            return \"NO\";\n        }\n        int length\
    \ = end - start + 1;\n        if (isPrime(length)) {\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n   \
    \         if (length % i == 0) {\n                return \"NO\";\n           \
    \ }\n        }\n        return \"YES\";", "        // your code here\n       \
    \ int start = Math.max(interval1.getValue0(), interval2.getValue0());\n      \
    \  int end = Math.min(interval1.getValue1(), interval2.getValue1());\n       \
    \ if (start > end) {\n            return \"NO\";\n        }\n        int len =\
    \ end - start + 1;\n        if (isPrime(len)) {\n            return \"YES\";\n\
    \        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) return \"NO\";\n        int len = end - start + 1;\n\
    \        if (isPrime(len)) return \"YES\";\n        return \"NO\";", "       \
    \ int start = Math.max(interval1.getValue0(), interval2.getValue0());\n      \
    \  int end = Math.min(interval1.getValue1(), interval2.getValue1());\n       \
    \ if (start > end) {\n            return \"NO\";\n        }\n        int length\
    \ = end - start + 1;\n        if (length == 1) {\n            return \"NO\";\n\
    \        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ len = end - start + 1;\n        if (len == 1) {\n            return \"NO\";\n\
    \        }\n        for (int i = 2; i < len; i++) {\n            if (len % i ==\
    \ 0) {\n                return \"NO\";\n            }\n        }\n        return\
    \ \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        int sqrt = (int) Math.sqrt(length);\n        for (int\
    \ i = 2; i <= sqrt; i++) {\n            if (length % i == 0) {\n             \
    \   return \"NO\";\n            }\n        }\n        return \"YES\";", "    \
    \    // your code here\n        return \"\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // your code here\n        return \"\";", "  \
    \      // Write your code here\n        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ diff = end - start + 1;\n        if (isPrime(diff)) {\n            return \"\
    YES\";\n        }\n        return \"NO\";", "        // your code here\n     \
    \   return \"\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) return \"NO\";\n        int length = end - start + 1;\n\
    \        if (isPrime(length)) return \"YES\";\n        return \"NO\";", "    \
    \    int start = Math.max(interval1.getValue0(), interval2.getValue0());\n   \
    \     int end = Math.min(interval1.getValue1(), interval2.getValue1());\n    \
    \    if (start > end) {\n            return \"NO\";\n        }\n        int length\
    \ = end - start + 1;\n        if (length == 1) {\n            return \"NO\";\n\
    \        }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n         \
    \   if (length % i == 0) {\n                return \"NO\";\n            }\n  \
    \      }\n        return \"YES\";", "        // your code goes here\n        int\
    \ start = Math.max(interval1.getValue0(), interval2.getValue0());\n        int\
    \ end = Math.min(interval1.getValue1(), interval2.getValue1());\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        int length = end -\
    \ start + 1;\n        if (length == 1) {\n            return \"NO\";\n       \
    \ }\n        if (length == 2) {\n            return \"YES\";\n        }\n    \
    \    for (int i = 2; i < length; i++) {\n            if (length % i == 0) {\n\
    \                return \"NO\";\n            }\n        }\n        return \"YES\"\
    ;", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) return \"NO\";\n        int len = end - start + 1;\n\
    \        if (len == 1) return \"NO\";\n        if (len == 2) return \"YES\";\n\
    \        for (int i = 2; i * i <= len; i++) {\n            if (len % i == 0) return\
    \ \"NO\";\n        }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        // your code here\n \
    \       return \"NO\";", "        // interval1 = (1, 3)\n        // interval2\
    \ = (2, 4)\n        // intersection = (2, 3)\n        // length = 1\n        //\
    \ return \"NO\"\n        // interval1 = (1, 3)\n        // interval2 = (2, 5)\n\
    \        // intersection = (2, 3)\n        // length = 1\n        // return \"\
    NO\"\n        // interval1 = (1, 3)\n        // interval2 = (3, 5)\n        //\
    \ intersection = (3, 3)\n        // length = 0\n        // return \"NO\"\n   \
    \     // interval1 = (1, 3)\n        // interval2 = (4, 5)\n        // intersection\
    \ = (0, 0)\n        // length = 0\n        // return \"NO\"\n        // interval1\
    \ = (1, 3)\n        // interval2 = (2, 2)\n        // intersection = (2, 2)\n\
    \        // length = 0\n        // return \"NO\"\n        // interval1 = (1, 3)\n\
    \        // interval2 = (2, 3)\n        // intersection = (2, 3)\n        // length\
    \ = 1\n        // return \"NO\"\n        // interval1 = (1, 3)\n        // interval2\
    \ = (1, 3)\n        // intersection = (1, 3)\n        // length = 2\n        //\
    \ return \"YES\"\n        // interval1 = (1, 3)\n        // interval2 = (1, 2)\n\
    \        // intersection = (1, 2)\n        // length = 1\n        // return \"\
    NO\"\n        // interval1 = (1, 3)\n        // interval2 = (1, 1)\n        //\
    \ intersection = (1, 1)\n        // length = 0\n        // return \"NO\"\n   \
    \     // interval1 = (1, 3)\n        // interval2 = (2, 2)\n        // intersection\
    \ = (2, 2)\n        // length = 0\n        // return \"NO\"\n        // interval1\
    \ = (1, 3)\n        // interval2 = (3, 3)\n        // intersection = (3, 3)\n\
    \        // length = 0\n        // return \"NO\"\n        // interval1 = (1, 3)\n\
    \        // interval2 =", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n           \
    \ if (length % i == 0) {\n                return \"NO\";\n            }\n    \
    \    }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        return isPrime(length) ? \"YES\" : \"NO\"\
    ;", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n           \
    \ if (length % i == 0) {\n                return \"NO\";\n            }\n    \
    \    }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // your code here\n        return \"\";", "  \
    \      int start = Math.max(interval1.getValue0(), interval2.getValue0());\n \
    \       int end = Math.min(interval1.getValue1(), interval2.getValue1());\n  \
    \      if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) return \"NO\";\n        int len = end - start + 1;\n\
    \        if (len == 1) return \"NO\";\n        if (len == 2) return \"YES\";\n\
    \        for (int i = 2; i < len; i++) {\n            if (len % i == 0) return\
    \ \"NO\";\n        }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // TODO: Implement your solution here\n      \
    \  return \"\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n           \
    \ if (length % i == 0) {\n                return \"NO\";\n            }\n    \
    \    }\n        return \"YES\";", "        // your code here\n        return \"\
    \";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ len = end - start + 1;\n        if (isPrime(len)) {\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) return \"NO\";\n        int diff = end - start + 1;\n\
    \        if (diff == 1) return \"NO\";\n        if (diff == 2) return \"YES\"\
    ;\n        for (int i = 2; i <= Math.sqrt(diff); i++) {\n            if (diff\
    \ % i == 0) return \"NO\";\n        }\n        return \"YES\";", "        int\
    \ start = Math.max(interval1.getValue0(), interval2.getValue0());\n        int\
    \ end = Math.min(interval1.getValue1(), interval2.getValue1());\n        if (start\
    \ > end) return \"NO\";\n        int len = end - start + 1;\n        if (len ==\
    \ 1) return \"NO\";\n        if (len == 2) return \"YES\";\n        for (int i\
    \ = 2; i < len; i++) {\n            if (len % i == 0) return \"NO\";\n       \
    \ }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n   \
    \         if (length % i == 0) {\n                return \"NO\";\n           \
    \ }\n        }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n   \
    \         if (length % i == 0) {\n                return \"NO\";\n           \
    \ }\n        }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i <= Math.sqrt(length); i++) {\n           \
    \ if (length % i == 0) {\n                return \"NO\";\n            }\n    \
    \    }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        return isPrime(length) ? \"YES\" : \"NO\"\
    ;", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        int diff = end - start;\n        if (diff < 0) {\n            return\
    \ \"NO\";\n        }\n        if (diff == 0) {\n            return \"YES\";\n\
    \        }\n        if (diff == 1) {\n            return \"NO\";\n        }\n\
    \        if (diff == 2) {\n            return \"YES\";\n        }\n        if\
    \ (diff % 2 == 0) {\n            return \"NO\";\n        }\n        for (int i\
    \ = 3; i <= Math.sqrt(diff); i += 2) {\n            if (diff % i == 0) {\n   \
    \             return \"NO\";\n            }\n        }\n        return \"YES\"\
    ;", "        // your code here\n        return \"\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        int length = end - start + 1;\n        if (length <= 0) {\n         \
    \   return \"NO\";\n        }\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        // your code here\n \
    \       return \"\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ len = end - start + 1;\n        if (len == 1) {\n            return \"NO\";\n\
    \        }\n        for (int i = 2; i < len; i++) {\n            if (len % i ==\
    \ 0) {\n                return \"NO\";\n            }\n        }\n        return\
    \ \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) return \"NO\";\n        return isPrime(end - start +\
    \ 1) ? \"YES\" : \"NO\";", "        // your code here\n        return \"\";",
  "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n \
    \       int end = Math.min(interval1.getValue1(), interval2.getValue1());\n  \
    \      if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        return isPrime(length) ? \"YES\" : \"NO\";", "     \
    \   int start = Math.max(interval1.getValue0(), interval2.getValue0());\n    \
    \    int end = Math.min(interval1.getValue1(), interval2.getValue1());\n     \
    \   if (start > end) {\n            return \"NO\";\n        }\n        int length\
    \ = end - start + 1;\n        if (length == 1) {\n            return \"NO\";\n\
    \        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // your code goes here\n        return \"\";",
  "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n \
    \       int end = Math.min(interval1.getValue1(), interval2.getValue1());\n  \
    \      if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        for (int i = 2; i < length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        if (length % 2 == 0) {\n            return \"NO\";\n       \
    \ }\n        for (int i = 3; i <= Math.sqrt(length); i += 2) {\n            if\
    \ (length % i == 0) {\n                return \"NO\";\n            }\n       \
    \ }\n        return \"YES\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (int i = 2; i < length; i++) {\n            if (length %\
    \ i == 0) {\n                return \"NO\";\n            }\n        }\n      \
    \  return \"YES\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        int start = Math.max(interval1.getValue0(),\
    \ interval2.getValue0());\n        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        // your code here\n \
    \       return \"\";", "        int start = Math.max(interval1.getValue0(), interval2.getValue0());\n\
    \        int end = Math.min(interval1.getValue1(), interval2.getValue1());\n \
    \       if (start > end) {\n            return \"NO\";\n        }\n        int\
    \ length = end - start + 1;\n        if (isPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

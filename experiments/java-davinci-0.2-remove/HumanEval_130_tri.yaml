name: HumanEval_130_tri
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Everyone knows Fibonacci sequence, it was studied deeply\
  \ by mathematicians in \n    // the last couple centuries. However, what people\
  \ don't know is Tribonacci sequence.\n    // Tribonacci sequence is defined by the\
  \ recurrence:\n    // tri(1) = 3\n    // tri(n) = 1 + n / 2, if n is even.\n   \
  \ // tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n    // For example:\n\
  \    // tri(2) = 1 + (2 / 2) = 2\n    // tri(4) = 3\n    // tri(3) = tri(2) + tri(1)\
  \ + tri(4)\n    // = 2 + 3 + 3 = 8 \n    // You are given a non-negative integer\
  \ number n, you have to a return a list of the \n    // first n + 1 numbers of the\
  \ Tribonacci sequence.\n    // Examples:\n    public static ArrayList<Long> tri(long\
  \ n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(tri((3l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l)))));\n \
  \   assert(tri((4l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)2l, (long)8l, (long)3l)))));\n    assert(tri((5l)).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)2l, (long)8l, (long)3l, (long)15l)))));\n    assert(tri((6l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l, (long)3l,\
  \ (long)15l, (long)4l)))));\n    assert(tri((7l)).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l)))));\n\
  \    assert(tri((8l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l, (long)5l)))));\n\
  \    assert(tri((9l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l, (long)5l, (long)35l)))));\n\
  \    assert(tri((20l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l, (long)5l, (long)35l,\
  \ (long)6l, (long)48l, (long)7l, (long)63l, (long)8l, (long)80l, (long)9l, (long)99l,\
  \ (long)10l, (long)120l, (long)11l)))));\n    assert(tri((0l)).equals((new ArrayList<Long>(Arrays.asList((long)1l)))));\n\
  \    assert(tri((1l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l)))));\n\
  \    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<>();\n        long a\
    \ = 3;\n        long b = 2;\n        long c = 1;\n        long d = 0;\n      \
    \  for (int i = 0; i <= n; i++) {\n            if (i == 0) {\n               \
    \ result.add(a);\n            } else if (i == 1) {\n                result.add(b);\n\
    \            } else if (i == 2) {\n                result.add(c);\n          \
    \  } else {\n                d = a + b + c;\n                a = b;\n        \
    \        b = c;\n                c = d;\n                result.add(d);\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> res =\
    \ new ArrayList<>();\n        res.add(3L);\n        if (n == 1) {\n          \
    \  return res;\n        }\n        res.add(2L);\n        if (n == 2) {\n     \
    \       return res;\n        }\n        res.add(8L);\n        if (n == 3) {\n\
    \            return res;\n        }\n        for (int i = 4; i <= n; i++) {\n\
    \            long last = res.get(res.size() - 1);\n            long secondLast\
    \ = res.get(res.size() - 2);\n            long thirdLast = res.get(res.size()\
    \ - 3);\n            if (i % 2 == 0) {\n                res.add(1 + i / 2);\n\
    \            } else {\n                res.add(last + secondLast + thirdLast);\n\
    \            }\n        }\n        return res;", "        ArrayList<Long> ans\
    \ = new ArrayList<>();\n        ans.add(3L);\n        if (n == 0) return ans;\n\
    \        ans.add(2L);\n        if (n == 1) return ans;\n        ans.add(8L);\n\
    \        if (n == 2) return ans;\n        for (int i = 3; i <= n; i++) {\n   \
    \         long x = ans.get(i - 1) + ans.get(i - 2) + ans.get(i - 3);\n       \
    \     ans.add(x);\n        }\n        return ans;", "        ArrayList<Long> list\
    \ = new ArrayList<>();\n        for (long i = 1; i <= n + 1; i++) {\n        \
    \    if (i == 1) {\n                list.add(3L);\n            } else if (i %\
    \ 2 == 0) {\n                list.add(1 + i / 2);\n            } else {\n    \
    \            list.add(list.get((int) (i - 2)) + list.get((int) (i - 1)) + list.get((int)\
    \ (i + 1)));\n            }\n        }\n        return list;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        res.add(3L);\n        res.add(2L);\n     \
    \   res.add(8L);\n        for (int i = 3; i <= n; i++) {\n            if (i %\
    \ 2 == 0) {\n                res.add(1 + i / 2);\n            } else {\n     \
    \           res.add(res.get(i - 1) + res.get(i - 2) + res.get(i + 1));\n     \
    \       }\n        }\n        return res;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        result.add(3L);\n        for (long i = 1; i <= n;\
    \ i++) {\n            if (i % 2 == 0) {\n                result.add(1 + i / 2);\n\
    \            } else {\n                result.add(result.get((int) (i - 1)) +\
    \ result.get((int) (i - 2)) + result.get((int) (i + 1)));\n            }\n   \
    \     }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        for (long i = 1; i <= n; i++) {\n          \
    \  if (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else\
    \ {\n                result.add(result.get((int)i - 1) + result.get((int)i - 2)\
    \ + result.get((int)i + 1));\n            }\n        }\n        return result;",
  "        ArrayList<Long> res = new ArrayList<>();\n        res.add(3L);\n      \
    \  res.add(2L);\n        res.add(8L);\n        for (int i = 3; i <= n; i++) {\n\
    \            if (i % 2 == 0) {\n                res.add(1 + (long) i / 2);\n \
    \           } else {\n                res.add(res.get(i - 1) + res.get(i - 2)\
    \ + res.get(i + 1));\n            }\n        }\n        return res;", "      \
    \  ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n      \
    \      return result;\n        }\n        result.add(3L);\n        if (n == 1)\
    \ {\n            return result;\n        }\n        result.add(2L);\n        if\
    \ (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        for (int i = 3; i < n; i++) {\n            long next = 0;\n         \
    \   if (i % 2 == 0) {\n                next = 1 + i / 2;\n            } else {\n\
    \                next = result.get(i - 1) + result.get(i - 2) + result.get(i +\
    \ 1);\n            }\n            result.add(next);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        result.add(2L);\n        result.add(8L);\n        for (int i = 3; i <=\
    \ n; i++) {\n            if (i % 2 == 0) {\n                result.add(1 + i /\
    \ 2);\n            } else {\n                result.add(result.get(i - 1) + result.get(i\
    \ - 2) + result.get(i + 1));\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long next = result.get(i - 1) + result.get(i\
    \ - 2) + result.get(i - 3);\n            result.add(next);\n        }\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     long a = 3;\n        long b = 2;\n        long c = 1;\n        result.add(a);\n\
    \        result.add(b);\n        result.add(c);\n        for (int i = 0; i < n;\
    \ i++) {\n            long d = a + b + c;\n            result.add(d);\n      \
    \      a = b;\n            b = c;\n            c = d;\n        }\n        return\
    \ result;", "        ArrayList<Long> ans = new ArrayList<>();\n        ans.add(3L);\n\
    \        if (n == 0) return ans;\n        ans.add(2L);\n        if (n == 1) return\
    \ ans;\n        ans.add(8L);\n        if (n == 2) return ans;\n        for (int\
    \ i = 3; i <= n; i++) {\n            long cur = 0;\n            if (i % 2 == 0)\
    \ {\n                cur = 1 + i / 2;\n            } else {\n                cur\
    \ = ans.get(i - 1) + ans.get(i - 2) + ans.get(i - 3);\n            }\n       \
    \     ans.add(cur);\n        }\n        return ans;", "        ArrayList<Long>\
    \ ans = new ArrayList<>();\n        ans.add(3L);\n        if (n == 0) return ans;\n\
    \        ans.add(2L);\n        if (n == 1) return ans;\n        ans.add(8L);\n\
    \        if (n == 2) return ans;\n        for (int i = 3; i <= n; i++) {\n   \
    \         long x = ans.get(i - 1) + ans.get(i - 2) + ans.get(i - 3);\n       \
    \     ans.add(x);\n        }\n        return ans;", "        ArrayList<Long> ans\
    \ = new ArrayList<>();\n        ans.add(3L);\n        for (long i = 1; i <= n;\
    \ i++) {\n            if (i % 2 == 0) {\n                ans.add(1 + i / 2);\n\
    \            } else {\n                ans.add(ans.get((int) (i - 1)) + ans.get((int)\
    \ (i - 2)) + ans.get((int) (i + 1)));\n            }\n        }\n        return\
    \ ans;", "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        result.add(2L);\n        result.add(8L);\n        for (int i = 3; i <=\
    \ n; i++) {\n            long t = result.get(i - 1) + result.get(i - 2) + result.get(i\
    \ - 3);\n            result.add(t);\n        }\n        return result;", "   \
    \     ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n \
    \       result.add(2L);\n        result.add(8L);\n        for (int i = 3; i <=\
    \ n; i++) {\n            long next = 0;\n            if (i % 2 == 0) {\n     \
    \           next = 1 + i / 2;\n            } else {\n                next = result.get(i\
    \ - 1) + result.get(i - 2) + result.get(i + 1);\n            }\n            result.add(next);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            return result;\n        }\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        for (int i = 3; i < n; i++) {\n            long a = result.get(i - 1);\n\
    \            long b = result.get(i - 2);\n            long c = result.get(i -\
    \ 3);\n            result.add(a + b + c);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          return result;\n        }\n        result.add(3L);\n        if (n ==\
    \ 1) {\n            return result;\n        }\n        result.add(2L);\n     \
    \   if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long next = result.get(i - 1) + result.get(i\
    \ - 2) + result.get(i - 3);\n            result.add(next);\n        }\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     result.add(3L);\n        if (n == 1) return result;\n        result.add(2L);\n\
    \        if (n == 2) return result;\n        result.add(8L);\n        if (n ==\
    \ 3) return result;\n        for (int i = 4; i <= n; i++) {\n            long\
    \ last = result.get(result.size() - 1);\n            long secondLast = result.get(result.size()\
    \ - 2);\n            long thirdLast = result.get(result.size() - 3);\n       \
    \     if (i % 2 == 0) {\n                result.add(1 + i / 2);\n            }\
    \ else {\n                result.add(last + secondLast + thirdLast);\n       \
    \     }\n        }\n        return result;", "        ArrayList<Long> ans = new\
    \ ArrayList<>();\n        ans.add(3L);\n        for (long i = 1; i <= n; i++)\
    \ {\n            if (i % 2 == 0) {\n                ans.add(1 + i / 2);\n    \
    \        } else {\n                ans.add(ans.get((int)i - 1) + ans.get((int)i\
    \ - 2) + ans.get((int)i + 1));\n            }\n        }\n        return ans;",
  "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = 0; i\
    \ <= n; i++) {\n            if (i == 0) {\n                result.add(0L);\n \
    \           } else if (i == 1) {\n                result.add(3L);\n          \
    \  } else if (i == 2) {\n                result.add(2L);\n            } else if\
    \ (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else {\n\
    \                result.add(result.get((int) i - 1) + result.get((int) i - 2)\
    \ + result.get((int) i + 1));\n            }\n        }\n        return result;",
  "        ArrayList<Long> ans = new ArrayList<>();\n        ans.add(3L);\n      \
    \  for (long i = 1; i <= n; i++) {\n            if (i % 2 == 0) {\n          \
    \      ans.add(1 + i / 2);\n            } else {\n                ans.add(ans.get((int)\
    \ (i - 1)) + ans.get((int) (i - 2)) + ans.get((int) (i + 1)));\n            }\n\
    \        }\n        return ans;", "        ArrayList<Long> ans = new ArrayList<>();\n\
    \        ans.add(3L);\n        if (n == 0) return ans;\n        ans.add(2L);\n\
    \        if (n == 1) return ans;\n        ans.add(8L);\n        if (n == 2) return\
    \ ans;\n        for (int i = 3; i <= n; i++) {\n            long x = ans.get(i\
    \ - 1) + ans.get(i - 2) + ans.get(i - 3);\n            ans.add(x);\n        }\n\
    \        return ans;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            return result;\n        }\n        if (n ==\
    \ 1) {\n            result.add(3L);\n            return result;\n        }\n \
    \       result.add(3L);\n        result.add(2L);\n        result.add(8L);\n  \
    \      for (int i = 3; i < n; i++) {\n            long last = result.get(result.size()\
    \ - 1);\n            long secondLast = result.get(result.size() - 2);\n      \
    \      long thirdLast = result.get(result.size() - 3);\n            if (i % 2\
    \ == 0) {\n                result.add(1 + i / 2);\n            } else {\n    \
    \            result.add(last + secondLast + thirdLast);\n            }\n     \
    \   }\n        return result;", "        ArrayList<Long> ans = new ArrayList<>();\n\
    \        ans.add(3L);\n        for (long i = 1; i <= n; i++) {\n            if\
    \ (i % 2 == 0) {\n                ans.add(1 + i / 2);\n            } else {\n\
    \                ans.add(ans.get((int)i - 1) + ans.get((int)i - 2) + ans.get((int)i\
    \ + 1));\n            }\n        }\n        return ans;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (long i = 0; i <= n; i++) {\n     \
    \       result.add(tri(i));\n        }\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        if (n == 0) {\n            return res;\n \
    \       }\n        res.add(3L);\n        if (n == 1) {\n            return res;\n\
    \        }\n        res.add(2L);\n        if (n == 2) {\n            return res;\n\
    \        }\n        res.add(8L);\n        if (n == 3) {\n            return res;\n\
    \        }\n        for (int i = 4; i <= n; i++) {\n            long cur = res.get(i\
    \ - 1) + res.get(i - 2) + res.get(i - 3);\n            if (i % 2 == 0) {\n   \
    \             cur += i / 2;\n            }\n            res.add(cur);\n      \
    \  }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) return result;\n        result.add(2L);\n\
    \        if (n == 2) return result;\n        result.add(8L);\n        if (n ==\
    \ 3) return result;\n        for (int i = 4; i <= n; i++) {\n            long\
    \ last = result.get(result.size() - 1);\n            long secondLast = result.get(result.size()\
    \ - 2);\n            long thirdLast = result.get(result.size() - 3);\n       \
    \     if (i % 2 == 0) {\n                result.add(1 + i / 2);\n            }\
    \ else {\n                result.add(last + secondLast + thirdLast);\n       \
    \     }\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        result.add(3L);\n        for (long i = 1; i <= n;\
    \ i++) {\n            if (i % 2 == 0) {\n                result.add(1 + i / 2);\n\
    \            } else {\n                long x = result.get((int) (i - 1));\n \
    \               long y = result.get((int) (i - 2));\n                long z =\
    \ result.get((int) (i + 1));\n                result.add(x + y + z);\n       \
    \     }\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        for (long i = 0; i <= n; i++) {\n            if\
    \ (i == 0) {\n                result.add(0L);\n            } else if (i == 1)\
    \ {\n                result.add(3L);\n            } else if (i == 2) {\n     \
    \           result.add(2L);\n            } else if (i % 2 == 0) {\n          \
    \      result.add(1 + i / 2);\n            } else {\n                result.add(result.get((int)\
    \ i - 1) + result.get((int) i - 2) + result.get((int) i + 1));\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) return result;\n        result.add(2L);\n\
    \        if (n == 2) return result;\n        result.add(8L);\n        if (n ==\
    \ 3) return result;\n        for (int i = 4; i <= n; i++) {\n            long\
    \ last = result.get(result.size() - 1);\n            long secondLast = result.get(result.size()\
    \ - 2);\n            long thirdLast = result.get(result.size() - 3);\n       \
    \     long next = (i % 2 == 0) ? (1 + i / 2) : (last + secondLast + thirdLast);\n\
    \            result.add(next);\n        }\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        if (n == 0) {\n            return res;\n \
    \       }\n        res.add(3L);\n        if (n == 1) {\n            return res;\n\
    \        }\n        res.add(2L);\n        if (n == 2) {\n            return res;\n\
    \        }\n        res.add(8L);\n        if (n == 3) {\n            return res;\n\
    \        }\n        for (int i = 4; i <= n; i++) {\n            long last = res.get(res.size()\
    \ - 1);\n            long secondLast = res.get(res.size() - 2);\n            long\
    \ thirdLast = res.get(res.size() - 3);\n            if (i % 2 == 0) {\n      \
    \          res.add(1 + i / 2);\n            } else {\n                res.add(last\
    \ + secondLast + thirdLast);\n            }\n        }\n        return res;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          return result;\n        }\n        result.add(3L);\n        if (n ==\
    \ 1) {\n            return result;\n        }\n        result.add(2L);\n     \
    \   if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n\
    \                result.add(1 + i / 2);\n            } else {\n              \
    \  result.add(last + secondLast + thirdLast);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       result.add(3L);\n        if (n == 1) {\n            return result;\n \
    \       }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long next = 0;\n            if (i % 2 == 0) {\n                next =\
    \ 1 + i / 2;\n            } else {\n                next = result.get(i - 1) +\
    \ result.get(i - 2) + result.get(i - 3);\n            }\n            result.add(next);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            if (i == 0) {\n        \
    \        result.add(0L);\n            } else if (i == 1) {\n                result.add(3L);\n\
    \            } else if (i == 2) {\n                result.add(2L);\n         \
    \   } else if (i % 2 == 0) {\n                result.add(1 + i / 2);\n       \
    \     } else {\n                result.add(result.get((int) (i - 1)) + result.get((int)\
    \ (i - 2)) + result.get((int) (i + 1)));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ == 0) {\n            return result;\n        }\n        result.add(3L);\n  \
    \      if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n\
    \                result.add(1 + i / 2);\n            } else {\n              \
    \  result.add(last + secondLast + thirdLast);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       result.add(3L);\n        if (n == 1) {\n            return result;\n \
    \       }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long last = result.get(result.size() - 1);\n            long secondLast\
    \ = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            if (i % 2 == 0) {\n                result.add(1 + i / 2);\n\
    \            } else {\n                result.add(last + secondLast + thirdLast);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (long i = 0; i <= n; i++) {\n            if\
    \ (i == 0) {\n                result.add(0L);\n            } else if (i == 1)\
    \ {\n                result.add(3L);\n            } else if (i == 2) {\n     \
    \           result.add(2L);\n            } else if (i % 2 == 0) {\n          \
    \      result.add(1 + i / 2);\n            } else {\n                result.add(result.get((int)\
    \ i - 1) + result.get((int) i - 2) + result.get((int) i + 1));\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            return result;\n        }\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long next = 0;\n            if (i % 2 ==\
    \ 0) {\n                next = 1 + i / 2;\n            } else {\n            \
    \    next = result.get(i - 1) + result.get(i - 2) + result.get(i - 3);\n     \
    \       }\n            result.add(next);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        for (long i = 1; i <= n; i++) {\n            if (i % 2 == 0) {\n    \
    \            result.add(1 + i / 2);\n            } else {\n                result.add(result.get((int)i\
    \ - 1) + result.get((int)i - 2) + result.get((int)i + 1));\n            }\n  \
    \      }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        for (long i = 1; i <= n; i++) {\n          \
    \  if (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else\
    \ {\n                result.add(result.get((int) (i - 1)) + result.get((int) (i\
    \ - 2)) + result.get((int) (i + 1)));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ == 0) {\n            return result;\n        }\n        result.add(3L);\n  \
    \      if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        for (int i = 3; i < n; i++) {\n            long temp = result.get(i -\
    \ 1) + result.get(i - 2) + result.get(i - 3);\n            result.add(temp);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long a = 3;\n        long b = 2;\n        long c = 1;\n        for (int\
    \ i = 0; i <= n; i++) {\n            if (i == 0) {\n                result.add(a);\n\
    \            } else if (i == 1) {\n                result.add(b);\n          \
    \  } else if (i == 2) {\n                result.add(c);\n            } else {\n\
    \                long d = a + b + c;\n                result.add(d);\n       \
    \         a = b;\n                b = c;\n                c = d;\n           \
    \ }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (n == 0) {\n            return result;\n        }\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        for (int i = 3; i < n;\
    \ i++) {\n            long last = result.get(result.size() - 1);\n           \
    \ long secondLast = result.get(result.size() - 2);\n            long thirdLast\
    \ = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n          \
    \      result.add(1 + i / 2);\n            } else {\n                result.add(last\
    \ + secondLast + thirdLast);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n\
    \                result.add(1 + i / 2);\n            } else {\n              \
    \  result.add(last + secondLast + thirdLast);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       result.add(3L);\n        if (n == 1) {\n            return result;\n \
    \       }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long x = result.get(i - 1) + result.get(i - 2) + result.get(i - 3);\n\
    \            result.add(x);\n        }\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        if (n == 0) {\n            return res;\n \
    \       }\n        res.add(3L);\n        if (n == 1) {\n            return res;\n\
    \        }\n        res.add(2L);\n        if (n == 2) {\n            return res;\n\
    \        }\n        res.add(8L);\n        for (int i = 3; i < n; i++) {\n    \
    \        long cur = res.get(i - 1) + res.get(i - 2) + res.get(i - 3);\n      \
    \      res.add(cur);\n        }\n        return res;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        res.add(3L);\n        if (n == 1) return res;\n\
    \        res.add(2L);\n        if (n == 2) return res;\n        res.add(8L);\n\
    \        if (n == 3) return res;\n        for (int i = 3; i < n; i++) {\n    \
    \        long cur = res.get(i - 1) + res.get(i - 2) + res.get(i - 3);\n      \
    \      res.add(cur);\n        }\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        result.add(3L);\n        if (n == 1) {\n\
    \            return result;\n        }\n        result.add(2L);\n        if (n\
    \ == 2) {\n            return result;\n        }\n        result.add(8L);\n  \
    \      if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            result.add(last + secondLast\
    \ + thirdLast);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (long i = 0; i <= n; i++) {\n     \
    \       if (i == 0) {\n                result.add(0L);\n            } else if\
    \ (i == 1) {\n                result.add(3L);\n            } else if (i == 2)\
    \ {\n                result.add(1L);\n            } else if (i % 2 == 0) {\n \
    \               result.add(1L + i / 2);\n            } else {\n              \
    \  result.add(result.get((int)i - 1) + result.get((int)i - 2) + result.get((int)i\
    \ + 1));\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            return result;\n\
    \        }\n        result.add(3L);\n        if (n == 1) {\n            return\
    \ result;\n        }\n        result.add(2L);\n        if (n == 2) {\n       \
    \     return result;\n        }\n        result.add(8L);\n        for (int i =\
    \ 3; i < n; i++) {\n            long last = result.get(result.size() - 1);\n \
    \           long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n\
    \                result.add(1 + i / 2);\n            } else {\n              \
    \  result.add(last + secondLast + thirdLast);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (long i = 0; i <= n; i++) {\n            if (i == 0) {\n         \
    \       result.add(0L);\n            } else if (i == 1) {\n                result.add(3L);\n\
    \            } else if (i == 2) {\n                result.add(2L);\n         \
    \   } else if (i % 2 == 0) {\n                result.add(1 + i / 2);\n       \
    \     } else {\n                result.add(result.get((int) (i - 1)) + result.get((int)\
    \ (i - 2)) + result.get((int) (i + 1)));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            result.add(result.get(i - 1) + result.get(i\
    \ - 2) + result.get(i - 3));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        result.add(3L);\n        if (n == 1) {\n\
    \            return result;\n        }\n        result.add(2L);\n        if (n\
    \ == 2) {\n            return result;\n        }\n        result.add(8L);\n  \
    \      if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            result.add(last + secondLast\
    \ + thirdLast);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long a = 3;\n        long b = 2;\n    \
    \    long c = 1;\n        for (int i = 0; i <= n; i++) {\n            if (i ==\
    \ 0) {\n                result.add(a);\n            } else if (i == 1) {\n   \
    \             result.add(b);\n            } else if (i == 2) {\n             \
    \   result.add(c);\n            } else {\n                long d = a + b + c;\n\
    \                result.add(d);\n                a = b;\n                b = c;\n\
    \                c = d;\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long a = 3;\n   \
    \     long b = 0;\n        long c = 0;\n        long d = 0;\n        for (long\
    \ i = 1; i <= n; i++) {\n            if (i == 1) {\n                result.add(a);\n\
    \            } else if (i % 2 == 0) {\n                result.add(1 + i / 2);\n\
    \            } else {\n                d = c;\n                c = b;\n      \
    \          b = a;\n                a = b + c + d;\n                result.add(a);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        result.add(3L);\n        if (n == 1) {\n     \
    \       return result;\n        }\n        result.add(2L);\n        if (n == 2)\
    \ {\n            return result;\n        }\n        result.add(8L);\n        if\
    \ (n == 3) {\n            return result;\n        }\n        for (int i = 4; i\
    \ <= n; i++) {\n            long last = result.get(result.size() - 1);\n     \
    \       long secondLast = result.get(result.size() - 2);\n            long thirdLast\
    \ = result.get(result.size() - 3);\n            result.add(last + secondLast +\
    \ thirdLast);\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        result.add(3L);\n        if (n == 1) {\n     \
    \       return result;\n        }\n        result.add(2L);\n        if (n == 2)\
    \ {\n            return result;\n        }\n        result.add(8L);\n        if\
    \ (n == 3) {\n            return result;\n        }\n        for (int i = 4; i\
    \ <= n; i++) {\n            long last = result.get(result.size() - 1);\n     \
    \       long secondLast = result.get(result.size() - 2);\n            long thirdLast\
    \ = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n          \
    \      result.add(1 + i / 2);\n            } else {\n                result.add(last\
    \ + secondLast + thirdLast);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          return result;\n        }\n        result.add(3L);\n        if (n ==\
    \ 1) {\n            return result;\n        }\n        result.add(2L);\n     \
    \   if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        for (int i = 3; i < n; i++) {\n            long last = result.get(result.size()\
    \ - 1);\n            long secondLast = result.get(result.size() - 2);\n      \
    \      long thirdLast = result.get(result.size() - 3);\n            if (i % 2\
    \ == 0) {\n                result.add(1 + i / 2);\n            } else {\n    \
    \            result.add(last + secondLast + thirdLast);\n            }\n     \
    \   }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) return result;\n        result.add(2L);\n\
    \        if (n == 2) return result;\n        result.add(8L);\n        if (n ==\
    \ 3) return result;\n        for (int i = 4; i <= n; i++) {\n            long\
    \ x = result.get(i - 1) + result.get(i - 2) + result.get(i - 3);\n           \
    \ result.add(x);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            return result;\n\
    \        }\n        result.add(3L);\n        if (n == 1) {\n            return\
    \ result;\n        }\n        result.add(2L);\n        if (n == 2) {\n       \
    \     return result;\n        }\n        result.add(8L);\n        if (n == 3)\
    \ {\n            return result;\n        }\n        for (int i = 4; i <= n; i++)\
    \ {\n            long sum = 0;\n            if (i % 2 == 0) {\n              \
    \  sum = 1 + i / 2;\n            } else {\n                sum = result.get(i\
    \ - 1) + result.get(i - 2) + result.get(i - 3);\n            }\n            result.add(sum);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long last = result.get(result.size() - 1);\n            long secondLast\
    \ = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            result.add(last + secondLast + thirdLast);\n        }\n \
    \       return result;", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       res.add(3L);\n        if (n == 1) return res;\n        res.add(2L);\n\
    \        if (n == 2) return res;\n        res.add(8L);\n        if (n == 3) return\
    \ res;\n        for (int i = 4; i <= n; i++) {\n            long x = res.get(i\
    \ - 1) + res.get(i - 2) + res.get(i - 3);\n            res.add(x);\n        }\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            return result;\n        }\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        for (int i = 3; i < n; i++) {\n            long last = result.get(result.size()\
    \ - 1);\n            long secondLast = result.get(result.size() - 2);\n      \
    \      long thirdLast = result.get(result.size() - 3);\n            result.add(last\
    \ + secondLast + thirdLast);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        result.add(3L);\n        if (n == 1) {\n\
    \            return result;\n        }\n        result.add(2L);\n        if (n\
    \ == 2) {\n            return result;\n        }\n        result.add(8L);\n  \
    \      if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n\
    \                result.add(1 + i / 2);\n            } else {\n              \
    \  result.add(last + secondLast + thirdLast);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       result.add(3L);\n        if (n == 1) {\n            return result;\n \
    \       }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long next = 0;\n            if (i % 2 == 0) {\n                next =\
    \ 1 + i / 2;\n            } else {\n                next = result.get(i - 1) +\
    \ result.get(i - 2) + result.get(i - 3);\n            }\n            result.add(next);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long last = result.get(result.size() - 1);\n            long secondLast\
    \ = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            if (i % 2 == 0) {\n                result.add(1 + i / 2);\n\
    \            } else {\n                result.add(last + secondLast + thirdLast);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> res\
    \ = new ArrayList<>();\n        res.add(3L);\n        if (n == 1) return res;\n\
    \        res.add(2L);\n        if (n == 2) return res;\n        res.add(8L);\n\
    \        if (n == 3) return res;\n        for (int i = 4; i <= n; i++) {\n   \
    \         long cur = 0;\n            if (i % 2 == 0) {\n                cur =\
    \ 1 + i / 2;\n            } else {\n                cur = res.get(i - 1) + res.get(i\
    \ - 2) + res.get(i - 3);\n            }\n            res.add(cur);\n        }\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        for (int i = 3; i < n;\
    \ i++) {\n            long next = result.get(i - 1) + result.get(i - 2) + result.get(i\
    \ - 3);\n            result.add(next);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n \
    \           return result;\n        }\n        result.add(3L);\n        if (n\
    \ == 1) {\n            return result;\n        }\n        result.add(2L);\n  \
    \      if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        for (int i = 3; i < n; i++) {\n            long last = result.get(result.size()\
    \ - 1);\n            long secondLast = result.get(result.size() - 2);\n      \
    \      long thirdLast = result.get(result.size() - 3);\n            result.add(last\
    \ + secondLast + thirdLast);\n        }\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        res.add(3L);\n        if (n == 1) return res;\n\
    \        res.add(2L);\n        if (n == 2) return res;\n        res.add(8L);\n\
    \        if (n == 3) return res;\n        for (int i = 4; i <= n; i++) {\n   \
    \         long cur = 0;\n            if (i % 2 == 0) {\n                cur =\
    \ 1 + i / 2;\n            } else {\n                cur = res.get(i - 1) + res.get(i\
    \ - 2) + res.get(i - 3);\n            }\n            res.add(cur);\n        }\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long last = result.get(result.size() - 1);\n            long secondLast\
    \ = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            result.add(last + secondLast + thirdLast);\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long next = 0;\n            if (i % 2 == 0) {\n                next =\
    \ 1 + i / 2;\n            } else {\n                next = result.get(i - 1) +\
    \ result.get(i - 2) + result.get(i - 3);\n            }\n            result.add(next);\n\
    \        }\n        return result;", "        // Write your code here\n      \
    \  return null;", "        ArrayList<Long> result = new ArrayList<>();\n     \
    \   for (long i = 0; i <= n; i++) {\n            if (i == 0) {\n             \
    \   result.add(0L);\n            } else if (i == 1) {\n                result.add(3L);\n\
    \            } else if (i == 2) {\n                result.add(2L);\n         \
    \   } else if (i % 2 == 0) {\n                result.add(1 + i / 2);\n       \
    \     } else {\n                result.add(result.get((int) (i - 1)) + result.get((int)\
    \ (i - 2)) + result.get((int) (i + 1)));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        for (long i = 1; i <= n; i++) {\n            if (i % 2 == 0) {\n    \
    \            result.add(1 + i / 2);\n            } else {\n                result.add(result.get((int)\
    \ (i - 1)) + result.get((int) (i - 2)) + result.get((int) (i + 1)));\n       \
    \     }\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        if (n == 0) {\n            return result;\n    \
    \    }\n        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        if (i % 2 == 0) {\n                result.add(1 + i / 2);\n         \
    \   } else {\n                result.add(result.get(i - 1) + result.get(i - 2)\
    \ + result.get(i - 3));\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n\
    \                result.add(1 + i / 2);\n            } else {\n              \
    \  result.add(last + secondLast + thirdLast);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (long i = 0; i <= n; i++) {\n            if (i == 0) {\n         \
    \       result.add(0L);\n            } else if (i == 1) {\n                result.add(3L);\n\
    \            } else if (i == 2) {\n                result.add(2L);\n         \
    \   } else if (i % 2 == 0) {\n                result.add(1 + i / 2);\n       \
    \     } else {\n                result.add(result.get((int) (i - 1)) + result.get((int)\
    \ (i - 2)) + result.get((int) (i + 1)));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> res = new ArrayList<>();\n        res.add(3L);\n\
    \        if (n == 1) return res;\n        res.add(2L);\n        if (n == 2) return\
    \ res;\n        res.add(8L);\n        if (n == 3) return res;\n        for (int\
    \ i = 4; i <= n; i++) {\n            long x = res.get(i - 1) + res.get(i - 2)\
    \ + res.get(i - 3);\n            res.add(x);\n        }\n        return res;",
  "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        for (long i = 1; i <= n; i++) {\n            if (i % 2 == 0) {\n    \
    \            result.add(1 + i / 2);\n            } else {\n                result.add(result.get((int)i\
    \ - 1) + result.get((int)i - 2) + result.get((int)i + 1));\n            }\n  \
    \      }\n        return result;", "        ArrayList<Long> ans = new ArrayList<>();\n\
    \        ans.add(3L);\n        if (n == 0) return ans;\n        ans.add(2L);\n\
    \        if (n == 1) return ans;\n        ans.add(8L);\n        if (n == 2) return\
    \ ans;\n        for (int i = 3; i <= n; i++) {\n            long cur = 0;\n  \
    \          if (i % 2 == 0) {\n                cur = 1 + i / 2;\n            }\
    \ else {\n                cur = ans.get(i - 1) + ans.get(i - 2) + ans.get(i -\
    \ 3);\n            }\n            ans.add(cur);\n        }\n        return ans;",
  "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        result.add(2L);\n        result.add(8L);\n        for (int i = 3; i <=\
    \ n; i++) {\n            result.add(result.get(i - 1) + result.get(i - 2) + result.get(i\
    \ - 3));\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        result.add(3L);\n        for (long i = 1; i <=\
    \ n; i++) {\n            if (i % 2 == 0) {\n                result.add(1 + i /\
    \ 2);\n            } else {\n                result.add(result.get((int) (i -\
    \ 1)) + result.get((int) (i - 2)) + result.get((int) (i + 1)));\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        for (long i = 1; i <= n; i++) {\n          \
    \  if (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else\
    \ {\n                result.add(result.get((int) (i - 1)) + result.get((int) (i\
    \ - 2)) + result.get((int) (i + 1)));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (long i = 0; i <= n; i++) {\n            if (i == 0) {\n                result.add(0L);\n\
    \            } else if (i == 1) {\n                result.add(3L);\n         \
    \   } else if (i == 2) {\n                result.add(2L);\n            } else\
    \ if (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else\
    \ {\n                result.add(result.get((int) i - 1) + result.get((int) i -\
    \ 2) + result.get((int) i + 1));\n            }\n        }\n        return result;",
  "        ArrayList<Long> ans = new ArrayList<>();\n        ans.add(3L);\n      \
    \  if (n == 0) return ans;\n        ans.add(2L);\n        if (n == 1) return ans;\n\
    \        ans.add(8L);\n        if (n == 2) return ans;\n        for (int i = 3;\
    \ i <= n; i++) {\n            long x = ans.get(i - 1) + ans.get(i - 2) + ans.get(i\
    \ - 3);\n            ans.add(x);\n        }\n        return ans;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        res.add(3L);\n        for (long i = 1; i <=\
    \ n; i++) {\n            if (i % 2 == 0) {\n                res.add(1 + i / 2);\n\
    \            } else {\n                res.add(res.get((int) (i - 1)) + res.get((int)\
    \ (i - 2)) + res.get((int) (i + 1)));\n            }\n        }\n        return\
    \ res;", "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        for (long i = 1; i <= n; i++) {\n            if (i % 2 == 0) {\n    \
    \            result.add(1 + i / 2);\n            } else {\n                result.add(result.get((int)\
    \ (i - 1)) + result.get((int) (i - 2)) + result.get((int) (i + 1)));\n       \
    \     }\n        }\n        return result;", "        ArrayList<Long> res = new\
    \ ArrayList<>();\n        res.add(3L);\n        if (n == 1) return res;\n    \
    \    res.add(2L);\n        if (n == 2) return res;\n        res.add(8L);\n   \
    \     if (n == 3) return res;\n        for (int i = 4; i <= n; i++) {\n      \
    \      long curr = 0;\n            if (i % 2 == 0) {\n                curr = 1\
    \ + i / 2;\n            } else {\n                curr = res.get(i - 1) + res.get(i\
    \ - 2) + res.get(i - 3);\n            }\n            res.add(curr);\n        }\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long last = result.get(result.size() - 1);\n            long secondLast\
    \ = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            if (i % 2 == 0) {\n                result.add(1 + i / 2);\n\
    \            } else {\n                result.add(last + secondLast + thirdLast);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            return result;\n  \
    \      }\n        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        for (int i = 3; i < n;\
    \ i++) {\n            long last = result.get(result.size() - 1);\n           \
    \ long secondLast = result.get(result.size() - 2);\n            long thirdLast\
    \ = result.get(result.size() - 3);\n            result.add(last + secondLast +\
    \ thirdLast);\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        result.add(3L);\n        for (long i = 1; i <=\
    \ n; i++) {\n            if (i % 2 == 0) {\n                result.add(1 + i /\
    \ 2);\n            } else {\n                result.add(result.get((int)i - 1)\
    \ + result.get((int)i - 2) + result.get((int)i + 1));\n            }\n       \
    \ }\n        return result;", "        ArrayList<Long> ans = new ArrayList<>();\n\
    \        ans.add(3L);\n        if (n == 0) return ans;\n        ans.add(2L);\n\
    \        if (n == 1) return ans;\n        ans.add(8L);\n        if (n == 2) return\
    \ ans;\n        for (int i = 3; i <= n; i++) {\n            long cur = ans.get(i\
    \ - 1) + ans.get(i - 2) + ans.get(i - 3);\n            ans.add(cur);\n       \
    \ }\n        return ans;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n \
    \       for (int i = 3; i <= n; i++) {\n            result.add(result.get(i -\
    \ 1) + result.get(i - 2) + result.get(i + 1));\n        }\n        return result;",
  "        ArrayList<Long> res = new ArrayList<>();\n        res.add(3L);\n      \
    \  if (n == 1) return res;\n        res.add(2L);\n        if (n == 2) return res;\n\
    \        res.add(8L);\n        if (n == 3) return res;\n        for (int i = 4;\
    \ i <= n; i++) {\n            long x = res.get(i - 1) + res.get(i - 2) + res.get(i\
    \ - 3);\n            res.add(x);\n        }\n        return res;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (long i = 0; i <= n; i++) {\n        \
    \    if (i == 0) {\n                res.add(0L);\n            } else if (i ==\
    \ 1) {\n                res.add(3L);\n            } else if (i == 2) {\n     \
    \           res.add(2L);\n            } else if (i % 2 == 0) {\n             \
    \   res.add(1 + i / 2);\n            } else {\n                res.add(res.get((int)\
    \ i - 1) + res.get((int) i - 2) + res.get((int) i + 1));\n            }\n    \
    \    }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) return result;\n        result.add(2L);\n\
    \        if (n == 2) return result;\n        result.add(8L);\n        if (n ==\
    \ 3) return result;\n        for (int i = 4; i <= n; i++) {\n            long\
    \ last = result.get(result.size() - 1);\n            long secondLast = result.get(result.size()\
    \ - 2);\n            long thirdLast = result.get(result.size() - 3);\n       \
    \     if (i % 2 == 0) {\n                result.add(1 + i / 2);\n            }\
    \ else {\n                result.add(last + secondLast + thirdLast);\n       \
    \     }\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        result.add(3L);\n        if (n == 1) {\n       \
    \     return result;\n        }\n        result.add(2L);\n        if (n == 2)\
    \ {\n            return result;\n        }\n        result.add(8L);\n        if\
    \ (n == 3) {\n            return result;\n        }\n        for (int i = 4; i\
    \ <= n; i++) {\n            long last = result.get(result.size() - 1);\n     \
    \       long secondLast = result.get(result.size() - 2);\n            long thirdLast\
    \ = result.get(result.size() - 3);\n            long next = last + secondLast\
    \ + thirdLast;\n            result.add(next);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = 0; i\
    \ <= n; i++) {\n            if (i == 0) {\n                result.add(0L);\n \
    \           } else if (i == 1) {\n                result.add(3L);\n          \
    \  } else if (i == 2) {\n                result.add(2L);\n            } else if\
    \ (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else {\n\
    \                result.add(result.get((int) (i - 1)) + result.get((int) (i -\
    \ 2)) + result.get((int) (i + 1)));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> ans = new ArrayList<>();\n        ans.add(3L);\n\
    \        ans.add(2L);\n        ans.add(8L);\n        for (int i = 3; i <= n; i++)\
    \ {\n            long x = ans.get(i - 1) + ans.get(i - 2) + ans.get(i - 3);\n\
    \            ans.add(x);\n        }\n        return ans;", "        ArrayList<Long>\
    \ list = new ArrayList<>();\n        for (long i = 1; i <= n + 1; i++) {\n   \
    \         if (i == 1) {\n                list.add(3L);\n            } else if\
    \ (i % 2 == 0) {\n                list.add(1 + i / 2);\n            } else {\n\
    \                list.add(list.get((int)i - 2) + list.get((int)i - 3) + list.get((int)i));\n\
    \            }\n        }\n        return list;", "        ArrayList<Long> ans\
    \ = new ArrayList<>();\n        ans.add(3L);\n        if (n == 0) return ans;\n\
    \        ans.add(2L);\n        if (n == 1) return ans;\n        ans.add(8L);\n\
    \        if (n == 2) return ans;\n        for (int i = 3; i <= n; i++) {\n   \
    \         long x = ans.get(i - 1) + ans.get(i - 2) + ans.get(i - 3);\n       \
    \     ans.add(x);\n        }\n        return ans;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            return result;\n  \
    \      }\n        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long last = result.get(result.size() - 1);\n            long secondLast\
    \ = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            if (i % 2 == 0) {\n                result.add(1 + i / 2);\n\
    \            } else {\n                result.add(last + secondLast + thirdLast);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            return result;\n  \
    \      }\n        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        for (int i = 3; i < n;\
    \ i++) {\n            long last = result.get(result.size() - 1);\n           \
    \ long secondLast = result.get(result.size() - 2);\n            long thirdLast\
    \ = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n          \
    \      result.add(1 + i / 2);\n            } else {\n                result.add(last\
    \ + secondLast + thirdLast);\n            }\n        }\n        return result;",
  "        ArrayList<Long> ans = new ArrayList<>();\n        if (n == 0) {\n     \
    \       return ans;\n        }\n        ans.add(3L);\n        if (n == 1) {\n\
    \            return ans;\n        }\n        ans.add(2L);\n        if (n == 2)\
    \ {\n            return ans;\n        }\n        ans.add(8L);\n        for (int\
    \ i = 3; i < n; i++) {\n            long a = ans.get(i - 1);\n            long\
    \ b = ans.get(i - 2);\n            long c = ans.get(i - 3);\n            ans.add(a\
    \ + b + c);\n        }\n        return ans;", "        ArrayList<Long> list =\
    \ new ArrayList<>();\n        list.add(3L);\n        for (long i = 1; i <= n;\
    \ i++) {\n            if (i % 2 == 0) {\n                list.add(1 + i / 2);\n\
    \            } else {\n                list.add(list.get((int)i - 1) + list.get((int)i\
    \ - 2) + list.get((int)i + 1));\n            }\n        }\n        return list;",
  "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        result.add(2L);\n        result.add(8L);\n        for (int i = 3; i <=\
    \ n; i++) {\n            long x = result.get(i - 1) + result.get(i - 2) + result.get(i\
    \ - 3);\n            result.add(x);\n        }\n        return result;", "   \
    \     ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n   \
    \         return result;\n        }\n        result.add(3L);\n        if (n ==\
    \ 1) {\n            return result;\n        }\n        result.add(2L);\n     \
    \   if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        for (int i = 3; i < n; i++) {\n            long a = result.get(i - 1);\n\
    \            long b = result.get(i - 2);\n            long c = result.get(i -\
    \ 3);\n            result.add(a + b + c);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n\
    \                result.add(1 + i / 2);\n            } else {\n              \
    \  result.add(last + secondLast + thirdLast);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       if (n == 0) {\n            return result;\n        }\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        for (int i = 3; i < n; i++) {\n            long last = result.get(result.size()\
    \ - 1);\n            long secondLast = result.get(result.size() - 2);\n      \
    \      long thirdLast = result.get(result.size() - 3);\n            if (i % 2\
    \ == 0) {\n                result.add(1 + i / 2);\n            } else {\n    \
    \            result.add(last + secondLast + thirdLast);\n            }\n     \
    \   }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        for (long i = 2; i <= n; i++) {\n          \
    \  long val = 0;\n            if (i % 2 == 0) {\n                val = 1 + i /\
    \ 2;\n            } else {\n                val = result.get((int) (i - 2)) +\
    \ result.get((int) (i - 1)) + result.get((int) (i + 1));\n            }\n    \
    \        result.add(val);\n        }\n        return result;", "        ArrayList<Long>\
    \ ans = new ArrayList<>();\n        ans.add(3L);\n        if (n == 0) return ans;\n\
    \        ans.add(2L);\n        if (n == 1) return ans;\n        ans.add(8L);\n\
    \        if (n == 2) return ans;\n        for (int i = 3; i <= n; i++) {\n   \
    \         long x = ans.get(i - 1) + ans.get(i - 2) + ans.get(i - 3);\n       \
    \     ans.add(x);\n        }\n        return ans;", "        ArrayList<Long> ans\
    \ = new ArrayList<>();\n        ans.add(3L);\n        for (long i = 1; i <= n;\
    \ i++) {\n            if (i % 2 == 0) {\n                ans.add(1 + i / 2);\n\
    \            } else {\n                ans.add(ans.get((int)i - 1) + ans.get((int)i\
    \ - 2) + ans.get((int)i + 1));\n            }\n        }\n        return ans;",
  "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long next = 0;\n            if (i % 2 ==\
    \ 0) {\n                next = 1 + i / 2;\n            } else {\n            \
    \    next = result.get(i - 1) + result.get(i - 2) + result.get(i - 3);\n     \
    \       }\n            result.add(next);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          return result;\n        }\n        result.add(3L);\n        if (n ==\
    \ 1) {\n            return result;\n        }\n        result.add(2L);\n     \
    \   if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long x = result.get(i - 1) + result.get(i\
    \ - 2) + result.get(i - 3);\n            if (i % 2 == 0) {\n                x\
    \ += i / 2;\n            }\n            result.add(x);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ == 0) {\n            return result;\n        }\n        result.add(3L);\n  \
    \      if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        for (int i = 3; i < n; i++) {\n            long x = result.get(i - 1)\
    \ + result.get(i - 2) + result.get(i - 3);\n            result.add(x);\n     \
    \   }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) return result;\n        result.add(2L);\n\
    \        if (n == 2) return result;\n        result.add(8L);\n        if (n ==\
    \ 3) return result;\n        for (int i = 3; i < n; i++) {\n            long last\
    \ = result.get(result.size() - 1);\n            long secondLast = result.get(result.size()\
    \ - 2);\n            long thirdLast = result.get(result.size() - 3);\n       \
    \     if (i % 2 == 0) {\n                result.add(1 + i / 2);\n            }\
    \ else {\n                result.add(last + secondLast + thirdLast);\n       \
    \     }\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        if (n == 0) {\n            return result;\n    \
    \    }\n        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        for (int i = 3; i < n;\
    \ i++) {\n            long last = result.get(result.size() - 1);\n           \
    \ long secondLast = result.get(result.size() - 2);\n            long thirdLast\
    \ = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n          \
    \      result.add(1 + i / 2);\n            } else {\n                result.add(last\
    \ + secondLast + thirdLast);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = 0; i\
    \ <= n; i++) {\n            result.add(tri(i));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            result.add(last + secondLast\
    \ + thirdLast);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            return result;\n\
    \        }\n        result.add(3L);\n        if (n == 1) {\n            return\
    \ result;\n        }\n        result.add(2L);\n        if (n == 2) {\n       \
    \     return result;\n        }\n        result.add(8L);\n        if (n == 3)\
    \ {\n            return result;\n        }\n        for (int i = 4; i <= n; i++)\
    \ {\n            long last = result.get(result.size() - 1);\n            long\
    \ secondLast = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            if (i % 2 == 0) {\n                result.add(1 + i / 2);\n\
    \            } else {\n                result.add(last + secondLast + thirdLast);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> res\
    \ = new ArrayList<>();\n        res.add(3L);\n        for (long i = 1; i <= n;\
    \ i++) {\n            if (i % 2 == 0) {\n                res.add(1 + i / 2);\n\
    \            } else {\n                res.add(res.get((int) (i - 1)) + res.get((int)\
    \ (i - 2)) + res.get((int) (i + 1)));\n            }\n        }\n        return\
    \ res;", "        ArrayList<Long> result = new ArrayList<>();\n        for (long\
    \ i = 0; i <= n; i++) {\n            if (i == 0) {\n                result.add(0L);\n\
    \            } else if (i == 1) {\n                result.add(3L);\n         \
    \   } else if (i == 2) {\n                result.add(2L);\n            } else\
    \ if (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else\
    \ {\n                result.add(result.get((int) (i - 1)) + result.get((int) (i\
    \ - 2)) + result.get((int) (i + 1)));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ == 0) {\n            return result;\n        }\n        result.add(3L);\n  \
    \      if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long next = 0;\n            if (i % 2 ==\
    \ 0) {\n                next = 1 + i / 2;\n            } else {\n            \
    \    next = result.get(i - 1) + result.get(i - 2) + result.get(i - 3);\n     \
    \       }\n            result.add(next);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        for (long i = 1; i <= n; i++) {\n            if (i % 2 == 0) {\n    \
    \            result.add(1 + i / 2);\n            } else {\n                result.add(result.get((int)i\
    \ - 1) + result.get((int)i - 2) + result.get((int)i + 1));\n            }\n  \
    \      }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long x = result.get(i - 1) + result.get(i - 2) + result.get(i - 3);\n\
    \            result.add(x);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            return result;\n\
    \        }\n        result.add(3L);\n        if (n == 1) {\n            return\
    \ result;\n        }\n        result.add(2L);\n        if (n == 2) {\n       \
    \     return result;\n        }\n        result.add(8L);\n        if (n == 3)\
    \ {\n            return result;\n        }\n        for (int i = 4; i <= n; i++)\
    \ {\n            long next = 0;\n            if (i % 2 == 0) {\n             \
    \   next = 1 + i / 2;\n            } else {\n                next = result.get(i\
    \ - 1) + result.get(i - 2) + result.get(i - 3);\n            }\n            result.add(next);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        long a = 3, b = 3, c = 3;\n        for (int\
    \ i = 1; i <= n; i++) {\n            if (i % 2 == 0) {\n                result.add(1\
    \ + i / 2);\n            } else {\n                result.add(a + b + c);\n  \
    \              a = b;\n                b = c;\n                c = result.get(i);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        result.add(3L);\n        for (long i = 1; i <=\
    \ n; i++) {\n            if (i % 2 == 0) {\n                result.add(1 + i /\
    \ 2);\n            } else {\n                result.add(result.get((int) (i -\
    \ 1)) + result.get((int) (i - 2)) + result.get((int) (i + 1)));\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        result.add(2L);\n        result.add(8L);\n \
    \       for (int i = 3; i <= n; i++) {\n            if (i % 2 == 0) {\n      \
    \          result.add(1 + i / 2);\n            } else {\n                result.add(result.get(i\
    \ - 1) + result.get(i - 2) + result.get(i + 1));\n            }\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long last = result.get(result.size() - 1);\n            long secondLast\
    \ = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            if (i % 2 == 0) {\n                result.add(1 + i / 2);\n\
    \            } else {\n                result.add(last + secondLast + thirdLast);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            return result;\n  \
    \      }\n        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        for (int i = 3; i < n;\
    \ i++) {\n            long a = result.get(i - 1);\n            long b = result.get(i\
    \ - 2);\n            long c = result.get(i - 3);\n            result.add(a + b\
    \ + c);\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        for (long i = 0; i <= n; i++) {\n            if\
    \ (i == 0) {\n                result.add(0L);\n            } else if (i == 1)\
    \ {\n                result.add(3L);\n            } else if (i == 2) {\n     \
    \           result.add(2L);\n            } else if (i % 2 == 0) {\n          \
    \      result.add(1 + i / 2);\n            } else {\n                result.add(result.get((int)\
    \ i - 1) + result.get((int) i - 2) + result.get((int) i + 1));\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            if (i == 0) {\n        \
    \        result.add(0L);\n            } else if (i == 1) {\n                result.add(3L);\n\
    \            } else if (i == 2) {\n                result.add(2L);\n         \
    \   } else if (i % 2 == 0) {\n                result.add(1 + i / 2);\n       \
    \     } else {\n                result.add(result.get((int) (i - 1)) + result.get((int)\
    \ (i - 2)) + result.get((int) (i + 1)));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (long i = 0; i <= n; i++) {\n            if (i == 0) {\n                result.add(0L);\n\
    \            } else if (i == 1) {\n                result.add(3L);\n         \
    \   } else if (i == 2) {\n                result.add(1L);\n            } else\
    \ if (i % 2 == 0) {\n                result.add(1L + i / 2);\n            } else\
    \ {\n                result.add(result.get((int) i - 1) + result.get((int) i -\
    \ 2) + result.get((int) i + 1));\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = 0; i\
    \ <= n; i++) {\n            if (i == 0) {\n                result.add(0L);\n \
    \           } else if (i == 1) {\n                result.add(3L);\n          \
    \  } else if (i == 2) {\n                result.add(2L);\n            } else if\
    \ (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else {\n\
    \                result.add(result.get((int) (i - 1)) + result.get((int) (i -\
    \ 2)) + result.get((int) (i + 1)));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        if (n == 1) return result;\n        result.add(2L);\n        if (n ==\
    \ 2) return result;\n        result.add(8L);\n        if (n == 3) return result;\n\
    \        for (int i = 4; i <= n; i++) {\n            long next = result.get(i\
    \ - 1) + result.get(i - 2) + result.get(i - 3);\n            result.add(next);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            if (i == 0) {\n        \
    \        result.add(0L);\n            } else if (i == 1) {\n                result.add(3L);\n\
    \            } else if (i == 2) {\n                result.add(2L);\n         \
    \   } else if (i % 2 == 0) {\n                result.add(1 + i / 2);\n       \
    \     } else {\n                result.add(result.get((int) (i - 1)) + result.get((int)\
    \ (i - 2)) + result.get((int) (i + 1)));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> ans = new ArrayList<>();\n        ans.add(3L);\n\
    \        if (n == 0) return ans;\n        ans.add(2L);\n        if (n == 1) return\
    \ ans;\n        ans.add(8L);\n        for (int i = 3; i <= n; i++) {\n       \
    \     long x = ans.get(i - 1) + ans.get(i - 2) + ans.get(i - 3);\n           \
    \ ans.add(x);\n        }\n        return ans;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        result.add(3L);\n        for (long i = 1; i <=\
    \ n; i++) {\n            if (i % 2 == 0) {\n                result.add(1 + i /\
    \ 2);\n            } else {\n                result.add(result.get((int)i - 1)\
    \ + result.get((int)i - 2) + result.get((int)i + 1));\n            }\n       \
    \ }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            return result;\n        }\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long next = 0;\n            if (i % 2 ==\
    \ 0) {\n                next = 1 + i / 2;\n            } else {\n            \
    \    next = result.get(i - 1) + result.get(i - 2) + result.get(i - 3);\n     \
    \       }\n            result.add(next);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        for (long i = 1; i <= n; i++) {\n            if (i % 2 == 0) {\n    \
    \            result.add(1 + i / 2);\n            } else {\n                result.add(result.get((int)\
    \ (i - 1)) + result.get((int) (i - 2)) + result.get((int) (i + 1)));\n       \
    \     }\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        result.add(3L);\n        for (long i = 1; i <= n;\
    \ i++) {\n            if (i % 2 == 0) {\n                result.add(1 + i / 2);\n\
    \            } else {\n                result.add(result.get((int) (i - 1)) +\
    \ result.get((int) (i - 2)) + result.get((int) (i + 1)));\n            }\n   \
    \     }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) return result;\n        result.add(2L);\n\
    \        if (n == 2) return result;\n        result.add(8L);\n        if (n ==\
    \ 3) return result;\n        for (int i = 4; i <= n; i++) {\n            long\
    \ val = 0;\n            if (i % 2 == 0) {\n                val = 1 + i / 2;\n\
    \            } else {\n                val = result.get(i - 1) + result.get(i\
    \ - 2) + result.get(i - 3);\n            }\n            result.add(val);\n   \
    \     }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            if (i == 0) {\n        \
    \        result.add(0L);\n            } else if (i == 1) {\n                result.add(3L);\n\
    \            } else if (i == 2) {\n                result.add(2L);\n         \
    \   } else if (i % 2 == 0) {\n                result.add(1 + i / 2);\n       \
    \     } else {\n                result.add(result.get((int) (i - 1)) + result.get((int)\
    \ (i - 2)) + result.get((int) (i + 1)));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ a = 3;\n        long b = 2;\n        long c = 1;\n        long d = 0;\n    \
    \    result.add(a);\n        result.add(b);\n        result.add(c);\n        for\
    \ (int i = 3; i <= n; i++) {\n            d = a + b + c;\n            result.add(d);\n\
    \            a = b;\n            b = c;\n            c = d;\n        }\n     \
    \   return result;", "        ArrayList<Long> list = new ArrayList<>();\n    \
    \    for (long i = 1; i <= n + 1; i++) {\n            if (i == 1) {\n        \
    \        list.add(3L);\n            } else if (i % 2 == 0) {\n               \
    \ list.add(1 + i / 2);\n            } else {\n                list.add(list.get((int)\
    \ i - 2) + list.get((int) i - 3) + list.get((int) i));\n            }\n      \
    \  }\n        return list;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long a = 3;\n        long b = 2;\n        long c = 1;\n        res.add(a);\n\
    \        res.add(b);\n        res.add(c);\n        for (int i = 3; i <= n; i++)\
    \ {\n            long d = 0;\n            if (i % 2 == 0) {\n                d\
    \ = 1 + i / 2;\n            } else {\n                d = a + b + c;\n       \
    \     }\n            a = b;\n            b = c;\n            c = d;\n        \
    \    res.add(d);\n        }\n        return res;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        result.add(3L);\n        for (long i = 1; i <=\
    \ n; i++) {\n            if (i % 2 == 0) {\n                result.add(1 + i /\
    \ 2);\n            } else {\n                result.add(result.get((int)i - 1)\
    \ + result.get((int)i - 2) + result.get((int)i + 1));\n            }\n       \
    \ }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        res.add(3L);\n        if (n == 1) return res;\n        res.add(2L);\n\
    \        if (n == 2) return res;\n        res.add(8L);\n        if (n == 3) return\
    \ res;\n        for (int i = 4; i <= n; i++) {\n            long x = res.get(i\
    \ - 1) + res.get(i - 2) + res.get(i - 3);\n            res.add(x);\n        }\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long last = result.get(result.size() - 1);\n            long secondLast\
    \ = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            if (i % 2 == 0) {\n                result.add(1 + i / 2);\n\
    \            } else {\n                result.add(last + secondLast + thirdLast);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        result.add(3L);\n        result.add(2L);\n   \
    \     result.add(8L);\n        for (int i = 3; i <= n; i++) {\n            if\
    \ (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else {\n\
    \                result.add(result.get(i - 1) + result.get(i - 2) + result.get(i\
    \ + 1));\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        result.add(3L);\n        if (n == 1) return\
    \ result;\n        result.add(2L);\n        if (n == 2) return result;\n     \
    \   result.add(8L);\n        if (n == 3) return result;\n        for (int i =\
    \ 4; i <= n; i++) {\n            long next = 0;\n            if (i % 2 == 0) {\n\
    \                next = 1 + i / 2;\n            } else {\n                next\
    \ = result.get(i - 1) + result.get(i - 2) + result.get(i - 3);\n            }\n\
    \            result.add(next);\n        }\n        return result;", "        ArrayList<Long>\
    \ ans = new ArrayList<>();\n        ans.add(3L);\n        if (n == 0) return ans;\n\
    \        ans.add(2L);\n        if (n == 1) return ans;\n        ans.add(8L);\n\
    \        if (n == 2) return ans;\n        for (int i = 3; i <= n; i++) {\n   \
    \         long last = ans.get(ans.size() - 1);\n            long secondLast =\
    \ ans.get(ans.size() - 2);\n            long thirdLast = ans.get(ans.size() -\
    \ 3);\n            if (i % 2 == 0) {\n                ans.add(1 + i / 2);\n  \
    \          } else {\n                ans.add(last + secondLast + thirdLast);\n\
    \            }\n        }\n        return ans;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            return result;\n  \
    \      }\n        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 3; i < n; i++) {\n     \
    \       long next = result.get(i - 1) + result.get(i - 2) + result.get(i - 3);\n\
    \            result.add(next);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        result.add(3L);\n        for (long i =\
    \ 1; i <= n; i++) {\n            if (i % 2 == 0) {\n                result.add(1\
    \ + i / 2);\n            } else {\n                result.add(result.get((int)i\
    \ - 1) + result.get((int)i - 2) + result.get((int)i + 1));\n            }\n  \
    \      }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long last = result.get(result.size() - 1);\n            long secondLast\
    \ = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            result.add(last + secondLast + thirdLast);\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            return result;\n        }\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        for (int i = 3; i < n; i++) {\n            long next = result.get(i -\
    \ 1) + result.get(i - 2) + result.get(i - 3);\n            result.add(next);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long last = result.get(result.size() - 1);\n            long secondLast\
    \ = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            result.add(last + secondLast + thirdLast);\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long last = result.get(result.size() - 1);\n            long secondLast\
    \ = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            if (i % 2 == 0) {\n                result.add(1 + i / 2);\n\
    \            } else {\n                result.add(last + secondLast + thirdLast);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (long i = 0; i <= n; i++) {\n            if\
    \ (i == 0) {\n                result.add(0L);\n            } else if (i == 1)\
    \ {\n                result.add(3L);\n            } else if (i == 2) {\n     \
    \           result.add(2L);\n            } else if (i % 2 == 0) {\n          \
    \      result.add(1 + i / 2);\n            } else {\n                result.add(result.get((int)\
    \ i - 1) + result.get((int) i - 2) + result.get((int) i + 1));\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(tri(i));\n  \
    \      }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            return result;\n        }\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n\
    \                result.add(1 + i / 2);\n            } else {\n              \
    \  result.add(last + secondLast + thirdLast);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> res = new ArrayList<>();\n    \
    \    res.add(3L);\n        if (n == 1) return res;\n        res.add(2L);\n   \
    \     if (n == 2) return res;\n        res.add(8L);\n        if (n == 3) return\
    \ res;\n        for (int i = 4; i <= n; i++) {\n            long x = res.get(i\
    \ - 1) + res.get(i - 2) + res.get(i - 3);\n            res.add(x);\n        }\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 4; i <= n; i++) {\n    \
    \        long last = result.get(result.size() - 1);\n            long secondLast\
    \ = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            if (i % 2 == 0) {\n                result.add(1 + i / 2);\n\
    \            } else {\n                result.add(last + secondLast + thirdLast);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            return result;\n  \
    \      }\n        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        for (int i = 3; i < n;\
    \ i++) {\n            long last = result.get(result.size() - 1);\n           \
    \ long secondLast = result.get(result.size() - 2);\n            long thirdLast\
    \ = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n          \
    \      result.add(1 + i / 2);\n            } else {\n                result.add(last\
    \ + secondLast + thirdLast);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = 0; i\
    \ <= n; i++) {\n            result.add(tri(i));\n        }\n        return result;",
  "        ArrayList<Long> res = new ArrayList<>();\n        res.add(3L);\n      \
    \  if (n == 1) return res;\n        res.add(2L);\n        if (n == 2) return res;\n\
    \        res.add(8L);\n        if (n == 3) return res;\n        for (int i = 4;\
    \ i <= n; i++) {\n            long last = res.get(res.size() - 1);\n         \
    \   long secondLast = res.get(res.size() - 2);\n            long thirdLast = res.get(res.size()\
    \ - 3);\n            if (i % 2 == 0) {\n                res.add(1 + i / 2);\n\
    \            } else {\n                res.add(last + secondLast + thirdLast);\n\
    \            }\n        }\n        return res;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        result.add(3L);\n        if (n == 1) return result;\n\
    \        result.add(2L);\n        if (n == 2) return result;\n        result.add(8L);\n\
    \        for (int i = 3; i < n; i++) {\n            long last = result.get(result.size()\
    \ - 1);\n            long secondLast = result.get(result.size() - 2);\n      \
    \      long thirdLast = result.get(result.size() - 3);\n            if (i % 2\
    \ == 0) {\n                result.add(1 + i / 2);\n            } else {\n    \
    \            result.add(last + secondLast + thirdLast);\n            }\n     \
    \   }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        for (long i = 1; i <= n; i++) {\n          \
    \  if (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else\
    \ {\n                result.add(result.get((int)i - 1) + result.get((int)i - 2)\
    \ + result.get((int)i + 1));\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = 0; i\
    \ <= n; i++) {\n            if (i == 0) {\n                result.add(0L);\n \
    \           } else if (i == 1) {\n                result.add(3L);\n          \
    \  } else if (i == 2) {\n                result.add(2L);\n            } else if\
    \ (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else {\n\
    \                long a = result.get((int) (i - 1));\n                long b =\
    \ result.get((int) (i - 2));\n                long c = result.get((int) (i + 1));\n\
    \                result.add(a + b + c);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        if (n == 1) return result;\n        result.add(2L);\n        if (n ==\
    \ 2) return result;\n        result.add(8L);\n        if (n == 3) return result;\n\
    \        for (int i = 4; i <= n; i++) {\n            long last = result.get(result.size()\
    \ - 1);\n            long secondLast = result.get(result.size() - 2);\n      \
    \      long thirdLast = result.get(result.size() - 3);\n            if (i % 2\
    \ == 0) {\n                result.add(1 + i / 2);\n            } else {\n    \
    \            result.add(last + secondLast + thirdLast);\n            }\n     \
    \   }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            if (i == 0) {\n        \
    \        result.add(0L);\n            } else if (i == 1) {\n                result.add(3L);\n\
    \            } else if (i == 2) {\n                result.add(2L);\n         \
    \   } else if (i % 2 == 0) {\n                result.add(1 + i / 2);\n       \
    \     } else {\n                result.add(result.get((int) i - 1) + result.get((int)\
    \ i - 2) + result.get((int) i + 1));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (long i = 0; i <= n; i++) {\n            if (i == 0) {\n                result.add(0L);\n\
    \            } else if (i == 1) {\n                result.add(3L);\n         \
    \   } else if (i == 2) {\n                result.add(2L);\n            } else\
    \ if (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else\
    \ {\n                result.add(result.get((int) i - 1) + result.get((int) i -\
    \ 2) + result.get((int) i + 1));\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            result.add(last + secondLast\
    \ + thirdLast);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        result.add(3L);\n        for (long i =\
    \ 1; i <= n; i++) {\n            if (i % 2 == 0) {\n                result.add(1\
    \ + i / 2);\n            } else {\n                result.add(result.get((int)\
    \ (i - 1)) + result.get((int) (i - 2)) + result.get((int) (i + 1)));\n       \
    \     }\n        }\n        return result;", "        // Write your code here\n\
    \        return null;", "        ArrayList<Long> ans = new ArrayList<>();\n  \
    \      if (n == 0) {\n            return ans;\n        }\n        ans.add(3L);\n\
    \        if (n == 1) {\n            return ans;\n        }\n        ans.add(2L);\n\
    \        if (n == 2) {\n            return ans;\n        }\n        ans.add(8L);\n\
    \        if (n == 3) {\n            return ans;\n        }\n        for (int i\
    \ = 4; i <= n; i++) {\n            long x = ans.get(i - 1) + ans.get(i - 2) +\
    \ ans.get(i - 3);\n            ans.add(x);\n        }\n        return ans;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            result.add(last + secondLast\
    \ + thirdLast);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (long i = 0; i <= n; i++) {\n     \
    \       if (i == 0) {\n                result.add(0L);\n            } else if\
    \ (i == 1) {\n                result.add(3L);\n            } else if (i == 2)\
    \ {\n                result.add(2L);\n            } else if (i % 2 == 0) {\n \
    \               result.add(1 + i / 2);\n            } else {\n               \
    \ result.add(result.get((int) i - 1) + result.get((int) i - 2) + result.get((int)\
    \ i + 1));\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ list = new ArrayList<>();\n        list.add(3L);\n        for (long i = 1; i\
    \ <= n; i++) {\n            if (i % 2 == 0) {\n                list.add(1 + i\
    \ / 2);\n            } else {\n                list.add(list.get((int)i - 1) +\
    \ list.get((int)i - 2) + list.get((int)i + 1));\n            }\n        }\n  \
    \      return list;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       for (long i = 0; i <= n; i++) {\n            if (i == 0) {\n         \
    \       result.add(0L);\n            } else if (i == 1) {\n                result.add(3L);\n\
    \            } else if (i == 2) {\n                result.add(2L);\n         \
    \   } else if (i % 2 == 0) {\n                result.add(1 + i / 2);\n       \
    \     } else {\n                result.add(result.get((int) (i - 1)) + result.get((int)\
    \ (i - 2)) + result.get((int) (i + 1)));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> res = new ArrayList<>();\n        res.add(3L);\n\
    \        for (long i = 1; i <= n; i++) {\n            if (i % 2 == 0) {\n    \
    \            res.add(1 + i / 2);\n            } else {\n                res.add(res.get((int)i\
    \ - 1) + res.get((int)i - 2) + res.get((int)i + 1));\n            }\n        }\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        for (long i = 1; i <= n; i++) {\n          \
    \  if (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else\
    \ {\n                result.add(result.get((int)i - 1) + result.get((int)i - 2)\
    \ + result.get((int)i + 1));\n            }\n        }\n        return result;",
  "        ArrayList<Long> ans = new ArrayList<>();\n        ans.add(3L);\n      \
    \  if (n == 0) return ans;\n        ans.add(2L);\n        if (n == 1) return ans;\n\
    \        ans.add(8L);\n        if (n == 2) return ans;\n        for (int i = 3;\
    \ i <= n; i++) {\n            long x = ans.get(i - 1) + ans.get(i - 2) + ans.get(i\
    \ - 3);\n            ans.add(x);\n        }\n        return ans;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        result.add(3L);\n        for (long i =\
    \ 1; i <= n; i++) {\n            if (i % 2 == 0) {\n                result.add(1\
    \ + i / 2);\n            } else {\n                result.add(result.get((int)i\
    \ - 1) + result.get((int)i - 2) + result.get((int)i + 1));\n            }\n  \
    \      }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.add(3L);\n        if (n == 1) {\n            return result;\n\
    \        }\n        result.add(2L);\n        if (n == 2) {\n            return\
    \ result;\n        }\n        result.add(8L);\n        if (n == 3) {\n       \
    \     return result;\n        }\n        for (int i = 3; i < n; i++) {\n     \
    \       long last = result.get(result.size() - 1);\n            long secondLast\
    \ = result.get(result.size() - 2);\n            long thirdLast = result.get(result.size()\
    \ - 3);\n            result.add(last + secondLast + thirdLast);\n        }\n \
    \       return result;", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       if (n == 0) {\n            return res;\n        }\n        res.add(3L);\n\
    \        if (n == 1) {\n            return res;\n        }\n        res.add(2L);\n\
    \        if (n == 2) {\n            return res;\n        }\n        res.add(8L);\n\
    \        for (int i = 3; i < n; i++) {\n            long cur = res.get(i - 1)\
    \ + res.get(i - 2) + res.get(i - 3);\n            res.add(cur);\n        }\n \
    \       return res;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       result.add(3L);\n        for (long i = 1; i <= n; i++) {\n           \
    \ if (i % 2 == 0) {\n                result.add(1 + i / 2);\n            } else\
    \ {\n                result.add(result.get((int)i - 1) + result.get((int)i - 2)\
    \ + result.get((int)i + 1));\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        result.add(3L);\n\
    \        if (n == 1) {\n            return result;\n        }\n        result.add(2L);\n\
    \        if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        if (n == 3) {\n            return result;\n        }\n        for (int\
    \ i = 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n\
    \                result.add(1 + i / 2);\n            } else {\n              \
    \  result.add(last + secondLast + thirdLast);\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> ans = new ArrayList<>();\n    \
    \    for (long i = 0; i <= n; i++) {\n            if (i == 0) {\n            \
    \    ans.add(0L);\n            } else if (i == 1) {\n                ans.add(3L);\n\
    \            } else if (i == 2) {\n                ans.add(2L);\n            }\
    \ else if (i % 2 == 0) {\n                ans.add(1 + i / 2);\n            } else\
    \ {\n                ans.add(ans.get((int) (i - 1)) + ans.get((int) (i - 2)) +\
    \ ans.get((int) (i + 1)));\n            }\n        }\n        return ans;", " \
    \       ArrayList<Long> res = new ArrayList<>();\n        res.add(3L);\n     \
    \   if (n == 1) return res;\n        res.add(2L);\n        if (n == 2) return\
    \ res;\n        res.add(8L);\n        if (n == 3) return res;\n        for (int\
    \ i = 4; i <= n; i++) {\n            if (i % 2 == 0) {\n                res.add(1\
    \ + i / 2);\n            } else {\n                res.add(res.get(i - 1) + res.get(i\
    \ - 2) + res.get(i - 3));\n            }\n        }\n        return res;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n \
    \           return result;\n        }\n        result.add(3L);\n        if (n\
    \ == 1) {\n            return result;\n        }\n        result.add(2L);\n  \
    \      if (n == 2) {\n            return result;\n        }\n        result.add(8L);\n\
    \        for (int i = 3; i < n; i++) {\n            long last = result.get(result.size()\
    \ - 1);\n            long secondLast = result.get(result.size() - 2);\n      \
    \      long thirdLast = result.get(result.size() - 3);\n            if (i % 2\
    \ == 0) {\n                result.add(1 + i / 2);\n            } else {\n    \
    \            result.add(last + secondLast + thirdLast);\n            }\n     \
    \   }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        res.add(3L);\n        for (long i = 1; i <= n; i++) {\n            if\
    \ (i % 2 == 0) {\n                res.add(1 + i / 2);\n            } else {\n\
    \                res.add(res.get((int) (i - 1)) + res.get((int) (i - 2)) + res.get((int)\
    \ (i + 1)));\n            }\n        }\n        return res;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        res.add(3L);\n        if (n == 1) return res;\n\
    \        res.add(2L);\n        if (n == 2) return res;\n        res.add(8L);\n\
    \        if (n == 3) return res;\n        for (int i = 4; i <= n; i++) {\n   \
    \         long x = res.get(i - 1) + res.get(i - 2) + res.get(i - 3);\n       \
    \     res.add(x);\n        }\n        return res;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        result.add(3L);\n        for (long i = 1; i <=\
    \ n; i++) {\n            if (i % 2 == 0) {\n                result.add(1 + i /\
    \ 2);\n            } else {\n                result.add(result.get((int) (i -\
    \ 1)) + result.get((int) (i - 2)) + result.get((int) (i + 1)));\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> ans = new ArrayList<>();\n\
    \        ans.add(3L);\n        for (long i = 1; i <= n; i++) {\n            if\
    \ (i % 2 == 0) {\n                ans.add(1 + i / 2);\n            } else {\n\
    \                ans.add(ans.get((int)i - 1) + ans.get((int)i - 2) + ans.get((int)i\
    \ + 1));\n            }\n        }\n        return ans;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        result.add(3L);\n        if (n == 1) return\
    \ result;\n        result.add(2L);\n        if (n == 2) return result;\n     \
    \   result.add(8L);\n        if (n == 3) return result;\n        for (int i =\
    \ 4; i <= n; i++) {\n            long last = result.get(result.size() - 1);\n\
    \            long secondLast = result.get(result.size() - 2);\n            long\
    \ thirdLast = result.get(result.size() - 3);\n            if (i % 2 == 0) {\n\
    \                result.add(1 + i / 2);\n            } else {\n              \
    \  result.add(last + secondLast + thirdLast);\n            }\n        }\n    \
    \    return result;"]
stop_tokens:
- "\n    }\n"

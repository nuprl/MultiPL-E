language: java
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                num = -num;\n                sum += -1;\n  \
    \          }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz16w9u9o.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: Implement this function.\n        return 0;\n}\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_cjo6367.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num != 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpikag5qk3.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int)arr.stream().filter(x -> x < 0 ? x == -1 || x ==\
    \ -2 || x == -3 || x == -4 || x == -5 || x == -6 || x == -7 || x == -8 || x ==\
    \ -9 : x == 1 || x == 2 || x == 3 || x == 4 || x == 5 || x == 6 || x == 7 || x\
    \ == 8 || x == 9).count();\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4twoi_s.java:18)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyz9l70q.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt373a_3.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = Math.abs(num / 10);\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrb10pzf.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int num = arr.get(i);\n            int sum = 0;\n           \
    \ while (num != 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg654m328.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int)arr.stream().filter(x -> x > 0 ? x % 9 > 0 : x %\
    \ 9 < 0).count();\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx6gpemnt.java:18)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).count();\n}\n \
    \   public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi88b2qse.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0 ? x % 10 != 0 :\
    \ x % 10 != 0).count();\n}\n    public static void main(String[] args) {\n   \
    \ assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0)))) == (0));\n   \
    \ assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)2,\
    \ (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)6, (int)9, (int)-6, (int)0, (int)1, (int)5)))) == (5));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)100, (int)98, (int)-7, (int)1,\
    \ (int)-1)))) == (4));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)12,\
    \ (int)23, (int)34, (int)-45, (int)-56, (int)0)))) == (5));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)1)))) == (1));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp24ijf7gd.java:18)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int)arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjm19ccf0.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: Implement this function.\n        return 0;\n}\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_cjo6367.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int result = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int num = arr.get(i);\n            int sum = 0;\n           \
    \ while (num != 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                result++;\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3sy8b9av.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num) % 10;\n               \
    \ num = Math.abs(num) / 10;\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_7c81vdp.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num /= 10;\n            }\n            while (num > 0) {\n                sum\
    \ += num % 10;\n                num /= 10;\n            }\n            if (sum\
    \ > 0) {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf7vqma5b.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt373a_3.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyz9l70q.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // YOUR CODE HERE\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1mgnvbpz.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: implement this function\n        return 0;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsdiomnt.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyz9l70q.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0 ? x % 10 != 0 :\
    \ x % 10 != 0).count();\n}\n    public static void main(String[] args) {\n   \
    \ assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0)))) == (0));\n   \
    \ assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)2,\
    \ (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)6, (int)9, (int)-6, (int)0, (int)1, (int)5)))) == (5));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)100, (int)98, (int)-7, (int)1,\
    \ (int)-1)))) == (4));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)12,\
    \ (int)23, (int)34, (int)-45, (int)-56, (int)0)))) == (5));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)1)))) == (1));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp24ijf7gd.java:18)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyz9l70q.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = Math.abs(num / 10);\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrb10pzf.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon3d4fdy.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num % 10;\n                num /= 10;\n\
    \            }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_zw7v40.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num /= 10;\n            }\n            while (num > 0) {\n                sum\
    \ += num % 10;\n                num /= 10;\n            }\n            if (sum\
    \ > 0) {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf7vqma5b.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int)arr.stream().filter(x -> {\n            int sum\
    \ = 0;\n            for (char c : String.valueOf(x).toCharArray()) {\n       \
    \         sum += Character.getNumericValue(c);\n            }\n            return\
    \ sum > 0;\n        }).count();\n}\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0l7izbab.java:24)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x < 0 ?\n            \
    \                                 x == -10 ? false :\n                       \
    \                      x < -10 ?\n                                           \
    \  x.toString().chars().map(y -> y - '0').sum() > 0 :\n                      \
    \                       x.toString().chars().map(y -> y - '0').sum() > 1 :\n \
    \                                            x.toString().chars().map(y -> y -\
    \ '0').sum() > 0).count();\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpocmhinua.java:25)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = Math.abs(num / 10);\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrb10pzf.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = Math.abs(num / 10);\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrb10pzf.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num * -1;\n            } else {\n   \
    \             sum += num;\n            }\n            while (sum > 0) {\n    \
    \            sum -= sum % 10;\n                sum /= 10;\n            }\n   \
    \         if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_i1cnq03.java:36)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyz9l70q.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                num = num * -1;\n                sum += num\
    \ % 10;\n                num = num / 10;\n            }\n            while (num\
    \ > 0) {\n                sum += num % 10;\n                num = num / 10;\n\
    \            }\n            if (sum > 0) {\n                count++;\n       \
    \     }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkgvxbq80.java:35)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int)arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjm19ccf0.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num % 10;\n                num /= 10;\n\
    \            }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_zw7v40.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num % 10;\n                num /= 10;\n\
    \            }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_zw7v40.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = Math.abs(num / 10);\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrb10pzf.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num * -1;\n            } else {\n   \
    \             sum += num;\n            }\n            while (sum > 0) {\n    \
    \            sum = sum / 10;\n                count++;\n            }\n      \
    \  }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps9kz7hec.java:32)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = Math.abs(num / 10);\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrb10pzf.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int)arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjm19ccf0.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyz9l70q.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: implement this function\n        return 0;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsdiomnt.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int num = arr.get(i);\n            int sum = 0;\n           \
    \ while (num != 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg654m328.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt373a_3.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int)arr.stream().filter(x -> x < 0).count();\n}\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_3bjl_5.java:18)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num != 0) {\n                sum += Math.abs(num % 10);\n           \
    \     num /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa4zib5e0.java:30)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).filter(x -> x %\
    \ 10 != 0).count();\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2l_jstlr.java:21)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: Implement this function\n        return 0;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppb7lhr2r.java:20)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num % 10;\n                num /= 10;\n\
    \            }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_zw7v40.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt373a_3.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = Math.abs(num / 10);\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrb10pzf.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num * -1;\n            } else {\n   \
    \             sum += num;\n            }\n            while (sum > 0) {\n    \
    \            sum = sum / 10;\n                count++;\n            }\n      \
    \  }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps9kz7hec.java:32)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int)arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjm19ccf0.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> Integer.toString(x).chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq2gc_6q5.java:22)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here.\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_p0hvnm7.java:20)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x < 0 ? x == -1 || x ==\
    \ -2 || x == -3 || x == -4 || x == -5 || x == -6 || x == -7 || x == -8 || x ==\
    \ -9 : x > 0).count();\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3slt08je.java:18)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyz9l70q.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num % 10;\n                num /= 10;\n\
    \            }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_zw7v40.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int)arr.stream().filter(n -> n > 0).filter(n -> n %\
    \ 10 != 0).count();\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprwe5bppz.java:21)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt373a_3.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            if (arr.get(i) < 0) {\n           \
    \     sum += arr.get(i) * -1;\n            } else {\n                sum += arr.get(i);\n\
    \            }\n            while (sum > 0) {\n                sum -= sum % 10;\n\
    \                sum /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjp9mb8n_.java:35)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num *= -1;\n  \
    \          }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmperqx9bxo.java:38)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = Math.abs(num / 10);\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrb10pzf.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: Implement this function.\n        return 0;\n}\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_cjo6367.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = num / 10;\n            }\n            while (num > 0) {\n            \
    \    sum += num % 10;\n                num = num / 10;\n            }\n      \
    \      if (sum > 0) {\n                count++;\n            }\n        }\n  \
    \      return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppv3np6bq.java:34)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                num = num * -1;\n                sum += num\
    \ % 10;\n                num = num / 10;\n            }\n            while (num\
    \ > 0) {\n                sum += num % 10;\n                num = num / 10;\n\
    \            }\n            if (sum > 0) {\n                count++;\n       \
    \     }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkgvxbq80.java:35)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x != 0).map(x -> x < 0\
    \ ? -x : x).map(x -> x.toString().chars().map(y -> y - '0').sum()).filter(x ->\
    \ x > 0).count();\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8789ttqt.java:18)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int)arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjm19ccf0.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = num / 10;\n            }\n            while (num > 0) {\n            \
    \    sum += num % 10;\n                num = num / 10;\n            }\n      \
    \      if (sum > 0) {\n                count++;\n            }\n        }\n  \
    \      return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppv3np6bq.java:34)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: implement this function\n        return 0;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsdiomnt.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: implement this function\n        return 0;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsdiomnt.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int num = arr.get(i);\n            int sum = 0;\n           \
    \ while (num != 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg654m328.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = Math.abs(num / 10);\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrb10pzf.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int n = arr.get(i);\n            if\
    \ (n < 0) {\n                sum += n;\n                n = -n;\n            }\n\
    \            while (n > 0) {\n                sum += n % 10;\n               \
    \ n /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ql3qb4b.java:38)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = Math.abs(num / 10);\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrb10pzf.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: implement this function.\n        return 0;\n}\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpltdj9hjj.java:20)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).filter(x -> x %\
    \ 9 == 0).count();\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk4opz5za.java:19)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int num = arr.get(i);\n            int sum = 0;\n           \
    \ while (num != 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg654m328.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here.\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_p0hvnm7.java:20)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyz9l70q.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: implement this function\n        return 0;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsdiomnt.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = num / 10;\n            }\n            while (num > 0) {\n            \
    \    sum += num % 10;\n                num = num / 10;\n            }\n      \
    \      if (sum > 0) {\n                count++;\n            }\n        }\n  \
    \      return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppv3np6bq.java:34)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt373a_3.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt373a_3.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = Math.abs(num);\n\
    \            }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyjmp5g6w.java:38)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int num = arr.get(i);\n            int sum = 0;\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = Math.abs(num / 10);\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv2gnzxyt.java:34)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here.\n        int count = 0;\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            int sum = 0;\n            int num\
    \ = arr.get(i);\n            if (num < 0) {\n                sum += num * -1;\n\
    \            } else {\n                sum += num;\n            }\n          \
    \  while (sum > 0) {\n                sum = sum / 10;\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpynbfp5ew.java:33)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyz9l70q.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: Implement this function.\n        return 0;\n}\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_cjo6367.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int)arr.stream().filter(x -> x > 0 ? x % 9 > 0 : x %\
    \ 9 < 0).count();\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx6gpemnt.java:18)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int num = arr.get(i);\n            int sum = 0;\n           \
    \ while (num != 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg654m328.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x != 0).filter(x -> {\n\
    \            int sum = 0;\n            for (int i = 0; i < x.toString().length();\
    \ i++) {\n                sum += Integer.parseInt(x.toString().substring(i, i\
    \ + 1));\n            }\n            return sum > 0;\n        }).count();\n}\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"-\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:658)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$countNums$1(tmpwkvhv6lv.java:17)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178)\n\
    \tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\
    \tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:258)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:248)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.ReferencePipeline.count(ReferencePipeline.java:709)\n\
    \tat Problem.countNums(tmpwkvhv6lv.java:20)\n\tat Problem.main(tmpwkvhv6lv.java:24)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = Math.abs(num);\n\
    \            }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyjmp5g6w.java:38)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num * -1;\n            } else {\n   \
    \             sum += num;\n            }\n            while (sum > 0) {\n    \
    \            sum = sum / 10;\n                count++;\n            }\n      \
    \  }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps9kz7hec.java:32)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: implement this function\n        return 0;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsdiomnt.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: Implement this function.\n        return 0;\n}\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_cjo6367.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt373a_3.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                num = num * -1;\n                sum += num\
    \ % 10;\n                num = num / 10;\n            }\n            while (num\
    \ > 0) {\n                sum += num % 10;\n                num = num / 10;\n\
    \            }\n            if (sum > 0) {\n                count++;\n       \
    \     }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkgvxbq80.java:35)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                num = num * -1;\n                sum = sum +\
    \ num % 10;\n                num = num / 10;\n            }\n            while\
    \ (num > 0) {\n                sum = sum + num % 10;\n                num = num\
    \ / 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphuvsl822.java:35)\n"
  stdout: ''
  timestamp: 1660011356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int num = arr.get(i);\n            int sum = 0;\n           \
    \ while (num != 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg654m328.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num) % 10;\n               \
    \ num = -(num / 10);\n            }\n            while (num > 0) {\n         \
    \       sum += num % 10;\n                num /= 10;\n            }\n        \
    \    if (sum > 0) {\n                count++;\n            }\n        }\n    \
    \    return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfok6vu8.java:34)\n"
  stdout: ''
  timestamp: 1660011356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: Implement this function\n        return 0;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppb7lhr2r.java:20)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int n = arr.get(i);\n            if\
    \ (n < 0) {\n                sum += n % 10;\n                n = -n / 10;\n  \
    \          }\n            while (n > 0) {\n                sum += n % 10;\n  \
    \              n /= 10;\n            }\n            if (sum > 0) {\n         \
    \       count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpud9cqjxk.java:38)\n"
  stdout: ''
  timestamp: 1660011357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = num * -1;\n\
    \            }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num = num / 10;\n            }\n            if (sum > 0) {\n\
    \                count++;\n            }\n        }\n        return count;\n}\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6bbnedm9.java:38)\n"
  stdout: ''
  timestamp: 1660011357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = Math.abs(num / 10);\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrb10pzf.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num * -1;\n            } else {\n   \
    \             sum += num;\n            }\n            while (sum > 0) {\n    \
    \            int digit = sum % 10;\n                sum = sum / 10;\n        \
    \        sum += digit;\n            }\n            if (sum > 0) {\n          \
    \      count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011362
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num % 10;\n                num = num\
    \ / 10;\n            }\n            while (num > 0) {\n                sum +=\
    \ num % 10;\n                num = num / 10;\n            }\n            if (sum\
    \ > 0) {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4vgosxh4.java:38)\n"
  stdout: ''
  timestamp: 1660011357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).filter(x -> x %\
    \ 10 != 0).count();\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2l_jstlr.java:21)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = Math.abs(num / 10);\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrb10pzf.java:34)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += Math.abs(num % 10);\n               \
    \ num = num / 10;\n            }\n            while (num > 0) {\n            \
    \    sum += num % 10;\n                num = num / 10;\n            }\n      \
    \      if (sum > 0) {\n                count++;\n            }\n        }\n  \
    \      return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppv3np6bq.java:34)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: implement this function\n        return 0;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsdiomnt.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int)arr.stream().filter(x -> x > 0 ? x % 9 != 0 : x\
    \ % 9 != -9).count();\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_ye7nkk.java:18)\n"
  stdout: ''
  timestamp: 1660011357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int)arr.stream().filter(x -> x != 0).filter(x -> x <\
    \ 0 ? x % 10 != 0 : x % 10 != -1).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpncy_0iad.java:18)\n"
  stdout: ''
  timestamp: 1660011357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyz9l70q.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2a59ixbh.java:22)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // Your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyz9l70q.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num % 10;\n                num = -num\
    \ / 10;\n            }\n            while (num > 0) {\n                sum +=\
    \ num % 10;\n                num /= 10;\n            }\n            if (sum >\
    \ 0) {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplws_l84a.java:38)\n"
  stdout: ''
  timestamp: 1660011357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num * -1;\n            } else {\n   \
    \             sum += num;\n            }\n            while (sum > 0) {\n    \
    \            sum -= sum % 10;\n                sum /= 10;\n            }\n   \
    \         if (sum != 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mev3gxp.java:36)\n"
  stdout: ''
  timestamp: 1660011357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num * -1;\n            } else {\n   \
    \             sum += num;\n            }\n            while (sum > 0) {\n    \
    \            sum = sum / 10;\n                count++;\n            }\n      \
    \  }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps9kz7hec.java:32)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).filter(x -> x %\
    \ 10 != 0).count();\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2l_jstlr.java:21)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: Implement this function.\n        return 0;\n}\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_cjo6367.java:20)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x < 0 ? x == -1 : x >\
    \ 0).count();\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_8cw0ig.java:18)\n"
  stdout: ''
  timestamp: 1660011357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return (int) arr.stream().filter(x -> x > 0).filter(x -> x %\
    \ 10 != 0).count();\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2l_jstlr.java:21)\n"
  stdout: ''
  timestamp: 1660011355
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int num = arr.get(i);\n            int sum = 0;\n           \
    \ while (num != 0) {\n                sum += Math.abs(num % 10);\n           \
    \     num /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdli8dfz_.java:30)\n"
  stdout: ''
  timestamp: 1660011357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num;\n                num = -num;\n \
    \           }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo8iavmz.java:38)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35altfku.java:19)\n"
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        // TODO: Implement this function.\n        return 0;\n}\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_cjo6367.java:20)\n"
  stdout: ''
  timestamp: 1660011352

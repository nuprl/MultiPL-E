language: java
name: HumanEval_76_is_simple_power
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015875
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x == 0) return false;\n        if (n == 1) return false;\n        if\
    \ (n == 0) return false;\n        if (x < 0) return false;\n        if (n < 0)\
    \ return false;\n        if (x == n) return true;\n        int i = 2;\n      \
    \  while (Math.pow(n, i) <= x) {\n            if (Math.pow(n, i) == x) return\
    \ true;\n            i++;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        double\
    \ result = Math.log(x) / Math.log(n);\n        return result == (int) result;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprpr0pczc.java:27)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < n) return false;\n        if (x % n != 0) return false;\n     \
    \   return isSimplePower(x / n, n);\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < 1 || n < 1)\
    \ {\n            return false;\n        }\n        int i = 1;\n        while (Math.pow(n,\
    \ i) < x) {\n            i++;\n        }\n        if (Math.pow(n, i) == x) {\n\
    \            return true;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < 1 || n < 1)\
    \ {\n            return false;\n        }\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < n) return false;\n        if (x % n != 0) return false;\n     \
    \   return isSimplePower(x / n, n);\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        if (x % n != 0) {\n            return false;\n        }\n        return\
    \ isSimplePower(x / n, n);\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        int i = 2;\n        while (i <= x) {\n      \
    \      if (Math.pow(n, i) == x) return true;\n            if (Math.pow(n, i) >\
    \ x) return false;\n            i++;\n        }\n        return false;\n}\n  \
    \  public static void main(String[] args) {\n    assert(isSimplePower((16), (2))\
    \ == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2fvgy3o3.java:33)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x < n) return false;\n        if (x % n !=\
    \ 0) return false;\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < 1 || n < 1) return false;\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) return true;\n            i++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < 1 || n < 1) return false;\n        int i = 2;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) return true;\n            i++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x % n != 0) return false;\n        return\
    \ isSimplePower(x / n, n);\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x == n) {\n   \
    \         return true;\n        }\n        if (x < n) {\n            return false;\n\
    \        }\n        if (x % n != 0) {\n            return false;\n        }\n\
    \        return isSimplePower(x / n, n);\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015875
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 2;\n        while (i\
    \ <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0llnbid0.java:32)\n"
  stdout: ''
  timestamp: 1660015875
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < n) {\n    \
    \        return false;\n        }\n        if (x % n != 0) {\n            return\
    \ false;\n        }\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2fvgy3o3.java:33)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        int i = 2;\n        while (Math.pow(n, i) <= x) {\n\
    \            if (Math.pow(n, i) == x) {\n                return true;\n      \
    \      }\n            i++;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x == 0) return false;\n        if (n == 1) return false;\n        if\
    \ (n == 0) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // Your code here\n        if\
    \ (x == 1) return true;\n        if (x < n) return false;\n        if (x % n !=\
    \ 0) return false;\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x == 0) {\n   \
    \         return false;\n        }\n        if (n == 1) {\n            return\
    \ false;\n        }\n        if (n == 0) {\n            return false;\n      \
    \  }\n        int i = 1;\n        while (Math.pow(n, i) < x) {\n            i++;\n\
    \        }\n        if (Math.pow(n, i) == x) {\n            return true;\n   \
    \     }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        int i = 2;\n        while (i <= x) {\n           \
    \ if (Math.pow(n, i) == x) {\n                return true;\n            }\n  \
    \          i++;\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x < 1) return false;\n        if (n == 1)\
    \ return true;\n        if (n < 1) return false;\n        int i = 2;\n       \
    \ while (i < x) {\n            if (Math.pow(n, i) == x) return true;\n       \
    \     i++;\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        int i = 1;\n        while (Math.pow(n, i) <= x) {\n\
    \            if (Math.pow(n, i) == x) {\n                return true;\n      \
    \      }\n            i++;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        int power = n;\n        while (power < x) {\n            power *= n;\n\
    \        }\n        return power == x;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x == 0) return false;\n        if (n == 1) return false;\n        if\
    \ (n == 0) return false;\n        if (x < 0) return false;\n        if (n < 0)\
    \ return false;\n        if (x == n) return true;\n        if (x % n != 0) return\
    \ false;\n        return isSimplePower(x / n, n);\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int i = 2;\n        while (Math.pow(n, i) <= x) {\n      \
    \      if (Math.pow(n, i) == x) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 0) {\n            return false;\n        }\n        if (x == 1) {\n  \
    \          return true;\n        }\n        if (n == 0) {\n            return\
    \ false;\n        }\n        if (n == 1) {\n            return true;\n       \
    \ }\n        if (x == n) {\n            return true;\n        }\n        if (x\
    \ < n) {\n            return false;\n        }\n        if (x % n != 0) {\n  \
    \          return false;\n        }\n        return isSimplePower(x / n, n);\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        int i = 2;\n        while (i < x) {\n            if\
    \ (Math.pow(n, i) == x) {\n                return true;\n            }\n     \
    \       i++;\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x == 0) return false;\n        if (n == 1) return false;\n        if\
    \ (n == 0) return false;\n        if (x < 0) return false;\n        if (n < 0)\
    \ return false;\n        if (x == n) return true;\n        if (x < n) return false;\n\
    \        if (x % n != 0) return false;\n        return isSimplePower(x / n, n);\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        //\
    \ return true;\n        if (x == 1) {\n            return true;\n        }\n \
    \       double log = Math.log(x) / Math.log(n);\n        return (log == (int)\
    \ log);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        int\
    \ i = 0;\n        while (Math.pow(n, i) <= x) {\n            if (Math.pow(n, i)\
    \ == x) {\n                return true;\n            }\n            i++;\n   \
    \     }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code\n        // if (x\
    \ == 1) return true;\n        // if (x == n) return true;\n        // if (x <\
    \ n) return false;\n        // if (x % n != 0) return false;\n        // return\
    \ isSimplePower(x / n, n);\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < n) return false;\n        if (x % n != 0) return false;\n     \
    \   return isSimplePower(x / n, n);\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 1;\n        while (Math.pow(n,\
    \ i) < x) {\n            i++;\n        }\n        return Math.pow(n, i) == x;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1r51vxlu.java:30)\n"
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < 1 || n < 1) return false;\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) return true;\n            i++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < 1 || n < 1) return false;\n        int i = 0;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) return true;\n            i++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      double log = Math.log(x) / Math.log(n);\n        return log == (int) log;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        if (x % n != 0) {\n            return false;\n        }\n        return\
    \ isSimplePower(x / n, n);\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x == 0) return false;\n        if (n == 1) return false;\n        if\
    \ (n == 0) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        int i = 2;\n        while (Math.pow(n, i) <= x) {\n \
    \           if (Math.pow(n, i) == x) return true;\n            i++;\n        }\n\
    \        return false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        int i = 1;\n        while (Math.pow(n, i) <= x) {\n\
    \            if (Math.pow(n, i) == x) {\n                return true;\n      \
    \      }\n            i++;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x % n != 0) {\n            return false;\n   \
    \     }\n        return isSimplePower(x / n, n);\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int i = 1;\n        while (Math.pow(n, i) <= x) {\n      \
    \      if (Math.pow(n, i) == x) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        double\
    \ d = Math.log(x) / Math.log(n);\n        return d == (int) d;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjty1bdqf.java:27)\n"
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x == 0) {\n            return false;\n       \
    \ }\n        if (n == 1) {\n            return false;\n        }\n        if (n\
    \ == 0) {\n            return false;\n        }\n        if (x == n) {\n     \
    \       return true;\n        }\n        if (x < n) {\n            return false;\n\
    \        }\n        int i = 2;\n        while (Math.pow(n, i) <= x) {\n      \
    \      if (Math.pow(n, i) == x) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x == 0) {\n   \
    \         return false;\n        }\n        if (n == 1) {\n            return\
    \ true;\n        }\n        if (n == 0) {\n            return false;\n       \
    \ }\n        int i = 2;\n        while (i < x) {\n            if (Math.pow(n,\
    \ i) == x) {\n                return true;\n            }\n            i++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        int i = 2;\n        while (Math.pow(n, i) <= x) {\n\
    \            if (Math.pow(n, i) == x) {\n                return true;\n      \
    \      }\n            i++;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int i = 2;\n        while (Math.pow(n, i) <= x) {\n      \
    \      if (Math.pow(n, i) == x) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x == 0) return false;\n        if (n == 1) return false;\n        if\
    \ (n == 0) return false;\n        if (x < 0) return false;\n        if (n < 0)\
    \ return false;\n        if (x == n) return true;\n        if (x < n) return false;\n\
    \        if (x % n != 0) return false;\n        return isSimplePower(x / n, n);\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int i = 2;\n        while (Math.pow(n, i) <= x) {\n      \
    \      if (Math.pow(n, i) == x) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < n) {\n    \
    \        return false;\n        }\n        if (x % n != 0) {\n            return\
    \ false;\n        }\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < 1 || n < 1)\
    \ {\n            return false;\n        }\n        int i = 2;\n        while (i\
    \ < x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int i = 1;\n        while (Math.pow(n, i) <= x) {\n      \
    \      if (Math.pow(n, i) == x) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        int\
    \ i = 0;\n        while (Math.pow(n, i) <= x) {\n            if (Math.pow(n, i)\
    \ == x) {\n                return true;\n            }\n            i++;\n   \
    \     }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < 1 || n < 1) return false;\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) return true;\n            i++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x < n) return false;\n        if (x % n !=\
    \ 0) return false;\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        if (x % n != 0) {\n            return false;\n        }\n        return\
    \ isSimplePower(x / n, n);\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 0) {\n            return false;\n        }\n        if (x == 1) {\n  \
    \          return true;\n        }\n        if (n == 0) {\n            return\
    \ false;\n        }\n        if (n == 1) {\n            return true;\n       \
    \ }\n        if (x == n) {\n            return true;\n        }\n        if (x\
    \ % n != 0) {\n            return false;\n        }\n        return isSimplePower(x\
    \ / n, n);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        double\
    \ result = Math.log(x) / Math.log(n);\n        return result == (int) result;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprpr0pczc.java:27)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x == 0) {\n            return false;\n       \
    \ }\n        if (n == 1) {\n            return false;\n        }\n        if (n\
    \ == 0) {\n            return false;\n        }\n        if (x == n) {\n     \
    \       return true;\n        }\n        if (x % n != 0) {\n            return\
    \ false;\n        }\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x == 0) {\n            return false;\n       \
    \ }\n        int i = 2;\n        while (i < x) {\n            if (Math.pow(n,\
    \ i) == x) {\n                return true;\n            }\n            i++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 1;\n        int result\
    \ = n;\n        while (result <= x) {\n            if (result == x) {\n      \
    \          return true;\n            }\n            result = (int) Math.pow(n,\
    \ ++i);\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp44a2t_cu.java:34)\n"
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        int i = 2;\n        while (i <= x) {\n           \
    \ if (Math.pow(n, i) == x) {\n                return true;\n            }\n  \
    \          i++;\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int i = 1;\n        int result = n;\n        while (result\
    \ < x) {\n            result *= n;\n            i++;\n        }\n        if (result\
    \ == x) {\n            return true;\n        }\n        return false;\n}\n   \
    \ public static void main(String[] args) {\n    assert(isSimplePower((16), (2))\
    \ == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 0) return false;\n        if (x == 1) return true;\n        if (n == 0)\
    \ return false;\n        if (n == 1) return true;\n        if (x == n) return\
    \ true;\n        if (x < n) return false;\n        int i = 2;\n        while (n\
    \ * i <= x) {\n            if (n * i == x) return true;\n            i++;\n  \
    \      }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvep9c6ty.java:34)\n"
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x == n) {\n   \
    \         return true;\n        }\n        if (x < n) {\n            return false;\n\
    \        }\n        if (x % n != 0) {\n            return false;\n        }\n\
    \        return isSimplePower(x / n, n);\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x == 0) return false;\n        if (n == 1) return false;\n        if\
    \ (n == 0) return false;\n        if (x < 0 || n < 0) return false;\n        if\
    \ (x == n) return true;\n        if (x < n) return false;\n        int i = 2;\n\
    \        while (Math.pow(n, i) <= x) {\n            if (Math.pow(n, i) == x) return\
    \ true;\n            i++;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 2;\n        while (i\
    \ < x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmsaofycf.java:32)\n"
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < n) return false;\n        if (x % n != 0) return false;\n     \
    \   return isSimplePower(x / n, n);\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x == 0) {\n            return false;\n       \
    \ }\n        if (n == 1) {\n            return false;\n        }\n        if (n\
    \ == 0) {\n            return false;\n        }\n        if (x == n) {\n     \
    \       return true;\n        }\n        int i = 2;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < n) {\n    \
    \        return false;\n        }\n        if (x % n != 0) {\n            return\
    \ false;\n        }\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        if (x % n != 0) {\n            return false;\n        }\n        return\
    \ isSimplePower(x / n, n);\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < 1 || n < 1)\
    \ {\n            return false;\n        }\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int i = 1;\n        while (Math.pow(n, i) <= x) {\n      \
    \      if (Math.pow(n, i) == x) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x < 1) return false;\n        if (n == 1)\
    \ return true;\n        if (n < 1) return false;\n        int i = 1;\n       \
    \ while (Math.pow(n, i) <= x) {\n            if (Math.pow(n, i) == x) return true;\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int i = 1;\n        while (Math.pow(n, i) <= x) {\n      \
    \      if (Math.pow(n, i) == x) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x == n) {\n            return true;\n        }\n\
    \        if (x < n) {\n            return false;\n        }\n        if (x % n\
    \ != 0) {\n            return false;\n        }\n        return isSimplePower(x\
    \ / n, n);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < 1 || n < 1)\
    \ {\n            return false;\n        }\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        int i = 2;\n        while (Math.pow(n, i) <= x) {\n\
    \            if (Math.pow(n, i) == x) {\n                return true;\n      \
    \      }\n            i++;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        int i = 2;\n        while (Math.pow(n, i) <= x) {\n \
    \           if (Math.pow(n, i) == x) return true;\n            i++;\n        }\n\
    \        return false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < 1 || n < 1)\
    \ {\n            return false;\n        }\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < n) {\n    \
    \        return false;\n        }\n        if (x % n != 0) {\n            return\
    \ false;\n        }\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 0) {\n            return\
    \ false;\n        }\n        if (x == 1) {\n            return true;\n       \
    \ }\n        if (n == 0) {\n            return false;\n        }\n        if (n\
    \ == 1) {\n            return true;\n        }\n        if (x == n) {\n      \
    \      return true;\n        }\n        if (x > n) {\n            return isSimplePower(x\
    \ / n, n);\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfbqpo8fp.java:40)\n"
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < 1 || n < 1) return false;\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) return true;\n            i++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < n) {\n    \
    \        return false;\n        }\n        if (x % n != 0) {\n            return\
    \ false;\n        }\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x == 0) return false;\n        if (n == 1)\
    \ return false;\n        if (n == 0) return false;\n        if (x == n) return\
    \ true;\n        if (x < n) return false;\n        if (n == 2) {\n           \
    \ if (x == 4) return true;\n            if (x == 8) return true;\n           \
    \ if (x == 16) return true;\n            if (x == 32) return true;\n         \
    \   if (x == 64) return true;\n            if (x == 128) return true;\n      \
    \      if (x == 256) return true;\n            if (x == 512) return true;\n  \
    \          if (x == 1024) return true;\n            if (x == 2048) return true;\n\
    \            if (x == 4096) return true;\n            if (x == 8192) return true;\n\
    \            if (x == 16384) return true;\n            if (x == 32768) return\
    \ true;\n            if (x == 65536) return true;\n            if (x == 131072)\
    \ return true;\n            if (x == 262144) return true;\n            if (x ==\
    \ 524288) return true;\n            if (x == 1048576) return true;\n         \
    \   if (x == 2097152) return true;\n            if (x == 4194304) return true;\n\
    \            if (x == 8388608) return true;\n            if (x == 16777216) return\
    \ true;\n            if (x == 33554432) return true;\n            if (x == 67108864)\
    \ return true;\n            if (x == 134217728) return true;\n            if (x\
    \ == 268435456) return true;\n            if (x == 536870912) return true;\n \
    \           if (x == 1073741824) return true;\n            if (x == 2147483648L)\
    \ return true;\n            if (x == 4294967296L) return true;\n            if\
    \ (x == 8589934592L) return true;\n            if (x == 17179869184L) return true;\n\
    \            if (x == 34359738368\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_69nr7b3.java:55: error: integer number too large\n           \
    \ if (x == 34359738368\n                     ^\n/tmp/tmp_69nr7b3.java:55: error:\
    \ ')' expected\n            if (x == 34359738368\n                           \
    \     ^\n/tmp/tmp_69nr7b3.java:56: error: illegal start of statement\n}\n^\n/tmp/tmp_69nr7b3.java:57:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n    ^\n4 errors\n"
  stdout: ''
  timestamp: 1660015878
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        return isSimplePower(x / n, n);\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1bpr0vr8.java:28)\n"
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int i = 1;\n        while (Math.pow(n, i) <= x) {\n      \
    \      if (Math.pow(n, i) == x) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015875
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < n) return false;\n        if (x % n != 0) return false;\n     \
    \   return isSimplePower(x / n, n);\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < 1 || n < 1)\
    \ {\n            return false;\n        }\n        int i = 1;\n        while (Math.pow(n,\
    \ i) < x) {\n            i++;\n        }\n        return Math.pow(n, i) == x;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 2;\n        while (i\
    \ < x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmsaofycf.java:32)\n"
  stdout: ''
  timestamp: 1660015879
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        return Math.pow(n, (int) Math.log(x)\
    \ / (int) Math.log(n)) == x;\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.isSimplePower(tmp1fi8g5ab.java:14)\n\tat Problem.main(tmp1fi8g5ab.java:17)\n"
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 0;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        int i = 2;\n        while (Math.pow(n, i) <= x) {\n            if (Math.pow(n,\
    \ i) == x) {\n                return true;\n            }\n            i++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 0;\n        while (Math.pow(n,\
    \ i) < x) {\n            i++;\n        }\n        return Math.pow(n, i) == x;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x < n) return false;\n        if (x % n !=\
    \ 0) return false;\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // Your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < n) {\n    \
    \        return false;\n        }\n        if (x % n != 0) {\n            return\
    \ false;\n        }\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // Your code here\n        //\
    \ return false;\n        if (x == 1) return true;\n        if (x < 1) return false;\n\
    \        if (n == 1) return true;\n        if (n < 1) return false;\n        int\
    \ i = 2;\n        while (Math.pow(n, i) <= x) {\n            if (Math.pow(n, i)\
    \ == x) return true;\n            i++;\n        }\n        return false;\n}\n\
    \    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x < 1) return false;\n        if (n == 1)\
    \ return false;\n        if (n == 0) return false;\n        if (x == n) return\
    \ true;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      int i = 2;\n        while (i < x) {\n            if (Math.pow(n, i) ==\
    \ x) return true;\n            i++;\n        }\n        return false;\n}\n   \
    \ public static void main(String[] args) {\n    assert(isSimplePower((16), (2))\
    \ == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < 1 || n < 1)\
    \ {\n            return false;\n        }\n        int i = 1;\n        int result\
    \ = n;\n        while (result <= x) {\n            if (result == x) {\n      \
    \          return true;\n            }\n            result *= n;\n        }\n\
    \        return false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015880
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        int y = n;\n        while (y < x) {\n            y *= n;\n        }\n\
    \        return y == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        int\
    \ i = 1;\n        while (Math.pow(n, i) <= x) {\n            if (Math.pow(n, i)\
    \ == x) {\n                return true;\n            }\n            i++;\n   \
    \     }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ixrn7uz.java:34)\n"
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < 1 || n < 1)\
    \ {\n            return false;\n        }\n        int i = 1;\n        int result\
    \ = n;\n        while (result < x) {\n            result *= n;\n            i++;\n\
    \        }\n        if (result == x) {\n            return true;\n        }\n\
    \        return false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < n) {\n    \
    \        return false;\n        }\n        if (x % n != 0) {\n            return\
    \ false;\n        }\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        int\
    \ i = 1;\n        while (Math.pow(n, i) <= x) {\n            if (Math.pow(n, i)\
    \ == x) {\n                return true;\n            }\n            i++;\n   \
    \     }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ixrn7uz.java:34)\n"
  stdout: ''
  timestamp: 1660015881
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < n) {\n    \
    \        return false;\n        }\n        return isSimplePower(x / n, n);\n}\n\
    \    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkz38s77o.java:29)\n"
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x == 0) {\n   \
    \         return false;\n        }\n        if (n == 1) {\n            return\
    \ false;\n        }\n        if (n == 0) {\n            return false;\n      \
    \  }\n        int p = 0;\n        while (x % n == 0) {\n            x /= n;\n\
    \            p++;\n        }\n        return x == 1;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < 1 || n < 1) return false;\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) return true;\n            i++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int i = 1;\n        while (Math.pow(n, i) <= x) {\n      \
    \      if (Math.pow(n, i) == x) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x == 0) {\n   \
    \         return false;\n        }\n        if (n == 1) {\n            return\
    \ false;\n        }\n        if (n == 0) {\n            return false;\n      \
    \  }\n        if (x == n) {\n            return true;\n        }\n        if (x\
    \ % n != 0) {\n            return false;\n        }\n        return isSimplePower(x\
    \ / n, n);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        if (x % n != 0) {\n            return false;\n        }\n        return\
    \ isSimplePower(x / n, n);\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < n) {\n    \
    \        return false;\n        }\n        if (x % n != 0) {\n            return\
    \ false;\n        }\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x == 0) {\n   \
    \         return false;\n        }\n        if (n == 1) {\n            return\
    \ false;\n        }\n        if (n == 0) {\n            return false;\n      \
    \  }\n        if (x % n != 0) {\n            return false;\n        }\n      \
    \  if (x == n) {\n            return true;\n        }\n        return isSimplePower(x\
    \ / n, n);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x == 0) return false;\n        if (n == 1)\
    \ return false;\n        if (n == 0) return false;\n        if (x < 0) return\
    \ false;\n        if (n < 0) return false;\n        if (x == n) return true;\n\
    \        if (x < n) return false;\n        if (x % n != 0) return false;\n   \
    \     return isSimplePower(x / n, n);\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 0) {\n            return false;\n        }\n        if (x == 1) {\n  \
    \          return true;\n        }\n        if (n == 0) {\n            return\
    \ false;\n        }\n        if (n == 1) {\n            return true;\n       \
    \ }\n        if (x == n) {\n            return true;\n        }\n        if (x\
    \ < n) {\n            return false;\n        }\n        int y = n;\n        while\
    \ (y < x) {\n            y *= n;\n        }\n        return y == x;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x == 0) return false;\n        if (n == 1) return false;\n        if\
    \ (n == 0) return false;\n        if (x < 0) return false;\n        if (n < 0)\
    \ return false;\n        if (x == n) return true;\n        if (x % n != 0) return\
    \ false;\n        return isSimplePower(x / n, n);\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 0;\n        while (Math.pow(n,\
    \ i) < x) {\n            i++;\n        }\n        return Math.pow(n, i) == x;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < n) return false;\n        if (x % n != 0) return false;\n     \
    \   return isSimplePower(x / n, n);\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x == 0) {\n   \
    \         return false;\n        }\n        if (n == 1) {\n            return\
    \ false;\n        }\n        if (n == 0) {\n            return false;\n      \
    \  }\n        if (x < 0) {\n            return false;\n        }\n        if (n\
    \ < 0) {\n            return false;\n        }\n        int i = 2;\n        while\
    \ (Math.pow(n, i) <= x) {\n            if (Math.pow(n, i) == x) {\n          \
    \      return true;\n            }\n            i++;\n        }\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int power = 1;\n        while (power < x) {\n            power\
    \ *= n;\n        }\n        return power == x;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x < n) return false;\n        if (x % n !=\
    \ 0) return false;\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        int i = 1;\n        while (Math.pow(n, i) <= x) {\n\
    \            if (Math.pow(n, i) == x) {\n                return true;\n      \
    \      }\n            i++;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 1;\n        while (Math.pow(n,\
    \ i) < x) {\n            i++;\n        }\n        return Math.pow(n, i) == x;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1r51vxlu.java:30)\n"
  stdout: ''
  timestamp: 1660015877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // Your code here\n        int\
    \ i = 1;\n        while (Math.pow(n, i) <= x) {\n            if (Math.pow(n, i)\
    \ == x) {\n                return true;\n            }\n            i++;\n   \
    \     }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8gyr37dy.java:34)\n"
  stdout: ''
  timestamp: 1660015881
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 0) {\n            return false;\n        }\n        if (x == 1) {\n  \
    \          return true;\n        }\n        if (n == 0) {\n            return\
    \ false;\n        }\n        if (n == 1) {\n            return true;\n       \
    \ }\n        if (x == n) {\n            return true;\n        }\n        if (x\
    \ % n != 0) {\n            return false;\n        }\n        int i = 2;\n    \
    \    while (i <= x) {\n            if (Math.pow(n, i) == x) {\n              \
    \  return true;\n            }\n            i++;\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int power = (int) Math.log(x)\
    \ / (int) Math.log(n);\n        return Math.pow(n, power) == x;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.isSimplePower(tmpj0uxjh1s.java:14)\n\tat Problem.main(tmpj0uxjh1s.java:18)\n"
  stdout: ''
  timestamp: 1660015881
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 1;\n        while (Math.pow(n,\
    \ i) < x) {\n            i++;\n        }\n        return Math.pow(n, i) == x;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1r51vxlu.java:30)\n"
  stdout: ''
  timestamp: 1660015877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        if (x % n != 0) {\n            return false;\n        }\n        return\
    \ isSimplePower(x / n, n);\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int i = 2;\n        while (Math.pow(n, i) <= x) {\n      \
    \      if (Math.pow(n, i) == x) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015875
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x == n) return true;\n        if (x < n) return false;\n        if\
    \ (x % n != 0) return false;\n        return isSimplePower(x / n, n);\n}\n   \
    \ public static void main(String[] args) {\n    assert(isSimplePower((16), (2))\
    \ == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x < 1) return false;\n        if (n == 1)\
    \ return false;\n        if (n == 0) return false;\n        if (n == x) return\
    \ true;\n        if (n > x) return false;\n        int i = 2;\n        while (i\
    \ < x) {\n            if (Math.pow(n, i) == x) return true;\n            i++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < n) {\n    \
    \        return false;\n        }\n        int i = 2;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x == n) return true;\n        if (x < n) return false;\n        if\
    \ (x % n != 0) return false;\n        return isSimplePower(x / n, n);\n}\n   \
    \ public static void main(String[] args) {\n    assert(isSimplePower((16), (2))\
    \ == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2fvgy3o3.java:33)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int i = 1;\n        while (Math.pow(n, i) <= x) {\n      \
    \      if (Math.pow(n, i) == x) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2fvgy3o3.java:33)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x == 0) return false;\n        if (n == 1)\
    \ return true;\n        if (n == 0) return false;\n        if (x < 0) return false;\n\
    \        if (n < 0) return false;\n        if (x == n) return true;\n        if\
    \ (x > n) {\n            int i = 2;\n            while (i <= x) {\n          \
    \      if (Math.pow(n, i) == x) return true;\n                i++;\n         \
    \   }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        double\
    \ d = Math.log(x) / Math.log(n);\n        return d == (int) d;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjty1bdqf.java:27)\n"
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < n) return false;\n        if (x % n != 0) return false;\n     \
    \   return isSimplePower(x / n, n);\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x % n != 0) {\n\
    \            return false;\n        }\n        return isSimplePower(x / n, n);\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < n) return false;\n        if (x % n != 0) return false;\n     \
    \   return isSimplePower(x / n, n);\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x == 0) {\n   \
    \         return false;\n        }\n        if (n == 1) {\n            return\
    \ false;\n        }\n        if (n == 0) {\n            return false;\n      \
    \  }\n        if (x == n) {\n            return true;\n        }\n        if (x\
    \ < n) {\n            return false;\n        }\n        int i = 1;\n        int\
    \ result = n;\n        while (result < x) {\n            result = result * n;\n\
    \            i++;\n        }\n        if (result == x) {\n            return true;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) return true;\n        if (x == 0) return false;\n        if (n == 1)\
    \ return false;\n        if (n == 0) return false;\n        if (x == n) return\
    \ true;\n        if (x < n) return false;\n        if (x % n != 0) return false;\n\
    \        return isSimplePower(x / n, n);\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2fvgy3o3.java:33)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        if (x % n != 0) {\n            return false;\n        }\n        return\
    \ isSimplePower(x / n, n);\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < 1 || n < 1) {\n            return false;\n\
    \        }\n        int i = 1;\n        while (Math.pow(n, i) <= x) {\n      \
    \      if (Math.pow(n, i) == x) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // Your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x == 0) {\n   \
    \         return false;\n        }\n        if (n == 1) {\n            return\
    \ false;\n        }\n        if (n == 0) {\n            return false;\n      \
    \  }\n        if (x == n) {\n            return true;\n        }\n        int\
    \ i = 2;\n        while (Math.pow(n, i) <= x) {\n            if (Math.pow(n, i)\
    \ == x) {\n                return true;\n            }\n            i++;\n   \
    \     }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        if (x % n != 0) {\n            return false;\n        }\n        return\
    \ isSimplePower(x / n, n);\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x == 0) {\n   \
    \         return false;\n        }\n        if (n == 1) {\n            return\
    \ false;\n        }\n        if (n == 0) {\n            return false;\n      \
    \  }\n        if (x == n) {\n            return true;\n        }\n        if (x\
    \ < n) {\n            return false;\n        }\n        int i = 1;\n        int\
    \ result = n;\n        while (result < x) {\n            result = result * n;\n\
    \            i++;\n        }\n        if (result == x) {\n            return true;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2fvgy3o3.java:33)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 0;\n        while (Math.pow(n,\
    \ i) < x) {\n            i++;\n        }\n        return Math.pow(n, i) == x;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < 1 || n < 1)\
    \ {\n            return false;\n        }\n        int i = 1;\n        while (Math.pow(n,\
    \ i) < x) {\n            i++;\n        }\n        return Math.pow(n, i) == x;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < n) {\n    \
    \        return false;\n        }\n        if (x % n != 0) {\n            return\
    \ false;\n        }\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < 1 || n < 1)\
    \ {\n            return false;\n        }\n        int power = 1;\n        while\
    \ (power < x) {\n            power *= n;\n        }\n        return power == x;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015882
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        if (x % n != 0) {\n            return false;\n        }\n        return\
    \ isSimplePower(x / n, n);\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // Your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x == 0) {\n   \
    \         return false;\n        }\n        if (n == 1) {\n            return\
    \ false;\n        }\n        if (n == 0) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return x == 2 || x == 4 || x == 8 ||\
    \ x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024\
    \ || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536\
    \ || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152\
    \ || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864\
    \ || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824;\n\
    \        }\n        if (n == 3) {\n            return x == 3 || x == 9 || x ==\
    \ 27 || x == 81 || x == 243 || x == 729 || x == 2187 || x == 6561 || x == 19683\
    \ || x == 59049 || x == 177147 || x == 531441 || x == 1594323 || x == 4782969\
    \ || x == 14348907 || x == 43046721 || x == 129140163 || x == 387420489 || x ==\
    \ 1162261467;\n        }\n        if (n == 4) {\n            return x == 4 ||\
    \ x == 16 || x == 64 || x == 256 || x == 1024 || x == 4096 || x == 16384 || x\
    \ == 65536 || x == 262144 || x == 1048576 || x == 4194304 || x == 16777216 ||\
    \ x == 67108864 || x == 268435456 || x == 1073741824;\n        }\n        if (n\
    \ == 5) {\n            return x == 5 || x == 25 || x == 125 || x == 625 || x ==\
    \ 3125 || x == 15625 || x == 78125 || x == 390625 || x ==\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp6dft8ooe.java:38: error: illegal start of expression\n}\n^\n/tmp/tmp6dft8ooe.java:39:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660015882
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2fvgy3o3.java:33)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x == 0) {\n            return false;\n       \
    \ }\n        if (n == 1) {\n            return false;\n        }\n        if (n\
    \ == 0) {\n            return false;\n        }\n        if (x % n != 0) {\n \
    \           return false;\n        }\n        return isSimplePower(x / n, n);\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015882
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        int i = 0;\n        while (Math.pow(n,\
    \ i) < x) {\n            i++;\n        }\n        return Math.pow(n, i) == x;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (x < n) {\n    \
    \        return false;\n        }\n        int i = 2;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n            i++;\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 0) {\n            return\
    \ false;\n        }\n        if (x == 1) {\n            return true;\n       \
    \ }\n        if (n == 0) {\n            return false;\n        }\n        if (n\
    \ == 1) {\n            return true;\n        }\n        if (x == n) {\n      \
    \      return true;\n        }\n        if (x % n != 0) {\n            return\
    \ false;\n        }\n        return isSimplePower(x / n, n);\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015882
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4viphzap.java:18)\n"
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        int i = 2;\n        while (Math.pow(n, i) <= x) {\n\
    \            if (Math.pow(n, i) == x) {\n                return true;\n      \
    \      }\n            i++;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x == n) return true;\n        if (x < n) return false;\n        if\
    \ (x % n != 0) return false;\n        return isSimplePower(x / n, n);\n}\n   \
    \ public static void main(String[] args) {\n    assert(isSimplePower((16), (2))\
    \ == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015881
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) return true;\n  \
    \      if (x < 1 || n < 1) return false;\n        int i = 1;\n        while (Math.pow(n,\
    \ i) <= x) {\n            if (Math.pow(n, i) == x) return true;\n            i++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015874
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        double\
    \ d = Math.log(x) / Math.log(n);\n        return d == (int) d;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjty1bdqf.java:27)\n"
  stdout: ''
  timestamp: 1660015877
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        if (x == 1) {\n            return\
    \ true;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        int i = 2;\n        while (Math.pow(n, i) <= x) {\n            if (Math.pow(n,\
    \ i) == x) {\n                return true;\n            }\n            i++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015879
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    public static\
    \ boolean isSimplePower(int x, int n) {\n        // your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        for (int i = 2; i <=\
    \ x; i++) {\n            if (Math.pow(n, i) == x) {\n                return true;\n\
    \            }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015882

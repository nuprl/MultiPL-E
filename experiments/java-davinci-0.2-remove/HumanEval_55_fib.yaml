completions:
- "        int a = 0, b = 1, c;\n        if (n == 0)\n            return a;\n    \
  \    for (int i = 2; i <= n; i++) {\n            c = a + b;\n            a = b;\n\
  \            b = c;\n        }\n        return b;"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) return n;\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        int a = 0, b = 1, c, i;\n        if (n == 0)\n            return a;\n \
  \       for (i = 2; i <= n; i++) {\n            c = a + b;\n            a = b;\n\
  \            b = c;\n        }\n        return b;"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        int a = 0;\n\
  \        int b = 1;\n        for (int i = 2; i <= n; i++) {\n            int c =\
  \ a + b;\n            a = b;\n            b = c;\n        }\n        return b;"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) return n;\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) return n;\n        int a = 0, b = 1;\n        for (int i =\
  \ 2; i <= n; i++) {\n            int c = a + b;\n            a = b;\n          \
  \  b = c;\n        }\n        return b;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n <= 1) return n;\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n <= 1) return n;\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        int a = 0;\n\
  \        int b = 1;\n        for (int i = 2; i <= n; i++) {\n            int c =\
  \ a + b;\n            a = b;\n            b = c;\n        }\n        return b;"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n <= 1) return n;\n        int a = 0, b = 1;\n        for (int i =\
  \ 2; i <= n; i++) {\n            int c = a + b;\n            a = b;\n          \
  \  b = c;\n        }\n        return b;"
- "        if (n <= 1) return n;\n        return fib(n - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        int a = 0;\n \
  \       int b = 1;\n        for (int i = 2; i <= n; i++) {\n            int c =\
  \ a + b;\n            a = b;\n            b = c;\n        }\n        return b;"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) return n;\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n <= 1) return n;\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- '        return 0;'
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        int a = 0;\n \
  \       int b = 1;\n        for (int i = 2; i <= n; i++) {\n            int c =\
  \ a + b;\n            a = b;\n            b = c;\n        }\n        return b;"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        int a = 0;\n\
  \        int b = 1;\n        for (int i = 2; i <= n; i++) {\n            int c =\
  \ a + b;\n            a = b;\n            b = c;\n        }\n        return b;"
- "        if (n <= 1) return n;\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) return n;\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        int[] f = new\
  \ int[n + 1];\n        f[0] = 0;\n        f[1] = 1;\n        for (int i = 2; i <=\
  \ n; i++) {\n            f[i] = f[i - 1] + f[i - 2];\n        }\n        return\
  \ f[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        int prev = 0;\n        int curr = 1;\n\
  \        for (int i = 2; i <= n; i++) {\n            int tmp = curr;\n         \
  \   curr = prev + curr;\n            prev = tmp;\n        }\n        return curr;"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) return n;\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        int a = 0, b = 1, c, i;\n        if (n == 0)\n            return a;\n \
  \       for (i = 2; i <= n; i++) {\n            c = a + b;\n            a = b;\n\
  \            b = c;\n        }\n        return b;"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        int a = 0;\n\
  \        int b = 1;\n        for (int i = 2; i <= n; i++) {\n            int c =\
  \ a + b;\n            a = b;\n            b = c;\n        }\n        return b;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        int[] fib = new\
  \ int[n + 1];\n        fib[0] = 0;\n        fib[1] = 1;\n        for (int i = 2;\
  \ i <= n; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n        }\n   \
  \     return fib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);"
- "        if (n <= 1) {\n            return n;\n        }\n        int a = 0;\n \
  \       int b = 1;\n        for (int i = 2; i <= n; i++) {\n            int c =\
  \ a + b;\n            a = b;\n            b = c;\n        }\n        return b;"
- "        if (n <= 1) {\n            return n;\n        }\n        return fib(n -\
  \ 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        int a = 0;\n\
  \        int b = 1;\n        for (int i = 2; i <= n; i++) {\n            int c =\
  \ a + b;\n            a = b;\n            b = c;\n        }\n        return b;"
- "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
  \ - 1) + fib(n - 2);"
language: java
name: HumanEval_55_fib
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return n-th Fibonacci number.\n    public static int fib(int\
  \ n) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(fib((10)) == (55));\n\
  \    assert(fib((1)) == (1));\n    assert(fib((8)) == (21));\n    assert(fib((11))\
  \ == (89));\n    assert(fib((12)) == (144));\n    }\n\n}\n"

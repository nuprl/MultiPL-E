name: HumanEval_34_unique
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return sorted unique elements in a list\n    public static\
  \ ArrayList<Integer> unique(ArrayList<Integer> l) {\n"
tests: "return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
  \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
  \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
  \    }\n\n}\n"
completions: ["        ArrayList<Integer> result = new ArrayList<Integer>();\n   \
    \     for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ ans = new ArrayList<>();\n        for (int x : l) {\n            if (!ans.contains(x))\
    \ {\n                ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n\
    \        for (int i : l) {\n            if (!res.contains(i)) {\n            \
    \    res.add(i);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;", "        ArrayList<Integer> ans = new ArrayList<>();\n \
    \       for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                ans.add(l.get(i));\n            }\n    \
    \    }\n        return ans;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ ans = new ArrayList<>();\n        for (int x : l) {\n            if (!ans.contains(x))\
    \ {\n                ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                res.add(l.get(i));\n            }\n    \
    \    }\n        return res;", "        ArrayList<Integer> res = new ArrayList<>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                res.add(l.get(i));\n            }\n    \
    \    }\n        return res;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n \
    \       for (int i : l) {\n            if (!res.contains(i)) {\n             \
    \   res.add(i);\n            }\n        }\n        Collections.sort(res);\n  \
    \      return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> ans = new ArrayList<>();\n        for (int x : l) {\n\
    \            if (!ans.contains(x)) {\n                ans.add(x);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;", "     \
    \   ArrayList<Integer> u = new ArrayList<Integer>();\n        for (int i = 0;\
    \ i < l.size(); i++) {\n            if (!u.contains(l.get(i))) {\n           \
    \     u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> ans = new ArrayList<>();\n  \
    \      for (int x : l) {\n            if (!ans.contains(x)) {\n              \
    \  ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n   \
    \     return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n   \
    \     for (int i : l) {\n            if (!res.contains(i)) {\n               \
    \ res.add(i);\n            }\n        }\n        Collections.sort(res);\n    \
    \    return res;", "        ArrayList<Integer> res = new ArrayList<>();\n    \
    \    for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                res.add(l.get(i));\n            }\n    \
    \    }\n        return res;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int i : l) {\n            if (!ans.contains(i)) {\n            \
    \    ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> res = new ArrayList<>();\n        for (int i : l) {\n\
    \            if (!res.contains(i)) {\n                res.add(i);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;", "     \
    \   ArrayList<Integer> ans = new ArrayList<>();\n        for (int i : l) {\n \
    \           if (!ans.contains(i)) {\n                ans.add(i);\n           \
    \ }\n        }\n        Collections.sort(ans);\n        return ans;", "      \
    \  ArrayList<Integer> ans = new ArrayList<>();\n        for (int i : l) {\n  \
    \          if (!ans.contains(i)) {\n                ans.add(i);\n            }\n\
    \        }\n        Collections.sort(ans);\n        return ans;", "        ArrayList<Integer>\
    \ ans = new ArrayList<>();\n        for (int x : l) {\n            if (!ans.contains(x))\
    \ {\n                ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ ret = new ArrayList<>();\n        for (int x : l) {\n            if (!ret.contains(x))\
    \ {\n                ret.add(x);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n \
    \       for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                res.add(l.get(i));\n            }\n    \
    \    }\n        return res;", "        ArrayList<Integer> res = new ArrayList<>();\n\
    \        for (int i : l) {\n            if (!res.contains(i)) {\n            \
    \    res.add(i);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;", "        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                ret.add(l.get(i));\n            }\n    \
    \    }\n        return ret;", "        ArrayList<Integer> res = new ArrayList<>();\n\
    \        for (int x : l) {\n            if (!res.contains(x)) {\n            \
    \    res.add(x);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;", "        ArrayList<Integer> ans = new ArrayList<>();\n \
    \       for (int x : l) {\n            if (!ans.contains(x)) {\n             \
    \   ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n  \
    \      return ans;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> u = new ArrayList<Integer>();\n        for (int i =\
    \ 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i))) {\n        \
    \        u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> ans = new ArrayList<>();\n  \
    \      for (int x : l) {\n            if (!ans.contains(x)) {\n              \
    \  ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n   \
    \     return ans;", "        ArrayList<Integer> ans = new ArrayList<>();\n   \
    \     for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                ans.add(l.get(i));\n            }\n    \
    \    }\n        return ans;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int i : l) {\n            if (!ans.contains(i)) {\n            \
    \    ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;", "        ArrayList<Integer> ans = new ArrayList<>();\n \
    \       for (int i : l) {\n            if (!ans.contains(i)) {\n             \
    \   ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n  \
    \      return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n  \
    \      for (int i : l) {\n            if (!res.contains(i)) {\n              \
    \  res.add(i);\n            }\n        }\n        Collections.sort(res);\n   \
    \     return res;", "        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                ret.add(l.get(i));\n            }\n    \
    \    }\n        return ret;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ ans = new ArrayList<>();\n        for (int x : l) {\n            if (!ans.contains(x))\
    \ {\n                ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;", "        ArrayList<Integer> ans = new ArrayList<>();\n \
    \       for (int x : l) {\n            if (!ans.contains(x)) {\n             \
    \   ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n  \
    \      return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n  \
    \      for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                res.add(l.get(i));\n            }\n    \
    \    }\n        return res;", "        ArrayList<Integer> ret = new ArrayList<>();\n\
    \        for (int i : l) {\n            if (!ret.contains(i)) {\n            \
    \    ret.add(i);\n            }\n        }\n        Collections.sort(ret);\n \
    \       return ret;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int i : l) {\n            if (!res.contains(i))\
    \ {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n \
    \       for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                res.add(l.get(i));\n            }\n    \
    \    }\n        return res;", "        ArrayList<Integer> res = new ArrayList<>();\n\
    \        for (int x : l) {\n            if (!res.contains(x)) {\n            \
    \    res.add(x);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!result.contains(i)) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                ans.add(l.get(i));\n            }\n    \
    \    }\n        return ans;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int i : l) {\n            if (!res.contains(i))\
    \ {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;", "        ArrayList<Integer> r = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!r.contains(i)) {\n              \
    \  r.add(i);\n            }\n        }\n        Collections.sort(r);\n       \
    \ return r;", "        ArrayList<Integer> res = new ArrayList<>();\n        for\
    \ (int i : l) {\n            if (!res.contains(i)) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;",
  "        ArrayList<Integer> ans = new ArrayList<>();\n        for (int i : l) {\n\
    \            if (!ans.contains(i)) {\n                ans.add(i);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;", "     \
    \   ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int i\
    \ = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n \
    \               result.add(l.get(i));\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ u = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (!u.contains(l.get(i))) {\n                u.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(u);\n        return u;", " \
    \       ArrayList<Integer> ans = new ArrayList<>();\n        for (int x : l) {\n\
    \            if (!ans.contains(x)) {\n                ans.add(x);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;", "     \
    \   ArrayList<Integer> res = new ArrayList<>();\n        for (int i = 0; i < l.size();\
    \ i++) {\n            if (i == 0 || l.get(i) != l.get(i - 1)) {\n            \
    \    res.add(l.get(i));\n            }\n        }\n        return res;", "   \
    \     ArrayList<Integer> res = new ArrayList<>();\n        for (int i : l) {\n\
    \            if (!res.contains(i)) {\n                res.add(i);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;", "     \
    \   ArrayList<Integer> u = new ArrayList<Integer>();\n        for (int i = 0;\
    \ i < l.size(); i++) {\n            if (!u.contains(l.get(i))) {\n           \
    \     u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> ans = new ArrayList<>();\n  \
    \      for (int i : l) {\n            if (!ans.contains(i)) {\n              \
    \  ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n   \
    \     return ans;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> ans = new ArrayList<>();\n        for (int x : l) {\n\
    \            if (!ans.contains(x)) {\n                ans.add(x);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;", "     \
    \   ArrayList<Integer> ans = new ArrayList<>();\n        for (int i : l) {\n \
    \           if (!ans.contains(i)) {\n                ans.add(i);\n           \
    \ }\n        }\n        Collections.sort(ans);\n        return ans;", "      \
    \  ArrayList<Integer> res = new ArrayList<>();\n        for (int i : l) {\n  \
    \          if (!res.contains(i)) {\n                res.add(i);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i : l) {\n            if\
    \ (!result.contains(i)) {\n                result.add(i);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;", "       \
    \ ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int i =\
    \ 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n   \
    \             result.add(l.get(i));\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        HashSet<Integer>\
    \ set = new HashSet<>(l);\n        ArrayList<Integer> ret = new ArrayList<>(set);\n\
    \        Collections.sort(ret);\n        return ret;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i : l) {\n            if\
    \ (!result.contains(i)) {\n                result.add(i);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;", "       \
    \ ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int i =\
    \ 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n   \
    \             result.add(l.get(i));\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int\
    \ i : l) {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> ret = new ArrayList<>();\n        for (int i : l) {\n\
    \            if (!ret.contains(i)) {\n                ret.add(i);\n          \
    \  }\n        }\n        Collections.sort(ret);\n        return ret;", "     \
    \   ArrayList<Integer> res = new ArrayList<>();\n        for (int x : l) {\n \
    \           if (!res.contains(x)) {\n                res.add(x);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;", "      \
    \  ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int i =\
    \ 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n   \
    \             result.add(l.get(i));\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;", "        ArrayList<Integer> ans = new ArrayList<>();\n \
    \       for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                ans.add(l.get(i));\n            }\n    \
    \    }\n        return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                res.add(l.get(i));\n            }\n    \
    \    }\n        return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ ret = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (i == 0 || l.get(i) != l.get(i - 1)) {\n                ret.add(l.get(i));\n\
    \            }\n        }\n        return ret;", "        l.sort(null);\n    \
    \    ArrayList<Integer> u = new ArrayList<Integer>();\n        for (int i = 0;\
    \ i < l.size(); ++i) {\n            if (i == 0 || l.get(i) != l.get(i - 1)) {\n\
    \                u.add(l.get(i));\n            }\n        }\n        return u;",
  "        ArrayList<Integer> ans = new ArrayList<>();\n        for (int x : l) {\n\
    \            if (!ans.contains(x)) {\n                ans.add(x);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;", "     \
    \   ArrayList<Integer> ans = new ArrayList<>();\n        for (int i : l) {\n \
    \           if (!ans.contains(i)) {\n                ans.add(i);\n           \
    \ }\n        }\n        Collections.sort(ans);\n        return ans;", "      \
    \  ArrayList<Integer> res = new ArrayList<>();\n        for (int i = 0; i < l.size();\
    \ i++) {\n            if (i == 0 || l.get(i) != l.get(i - 1)) {\n            \
    \    res.add(l.get(i));\n            }\n        }\n        return res;", "   \
    \     ArrayList<Integer> u = new ArrayList<Integer>();\n        for (int i = 0;\
    \ i < l.size(); i++) {\n            if (!u.contains(l.get(i))) {\n           \
    \     u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> res = new ArrayList<>();\n  \
    \      for (int i : l) {\n            if (!res.contains(i)) {\n              \
    \  res.add(i);\n            }\n        }\n        Collections.sort(res);\n   \
    \     return res;", "        ArrayList<Integer> res = new ArrayList<>();\n   \
    \     for (int i : l) {\n            if (!res.contains(i)) {\n               \
    \ res.add(i);\n            }\n        }\n        Collections.sort(res);\n    \
    \    return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ ans = new ArrayList<>();\n        for (int x : l) {\n            if (!ans.contains(x))\
    \ {\n                ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> u = new ArrayList<Integer>();\n        for (int i =\
    \ 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i))) {\n        \
    \        u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> ans = new ArrayList<>();\n  \
    \      for (int i : l) {\n            if (!ans.contains(i)) {\n              \
    \  ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n   \
    \     return ans;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int i = 0; i < l.size(); i++) {\n   \
    \         if (i == 0 || l.get(i) != l.get(i - 1)) {\n                res.add(l.get(i));\n\
    \            }\n        }\n        return res;", "        ArrayList<Integer> res\
    \ = new ArrayList<>();\n        for (int i : l) {\n            if (!res.contains(i))\
    \ {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;", "        HashSet<Integer> h = new HashSet<Integer>();\n\
    \        for (int i : l) {\n            h.add(i);\n        }\n        ArrayList<Integer>\
    \ r = new ArrayList<Integer>();\n        for (int i : h) {\n            r.add(i);\n\
    \        }\n        Collections.sort(r);\n        return r;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> ret = new ArrayList<>();\n        for (int i : l) {\n\
    \            if (!ret.contains(i)) {\n                ret.add(i);\n          \
    \  }\n        }\n        Collections.sort(ret);\n        return ret;", "     \
    \   ArrayList<Integer> ans = new ArrayList<>();\n        for (int i : l) {\n \
    \           if (!ans.contains(i)) {\n                ans.add(i);\n           \
    \ }\n        }\n        Collections.sort(ans);\n        return ans;", "      \
    \  ArrayList<Integer> ans = new ArrayList<>();\n        for (int x : l) {\n  \
    \          if (!ans.contains(x)) {\n                ans.add(x);\n            }\n\
    \        }\n        Collections.sort(ans);\n        return ans;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n\
    \                result.add(l.get(i));\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ ans = new ArrayList<>();\n        for (int i : l) {\n            if (!ans.contains(i))\
    \ {\n                ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int x : l) {\n            if (!u.contains(x)) {\n              \
    \  u.add(x);\n            }\n        }\n        Collections.sort(u);\n       \
    \ return u;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> ans = new ArrayList<>();\n        for (int x : l) {\n\
    \            if (!ans.contains(x)) {\n                ans.add(x);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;", "     \
    \   ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int i\
    \ = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n \
    \               result.add(l.get(i));\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;", "        ArrayList<Integer> ans = new ArrayList<>();\n \
    \       for (int x : l) {\n            if (!ans.contains(x)) {\n             \
    \   ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n  \
    \      return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n  \
    \      for (int i : l) {\n            if (!res.contains(i)) {\n              \
    \  res.add(i);\n            }\n        }\n        Collections.sort(res);\n   \
    \     return res;", "        ArrayList<Integer> ans = new ArrayList<>();\n   \
    \     for (int i : l) {\n            if (!ans.contains(i)) {\n               \
    \ ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n    \
    \    return ans;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> ans = new ArrayList<>();\n  \
    \      for (int x : l) {\n            if (!ans.contains(x)) {\n              \
    \  ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n   \
    \     return ans;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int i : l) {\n            if (!res.contains(i))\
    \ {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ u = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (!u.contains(l.get(i))) {\n                u.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(u);\n        return u;", " \
    \       ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n\
    \                result.add(l.get(i));\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> ret = new ArrayList<>();\n  \
    \      for (int i : l) {\n            if (!ret.contains(i)) {\n              \
    \  ret.add(i);\n            }\n        }\n        Collections.sort(ret);\n   \
    \     return ret;", "        ArrayList<Integer> ans = new ArrayList<>();\n   \
    \     for (int x : l) {\n            if (!ans.contains(x)) {\n               \
    \ ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n    \
    \    return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n    \
    \    for (int i : l) {\n            if (!res.contains(i)) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;",
  "        ArrayList<Integer> res = new ArrayList<>();\n        for (int i = 0; i\
    \ < l.size(); i++) {\n            if (i == 0 || l.get(i) != l.get(i - 1)) {\n\
    \                res.add(l.get(i));\n            }\n        }\n        return\
    \ res;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i))) {\n\
    \                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int x : l) {\n            if (!res.contains(x))\
    \ {\n                res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int i : l) {\n            if (!res.contains(i))\
    \ {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ ans = new ArrayList<>();\n        for (int i = 0; i < l.size(); i++) {\n   \
    \         if (i == 0 || l.get(i) != l.get(i - 1)) {\n                ans.add(l.get(i));\n\
    \            }\n        }\n        return ans;", "        ArrayList<Integer> res\
    \ = new ArrayList<>();\n        for (int i = 0; i < l.size(); i++) {\n       \
    \     if (i == 0 || l.get(i) != l.get(i - 1)) {\n                res.add(l.get(i));\n\
    \            }\n        }\n        return res;", "        ArrayList<Integer> ans\
    \ = new ArrayList<>();\n        for (int i : l) {\n            if (!ans.contains(i))\
    \ {\n                ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> ans = new ArrayList<>();\n  \
    \      for (int x : l) {\n            if (!ans.contains(x)) {\n              \
    \  ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n   \
    \     return ans;", "        ArrayList<Integer> ans = new ArrayList<>();\n   \
    \     for (int x : l) {\n            if (!ans.contains(x)) {\n               \
    \ ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n    \
    \    return ans;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> ans = new ArrayList<>();\n  \
    \      for (int i : l) {\n            if (!ans.contains(i)) {\n              \
    \  ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n   \
    \     return ans;", "        ArrayList<Integer> ans = new ArrayList<>();\n   \
    \     for (int i : l) {\n            if (!ans.contains(i)) {\n               \
    \ ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n    \
    \    return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n    \
    \    for (int x : l) {\n            if (!res.contains(x)) {\n                res.add(x);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;",
  "        ArrayList<Integer> res = new ArrayList<>();\n        for (int i : l) {\n\
    \            if (!res.contains(i)) {\n                res.add(i);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;", "     \
    \   ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int i\
    \ = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n \
    \               result.add(l.get(i));\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ ans = new ArrayList<>();\n        for (int i : l) {\n            if (!ans.contains(i))\
    \ {\n                ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                res.add(l.get(i));\n            }\n    \
    \    }\n        return res;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                ans.add(l.get(i));\n            }\n    \
    \    }\n        return ans;", "        ArrayList<Integer> r = new ArrayList<Integer>();\n\
    \        for (int x : l) {\n            if (!r.contains(x)) {\n              \
    \  r.add(x);\n            }\n        }\n        Collections.sort(r);\n       \
    \ return r;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n    \
    \    for (int i : l) {\n            if (!u.contains(i)) {\n                u.add(i);\n\
    \            }\n        }\n        Collections.sort(u);\n        return u;", " \
    \       ArrayList<Integer> ans = new ArrayList<>();\n        for (int x : l) {\n\
    \            if (!ans.contains(x)) {\n                ans.add(x);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;", "     \
    \   ArrayList<Integer> ans = new ArrayList<>();\n        for (int i : l) {\n \
    \           if (!ans.contains(i)) {\n                ans.add(i);\n           \
    \ }\n        }\n        Collections.sort(ans);\n        return ans;", "      \
    \  ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int i =\
    \ 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i))) {\n   \
    \             result.add(l.get(i));\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!result.contains(i)) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int i : l) {\n            if (!ans.contains(i)) {\n            \
    \    ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ u = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (!u.contains(l.get(i))) {\n                u.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(u);\n        return u;", " \
    \       ArrayList<Integer> res = new ArrayList<>();\n        for (int i = 0; i\
    \ < l.size(); i++) {\n            if (i == 0 || l.get(i) != l.get(i - 1)) {\n\
    \                res.add(l.get(i));\n            }\n        }\n        return\
    \ res;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n    \
    \    for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int i : l) {\n            if (!res.contains(i))\
    \ {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> res = new ArrayList<>();\n  \
    \      for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                res.add(l.get(i));\n            }\n    \
    \    }\n        return res;", "        ArrayList<Integer> res = new ArrayList<>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                res.add(l.get(i));\n            }\n    \
    \    }\n        return res;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int i : l) {\n            if (!ans.contains(i)) {\n            \
    \    ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n \
    \       for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || !l.get(i).equals(l.get(i\
    \ - 1))) {\n                res.add(l.get(i));\n            }\n        }\n   \
    \     return res;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (!result.contains(l.get(i))) {\n                result.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> res = new ArrayList<>();\n        for (int i = 0; i\
    \ < l.size(); i++) {\n            if (i == 0 || l.get(i) != l.get(i - 1)) {\n\
    \                res.add(l.get(i));\n            }\n        }\n        return\
    \ res;", "        ArrayList<Integer> res = new ArrayList<>();\n        for (int\
    \ x : l) {\n            if (!res.contains(x)) {\n                res.add(x);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;",
  "        ArrayList<Integer> u = new ArrayList<Integer>();\n        for (int i =\
    \ 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i))) {\n        \
    \        u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ ans = new ArrayList<>();\n        for (int i : l) {\n            if (!ans.contains(i))\
    \ {\n                ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;", "        ArrayList<Integer> res = new ArrayList<>();\n\
    \        for (int i : l) {\n            if (!res.contains(i)) {\n            \
    \    res.add(i);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        ArrayList<Integer> res = new ArrayList<>();\n  \
    \      for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                res.add(l.get(i));\n            }\n    \
    \    }\n        return res;", "        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int i : l) {\n            if (!ans.contains(i)) {\n            \
    \    ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;", "        ArrayList<Integer> ans = new ArrayList<>();\n \
    \       for (int x : l) {\n            if (!ans.contains(x)) {\n             \
    \   ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n  \
    \      return ans;", "        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;", "        Set<Integer> s = new HashSet<>(l);\n        ArrayList<Integer>\
    \ r = new ArrayList<>(s);\n        Collections.sort(r);\n        return r;", " \
    \       ArrayList<Integer> ans = new ArrayList<>();\n        for (int x : l) {\n\
    \            if (!ans.contains(x)) {\n                ans.add(x);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;", "     \
    \   ArrayList<Integer> ans = new ArrayList<>();\n        for (int i = 0; i < l.size();\
    \ i++) {\n            if (i == 0 || l.get(i) != l.get(i - 1)) {\n            \
    \    ans.add(l.get(i));\n            }\n        }\n        return ans;", "   \
    \     ArrayList<Integer> ans = new ArrayList<>();\n        for (int x : l) {\n\
    \            if (!ans.contains(x)) {\n                ans.add(x);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;", "     \
    \   ArrayList<Integer> ans = new ArrayList<>();\n        for (int x : l) {\n \
    \           if (!ans.contains(x)) {\n                ans.add(x);\n           \
    \ }\n        }\n        Collections.sort(ans);\n        return ans;", "      \
    \  ArrayList<Integer> ans = new ArrayList<>();\n        for (int i : l) {\n  \
    \          if (!ans.contains(i)) {\n                ans.add(i);\n            }\n\
    \        }\n        Collections.sort(ans);\n        return ans;"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

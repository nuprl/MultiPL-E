name: HumanEval_78_hex_key
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You have been tasked to write a function that receives \n\
  \    // a hexadecimal number as a string and counts the number of hexadecimal \n\
  \    // digits that are primes (prime number, or a prime, is a natural number \n\
  \    // greater than 1 that is not a product of two smaller natural numbers).\n\
  \    // Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n\
  \    // Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\n    // So you have to determine\
  \ a number of the following digits: 2, 3, 5, 7, \n    // B (=decimal 11), D (=decimal\
  \ 13).\n    // Note: you may assume the input is always correct or empty string,\
  \ \n    // and symbols A,B,C,D,E,F are always uppercase.\n    // Examples:\n   \
  \ public static long hexKey(String num) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(hexKey((\"\
  AB\")) == (1l));\n    assert(hexKey((\"1077E\")) == (2l));\n    assert(hexKey((\"\
  ABED1A33\")) == (4l));\n    assert(hexKey((\"2020\")) == (2l));\n    assert(hexKey((\"\
  123456789ABCDEF0\")) == (6l));\n    assert(hexKey((\"112233445566778899AABBCCDDEEFF00\"\
  )) == (12l));\n    }\n\n}\n"
completions: ["        // your code here\n        long count = 0;\n        for(int\
    \ i = 0; i < num.length(); i++) {\n            if(num.charAt(i) == '2' || num.charAt(i)\
    \ == '3' || num.charAt(i) == '5' || num.charAt(i) == '7' || num.charAt(i) == 'B'\
    \ || num.charAt(i) == 'D') {\n                count++;\n            }\n      \
    \  }\n        return count;", "        // Your code here\n        return 0;",
  '        return num.chars().mapToObj(i -> (char)i).filter(c -> "2357BD".contains(c+"")).count();',
  "        // Your code here\n        return 0;", '        return num.chars().filter(c
    -> "2357BD".indexOf(c) != -1).count();', "        // Your code here\n        return\
    \ 0;", "        // your code here\n        return 0;", "        // your code here\n\
    \        return 0;", "        // Your code here\n        return 0;", "       \
    \ long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n        \
    \    if (num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i) == '5'\
    \ || num.charAt(i) == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       // Your code here\n        return 0;", "        // your code here\n  \
    \      return 0;", "        // Your code here\n        return 0;", '        return
    num.chars().filter(c -> "2357BD".indexOf(c) != -1).count();', "        // Your\
    \ code here\n        return 0;", '        return num.chars().mapToObj(i -> (char)i).filter(c
    -> "2357BD".contains(c.toString())).count();', '        return num.chars().filter(c
    -> "2357BD".indexOf(c) != -1).count();', '        return num.chars().filter(x
    -> "2357BD".indexOf(x) != -1).count();', '        return num.chars().filter(i
    -> "2357BD".indexOf(i) != -1).count();', '        return num.chars().mapToObj(c
    -> (char) c).filter(c -> "2357BD".contains(c + "")).count();', "        long count\
    \ = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c =\
    \ num.charAt(i);\n            if (c == '2' || c == '3' || c == '5' || c == '7'\
    \ || c == 'B' || c == 'D') {\n                count++;\n            }\n      \
    \  }\n        return count;", "        return num.chars().mapToObj(i -> (char)i).filter(c\
    \ -> c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D').count();",
  '        return num.chars().filter(x -> "2357BD".indexOf(x) != -1).count();', " \
    \       // Write your code here\n        return 0;", "        // Your code here\n\
    \        return 0;", '        return num.chars().filter(c -> "2357BD".indexOf(c)
    != -1).count();', "        return num.chars().filter(x -> x == '2' || x == '3'\
    \ || x == '5' || x == '7' || x == 'B' || x == 'D').count();", "        long count\
    \ = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c =\
    \ num.charAt(i);\n            if (c == '2' || c == '3' || c == '5' || c == '7'\
    \ || c == 'B' || c == 'D') {\n                count++;\n            }\n      \
    \  }\n        return count;", "        // Your code here\n        long count =\
    \ 0;\n        for(int i = 0; i < num.length(); i++) {\n            if(num.charAt(i)\
    \ == '2' || num.charAt(i) == '3' || num.charAt(i) == '5' || num.charAt(i) == '7'\
    \ || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;", "        // Your code here\n\
    \        return 0;", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            if (num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i)\
    \ == '5' || num.charAt(i) == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D')\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        // Your code here\n        // return 0;\n        long count = 0;\n    \
    \    for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) ==\
    \ '2' || num.charAt(i) == '3' || num.charAt(i) == '5' || num.charAt(i) == '7'\
    \ || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;", '        return num.chars().filter(c
    -> "2357BD".indexOf(c) >= 0).count();', "        // your code here\n        return\
    \ 0;", "        // your code here\n        return 0;", "        // Your code here\n\
    \        return 0;", '        return num.chars().mapToObj(i -> (char)i).filter(c
    -> "2357BD".contains(c.toString())).count();', "        // your code here\n  \
    \      return 0;", "        // your code here\n        return 0;", "        //\
    \ your code here\n        return 0;", "        // your code here\n        return\
    \ 0;", "        // Write your code here\n        long result = 0;\n        for\
    \ (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                result++;\n            }\n        }\n        return\
    \ result;", "        // your code here\n        return 0;", "        // your code\
    \ here\n        return 0;", "        // your code here\n        return 0;", '        return
    num.chars().filter(c -> "2357BD".indexOf(c) >= 0).count();', '        return num.chars().mapToObj(x
    -> (char)x).filter(x -> "2357BD".contains(x+"")).count();', "        // Your code\
    \ here\n        return 0;", '        return num.chars().filter(c -> "2357BD".indexOf(c)
    != -1).count();', '        return num.chars().filter(c -> "2357BD".indexOf(c)
    != -1).count();', "        // Write your code here\n        // Return the number\
    \ of hexadecimal digits that are primes\n        // If the input is empty string,\
    \ return 0\n        // If the input is null, return 0\n        // If the input\
    \ is not a string, return 0\n        // If the input is not a hexadecimal number,\
    \ return 0\n        // If the input is not a natural number, return 0\n      \
    \  // If the input is not a number, return 0\n        // If the input is not a\
    \ string, return 0\n        // If the input is not a string, return 0\n      \
    \  // If the input is not a string, return 0\n        // If the input is not a\
    \ string, return 0\n        // If the input is not a string, return 0\n      \
    \  // If the input is not a string, return 0\n        // If the input is not a\
    \ string, return 0\n        // If the input is not a string, return 0\n      \
    \  // If the input is not a string, return 0\n        // If the input is not a\
    \ string, return 0\n        // If the input is not a string, return 0\n      \
    \  // If the input is not a string, return 0\n        // If the input is not a\
    \ string, return 0\n        // If the input is not a string, return 0\n      \
    \  // If the input is not a string, return 0\n        // If the input is not a\
    \ string, return 0\n        // If the input is not a string, return 0\n      \
    \  // If the input is not a string, return 0\n        // If the input is not a\
    \ string, return 0\n        // If the input is not a string, return 0\n      \
    \  // If the input is not a string, return 0\n        // If the input is not a\
    \ string, return 0\n        // If the input is not a string, return 0\n      \
    \  // If the input is not a string, return 0\n        // If the input is not a\
    \ string, return 0\n        // If the input is not a string, return 0\n      \
    \  // If the input is not a string, return 0\n        // If the input is not a\
    \ string, return 0\n        // If the input is not a string, return 0\n      \
    \  // If the input is not a string, return 0\n        // If the input is not a\
    \ string, return 0\n        // If the input", '        return num.chars().filter(c
    -> "2357BD".indexOf(c) != -1).count();', '        return num.chars().filter(c
    -> "2357BD".indexOf(c) >= 0).count();', "        // Your code here\n        return\
    \ 0;", '        return num.chars().mapToObj(c -> (char) c).filter(c -> "2357BD".contains(c.toString())).count();',
  '        return num.chars().filter(x -> "2357BD".indexOf(x) != -1).count();', '        return
    num.chars().mapToObj(x -> (char)x).filter(x -> "2357BD".contains(x+"")).count();',
  '        return num.chars().filter(x -> "2357BD".indexOf(x) != -1).count();', '        return
    num.chars().mapToObj(i -> (char)i).filter(c -> "2357BD".contains(String.valueOf(c))).count();',
  "        // Your code here\n        return 0;", "        // your code here\n   \
    \     return 0;", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            if (num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i)\
    \ == '5' || num.charAt(i) == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D')\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        // Your code here\n        return 0;", "        long result = 0;\n    \
    \    for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n\
    \            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D') {\n                result++;\n            }\n        }\n        return\
    \ result;", "        // Your code here\n        return 0;", "        // Your code\
    \ here\n        return 0;", '        return num.chars().filter(c -> "2357BD".indexOf(c)
    > -1).count();', "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            if (num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i)\
    \ == '5' || num.charAt(i) == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D')\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        // Your code here\n        return 0;", '        return num.chars().mapToObj(c
    -> (char) c).filter(c -> "2357BD".contains(String.valueOf(c))).count();', "  \
    \      if (num.length() == 0) {\n            return 0;\n        }\n        long\
    \ result = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char\
    \ c = num.charAt(i);\n            if (c == '2' || c == '3' || c == '5' || c ==\
    \ '7' || c == 'B' || c == 'D') {\n                result++;\n            }\n \
    \       }\n        return result;", '        return num.chars().filter(x -> "2357BD".indexOf(x)
    != -1).count();', "        // Your code here\n        return 0;", "        long\
    \ result = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if\
    \ (num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i) == '5' || num.charAt(i)\
    \ == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n                result++;\n\
    \            }\n        }\n        return result;", '        return num.chars().mapToObj(i
    -> (char)i).filter(c -> "2357BD".contains(c.toString())).count();', '        return
    num.chars().filter(c -> "2357BD".indexOf(c) != -1).count();', "        long count\
    \ = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i)\
    \ == '2' || num.charAt(i) == '3' || num.charAt(i) == '5' || num.charAt(i) == '7'\
    \ || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;", "        return num.chars().filter(c\
    \ -> c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D').count();",
  '        return num.chars().filter(c -> "2357BD".indexOf(c) != -1).count();', " \
    \       // Your code here\n        return 0;", '        return num.chars().mapToObj(c
    -> (char) c).filter(c -> "2357BD".contains(c + "")).count();', '        return
    num.toUpperCase().chars().filter(c -> "2357BD".indexOf(c) != -1).count();', '        return
    num.chars().filter(c -> "2357BD".indexOf(c) != -1).count();', '        return
    num.chars().mapToObj(i -> (char)i).filter(c -> "2357BD".contains(String.valueOf(c))).count();',
  "        // Your code here\n        return 0;", "        // Your code here\n   \
    \     return 0;", "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            if (num.charAt(i) == '2' || num.charAt(i) == '3' ||\n  \
    \              num.charAt(i) == '5' || num.charAt(i) == '7' ||\n             \
    \   num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;", '        return num.chars().filter(c
    -> "2357BD".indexOf(c) >= 0).count();', "        // Your code here\n        return\
    \ 0;", '        return num.chars().mapToObj(i -> (char)i).filter(c -> "2357BD".contains(String.valueOf(c))).count();',
  '        return num.chars().filter(c -> "2357BD".indexOf(c) > -1).count();', " \
    \       long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n  \
    \          if (num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i) ==\
    \ '5' || num.charAt(i) == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D')\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long result = 0;\n        for (int i = 0; i < num.length(); i++) {\n  \
    \          char c = num.charAt(i);\n            if (c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D') {\n                result++;\n \
    \           }\n        }\n        return result;", '        return num.chars().filter(c
    -> "2357BD".indexOf(c) >= 0).count();', "        // Your code here\n        return\
    \ 0;", '        return num.chars().filter(c -> "2357BD".indexOf(c) != -1).count();',
  "        // your code here\n        return 0;", "        // Your code here\n   \
    \     return 0;", "        // Your code here\n        return 0;", "        return\
    \ num.chars().mapToObj(c -> (char) c).filter(c -> c == '2' || c == '3' || c ==\
    \ '5' || c == '7' || c == 'B' || c == 'D').count();", "        // Your code here\n\
    \        return 0;", "        // your code here\n        return 0;", "       \
    \ // Your code here\n        return 0;", '        return num.chars().mapToObj(x
    -> (char)x).filter(x -> "2357BD".contains(x.toString())).count();', '        return
    num.chars().mapToObj(i -> (char)i).filter(c -> "2357BD".contains(c+"")).count();',
  "        long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n   \
    \         if (num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i) ==\
    \ '5' || num.charAt(i) == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D')\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        // Your code here\n        return 0;", "        long count = 0;\n     \
    \   for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) ==\
    \ '2' || num.charAt(i) == '3' || num.charAt(i) == '5' || num.charAt(i) == '7'\
    \ || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;", "        // Your code here\n\
    \        return 0;", '        return num.chars().filter(i -> "2357BD".indexOf(i)
    != -1).count();', "        long count = 0;\n        for (int i = 0; i < num.length();\
    \ i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;", '        return num.chars().filter(c
    -> "2357BD".indexOf(c) != -1).count();', "        // Your code here\n        return\
    \ 0;", "        // Your code here\n        return 0;", '        return num.chars().filter(c
    -> "2357BD".indexOf(c) >= 0).count();', "        // Your code here\n        return\
    \ 0;", "        // your code here\n        return 0;", "        // Your code here\n\
    \        return 0;", "        // Your code here\n        return 0;", "       \
    \ // Your code here\n        return 0;", '        return num.chars().filter(c
    -> "2357BD".indexOf(c) >= 0).count();', '        return num.chars().filter(c ->
    "2357BD".indexOf(c) != -1).count();', "        String[] hex = {\"0\", \"1\", \"\
    2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"\
    D\", \"E\", \"F\"};\n        long[] primes = {2, 3, 5, 7, 11, 13};\n        long\
    \ result = 0;\n        for (int i = 0; i < num.length(); i++) {\n            for\
    \ (int j = 0; j < hex.length; j++) {\n                if (num.charAt(i) == hex[j].charAt(0))\
    \ {\n                    result += primes[j];\n                }\n           \
    \ }\n        }\n        return result;", "        // Your code here\n        return\
    \ 0;", "        // Your code here\n        return 0;", "        // your code here\n\
    \        return 0;", "        // Your code here\n        return 0;", "       \
    \ // Your code here\n        return 0;", "        // Your code here\n        return\
    \ 0;", "        long count = 0;\n        String[] hex = {\"2\", \"3\", \"5\",\
    \ \"7\", \"B\", \"D\"};\n        for (int i = 0; i < num.length(); i++) {\n  \
    \          for (int j = 0; j < hex.length; j++) {\n                if (num.charAt(i)\
    \ == hex[j].charAt(0)) {\n                    count++;\n                }\n  \
    \          }\n        }\n        return count;", "        long result = 0;\n \
    \       String hex = \"2357BD\";\n        for (int i = 0; i < num.length(); i++)\
    \ {\n            if (hex.contains(num.substring(i, i + 1))) {\n              \
    \  result++;\n            }\n        }\n        return result;", "        long\
    \ result = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char\
    \ c = num.charAt(i);\n            int d = Character.digit(c, 16);\n          \
    \  if (d == 2 || d == 3 || d == 5 || d == 7 || d == 11 || d == 13) {\n       \
    \         result += d;\n            }\n        }\n        return result;", " \
    \       // your code here\n        return 0;", "        // Your code here\n  \
    \      return 0;", "        // Your code here\n        return 0;", "        //\
    \ Your code here\n        return 0;", '        return num.chars().filter(c ->
    "2357BD".indexOf(c) != -1).count();', '        return num.chars().filter(c ->
    "2357BD".indexOf(c) != -1).count();', "        if (num.length() == 0) return 0;\n\
    \        long result = 0;\n        for (int i = 0; i < num.length(); i++) {\n\
    \            char c = num.charAt(i);\n            if (c == '2' || c == '3' ||\
    \ c == '5' || c == '7' || c == 'B' || c == 'D') result++;\n        }\n       \
    \ return result;", "        // Your code here\n        return 0;", "        //\
    \ your code here\n        return 0;", "        long result = 0;\n        for (char\
    \ c : num.toCharArray()) {\n            if (c == '2' || c == '3' || c == '5' ||\
    \ c == '7' || c == 'B' || c == 'D') {\n                result++;\n           \
    \ }\n        }\n        return result;", '        return num.chars().filter(c
    -> "2357BD".indexOf(c) >= 0).count();', "        // Your code here\n        return\
    \ 0;", "        // your code here\n        return 0;", "        // Your code here\n\
    \        return 0;", "        // Your code here\n        return 0;", "       \
    \ // Your code here\n        return 0;", '        return num.chars().filter(c
    -> "2357BD".indexOf(c) >= 0).count();', '        return num.chars().mapToObj(i
    -> (char)i).filter(c -> "2357BD".contains(c.toString())).count();', '        return
    num.chars().filter(x -> "2357BDF".indexOf(x) != -1).count();', "        long result\
    \ = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c =\
    \ num.charAt(i);\n            if (c == '2' || c == '3' || c == '5' || c == '7'\
    \ || c == 'B' || c == 'D') {\n                result++;\n            }\n     \
    \   }\n        return result;", "        // your code here\n        return 0;",
  "        // Your code here\n        return 0;", '        return num.chars().mapToObj(c
    -> (char) c).filter(c -> "2357BD".contains(c.toString())).count();', '        return
    num.chars().filter(i -> "2357BD".indexOf(i) >= 0).count();', "        // Your\
    \ code here\n        // Good luck!\n        long count = 0;\n        for(int i\
    \ = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n       \
    \     if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        // Your code here\n        return 0;", '        return num.chars().mapToObj(c
    -> (char) c).filter(c -> "2357BD".contains(c + "")).count();', "        // Your\
    \ code here\n        return 0;", "        long result = 0;\n        for (int i\
    \ = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n       \
    \     if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\
    \ {\n                result++;\n            }\n        }\n        return result;",
  "        // Your code here\n        return 0;", "        // your code here\n   \
    \     return 0;", '        return num.chars().mapToObj(i -> (char)i).filter(i
    -> "2357BD".contains(String.valueOf(i))).count();', '        return num.chars().mapToObj(c
    -> (char) c).filter(c -> "2357BD".contains(c + "")).count();', "        long count\
    \ = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i)\
    \ == '2' || num.charAt(i) == '3' || num.charAt(i) == '5' || num.charAt(i) == '7'\
    \ || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;", "        // your code here\n\
    \        return 0;", "        // Your code here\n        return 0;", "       \
    \ return num.chars().mapToObj(x -> (char)x).filter(x -> x == '2' || x == '3' ||\
    \ x == '5' || x == '7' || x == 'B' || x == 'D').count();", "        // your code\
    \ here\n        return 0;", '        return num.chars().filter(c -> "2357BD".indexOf(c)
    != -1).count();', '        return num.chars().filter(c -> "2357BD".indexOf(c)
    != -1).count();', "        // Your code here\n        // return 0;\n        long\
    \ count = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if\
    \ (num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i) == '5' || num.charAt(i)\
    \ == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n                count++;\n\
    \            }\n        }\n        return count;", '        return num.chars().filter(c
    -> "2357BD".indexOf(c) != -1).count();', "        long result = 0;\n        //\
    \ Write your code here\n        return result;", "        // your code here\n\
    \        return 0;", '        return num.chars().mapToObj(c -> (char) c).filter(c
    -> "2357BD".contains(c.toString())).count();', "        // Your code here\n  \
    \      long count = 0;\n        for(int i = 0; i < num.length(); i++) {\n    \
    \        if(num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i) == '5'\
    \ || num.charAt(i) == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       // your code here\n        return 0;", "        // your code here\n  \
    \      return 0;", "        // Your code here\n        return 0;", "        long\
    \ sum = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char\
    \ c = num.charAt(i);\n            if (c == '2' || c == '3' || c == '5' || c ==\
    \ '7' || c == 'B' || c == 'D') {\n                sum++;\n            }\n    \
    \    }\n        return sum;", '        return num.chars().filter(c -> "2357BD".indexOf(c)
    != -1).count();', '        return num.chars().mapToObj(c -> (char) c).filter(c
    -> "2357BD".contains(c.toString())).count();', "        // Your code here\n  \
    \      return 0;", "        // your code here\n        return 0;", "        //\
    \ Your code here\n        return 0;", "        // Your code here\n        return\
    \ 0;", "        // Your code here\n        return 0;", "        // your code here\n\
    \        return 0;", "        // Your code here\n        return 0;", '        return
    num.chars().mapToObj(c -> (char) c).filter(c -> "2357BD".contains(String.valueOf(c))).count();',
  '        return num.chars().filter(x -> "2357BD".indexOf(x) > -1).count();', " \
    \       // your code here\n        return 0;", "        String[] hexDigits = {\"\
    0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"\
    B\", \"C\", \"D\", \"E\", \"F\"};\n        long[] primes = {2, 3, 5, 7, 11, 13};\n\
    \        long count = 0;\n        for (int i = 0; i < num.length(); i++) {\n \
    \           for (int j = 0; j < hexDigits.length; j++) {\n                if (num.charAt(i)\
    \ == hexDigits[j].charAt(0)) {\n                    if (j < 10) {\n          \
    \              if (j == 2 || j == 3 || j == 5 || j == 7) {\n                 \
    \           count++;\n                        }\n                    } else {\n\
    \                        if (j == 10 || j == 11 || j == 13) {\n              \
    \              count++;\n                        }\n                    }\n  \
    \              }\n            }\n        }\n        return count;", "        //\
    \ your code here\n        return 0;", "        // Your code here\n        // Good\
    \ luck!\n        return 0;", "        // Your code here\n        return 0;", " \
    \       // Your code here\n        return 0;", "        // Your code here\n  \
    \      long count = 0;\n        for(int i = 0; i < num.length(); i++) {\n    \
    \        if(num.charAt(i) == '2' || num.charAt(i) == '3' || num.charAt(i) == '5'\
    \ || num.charAt(i) == '7' || num.charAt(i) == 'B' || num.charAt(i) == 'D') {\n\
    \                count++;\n            }\n        }\n        return count;"]
stop_tokens:
- "\n    }\n"

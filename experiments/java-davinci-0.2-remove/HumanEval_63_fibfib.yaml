completions:
- "        int[] fibfib = new int[n+1];\n        fibfib[0] = 0;\n        fibfib[1]\
  \ = 0;\n        fibfib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n       \
  \     fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3];\n        }\n        return\
  \ fibfib[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibfib = new int[n+1];\n        fibfib[0] = 0;\n \
  \       fibfib[1] = 0;\n        fibfib[2] = 1;\n        for (int i = 3; i <= n;\
  \ i++) {\n            fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3];\n   \
  \     }\n        return fibfib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fib = new int[n+1];\n        fib[0] = 0;\n       \
  \ fib[1] = 0;\n        fib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n   \
  \         fib[i] = fib[i-1] + fib[i-2] + fib[i-3];\n        }\n        return fib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] fibfibs = new int[n + 1];\n        fibfibs[0] = 0;\n \
  \       fibfibs[1] = 0;\n        fibfibs[2] = 1;\n        for (int i = 3; i <= n;\
  \ i++) {\n            fibfibs[i] = fibfibs[i - 1] + fibfibs[i - 2] + fibfibs[i -\
  \ 3];\n        }\n        return fibfibs[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibfib = new int[n+1];\n        fibfib[0] = 0;\n \
  \       fibfib[1] = 0;\n        fibfib[2] = 1;\n        for (int i = 3; i <= n;\
  \ i++) {\n            fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3];\n   \
  \     }\n        return fibfib[n];"
- "        // TODO: Implement this function.\n        return 0;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibfib = new int[n+1];\n        fibfib[0] = 0;\n \
  \       fibfib[1] = 0;\n        fibfib[2] = 1;\n        for (int i = 3; i <= n;\
  \ i++) {\n            fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3];\n   \
  \     }\n        return fibfib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibfibs = new int[n+1];\n        fibfibs[0] = 0;\n\
  \        fibfibs[1] = 0;\n        fibfibs[2] = 1;\n        for (int i = 3; i <=\
  \ n; i++) {\n            fibfibs[i] = fibfibs[i-1] + fibfibs[i-2] + fibfibs[i-3];\n\
  \        }\n        return fibfibs[n];"
- "        int[] fibfib = new int[n+1];\n        fibfib[0] = 0;\n        fibfib[1]\
  \ = 0;\n        fibfib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n       \
  \     fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3];\n        }\n        return\
  \ fibfib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibs = new int[n+1];\n        fibs[0] = 0;\n     \
  \   fibs[1] = 0;\n        fibs[2] = 1;\n        for (int i = 3; i <= n; i++) {\n\
  \            fibs[i] = fibs[i-1] + fibs[i-2] + fibs[i-3];\n        }\n        return\
  \ fibs[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] arr = new int[n];\n        arr[0] = 0;\n        arr[1]\
  \ = 0;\n        arr[2] = 1;\n        for (int i = 3; i < n; i++) {\n           \
  \ arr[i] = arr[i-1] + arr[i-2] + arr[i-3];\n        }\n        return arr[n-1];"
- "        int[] arr = new int[n+1];\n        arr[0] = 0;\n        arr[1] = 0;\n \
  \       arr[2] = 1;\n        for(int i = 3; i <= n; i++) {\n            arr[i] =\
  \ arr[i-1] + arr[i-2] + arr[i-3];\n        }\n        return arr[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] fib = new int[n + 1];\n        fib[0] = 0;\n        fib[1]\
  \ = 0;\n        fib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n          \
  \  fib[i] = fib[i - 1] + fib[i - 2] + fib[i - 3];\n        }\n        return fib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        int[] fibfib = new int[n+1];\n        fibfib[0] = 0;\n        fibfib[1]\
  \ = 0;\n        fibfib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n       \
  \     fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3];\n        }\n        return\
  \ fibfib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] fibfibs = new int[n+1];\n        fibfibs[0] = 0;\n   \
  \     fibfibs[1] = 0;\n        fibfibs[2] = 1;\n        for (int i = 3; i <= n;\
  \ i++) {\n            fibfibs[i] = fibfibs[i-1] + fibfibs[i-2] + fibfibs[i-3];\n\
  \        }\n        return fibfibs[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fib = new int[n+1];\n        fib[0] = 0;\n       \
  \ fib[1] = 0;\n        fib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n   \
  \         fib[i] = fib[i-1] + fib[i-2] + fib[i-3];\n        }\n        return fib[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] fibs = new int[n+1];\n        fibs[0] = 0;\n        fibs[1]\
  \ = 0;\n        fibs[2] = 1;\n        for (int i = 3; i <= n; i++) {\n         \
  \   fibs[i] = fibs[i-1] + fibs[i-2] + fibs[i-3];\n        }\n        return fibs[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        int[] fibfib = new int[n+1];\n        fibfib[0] = 0;\n        fibfib[1]\
  \ = 0;\n        fibfib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n       \
  \     fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3];\n        }\n        return\
  \ fibfib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] fibfib = new int[n + 1];\n        fibfib[0] = 0;\n   \
  \     fibfib[1] = 0;\n        fibfib[2] = 1;\n        for (int i = 3; i <= n; i++)\
  \ {\n            fibfib[i] = fibfib[i - 1] + fibfib[i - 2] + fibfib[i - 3];\n  \
  \      }\n        return fibfib[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] arr = new int[n];\n        arr[0] = 0;\n        arr[1]\
  \ = 0;\n        arr[2] = 1;\n        for (int i = 3; i < n; i++) {\n           \
  \ arr[i] = arr[i-1] + arr[i-2] + arr[i-3];\n        }\n        return arr[n-1];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibs = new int[n+1];\n        fibs[0] = 0;\n     \
  \   fibs[1] = 0;\n        fibs[2] = 1;\n        for (int i = 3; i <= n; i++) {\n\
  \            fibs[i] = fibs[i-1] + fibs[i-2] + fibs[i-3];\n        }\n        return\
  \ fibs[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibs = new int[n];\n        fibs[0] = 0;\n       \
  \ fibs[1] = 0;\n        fibs[2] = 1;\n        for (int i = 3; i < n; i++) {\n  \
  \          fibs[i] = fibs[i-1] + fibs[i-2] + fibs[i-3];\n        }\n        return\
  \ fibs[n-1];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibs = new int[n+1];\n        fibs[0] = 0;\n     \
  \   fibs[1] = 0;\n        fibs[2] = 1;\n        for (int i = 3; i <= n; i++) {\n\
  \            fibs[i] = fibs[i-1] + fibs[i-2] + fibs[i-3];\n        }\n        return\
  \ fibs[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        // TODO: Implement this function.\n        return 0;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibs = new int[n];\n        fibs[0] = 0;\n       \
  \ fibs[1] = 0;\n        fibs[2] = 1;\n        for (int i = 3; i < n; i++) {\n  \
  \          fibs[i] = fibs[i-1] + fibs[i-2] + fibs[i-3];\n        }\n        return\
  \ fibs[n-1];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        int[] fibfib = new int[n+1];\n        fibfib[0] = 0;\n        fibfib[1]\
  \ = 0;\n        fibfib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n       \
  \     fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3];\n        }\n        return\
  \ fibfib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] fibfibs = new int[n + 1];\n        fibfibs[0] = 0;\n \
  \       fibfibs[1] = 0;\n        fibfibs[2] = 1;\n        for (int i = 3; i <= n;\
  \ i++) {\n            fibfibs[i] = fibfibs[i - 1] + fibfibs[i - 2] + fibfibs[i -\
  \ 3];\n        }\n        return fibfibs[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] fibs = new int[n];\n        fibs[0] = 0;\n        fibs[1]\
  \ = 0;\n        fibs[2] = 1;\n        for (int i = 3; i < n; i++) {\n          \
  \  fibs[i] = fibs[i-1] + fibs[i-2] + fibs[i-3];\n        }\n        return fibs[n-1];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibfib = new int[n+1];\n        fibfib[0] = 0;\n \
  \       fibfib[1] = 0;\n        fibfib[2] = 1;\n        for (int i = 3; i <= n;\
  \ i++) {\n            fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3];\n   \
  \     }\n        return fibfib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibs = new int[n+1];\n        fibs[0] = 0;\n     \
  \   fibs[1] = 0;\n        fibs[2] = 1;\n        for (int i = 3; i <= n; i++) {\n\
  \            fibs[i] = fibs[i-1] + fibs[i-2] + fibs[i-3];\n        }\n        return\
  \ fibs[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fib = new int[n+1];\n        fib[0] = 0;\n       \
  \ fib[1] = 0;\n        fib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n   \
  \         fib[i] = fib[i-1] + fib[i-2] + fib[i-3];\n        }\n        return fib[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] fibs = new int[n];\n        fibs[0] = 0;\n        fibs[1]\
  \ = 0;\n        fibs[2] = 1;\n        for (int i = 3; i < n; i++) {\n          \
  \  fibs[i] = fibs[i-1] + fibs[i-2] + fibs[i-3];\n        }\n        return fibs[n-1];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fib = new int[n+1];\n        fib[0] = 0;\n       \
  \ fib[1] = 0;\n        fib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n   \
  \         fib[i] = fib[i-1] + fib[i-2] + fib[i-3];\n        }\n        return fib[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        int[] fib = new int[n+1];\n        fib[0] = 0;\n        fib[1] = 0;\n \
  \       fib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n            fib[i]\
  \ = fib[i-1] + fib[i-2] + fib[i-3];\n        }\n        return fib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fib = new int[n+1];\n        fib[0] = 0;\n       \
  \ fib[1] = 0;\n        fib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n   \
  \         fib[i] = fib[i-1] + fib[i-2] + fib[i-3];\n        }\n        return fib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- '        return 0;'
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] fibfibs = new int[n + 1];\n        fibfibs[0] = 0;\n \
  \       fibfibs[1] = 0;\n        fibfibs[2] = 1;\n        for (int i = 3; i <= n;\
  \ i++) {\n            fibfibs[i] = fibfibs[i - 1] + fibfibs[i - 2] + fibfibs[i -\
  \ 3];\n        }\n        return fibfibs[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fib = new int[n+1];\n        fib[0] = 0;\n       \
  \ fib[1] = 0;\n        fib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n   \
  \         fib[i] = fib[i-1] + fib[i-2] + fib[i-3];\n        }\n        return fib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] fibfibs = new int[n+1];\n        fibfibs[0] = 0;\n   \
  \     fibfibs[1] = 0;\n        fibfibs[2] = 1;\n        for (int i = 3; i <= n;\
  \ i++) {\n            fibfibs[i] = fibfibs[i-1] + fibfibs[i-2] + fibfibs[i-3];\n\
  \        }\n        return fibfibs[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] cache = new int[n+1];\n        cache[0] = 0;\n       \
  \ cache[1] = 0;\n        cache[2] = 1;\n        for (int i = 3; i <= n; i++) {\n\
  \            cache[i] = cache[i-1] + cache[i-2] + cache[i-3];\n        }\n     \
  \   return cache[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] fibfib = new int[n + 1];\n        fibfib[0] = 0;\n   \
  \     fibfib[1] = 0;\n        fibfib[2] = 1;\n        for (int i = 3; i <= n; i++)\
  \ {\n            fibfib[i] = fibfib[i - 1] + fibfib[i - 2] + fibfib[i - 3];\n  \
  \      }\n        return fibfib[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibfib = new int[n+1];\n        fibfib[0] = 0;\n \
  \       fibfib[1] = 0;\n        fibfib[2] = 1;\n        for (int i = 3; i <= n;\
  \ i++) {\n            fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3];\n   \
  \     }\n        return fibfib[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int n_1 = 0;\n        int n_2 = 0;\n        int n_3 = 1;\n \
  \       int result = 0;\n        for (int i = 3; i <= n; i++) {\n            result\
  \ = n_1 + n_2 + n_3;\n            n_1 = n_2;\n            n_2 = n_3;\n         \
  \   n_3 = result;\n        }\n        return result;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibs = new int[n+1];\n        fibs[0] = 0;\n     \
  \   fibs[1] = 0;\n        fibs[2] = 1;\n        for (int i = 3; i <= n; i++) {\n\
  \            fibs[i] = fibs[i-1] + fibs[i-2] + fibs[i-3];\n        }\n        return\
  \ fibs[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        int[] fib = new int[n+1];\n        fib[0] = 0;\n        fib[1] = 0;\n \
  \       fib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n            fib[i]\
  \ = fib[i-1] + fib[i-2] + fib[i-3];\n        }\n        return fib[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibs = new int[n+1];\n        fibs[0] = 0;\n     \
  \   fibs[1] = 0;\n        fibs[2] = 1;\n        for (int i = 3; i <= n; i++) {\n\
  \            fibs[i] = fibs[i-1] + fibs[i-2] + fibs[i-3];\n        }\n        return\
  \ fibs[n];"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        // TODO: implement this function\n        return 0;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int[] fibfibs = new int[n + 1];\n        fibfibs[0] = 0;\n \
  \       fibfibs[1] = 0;\n        fibfibs[2] = 1;\n        for (int i = 3; i <= n;\
  \ i++) {\n            fibfibs[i] = fibfibs[i - 1] + fibfibs[i - 2] + fibfibs[i -\
  \ 3];\n        }\n        return fibfibs[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
  \            return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
  \        }\n        int a = 0;\n        int b = 0;\n        int c = 1;\n       \
  \ int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n\
  \            a = b;\n            b = c;\n            c = d;\n        }\n       \
  \ return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibfibs = new int[n+1];\n        fibfibs[0] = 0;\n\
  \        fibfibs[1] = 0;\n        fibfibs[2] = 1;\n        for (int i = 3; i <=\
  \ n; i++) {\n            fibfibs[i] = fibfibs[i-1] + fibfibs[i-2] + fibfibs[i-3];\n\
  \        }\n        return fibfibs[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fib = new int[n+1];\n        fib[0] = 0;\n       \
  \ fib[1] = 0;\n        fib[2] = 1;\n        for (int i = 3; i <= n; i++) {\n   \
  \         fib[i] = fib[i-1] + fib[i-2] + fib[i-3];\n        }\n        return fib[n];"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int[] fibfibs = new int[n+1];\n        fibfibs[0] = 0;\n\
  \        fibfibs[1] = 0;\n        fibfibs[2] = 1;\n        for (int i = 3; i <=\
  \ n; i++) {\n            fibfibs[i] = fibfibs[i-1] + fibfibs[i-2] + fibfibs[i-3];\n\
  \        }\n        return fibfibs[n];"
- "        // TODO: Implement me!\n        return 0;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
- "        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
  \ 2) return 1;\n        int a = 0;\n        int b = 0;\n        int c = 1;\n   \
  \     int d = 0;\n        for (int i = 3; i <= n; i++) {\n            d = a + b\
  \ + c;\n            a = b;\n            b = c;\n            c = d;\n        }\n\
  \        return d;"
language: java
name: HumanEval_63_fibfib
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // The FibFib number sequence is a sequence similar to the\
  \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
  \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
  \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
  \ element of the fibfib number sequence.\n    public static int fibfib(int n) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(fibfib((2)) ==\
  \ (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
  \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
  \    assert(fibfib((14)) == (927));\n    }\n\n}\n"

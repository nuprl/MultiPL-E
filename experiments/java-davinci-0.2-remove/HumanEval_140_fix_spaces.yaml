name: HumanEval_140_fix_spaces
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
  \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
  \ all consecutive spaces with -\n    public static String fixSpaces(String text)\
  \ {\n"
tests: "return \"\";\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
  Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"\
  Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"\
  Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"\
  Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\"\
  )));\n    }\n\n}\n"
completions: ['        return text.replaceAll("\\s+", "-");', "        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n        \
    \        count++;\n                if (count == 2) {\n                    sb.append('-');\n\
    \                    count = 0;\n                }\n            } else {\n   \
    \             if (count == 1) {\n                    sb.append('_');\n       \
    \         }\n                count = 0;\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (count == 1) {\n            sb.append('_');\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           if (text.charAt(i) == ' ') {\n                count++;\n         \
    \       if (count > 2) {\n                    sb.append('-');\n              \
    \      count = 0;\n                }\n            } else {\n                if\
    \ (count > 0) {\n                    sb.append('_');\n                    count\
    \ = 0;\n                }\n                sb.append(text.charAt(i));\n      \
    \      }\n        }\n        if (count > 0) {\n            sb.append('_');\n \
    \       }\n        return sb.toString();", '        return text.replaceAll("\\s+",
    "_");', "        // Write your code here\n        return text.replaceAll(\"\\\\\
    s+\", \" \").replaceAll(\" \", \"_\");", "        // TODO: implement this method\n\
    \        return null;", '        return text.replaceAll("\\s+", "_");', '        return
    text.replaceAll("\\s+", "-");', "        // Write your code here\n        return\
    \ text.replaceAll(\"\\\\s+\", \"_\");", '        return text.replaceAll("\\s+",
    "-");', '        return text.replaceAll("\\s{2,}", "-").replaceAll("\\s", "_");',
  '        return text.replaceAll("\\s+", "-");', '        return text.replaceAll("\\s+",
    "-");', '        return text.replaceAll("\\s+", "_");', '        return text.replaceAll("\\s{2,}",
    "-").replaceAll("\\s", "_");', "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           if (text.charAt(i) == ' ') {\n                if (count == 0) {\n\
    \                    sb.append('_');\n                } else if (count == 1) {\n\
    \                    sb.append('-');\n                }\n                count++;\n\
    \            } else {\n                sb.append(text.charAt(i));\n          \
    \      count = 0;\n            }\n        }\n        return sb.toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        int count = 0;\n    \
    \    for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count == 1) {\n   \
    \                 sb.append('_');\n                }\n            } else {\n \
    \               if (count > 2) {\n                    sb.append('-');\n      \
    \          } else {\n                    for (int j = 0; j < count; j++) {\n \
    \                       sb.append('_');\n                    }\n             \
    \   }\n                count = 0;\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (count > 2) {\n            sb.append('-');\n\
    \        } else {\n            for (int j = 0; j < count; j++) {\n           \
    \     sb.append('_');\n            }\n        }\n        return sb.toString();",
  '        return text.replaceAll("\\s+", " ").replaceAll(" ", "_");', "        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n        \
    \        count++;\n                if (count == 1) {\n                    sb.append('_');\n\
    \                }\n            } else {\n                if (count > 2) {\n \
    \                   sb.append('-');\n                } else {\n              \
    \      for (int j = 0; j < count; j++) {\n                        sb.append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \          sb.append(text.charAt(i));\n            }\n        }\n        if (count\
    \ > 2) {\n            sb.append('-');\n        } else {\n            for (int\
    \ j = 0; j < count; j++) {\n                sb.append('_');\n            }\n \
    \       }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int spaces = 0;\n        for (int i = 0; i < text.length(); i++) {\n\
    \            if (text.charAt(i) == ' ') {\n                spaces++;\n       \
    \     } else {\n                if (spaces > 2) {\n                    sb.append(\"\
    -\");\n                } else {\n                    for (int j = 0; j < spaces;\
    \ j++) {\n                        sb.append(\"_\");\n                    }\n \
    \               }\n                spaces = 0;\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.append(\"\
    -\");\n        } else {\n            for (int j = 0; j < spaces; j++) {\n    \
    \            sb.append(\"_\");\n            }\n        }\n        return sb.toString();",
  "        // TODO: implement this function\n        return null;", '        return
    text.replaceAll("\\s+", "_");', '        return text.replaceAll("\\s+", "-");',
  '        return text.replaceAll("\\s+", "-");', "        StringBuilder sb = new\
    \ StringBuilder();\n        int count = 0;\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (text.charAt(i) == ' ') {\n                count++;\n\
    \                if (count == 1) {\n                    sb.append('_');\n    \
    \            }\n            } else {\n                if (count > 2) {\n     \
    \               sb.append('-');\n                } else {\n                  \
    \  for (int j = 0; j < count; j++) {\n                        sb.append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \          sb.append(text.charAt(i));\n            }\n        }\n        if (count\
    \ > 2) {\n            sb.append('-');\n        } else {\n            for (int\
    \ j = 0; j < count; j++) {\n                sb.append('_');\n            }\n \
    \       }\n        return sb.toString();", '        return text.replaceAll("\\s+",
    "_");', "        StringBuilder sb = new StringBuilder();\n        int count =\
    \ 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count > 2) {\n    \
    \                sb.append('-');\n                    count = 0;\n           \
    \     }\n            } else {\n                count = 0;\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        return sb.toString();", "        // Write your\
    \ code here\n        return text.replaceAll(\"\\\\s+\", \"_\");", "        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n        \
    \        count++;\n                if (count > 2) {\n                    sb.append('-');\n\
    \                    count = 0;\n                }\n            } else {\n   \
    \             if (count > 0) {\n                    sb.append('_');\n        \
    \            count = 0;\n                }\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (count > 0) {\n            sb.append('_');\n\
    \        }\n        return sb.toString();", '        return text.replaceAll("\\s+",
    "-");', '        return text.replaceAll("\\s+", "_");', '        return text.replaceAll("(
    )+", " ").replaceAll(" ", "_");', '        return text.replaceAll("\\s+", "-");',
  "        StringBuilder sb = new StringBuilder();\n        int count = 0;\n     \
    \   for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count == 2) {\n   \
    \                 sb.append('-');\n                    count = 0;\n          \
    \      }\n            } else {\n                if (count == 1) {\n          \
    \          sb.append('_');\n                }\n                count = 0;\n  \
    \              sb.append(text.charAt(i));\n            }\n        }\n        if\
    \ (count == 1) {\n            sb.append('_');\n        }\n        return sb.toString();",
  "        // Write your code here\n        return text.replaceAll(\"\\\\s+\", \"\
    -\");", "        // TODO: implement this method\n        return null;", "    \
    \    StringBuilder sb = new StringBuilder();\n        int count = 0;\n       \
    \ for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) ==\
    \ ' ') {\n                count++;\n                if (count > 2) {\n       \
    \             sb.append('-');\n                    count = 0;\n              \
    \  }\n            } else {\n                if (count > 0) {\n               \
    \     sb.append('_');\n                    count = 0;\n                }\n   \
    \             sb.append(text.charAt(i));\n            }\n        }\n        if\
    \ (count > 0) {\n            sb.append('_');\n        }\n        return sb.toString();",
  "        // Write your code here\n        return null;", "        // TODO: Implement\
    \ this method\n        return null;", "        // Write your code here\n     \
    \   return text.replaceAll(\"\\\\s{2,}\", \"-\").replaceAll(\"\\\\s\", \"_\");",
  "        StringBuilder sb = new StringBuilder();\n        int count = 0;\n     \
    \   for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count == 1) {\n   \
    \                 sb.append('_');\n                }\n            } else {\n \
    \               if (count > 2) {\n                    sb.append('-');\n      \
    \          } else {\n                    for (int j = 0; j < count; j++) {\n \
    \                       sb.append('_');\n                    }\n             \
    \   }\n                count = 0;\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (count > 2) {\n            sb.append('-');\n\
    \        } else {\n            for (int j = 0; j < count; j++) {\n           \
    \     sb.append('_');\n            }\n        }\n        return sb.toString();",
  "        // TODO: implement this method\n        return null;", "        // TODO:\
    \ implement this method\n        return null;", "        StringBuilder sb = new\
    \ StringBuilder();\n        int count = 0;\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (text.charAt(i) == ' ') {\n                count++;\n\
    \                if (count > 2) {\n                    sb.append('-');\n     \
    \               count = 0;\n                }\n            } else {\n        \
    \        if (count > 0) {\n                    sb.append('_');\n             \
    \       count = 0;\n                }\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (count > 0) {\n            sb.append('_');\n\
    \        }\n        return sb.toString();", '        return text.replaceAll("\\s+",
    "-");', "        // TODO: implement this\n        return null;", "        // Write\
    \ your code here\n        return null;", "        StringBuilder sb = new StringBuilder();\n\
    \        int spaces = 0;\n        for (int i = 0; i < text.length(); i++) {\n\
    \            if (text.charAt(i) == ' ') {\n                spaces++;\n       \
    \     } else {\n                if (spaces > 2) {\n                    sb.append(\"\
    -\");\n                } else {\n                    for (int j = 0; j < spaces;\
    \ j++) {\n                        sb.append(\"_\");\n                    }\n \
    \               }\n                spaces = 0;\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.append(\"\
    -\");\n        } else {\n            for (int j = 0; j < spaces; j++) {\n    \
    \            sb.append(\"_\");\n            }\n        }\n        return sb.toString();",
  "        // TODO: implement this method\n        return null;", "        // TODO:\
    \ Implement me\n        return null;", "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           if (text.charAt(i) == ' ') {\n                count++;\n         \
    \       if (count == 1) {\n                    sb.append('_');\n             \
    \   }\n            } else {\n                if (count > 2) {\n              \
    \      sb.append('-');\n                } else {\n                    for (int\
    \ j = 0; j < count; j++) {\n                        sb.append('_');\n        \
    \            }\n                }\n                count = 0;\n              \
    \  sb.append(text.charAt(i));\n            }\n        }\n        if (count > 2)\
    \ {\n            sb.append('-');\n        } else {\n            for (int j = 0;\
    \ j < count; j++) {\n                sb.append('_');\n            }\n        }\n\
    \        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           if (text.charAt(i) == ' ') {\n                count++;\n         \
    \       if (count > 2) {\n                    sb.append('-');\n              \
    \      count = 0;\n                }\n            } else {\n                count\
    \ = 0;\n                sb.append(text.charAt(i));\n            }\n        }\n\
    \        return sb.toString();", '        return text.replaceAll("\\s+", "-");',
  "        // TODO: implement this method\n        return null;", '        return
    text.replaceAll("\\s+", "_");', "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           if (text.charAt(i) == ' ') {\n                count++;\n         \
    \       if (count == 1) {\n                    sb.append('_');\n             \
    \   }\n            } else {\n                if (count > 2) {\n              \
    \      sb.append('-');\n                } else {\n                    for (int\
    \ j = 0; j < count; j++) {\n                        sb.append('_');\n        \
    \            }\n                }\n                count = 0;\n              \
    \  sb.append(text.charAt(i));\n            }\n        }\n        if (count > 2)\
    \ {\n            sb.append('-');\n        } else {\n            for (int j = 0;\
    \ j < count; j++) {\n                sb.append('_');\n            }\n        }\n\
    \        return sb.toString();", '        return text.replaceAll("\\s+", "-");',
  "        StringBuilder sb = new StringBuilder();\n        int count = 0;\n     \
    \   for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                if (count == 0) {\n                    sb.append('_');\n\
    \                } else if (count == 1) {\n                    sb.append('-');\n\
    \                }\n                count++;\n            } else {\n         \
    \       sb.append(text.charAt(i));\n                count = 0;\n            }\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           if (text.charAt(i) == ' ') {\n                count++;\n         \
    \       if (count == 1) {\n                    sb.append('_');\n             \
    \   }\n            } else {\n                if (count > 2) {\n              \
    \      sb.append('-');\n                } else {\n                    for (int\
    \ j = 0; j < count; j++) {\n                        sb.append('_');\n        \
    \            }\n                }\n                count = 0;\n              \
    \  sb.append(text.charAt(i));\n            }\n        }\n        if (count > 2)\
    \ {\n            sb.append('-');\n        } else {\n            for (int j = 0;\
    \ j < count; j++) {\n                sb.append('_');\n            }\n        }\n\
    \        return sb.toString();", '        return text.replaceAll("\\s+", "-");',
  '        return text.replaceAll("\\s+", "_");', '        return text.replaceAll("\\s+",
    "_");', "        StringBuilder sb = new StringBuilder();\n        int count =\
    \ 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count > 2) {\n    \
    \                sb.append('-');\n                    count = 0;\n           \
    \     }\n            } else {\n                if (count > 0) {\n            \
    \        sb.append('_');\n                    count = 0;\n                }\n\
    \                sb.append(text.charAt(i));\n            }\n        }\n      \
    \  if (count > 0) {\n            sb.append('_');\n        }\n        return sb.toString();",
  '        return text.replaceAll("\\s+", "_");', "        // write your code here\n\
    \        return text;", '        return text.replaceAll("\\s+", "_");', '        return
    text.replaceAll("\\s+", " ").replaceAll(" ", "_");', '        return text.replaceAll("\\s+",
    "_");', '        return text.replaceAll("\\s+", "-");', "        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n        \
    \        count++;\n                if (count == 1) {\n                    sb.append('_');\n\
    \                }\n            } else {\n                if (count > 2) {\n \
    \                   sb.append('-');\n                } else {\n              \
    \      for (int j = 0; j < count; j++) {\n                        sb.append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \          sb.append(text.charAt(i));\n            }\n        }\n        if (count\
    \ > 2) {\n            sb.append('-');\n        } else {\n            for (int\
    \ j = 0; j < count; j++) {\n                sb.append('_');\n            }\n \
    \       }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           if (text.charAt(i) == ' ') {\n                count++;\n         \
    \       if (count >= 2) {\n                    sb.append('-');\n             \
    \       count = 0;\n                }\n            } else {\n                sb.append(text.charAt(i));\n\
    \                count = 0;\n            }\n        }\n        return sb.toString();",
  '        return text.replaceAll("\\s+", "-");', '        return text.replaceAll("\\s+",
    "-");', '        return text.replaceAll("\\s+", "_");', "        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n        \
    \        count++;\n                if (count == 1) {\n                    sb.append('_');\n\
    \                }\n            } else {\n                if (count > 2) {\n \
    \                   sb.append('-');\n                } else {\n              \
    \      for (int j = 0; j < count; j++) {\n                        sb.append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \          sb.append(text.charAt(i));\n            }\n        }\n        if (count\
    \ > 2) {\n            sb.append('-');\n        } else {\n            for (int\
    \ j = 0; j < count; j++) {\n                sb.append('_');\n            }\n \
    \       }\n        return sb.toString();", "        // TODO: implement this method\n\
    \        return null;", "        StringBuilder sb = new StringBuilder();\n   \
    \     int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n    \
    \        if (text.charAt(i) == ' ') {\n                count++;\n            \
    \    if (count > 2) {\n                    sb.append('-');\n                 \
    \   count = 0;\n                }\n            } else {\n                count\
    \ = 0;\n                sb.append(text.charAt(i));\n            }\n        }\n\
    \        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           if (text.charAt(i) == ' ') {\n                count++;\n         \
    \       if (count > 2) {\n                    sb.append('-');\n              \
    \      count = 0;\n                }\n            } else {\n                count\
    \ = 0;\n                sb.append(text.charAt(i));\n            }\n        }\n\
    \        return sb.toString();", "        // your code here\n        return text;",
  "        // Write your code here\n        return text.replaceAll(\"\\\\s+\", \"\
    _\");", '        return text.replaceAll("\\s+", "-");', "        // TODO: Write\
    \ - Your - Code\n        return text;", "        // TODO: implement this method\n\
    \        return null;", "        StringBuilder sb = new StringBuilder();\n   \
    \     int spaces = 0;\n        for (int i = 0; i < text.length(); i++) {\n   \
    \         if (text.charAt(i) == ' ') {\n                spaces++;\n          \
    \  } else {\n                if (spaces == 1) {\n                    sb.append('_');\n\
    \                } else if (spaces > 1) {\n                    sb.append('-');\n\
    \                }\n                sb.append(text.charAt(i));\n             \
    \   spaces = 0;\n            }\n        }\n        if (spaces == 1) {\n      \
    \      sb.append('_');\n        } else if (spaces > 1) {\n            sb.append('-');\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           if (text.charAt(i) == ' ') {\n                count++;\n         \
    \       if (count > 2) {\n                    sb.append('-');\n              \
    \      count = 0;\n                }\n            } else {\n                if\
    \ (count > 0) {\n                    sb.append('_');\n                    count\
    \ = 0;\n                }\n                sb.append(text.charAt(i));\n      \
    \      }\n        }\n        if (count > 0) {\n            sb.append('_');\n \
    \       }\n        return sb.toString();", '        return text.replaceAll("\\s+",
    "_");', '        return text.replaceAll("\\s+", "-");', "        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n        \
    \        count++;\n                if (count == 1) {\n                    sb.append(\"\
    _\");\n                }\n            } else {\n                if (count > 2)\
    \ {\n                    sb.append(\"-\");\n                } else {\n       \
    \             for (int j = 0; j < count; j++) {\n                        sb.append(\"\
    _\");\n                    }\n                }\n                count = 0;\n\
    \                sb.append(text.charAt(i));\n            }\n        }\n      \
    \  if (count > 2) {\n            sb.append(\"-\");\n        } else {\n       \
    \     for (int j = 0; j < count; j++) {\n                sb.append(\"_\");\n \
    \           }\n        }\n        return sb.toString();", '        return text.replaceAll("\\s+",
    "-");', "        StringBuilder sb = new StringBuilder();\n        int spaces =\
    \ 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces > 2) {\n                    sb.append(\"-\");\n                }\
    \ else {\n                    for (int j = 0; j < spaces; j++) {\n           \
    \             sb.append(\"_\");\n                    }\n                }\n  \
    \              spaces = 0;\n                sb.append(text.charAt(i));\n     \
    \       }\n        }\n        if (spaces > 2) {\n            sb.append(\"-\");\n\
    \        } else {\n            for (int j = 0; j < spaces; j++) {\n          \
    \      sb.append(\"_\");\n            }\n        }\n        return sb.toString();",
  "        // Write your code here\n        return null;", '        return text.replaceAll("\\s+",
    "_");', "        // TODO: implement this method\n        return null;", "    \
    \    StringBuilder sb = new StringBuilder();\n        int count = 0;\n       \
    \ for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) ==\
    \ ' ') {\n                count++;\n                if (count == 1) {\n      \
    \              sb.append(\"_\");\n                }\n            } else {\n  \
    \              if (count > 2) {\n                    sb.append(\"-\");\n     \
    \           } else {\n                    for (int j = 0; j < count; j++) {\n\
    \                        sb.append(\"_\");\n                    }\n          \
    \      }\n                count = 0;\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (count > 2) {\n            sb.append(\"\
    -\");\n        } else {\n            for (int j = 0; j < count; j++) {\n     \
    \           sb.append(\"_\");\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        int count = 0;\n     \
    \   for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count == 1) {\n   \
    \                 sb.append('_');\n                }\n            } else {\n \
    \               if (count > 2) {\n                    sb.append('-');\n      \
    \          } else {\n                    for (int j = 0; j < count; j++) {\n \
    \                       sb.append('_');\n                    }\n             \
    \   }\n                count = 0;\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (count > 2) {\n            sb.append('-');\n\
    \        } else {\n            for (int j = 0; j < count; j++) {\n           \
    \     sb.append('_');\n            }\n        }\n        return sb.toString();",
  "        // TODO: implement this method\n        return null;", "        // write\
    \ your code here\n        return null;", '        return text.replaceAll("\\s+",
    "-");', '        return text.replaceAll("\\s+", "-");', "        StringBuilder\
    \ sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length())\
    \ {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n\
    \                i++;\n                while (i < text.length() && text.charAt(i)\
    \ == ' ') {\n                    sb.append('-');\n                    i++;\n \
    \               }\n            } else {\n                sb.append(text.charAt(i));\n\
    \                i++;\n            }\n        }\n        return sb.toString();",
  '        return text.replaceAll("\\s+", "_");', '        return text.replaceAll("\\s+",
    "-");', '        return text.replaceAll("\\s+", "-");', '        return text.replaceAll("\\s+",
    "-");', "        StringBuilder sb = new StringBuilder();\n        int count =\
    \ 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count == 1) {\n   \
    \                 sb.append('_');\n                }\n            } else {\n \
    \               if (count > 2) {\n                    sb.append('-');\n      \
    \          } else {\n                    for (int j = 0; j < count; j++) {\n \
    \                       sb.append('_');\n                    }\n             \
    \   }\n                count = 0;\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (count > 2) {\n            sb.append('-');\n\
    \        } else {\n            for (int j = 0; j < count; j++) {\n           \
    \     sb.append('_');\n            }\n        }\n        return sb.toString();",
  '        return text.replaceAll("\\s+", "_");', "        StringBuilder sb = new\
    \ StringBuilder();\n        int count = 0;\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (text.charAt(i) == ' ') {\n                count++;\n\
    \                if (count > 2) {\n                    sb.append('-');\n     \
    \               count = 0;\n                }\n            } else {\n        \
    \        count = 0;\n                sb.append(text.charAt(i));\n            }\n\
    \        }\n        return sb.toString();", "        // TODO: Implement this method\n\
    \        return null;", "        StringBuilder sb = new StringBuilder();\n   \
    \     int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n    \
    \        if (text.charAt(i) == ' ') {\n                count++;\n            \
    \    if (count == 1) {\n                    sb.append('_');\n                }\n\
    \            } else {\n                if (count > 2) {\n                    sb.append('-');\n\
    \                } else {\n                    for (int j = 0; j < count; j++)\
    \ {\n                        sb.append('_');\n                    }\n        \
    \        }\n                count = 0;\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (count > 2) {\n            sb.append('-');\n\
    \        } else {\n            for (int j = 0; j < count; j++) {\n           \
    \     sb.append('_');\n            }\n        }\n        return sb.toString();",
  '        return text.replaceAll("\\s{2,}", "-").replaceAll("\\s", "_");', '        return
    text.replaceAll("\\s+", "_");', "        // TODO: implement this method\n    \
    \    return null;", '        return text.replaceAll("\\s+", "-");', "        //\
    \ Write your code here\n        return null;", '        return text.replaceAll("\\s+",
    "_");', '        return text.replaceAll("\\s+", "-");', "        // TODO: Implement\
    \ me\n        return null;", '        return text.replaceAll("\\s+", "-");', " \
    \       // Write your code here\n        return null;", "        // Write your\
    \ code here\n        return null;", "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           if (text.charAt(i) == ' ') {\n                count++;\n         \
    \       if (count > 2) {\n                    sb.append('-');\n              \
    \      count = 0;\n                }\n            } else {\n                if\
    \ (count > 0) {\n                    sb.append('_');\n                    count\
    \ = 0;\n                }\n                sb.append(text.charAt(i));\n      \
    \      }\n        }\n        if (count > 0) {\n            sb.append('_');\n \
    \       }\n        return sb.toString();", "        // Write your code here\n\
    \        return null;", '        return text.replaceAll("\\s+", "-");', "    \
    \    // TODO: implement this\n        return null;", "        // TODO: Implement\
    \ this method\n        return null;", "        // TODO: implement this method\n\
    \        return null;", '        return text.replaceAll("\\s{2,}", "-").replaceAll("\\s",
    "_");', '        return text.replaceAll("\\s+", "_");', '        return text.replaceAll("\\s+",
    "-");', "        // write your code here\n        return null;", '        return
    text.replaceAll("\\s+", "-");', "        // TODO: implement this method\n    \
    \    return null;", "        StringBuilder sb = new StringBuilder();\n       \
    \ for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) ==\
    \ ' ') {\n                sb.append('_');\n                while (i + 1 < text.length()\
    \ && text.charAt(i + 1) == ' ') {\n                    sb.append('-');\n     \
    \               i++;\n                }\n            } else {\n              \
    \  sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();",
  '        return text.replaceAll("\\s+", "-");', "        StringBuilder sb = new\
    \ StringBuilder();\n        int spaces = 0;\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (text.charAt(i) == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces == 1) {\n                  \
    \  sb.append('_');\n                } else if (spaces > 1) {\n               \
    \     sb.append('-');\n                }\n                sb.append(text.charAt(i));\n\
    \                spaces = 0;\n            }\n        }\n        if (spaces ==\
    \ 1) {\n            sb.append('_');\n        } else if (spaces > 1) {\n      \
    \      sb.append('-');\n        }\n        return sb.toString();", '        return
    text.replaceAll("\\s+", "-");', '        return text.replaceAll("\\s+", "_");',
  '        return text.replaceAll("\\s+", "_");', '        return text.replaceAll("\\s+",
    "_");', "        StringBuilder sb = new StringBuilder();\n        int count =\
    \ 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count == 2) {\n   \
    \                 sb.append('-');\n                    count = 0;\n          \
    \      }\n            } else {\n                if (count == 1) {\n          \
    \          sb.append('_');\n                }\n                count = 0;\n  \
    \              sb.append(text.charAt(i));\n            }\n        }\n        if\
    \ (count == 1) {\n            sb.append('_');\n        }\n        return sb.toString();",
  "        // TODO: Write - Your - Code\n        return null;", "        // TODO:\
    \ Write - Your - Code\n        return text;", "        StringBuilder sb = new\
    \ StringBuilder();\n        int count = 0;\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (text.charAt(i) == ' ') {\n                count++;\n\
    \                if (count == 1) {\n                    sb.append('_');\n    \
    \            }\n            } else {\n                if (count > 2) {\n     \
    \               sb.append('-');\n                } else {\n                  \
    \  for (int j = 0; j < count; j++) {\n                        sb.append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \          sb.append(text.charAt(i));\n            }\n        }\n        if (count\
    \ > 2) {\n            sb.append('-');\n        } else {\n            for (int\
    \ j = 0; j < count; j++) {\n                sb.append('_');\n            }\n \
    \       }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           if (text.charAt(i) == ' ') {\n                count++;\n         \
    \       if (count == 1) {\n                    sb.append('_');\n             \
    \   }\n            } else {\n                if (count > 2) {\n              \
    \      sb.append('-');\n                } else {\n                    for (int\
    \ j = 0; j < count; j++) {\n                        sb.append('_');\n        \
    \            }\n                }\n                count = 0;\n              \
    \  sb.append(text.charAt(i));\n            }\n        }\n        if (count > 2)\
    \ {\n            sb.append('-');\n        } else {\n            for (int j = 0;\
    \ j < count; j++) {\n                sb.append('_');\n            }\n        }\n\
    \        return sb.toString();", '        return text.replaceAll("\\s+", "-");',
  '        return text.replaceAll("\\s+", "_");', "        // TODO: Write - Your -\
    \ Code\n        return null;", "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           if (text.charAt(i) == ' ') {\n                count++;\n         \
    \       if (count > 2) {\n                    sb.append('-');\n              \
    \      count = 0;\n                }\n            } else {\n                count\
    \ = 0;\n                sb.append(text.charAt(i));\n            }\n        }\n\
    \        return sb.toString();", "        // TODO: Implement this method\n   \
    \     return null;", '        return text.replaceAll("\\s+", "-");', "       \
    \ // TODO: implement this method\n        return null;", "        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n        \
    \        count++;\n                if (count == 1) {\n                    sb.append('_');\n\
    \                }\n            } else {\n                if (count > 2) {\n \
    \                   sb.append('-');\n                } else {\n              \
    \      for (int j = 0; j < count; j++) {\n                        sb.append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \          sb.append(text.charAt(i));\n            }\n        }\n        if (count\
    \ > 2) {\n            sb.append('-');\n        } else {\n            for (int\
    \ j = 0; j < count; j++) {\n                sb.append('_');\n            }\n \
    \       }\n        return sb.toString();", '        return text.replaceAll("\\s+",
    " ").replaceAll(" ", "_");', "        StringBuilder sb = new StringBuilder();\n\
    \        int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n \
    \           if (text.charAt(i) == ' ') {\n                count++;\n         \
    \       if (count == 1) {\n                    sb.append(\"_\");\n           \
    \     }\n            } else {\n                if (count > 2) {\n            \
    \        sb.append(\"-\");\n                } else {\n                    for\
    \ (int j = 0; j < count; j++) {\n                        sb.append(\"_\");\n \
    \                   }\n                }\n                count = 0;\n       \
    \         sb.append(text.charAt(i));\n            }\n        }\n        if (count\
    \ > 2) {\n            sb.append(\"-\");\n        } else {\n            for (int\
    \ j = 0; j < count; j++) {\n                sb.append(\"_\");\n            }\n\
    \        }\n        return sb.toString();", "        // write your code here\n\
    \        return text;", "        // write your code here\n        return null;",
  '        return text.replaceAll("\\s+", "-");', "        StringBuilder sb = new\
    \ StringBuilder();\n        int count = 0;\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (text.charAt(i) == ' ') {\n                count++;\n\
    \                if (count > 2) {\n                    sb.append('-');\n     \
    \               count = 0;\n                }\n            } else {\n        \
    \        if (count == 1) {\n                    sb.append(' ');\n            \
    \    } else if (count > 1) {\n                    sb.append('-');\n          \
    \      }\n                sb.append(text.charAt(i));\n                count =\
    \ 0;\n            }\n        }\n        if (count == 1) {\n            sb.append('\
    \ ');\n        } else if (count > 1) {\n            sb.append('-');\n        }\n\
    \        return sb.toString();", '        return text.replaceAll("\\s+", "-");',
  '        return null;', "        String[] words = text.split(\" \");\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n\
    \            if (words[i].length() > 0) {\n                sb.append(words[i]);\n\
    \                if (i < words.length - 1) {\n                    sb.append(\"\
    _\");\n                }\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        int count = 0;\n     \
    \   for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count == 2) {\n   \
    \                 sb.append('-');\n                    count = 0;\n          \
    \      }\n            } else {\n                if (count == 1) {\n          \
    \          sb.append('_');\n                }\n                count = 0;\n  \
    \              sb.append(text.charAt(i));\n            }\n        }\n        if\
    \ (count == 1) {\n            sb.append('_');\n        }\n        return sb.toString();",
  '        return text.replaceAll("\\s+", "-");', "        StringBuilder sb = new\
    \ StringBuilder();\n        int count = 0;\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (text.charAt(i) == ' ') {\n                count++;\n\
    \                if (count > 2) {\n                    sb.append('-');\n     \
    \               count = 0;\n                }\n            } else {\n        \
    \        if (count > 0) {\n                    sb.append('_');\n             \
    \       count = 0;\n                }\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (count > 0) {\n            sb.append('_');\n\
    \        }\n        return sb.toString();", "        // TODO: Implement this method\n\
    \        return null;", "        StringBuilder sb = new StringBuilder();\n   \
    \     int count = 0;\n        for (int i = 0; i < text.length(); i++) {\n    \
    \        if (text.charAt(i) == ' ') {\n                count++;\n            \
    \    if (count == 1) {\n                    sb.append('_');\n                }\n\
    \            } else {\n                if (count > 2) {\n                    sb.append('-');\n\
    \                } else {\n                    for (int j = 0; j < count; j++)\
    \ {\n                        sb.append('_');\n                    }\n        \
    \        }\n                count = 0;\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (count > 2) {\n            sb.append('-');\n\
    \        } else {\n            for (int j = 0; j < count; j++) {\n           \
    \     sb.append('_');\n            }\n        }\n        return sb.toString();",
  "        // Write your code here\n        return text.replaceAll(\"\\\\s+\", \"\
    _\");", '        return text.replaceAll("\\s+", "-");', "        // TODO: implement\
    \ this method\n        return null;", "        // Write your code here\n     \
    \   return text.replaceAll(\"\\\\s+\", \"_\");", '        return text.replaceAll("\\s{2,}",
    "-").replaceAll("\\s", "_");', '        return text.replaceAll("\\s+", "_");',
  "        StringBuilder sb = new StringBuilder();\n        int count = 0;\n     \
    \   for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count == 1) {\n   \
    \                 sb.append('_');\n                }\n            } else {\n \
    \               if (count > 2) {\n                    sb.append('-');\n      \
    \          } else {\n                    for (int j = 0; j < count; j++) {\n \
    \                       sb.append('_');\n                    }\n             \
    \   }\n                count = 0;\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (count > 2) {\n            sb.append('-');\n\
    \        } else {\n            for (int j = 0; j < count; j++) {\n           \
    \     sb.append('_');\n            }\n        }\n        return sb.toString();",
  "        // TODO: implement this method\n        return null;", "        // TODO:\
    \ Implement this method\n        return null;", "        // TODO: Implement me\n\
    \        return null;", "        // Write your code here\n        return null;",
  "        StringBuilder sb = new StringBuilder();\n        int count = 0;\n     \
    \   for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count > 2) {\n    \
    \                sb.append('-');\n                    count = 0;\n           \
    \     }\n            } else {\n                if (count > 0) {\n            \
    \        sb.append('_');\n                    count = 0;\n                }\n\
    \                sb.append(text.charAt(i));\n            }\n        }\n      \
    \  if (count > 0) {\n            sb.append('_');\n        }\n        return sb.toString();",
  "        // TODO: implement this method\n        return null;", "        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n        \
    \        count++;\n                if (count == 1) {\n                    sb.append('_');\n\
    \                }\n            } else {\n                if (count > 2) {\n \
    \                   sb.append('-');\n                } else {\n              \
    \      for (int j = 0; j < count; j++) {\n                        sb.append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \          sb.append(text.charAt(i));\n            }\n        }\n        if (count\
    \ > 2) {\n            sb.append('-');\n        } else {\n            for (int\
    \ j = 0; j < count; j++) {\n                sb.append('_');\n            }\n \
    \       }\n        return sb.toString();", '        return text.replaceAll("\\s+",
    "-");', "        StringBuilder sb = new StringBuilder();\n        int count =\
    \ 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count > 2) {\n    \
    \                sb.append('-');\n                    count = 0;\n           \
    \     }\n            } else {\n                if (count > 0) {\n            \
    \        sb.append('_');\n                    count = 0;\n                }\n\
    \                sb.append(text.charAt(i));\n            }\n        }\n      \
    \  if (count > 0) {\n            sb.append('_');\n        }\n        return sb.toString();",
  '        return text.replaceAll("\\s+", "-");', "        // your code here\n   \
    \     return null;", '        return text.replaceAll("\\s+", "-");', "       \
    \ // TODO: Implement this method\n        return null;", '        return text.replaceAll("\\s+",
    "_");', '        return text.replaceAll("\\s+", "-");', '        return text.replaceAll("
    {2,}", "-").replaceAll(" ", "_");', "        // TODO: implement this method\n\
    \        return null;", '        return text.replaceAll("\\s+", "-");', "    \
    \    // TODO: implement this method\n        return null;", "        StringBuilder\
    \ sb = new StringBuilder();\n        int count = 0;\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n        \
    \        count++;\n                if (count == 1) {\n                    sb.append('_');\n\
    \                }\n            } else {\n                if (count > 2) {\n \
    \                   sb.append('-');\n                } else {\n              \
    \      for (int j = 0; j < count; j++) {\n                        sb.append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \          sb.append(text.charAt(i));\n            }\n        }\n        if (count\
    \ > 2) {\n            sb.append('-');\n        } else {\n            for (int\
    \ j = 0; j < count; j++) {\n                sb.append('_');\n            }\n \
    \       }\n        return sb.toString();", '        return text.replaceAll("\\s+",
    "-");', "        // TODO: Implement this method\n        return null;", "    \
    \    // Write your code here\n        return text.replaceAll(\"\\\\s+\", \"_\"\
    );", "        StringBuilder sb = new StringBuilder();\n        int count = 0;\n\
    \        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count == 1) {\n   \
    \                 sb.append('_');\n                }\n            } else {\n \
    \               if (count > 2) {\n                    sb.append('-');\n      \
    \          } else {\n                    for (int j = 0; j < count; j++) {\n \
    \                       sb.append('_');\n                    }\n             \
    \   }\n                count = 0;\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        if (count > 2) {\n            sb.append('-');\n\
    \        } else {\n            for (int j = 0; j < count; j++) {\n           \
    \     sb.append('_');\n            }\n        }\n        return sb.toString();",
  '        return text.replaceAll("\\s{2,}", "-").replaceAll("\\s", "_");', '        return
    text.replaceAll("\\s{2,}", "-").replaceAll("\\s", "_");', "        // Write your\
    \ code here\n        return null;"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

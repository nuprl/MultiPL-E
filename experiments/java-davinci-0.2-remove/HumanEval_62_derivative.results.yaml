language: java
name: HumanEval_62_derivative
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ys = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ys.add(xs.get(i) * i);\n        }\n\
    \        return ys;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> res = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            res.add(xs.get(i) * i);\n        }\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> res = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            res.add(xs.get(i) * i);\n        }\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> res = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            res.add(xs.get(i) * i);\n        }\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> res = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            res.add(xs.get(i) * i);\n        }\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> res = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            res.add(xs.get(i) * i);\n        }\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ys = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ys.add(xs.get(i) * i);\n        }\n\
    \        return ys;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> res = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            res.add(xs.get(i) * i);\n        }\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ys = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ys.add(xs.get(i) * i);\n        }\n\
    \        return ys;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> res = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            res.add(xs.get(i) * i);\n        }\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> res = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            res.add(xs.get(i) * i);\n        }\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ys = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ys.add(xs.get(i) * i);\n        }\n\
    \        return ys;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> res = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            res.add(xs.get(i) * i);\n        }\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            result.add(xs.get(i) * i);\n     \
    \   }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> res = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            res.add(xs.get(i) * i);\n        }\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ret = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ret.add(xs.get(i) * i);\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011031
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for (int\
    \ i = 1; i < xs.size(); i++) {\n            ans.add(xs.get(i) * i);\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)12, (int)20)))));\n  \
    \  assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)1, (int)0, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)2, (int)0, (int)16)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011030

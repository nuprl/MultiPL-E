language: java
name: HumanEval_31_is_prime
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        for (int i = 2; i * i <= n; i++) {\n            if (n % i\
    \ == 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n < 2 || n % 2 == 0) return false;\n        for (int i = 3; i * i\
    \ <= n; i += 2)\n            if (n % i == 0) return false;\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        for (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 1) return false;\n\
    \        for (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9rtwmv9k.java:25)\n"
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                return false;\n            }\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        for (int i = 2; i < n; i++)\
    \ {\n            if (n % i == 0) {\n                return false;\n          \
    \  }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpggehx4q4.java:25)\n"
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i <= Math.sqrt(n); i += 2) {\n            if (n % i ==\
    \ 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        for (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n < 2 || n % 2 == 0) return false;\n        for (int i = 3; i * i\
    \ <= n; i += 2)\n            if (n % i == 0) return false;\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i <= Math.sqrt(n); i += 2) {\n            if (n % i ==\
    \ 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i <= Math.sqrt(n); i++)\
    \ {\n            if (n % i == 0) {\n                return false;\n          \
    \  }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                return false;\n            }\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0)\
    \ return false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        if (n <= 3) {\n            return true;\n\
    \        }\n        if (n % 2 == 0 || n % 3 == 0) {\n            return false;\n\
    \        }\n        for (int i = 5; i * i <= n; i += 6) {\n            if (n %\
    \ i == 0 || n % (i + 2) == 0) {\n                return false;\n            }\n\
    \        }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                return false;\n            }\n   \
    \     }\n        return true;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) {\n         \
    \   return true;\n        }\n        if (n < 2 || n % 2 == 0) {\n            return\
    \ false;\n        }\n        for (int i = 3; i * i <= n; i += 2) {\n         \
    \   if (n % i == 0) {\n                return false;\n            }\n        }\n\
    \        return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        if (n <= 3) {\n            return true;\n\
    \        }\n        if (n % 2 == 0 || n % 3 == 0) {\n            return false;\n\
    \        }\n        for (int i = 5; i * i <= n; i += 6) {\n            if (n %\
    \ i == 0 || n % (i + 2) == 0) {\n                return false;\n            }\n\
    \        }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                return false;\n            }\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) {\n         \
    \   return true;\n        }\n        if (n < 2 || n % 2 == 0) {\n            return\
    \ false;\n        }\n        for (int i = 3; i * i <= n; i += 2) {\n         \
    \   if (n % i == 0) {\n                return false;\n            }\n        }\n\
    \        return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) {\n         \
    \   return true;\n        }\n        if (n < 2 || n % 2 == 0) {\n            return\
    \ false;\n        }\n        for (int i = 3; i * i <= n; i += 2) {\n         \
    \   if (n % i == 0) {\n                return false;\n            }\n        }\n\
    \        return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i < n; i++) {\n        \
    \    if (n % i == 0) {\n                return false;\n            }\n       \
    \ }\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        if (n <= 3) {\n            return true;\n\
    \        }\n        if (n % 2 == 0 || n % 3 == 0) {\n            return false;\n\
    \        }\n        for (int i = 5; i * i <= n; i += 6) {\n            if (n %\
    \ i == 0 || n % (i + 2) == 0) {\n                return false;\n            }\n\
    \        }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n < 2 || n % 2 == 0) return false;\n        for (int i = 3; i * i\
    \ <= n; i += 2) {\n            if (n % i == 0) return false;\n        }\n    \
    \    return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                return false;\n            }\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n < 2 || n % 2 == 0) return false;\n        for (int i = 3; i <=\
    \ Math.sqrt(n); i += 2) {\n            if (n % i == 0) return false;\n       \
    \ }\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                return false;\n            }\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i < n; i++) {\n        \
    \    if (n % i == 0) {\n                return false;\n            }\n       \
    \ }\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3x3wfbza.java:14)\n"
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                return false;\n            }\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i < n; i++) {\n        \
    \    if (n % i == 0) {\n                return false;\n            }\n       \
    \ }\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                return false;\n            }\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                return false;\n            }\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                return false;\n            }\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                return false;\n            }\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        for (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i <= Math.sqrt(n); i += 2) {\n            if (n % i == 0)\
    \ return false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n < 2 || n % 2 == 0) return false;\n        for (int i = 3; i * i\
    \ <= n; i += 2)\n            if (n % i == 0) return false;\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i <= Math.sqrt(n); i++)\
    \ {\n            if (n % i == 0) {\n                return false;\n          \
    \  }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n < 2 || n % 2 == 0) return false;\n        for (int i = 3; i * i\
    \ <= n; i += 2)\n            if (n % i == 0) return false;\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9rtwmv9k.java:25)\n"
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                return false;\n            }\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i < n; i++) {\n        \
    \    if (n % i == 0) {\n                return false;\n            }\n       \
    \ }\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        for (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        if (n <= 3) {\n            return true;\n\
    \        }\n        if (n % 2 == 0 || n % 3 == 0) {\n            return false;\n\
    \        }\n        for (int i = 5; i * i <= n; i += 6) {\n            if (n %\
    \ i == 0 || n % (i + 2) == 0) {\n                return false;\n            }\n\
    \        }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n < 2 || n % 2 == 0) return false;\n        for (int i = 3; i * i\
    \ <= n; i += 2)\n            if (n % i == 0) return false;\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n < 2 || n % 2 == 0) return false;\n        for (int i = 3; i * i\
    \ <= n; i += 2)\n            if (n % i == 0) return false;\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n < 2 || n % 2 == 0) return false;\n        for (int i = 3; i * i\
    \ <= n; i += 2) {\n            if (n % i == 0) return false;\n        }\n    \
    \    return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i < n; i++) {\n        \
    \    if (n % i == 0) {\n                return false;\n            }\n       \
    \ }\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n < 2 || n % 2 == 0) return false;\n        for (int i = 3; i * i\
    \ <= n; i += 2)\n            if (n % i == 0) return false;\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        for (int i = 2; i * i <=\
    \ n; i++) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqvwc0y5l.java:25)\n"
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 1) {\n         \
    \   return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n\
    \            if (n % i == 0) {\n                return false;\n            }\n\
    \        }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) {\n         \
    \   return true;\n        }\n        if (n < 2 || n % 2 == 0) {\n            return\
    \ false;\n        }\n        for (int i = 3; i * i <= n; i += 2) {\n         \
    \   if (n % i == 0) {\n                return false;\n            }\n        }\n\
    \        return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 1) return false;\n\
    \        for (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                return false;\n            }\n   \
    \     }\n        return true;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                return false;\n            }\n   \
    \     }\n        return true;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i <= Math.sqrt(n); i += 2) {\n            if (n % i == 0)\
    \ return false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i < n; i++) {\n        \
    \    if (n % i == 0) {\n                return false;\n            }\n       \
    \ }\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n == 1 || n % 2 == 0) return false;\n        for (int i = 3; i *\
    \ i <= n; i += 2) {\n            if (n % i == 0) return false;\n        }\n  \
    \      return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) {\n         \
    \   return true;\n        }\n        if (n < 2 || n % 2 == 0) {\n            return\
    \ false;\n        }\n        for (int i = 3; i * i <= n; i += 2) {\n         \
    \   if (n % i == 0) {\n                return false;\n            }\n        }\n\
    \        return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n < 2 || n % 2 == 0) return false;\n        for (int i = 3; i * i\
    \ <= n; i += 2)\n            if (n % i == 0) return false;\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) {\n         \
    \   return true;\n        }\n        if (n % 2 == 0) {\n            return false;\n\
    \        }\n        for (int i = 3; i * i <= n; i += 2) {\n            if (n %\
    \ i == 0) {\n                return false;\n            }\n        }\n       \
    \ return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmg63sbul.java:31)\n"
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9rtwmv9k.java:25)\n"
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n < 2 || n % 2 == 0) return false;\n        for (int i = 3; i * i\
    \ <= n; i += 2)\n            if (n % i == 0) return false;\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i < n; i++) {\n        \
    \    if (n % i == 0) {\n                return false;\n            }\n       \
    \ }\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        for (int i = 2; i <= Math.sqrt(n); i++)\
    \ {\n            if (n % i == 0) {\n                return false;\n          \
    \  }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) {\n          \
    \  return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                return false;\n            }\n   \
    \     }\n        return true;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        for (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i\
    \ += 2) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9rtwmv9k.java:25)\n"
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) {\n         \
    \   return false;\n        }\n        if (n == 2) {\n            return true;\n\
    \        }\n        if (n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i <= Math.sqrt(n); i += 2) {\n            if (n % i ==\
    \ 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2)\n            if (n % i == 0) return\
    \ false;\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    public static boolean isPrime(int n) {\n        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748

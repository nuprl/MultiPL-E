language: java
name: HumanEval_95_check_dict_case
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()))\
    \ || dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_odbmjsh.java:19)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.toUpperCase().equals(key))\
    \ {\n                allLower = false;\n            }\n            if (key.toLowerCase().equals(key))\
    \ {\n                allUpper = false;\n            }\n        }\n        return\
    \ allLower || allUpper;\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpijtyl83o.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function.\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcsgclg0.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwf8i67lw.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvfsdkupn.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean isUpper = false;\n        boolean isLower = false;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toUpperCase()))\
    \ {\n                isUpper = true;\n            }\n            if (key.equals(key.toLowerCase()))\
    \ {\n                isLower = true;\n            }\n        }\n        return\
    \ isUpper || isLower;\n    }\n    public static void main(String[] args) {\n \
    \   assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgh1k0xet.java:31)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allUpper || allLower;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) return false;\n        boolean lower =\
    \ dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()));\n        boolean\
    \ upper = dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n \
    \       return lower || upper;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ik86za2.java:22)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwf8i67lw.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here.\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4fa1z78c.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return dict.keySet().stream().allMatch(k -> k.equals(k.toLowerCase()))\
    \ || dict.keySet().stream().allMatch(k -> k.equals(k.toUpperCase()));\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2uj7gvfv.java:19)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.toUpperCase().equals(key))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ allUpper = false;\n            }\n        }\n        return allUpper || allLower;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaqtxp_hp.java:32)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function.\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcsgclg0.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allUpper || allLower;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) return false;\n        boolean lower =\
    \ true;\n        boolean upper = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.equals(key.toLowerCase())) {\n                upper =\
    \ false;\n            } else if (key.equals(key.toUpperCase())) {\n          \
    \      lower = false;\n            } else {\n                return false;\n \
    \           }\n        }\n        return lower || upper;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1rwol22c.java:31)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvfsdkupn.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()))\
    \ ||\n               dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67p9p5k7.java:20)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwf8i67lw.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            allLower = allLower && key.equals(key.toLowerCase());\n\
    \            allUpper = allUpper && key.equals(key.toUpperCase());\n        }\n\
    \        return allLower || allUpper;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdknls80w.java:28)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return dict.keySet().stream().allMatch(k -> k.equals(k.toLowerCase()))\
    \ ||\n               dict.keySet().stream().allMatch(k -> k.equals(k.toUpperCase()));\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp42blb0d8.java:20)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            allLower = allLower && key.equals(key.toLowerCase());\n\
    \            allUpper = allUpper && key.equals(key.toUpperCase());\n        }\n\
    \        return allLower || allUpper;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdknls80w.java:28)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function.\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcsgclg0.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.toUpperCase().equals(key))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ allUpper = false;\n            }\n        }\n        return allUpper || allLower;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaqtxp_hp.java:32)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean isUpper = dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n\
    \        boolean isLower = dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()));\n\
    \        return isUpper || isLower;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmfwi_ew5.java:24)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here.\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4fa1z78c.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function.\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcsgclg0.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        return false;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqgwkrisf.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Implement this function\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj0i1n8xb.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function.\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcsgclg0.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // write your code here\n        return false;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfonijzcv.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function.\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcsgclg0.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwf8i67lw.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean lower = true;\n        boolean upper = true;\n        for (String\
    \ key : dict.keySet()) {\n            if (key.equals(key.toLowerCase())) {\n \
    \               upper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                lower = false;\n            } else {\n                return\
    \ false;\n            }\n        }\n        return lower || upper;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_psk2y1p.java:33)\n"
  stdout: ''
  timestamp: 1659976727
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()))\
    \ ||\n               dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67p9p5k7.java:20)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean isUpper = false;\n        boolean isLower = false;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toUpperCase()))\
    \ {\n                isUpper = true;\n            }\n            if (key.equals(key.toLowerCase()))\
    \ {\n                isLower = true;\n            }\n        }\n        return\
    \ isUpper ^ isLower;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976727
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        return false;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqgwkrisf.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ allUpper = false;\n            }\n        }\n        return allUpper || allLower;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr9ymjjw2.java:32)\n"
  stdout: ''
  timestamp: 1659976727
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvfsdkupn.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allUpper || allLower;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwf8i67lw.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvfsdkupn.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return dict.keySet().stream().allMatch(k -> k.equals(k.toLowerCase()))\
    \ || dict.keySet().stream().allMatch(k -> k.equals(k.toUpperCase()));\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2uj7gvfv.java:19)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()))\
    \ ||\n               dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67p9p5k7.java:20)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) return false;\n        boolean allLower\
    \ = true;\n        boolean allUpper = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.equals(key.toLowerCase())) {\n                allUpper\
    \ = false;\n            } else if (key.equals(key.toUpperCase())) {\n        \
    \        allLower = false;\n            } else {\n                return false;\n\
    \            }\n        }\n        return allLower || allUpper;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzy1wt_su.java:31)\n"
  stdout: ''
  timestamp: 1659976727
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean isUpper = dict.keySet().iterator().next().equals(dict.keySet().iterator().next().toUpperCase());\n\
    \        for (String key : dict.keySet()) {\n            if (isUpper && !key.equals(key.toUpperCase()))\
    \ {\n                return false;\n            }\n            if (!isUpper &&\
    \ !key.equals(key.toLowerCase())) {\n                return false;\n         \
    \   }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5lkndoz_.java:31)\n"
  stdout: ''
  timestamp: 1659976727
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function.\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcsgclg0.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.toUpperCase().equals(key))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ allUpper = false;\n            }\n        }\n        return allUpper || allLower;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaqtxp_hp.java:32)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function.\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcsgclg0.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwf8i67lw.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvfsdkupn.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function.\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcsgclg0.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()))\
    \ ||\n               dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67p9p5k7.java:20)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) return false;\n        boolean allUpper\
    \ = true;\n        boolean allLower = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.equals(key.toUpperCase())) {\n                allLower\
    \ = false;\n            } else if (key.equals(key.toLowerCase())) {\n        \
    \        allUpper = false;\n            } else {\n                return false;\n\
    \            }\n        }\n        return allUpper || allLower;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976727
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()))\
    \ || dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_odbmjsh.java:19)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function.\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcsgclg0.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()))\
    \ ||\n               dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67p9p5k7.java:20)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // YOUR CODE HERE\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbph4ionx.java:18)\n"
  stdout: ''
  timestamp: 1659976727
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        return false;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqgwkrisf.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwf8i67lw.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function.\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcsgclg0.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()))\
    \ ||\n            dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5krk3_zf.java:20)\n"
  stdout: ''
  timestamp: 1659976727
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function.\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcsgclg0.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // YOUR CODE HERE\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbph4ionx.java:18)\n"
  stdout: ''
  timestamp: 1659976727
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here.\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4fa1z78c.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()))\
    \ || dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_odbmjsh.java:19)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.toUpperCase().equals(key))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ allUpper = false;\n            }\n        }\n        return allUpper || allLower;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaqtxp_hp.java:32)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) return false;\n        boolean allUpper\
    \ = true;\n        boolean allLower = true;\n        for (String key : dict.keySet())\
    \ {\n            allUpper = allUpper && key.equals(key.toUpperCase());\n     \
    \       allLower = allLower && key.equals(key.toLowerCase());\n        }\n   \
    \     return allUpper || allLower;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpymxpz_vb.java:26)\n"
  stdout: ''
  timestamp: 1659976727
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_16zrya.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allUpper || allLower;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO: Implement this function.\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcsgclg0.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) {\n            return false;\n        }\n\
    \        boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allLower || allUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb34e3vg9.java:33)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // TODO\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfw17jc6s.java:18)\n"
  stdout: ''
  timestamp: 1659976727
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd70f7ykh.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Your code here.\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4fa1z78c.java:18)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmk1am8b.java:17)\n"
  stdout: ''
  timestamp: 1659976726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean allLower = true;\n        boolean allUpper = true;\n\
    \        for (String key : dict.keySet()) {\n            allLower = allLower &&\
    \ key.equals(key.toLowerCase());\n            allUpper = allUpper && key.equals(key.toUpperCase());\n\
    \        }\n        return allLower || allUpper;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgks2j86g.java:25)\n"
  stdout: ''
  timestamp: 1659976727

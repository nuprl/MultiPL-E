language: java
name: HumanEval_84_solve
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N).chars().map(x\
    \ -> x - '0').sum() + \"\";\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpxwezhedi.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Your code\
    \ here\n        return Integer.toBinaryString(N).chars().map(Character::getNumericValue).sum()\
    \ + \"\";\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp0lscowi6.java:19: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(int) to convert\
    \ an integer to a binary string.\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbbmv3q6x.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        return Integer.toBinaryString(N);\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqqd03cdz.java:19: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(N) to convert\
    \ N to binary string\n        // Hint: You can use String.chars() to get a stream\
    \ of chars in a string\n        // Hint: You can use Stream.mapToInt(x -> x -\
    \ '0') to convert a stream of chars to a stream of ints\n        // Hint: You\
    \ can use Stream.sum() to sum a stream of ints\n        return \"\";\nreturn \"\
    \";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpsp9rnd93.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(int) to convert\
    \ an integer to binary string.\n        return Integer.toBinaryString(N);\nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp78uc_k8u.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N).chars().map(c\
    \ -> c - '0').sum() + \"\";\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpsv0ocszx.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        int sum = 0;\n\
    \        String binary = Integer.toBinaryString(N);\n        for (int i = 0; i\
    \ < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp7tqfqd5r.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: Use Integer.toBinaryString(N)\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmphis4xzze.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcc_xn72w.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: Use Integer.toBinaryString(N) to convert N to binary\n\
    \        // Hint: Use String.chars() to convert a string to a stream of characters\n\
    \        // Hint: Use Stream.reduce(0, (a, b) -> a + b) to sum the stream of characters\n\
    \        return Integer.toBinaryString(N);\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n   \
    \ assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpn8y3ess6.java:22: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: Use Integer.toBinaryString(int) to convert an integer\
    \ to binary string.\n        String binary = Integer.toBinaryString(N);\n    \
    \    int sum = 0;\n        for (int i = 0; i < binary.length(); i++) {\n     \
    \       sum += Integer.parseInt(binary.substring(i, i + 1));\n        }\n    \
    \    return Integer.toString(sum);\nreturn \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp52w5d4jt.java:25: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(int)\n      \
    \  return Integer.toBinaryString(N);\nreturn \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmprfy7ood7.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N).chars().map(c\
    \ -> c - '0').sum() + \"\";\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpsv0ocszx.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcc_xn72w.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: Use Integer.toBinaryString(N) to convert N to binary\n\
    \        // Hint: Use Integer.parseInt(String, 2) to convert binary to integer\n\
    \        // Hint: Use Integer.toString(N) to convert N to string\n        // Hint:\
    \ Use String.chars() to convert string to stream\n        // Hint: Use Stream.mapToInt(...)\
    \ to convert stream to int stream\n        // Hint: Use IntStream.sum() to sum\
    \ up int stream\n        return Integer.toString(Integer.toBinaryString(N).chars().mapToInt(Character::getNumericValue).sum());\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgxl1ouuj.java:24: error: cannot find symbol\n        return Integer.toString(Integer.toBinaryString(N).chars().mapToInt(Character::getNumericValue).sum());\n\
    \                                                                 ^\n  symbol:\
    \   method mapToInt(Character:[...]Value)\n  location: interface IntStream\n1\
    \ error\n"
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcc_xn72w.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You may use the Integer.toBinaryString(int) method.\n\
    \        return Integer.toBinaryString(N);\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n   \
    \ assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpebdxltad.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N).chars().map(Character::getNumericValue).sum()\
    \ + \"\";\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpvzut355s.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        int i = 0;\n        while (N > 0) {\n   \
    \         sb.append(N % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpm33jlont.java:24: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpap2h3btn.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N).chars().map(c\
    \ -> c - '0').sum() + \"\";\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpsv0ocszx.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcc_xn72w.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyy6ky10t.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(int) to convert\
    \ an integer to a binary string.\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbbmv3q6x.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpae09msuh.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String s = Integer.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n      \
    \      sum += Integer.parseInt(s.substring(i, i + 1));\n        }\n        return\
    \ Integer.toString(sum);\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp0uf6nf06.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You may use the built-in method Integer.toBinaryString(int)\n\
    \        return Integer.toBinaryString(N);\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n   \
    \ assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmplrzm6v3g.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(int) to convert\
    \ an integer to a binary string.\n        String binary = Integer.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < binary.length(); i++) {\n \
    \           sum += Integer.parseInt(binary.substring(i, i + 1));\n        }\n\
    \        return Integer.toString(sum);\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n   \
    \ assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpw932cscp.java:25: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return String.valueOf(sum);\nreturn \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmptm7m68vw.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcc_xn72w.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpap2h3btn.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcc_xn72w.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String result\
    \ = \"\";\n        while (N > 0) {\n            result = (N % 2) + result;\n \
    \           N /= 2;\n        }\n        return result;\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpgeieyy24.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(N) to convert\
    \ N to binary.\n        return Integer.toBinaryString(N);\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpi302wxc2.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcc_xn72w.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcc_xn72w.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            int digit = Character.getNumericValue(binary.charAt(i));\n\
    \            sum += digit;\n        }\n        return Integer.toString(sum);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpe5t_kpml.java:24: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcc_xn72w.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmps2k5x81j.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(int) to convert\
    \ an integer to a binary string.\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbbmv3q6x.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can convert a decimal number to binary using\
    \ Integer.toBinaryString(int)\n        // Hint: You can convert a binary number\
    \ to decimal using Integer.parseInt(String, int)\n        // Hint: You can convert\
    \ a character to integer using Character.getNumericValue(char)\n        // Hint:\
    \ You can convert a string to an array of characters using String.toCharArray()\n\
    \        // Hint: You can convert a string to an array of integers using String.chars().map(c\
    \ -> c - '0').toArray()\n        // Hint: You can convert an array of integers\
    \ to an array of characters using Arrays.stream(int[]).mapToObj(i -> (char) i).toArray(Character[]::new)\n\
    \        // Hint: You can convert an array of characters to a string using String.valueOf(Character[])\n\
    \        // Hint: You can convert an array of integers to a string using Arrays.toString(int[])\n\
    \        // Hint: You can convert an array of integers to a string using String.join(\"\
    , \", int[])\n        // Hint: You can convert an array of integers to a string\
    \ using String.format(\"%s\", int[])\n        // Hint: You can convert an array\
    \ of integers to a string using String.format(\"%s\", Arrays.stream(int[]).mapToObj(String::valueOf).toArray(String[]::new))\n\
    \        // Hint: You can convert an array of integers to a string using String.format(\"\
    %s\", Arrays.stream(int[]).mapToObj(String::valueOf).collect(Collectors.joining(\"\
    , \")))\n        // Hint: You can convert an array of integers to a string using\
    \ String.format(\"%s\", Arrays.stream(int[]).mapToObj(String::valueOf).collect(Collectors.joining(\"\
    , \", \"[\", \"]\")))\n        // Hint: You can convert an array of integers to\
    \ a string using String.format(\"%s\", Arrays.stream(int[]).mapToObj(String::valueOf).collect(Collectors.joining(\"\
    , \", \"{\", \"}\")))\n        // Hint: You can convert an array of integers to\
    \ a string using\nreturn \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu7afrknt.java:36)\n"
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(N) to convert\
    \ N to binary.\n        // Hint: You can use Integer.bitCount(N) to count the\
    \ number of 1s in N.\n        // Hint: You can use Integer.toString(N) to convert\
    \ N to string.\n        // Hint: You can use Integer.parseInt(N) to convert N\
    \ to integer.\n        // Hint: You can use Integer.parseInt(N, 2) to convert\
    \ N to integer with base 2.\n        // Hint: You can use Integer.parseInt(N,\
    \ 10) to convert N to integer with base 10.\n        // Hint: You can use Integer.parseInt(N,\
    \ 16) to convert N to integer with base 16.\n        // Hint: You can use Integer.parseInt(N,\
    \ 8) to convert N to integer with base 8.\n        // Hint: You can use Integer.parseInt(N,\
    \ 2) to convert N to integer with base 2.\n        // Hint: You can use Integer.parseInt(N,\
    \ 2) to convert N to integer with base 2.\n        // Hint: You can use Integer.parseInt(N,\
    \ 2) to convert N to integer with base 2.\n        // Hint: You can use Integer.parseInt(N,\
    \ 2) to convert N to integer with base 2.\n        // Hint: You can use Integer.parseInt(N,\
    \ 2) to convert N to integer with base 2.\n        // Hint: You can use Integer.parseInt(N,\
    \ 2) to convert N to integer with base 2.\n        // Hint: You can use Integer.parseInt(N,\
    \ 2) to convert N to integer with base 2.\n        // Hint: You can use Integer.parseInt(N,\
    \ 2) to convert N to integer with base 2.\n        // Hint: You can use Integer.parseInt(N,\
    \ 2) to convert N to integer with base 2.\n        // Hint: You can use Integer.parseInt(N,\
    \ 2) to convert N to integer with base 2.\n        // Hint: You can use Integer.parseInt(N,\
    \ 2) to convert N to integer with base 2.\n        // Hint:\nreturn \"\";\n  \
    \  }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx3at0h_g.java:41)\n"
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: Use Integer.toBinaryString(N) to convert N to binary\n\
    \        // Hint: Use String.chars() to convert a string to a stream of characters\n\
    \        // Hint: Use Stream.mapToInt() to convert a stream of characters to a\
    \ stream of integers\n        // Hint: Use Stream.sum() to sum up a stream of\
    \ integers\n        return Integer.toBinaryString(N);\nreturn \"\";\n    }\n \
    \   public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbjs4ei4g.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(N) to convert\
    \ N to binary\n        // Hint: You can use Integer.parseInt(binary, 2) to convert\
    \ binary to integer\n        // Hint: You can use Integer.toString(N) to convert\
    \ N to string\n        // Hint: You can use Integer.parseInt(string) to convert\
    \ string to integer\n        // Hint: You can use Integer.toString(N, 2) to convert\
    \ N to binary\n        // Hint: You can use Integer.parseInt(binary, 2) to convert\
    \ binary to integer\n        // Hint: You can use Integer.toString(N) to convert\
    \ N to string\n        // Hint: You can use Integer.parseInt(string) to convert\
    \ string to integer\n        // Hint: You can use Integer.toString(N, 2) to convert\
    \ N to binary\n        // Hint: You can use Integer.parseInt(binary, 2) to convert\
    \ binary to integer\n        // Hint: You can use Integer.toString(N) to convert\
    \ N to string\n        // Hint: You can use Integer.parseInt(string) to convert\
    \ string to integer\n        // Hint: You can use Integer.toString(N, 2) to convert\
    \ N to binary\n        // Hint: You can use Integer.parseInt(binary, 2) to convert\
    \ binary to integer\n        // Hint: You can use Integer.toString(N) to convert\
    \ N to string\n        // Hint: You can use Integer.parseInt(string) to convert\
    \ string to integer\n        // Hint: You can use Integer.toString(N, 2) to convert\
    \ N to binary\n        // Hint: You can use Integer.parseInt(binary, 2) to convert\
    \ binary to integer\n        // Hint: You can use Integer.toString(N) to convert\
    \ N to string\n        // Hint: You can use Integer.parseInt(string) to convert\
    \ string to integer\n        // Hint: You can use Integer.toString(N, 2) to convert\
    \ N to binary\n        // Hint: You can use Integer.parseInt(binary, 2) to convert\
    \ binary to integer\n        // Hint: You can use Integer.toString(N) to convert\
    \ N\nreturn \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeycj5bx1.java:44)\n"
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: Use Integer.toBinaryString(int)\n        return\
    \ Integer.toBinaryString(N);\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpnzaeu1vz.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: Use Integer.toBinaryString(N) to convert N to binary\n\
    \        // Hint: Use String.chars() to convert a string to a stream of characters\n\
    \        // Hint: Use Stream.mapToInt() to convert a stream of characters to a\
    \ stream of integers\n        // Hint: Use Stream.sum() to sum up a stream of\
    \ integers\n        return Integer.toBinaryString(N);\nreturn \"\";\n    }\n \
    \   public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbjs4ei4g.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(N) to convert\
    \ N to binary.\n        // Hint: You can use String.chars() to get a stream of\
    \ characters.\n        // Hint: You can use Stream.mapToInt() to convert a stream\
    \ of characters to a stream of integers.\n        // Hint: You can use Stream.sum()\
    \ to sum a stream of integers.\n        return Integer.toBinaryString(N);\nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpvy8v3w3n.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpap2h3btn.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(N) to convert\
    \ an integer to binary string.\n        return Integer.toBinaryString(N);\nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmph66hr5uv.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N).chars().map(c\
    \ -> c - '0').sum() + \"\";\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpsv0ocszx.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyy6ky10t.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N).chars().map(c\
    \ -> c - '0').sum() + \"\";\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpsv0ocszx.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N).chars().map(c\
    \ -> c - '0').sum() + \"\";\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpsv0ocszx.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(N) to convert\
    \ N to binary.\n        // Hint: You can use Integer.parseInt(String, radix) to\
    \ convert a string to an integer.\n        // Hint: You can use Character.getNumericValue(char)\
    \ to convert a character to an integer.\n        // Hint: You can use Character.forDigit(int,\
    \ radix) to convert an integer to a character.\n        // Hint: You can use Character.isDigit(char)\
    \ to check if a character is a digit.\n        // Hint: You can use Character.isLetter(char)\
    \ to check if a character is a letter.\n        // Hint: You can use Character.isLetterOrDigit(char)\
    \ to check if a character is a letter or a digit.\n        // Hint: You can use\
    \ Character.isLowerCase(char) to check if a character is a lowercase letter.\n\
    \        // Hint: You can use Character.isUpperCase(char) to check if a character\
    \ is an uppercase letter.\n        // Hint: You can use Character.toLowerCase(char)\
    \ to convert a character to a lowercase letter.\n        // Hint: You can use\
    \ Character.toUpperCase(char) to convert a character to an uppercase letter.\n\
    \        // Hint: You can use Character.toString(char) to convert a character\
    \ to a string.\n        // Hint: You can use String.valueOf(char) to convert a\
    \ character to a string.\n        // Hint: You can use String.valueOf(int) to\
    \ convert an integer to a string.\n        // Hint: You can use String.valueOf(Object)\
    \ to convert an object to a string.\n        // Hint: You can use String.valueOf(char[])\
    \ to convert a character array to a string.\n        // Hint: You can use String.valueOf(char[],\
    \ offset, count) to convert a character array to a string.\n        // Hint: You\
    \ can use String.valueOf(boolean) to convert a boolean to a string.\n        //\
    \ Hint: You can use String.valueOf(char) to convert a character to a string.\n\
    \        //\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd2sk1or.java:41)\n"
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcc_xn72w.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmprsj3smxo.java:21: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(int) to convert\
    \ an integer to a binary string.\n        // Hint: You can use String.chars()\
    \ to convert a string to a stream of characters.\n        // Hint: You can use\
    \ Stream.mapToInt(ToIntFunction<? super T> mapper) to convert a stream of characters\
    \ to a stream of integers.\n        // Hint: You can use Stream.sum() to sum up\
    \ a stream of integers.\n        return Integer.toBinaryString(N).chars().mapToInt(x\
    \ -> x - '0').sum() + \"\";\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc_1fypdh.java:22: error: cannot find symbol\n        return Integer.toBinaryString(N).chars().mapToInt(x\
    \ -> x - '0').sum() + \"\";\n                                                ^\n\
    \  symbol:   method mapToInt((x)->x - '0')\n  location: interface IntStream\n\
    1 error\n"
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx4_d17y.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You may use toBinaryString(int)\n        return\
    \ Integer.toBinaryString(N);\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpb3ci8f2h.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Character.getNumericValue(binary.charAt(i));\n\
    \        }\n        return Integer.toString(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv88z0bl4.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binaryString\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binaryString.length(); i++) {\n            sum += Integer.parseInt(binaryString.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp15d_11k8.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcc_xn72w.java:26: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n\
    \        }\n        return String.valueOf(sum);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n\
    \    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfv0u71cp.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here.\n        String binary = Integer.toBinaryString(N);\n        int\
    \ sum = 0;\n        for (int i = 0; i < binary.length(); i++) {\n            sum\
    \ += Integer.parseInt(String.valueOf(binary.charAt(i)));\n        }\n        return\
    \ String.valueOf(sum);\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000)).equals((\"1\")));\n    assert(solve((150)).equals((\"\
    110\")));\n    assert(solve((147)).equals((\"1100\")));\n    assert(solve((333)).equals((\"\
    1001\")));\n    assert(solve((963)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpjc9i_iyf.java:24: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: You can use Integer.toBinaryString(N) to convert\
    \ N to binary.\n        return Integer.toBinaryString(N);\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpi302wxc2.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        String binary\
    \ = Integer.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0;\
    \ i < binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\nreturn \"\";\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqu8kan0k.java:23: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        return Integer.toBinaryString(N);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp383mb1gs.java:18: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804248
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        // Write your\
    \ code here\n        // Hint: Use the Integer.toBinaryString() method.\n     \
    \   return Integer.toBinaryString(N);\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000)).equals((\"1\")));\n   \
    \ assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpe4x2rq6b.java:20: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804250
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // Variables:\n    // @N integer\n  \
    \  // Constraints: 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of\
    \ binary number\n    public static String solve(int N) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        int i = 0;\n        while (N > 0) {\n   \
    \         sb.append(N % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(solve((1000)).equals((\"\
    1\")));\n    assert(solve((150)).equals((\"110\")));\n    assert(solve((147)).equals((\"\
    1100\")));\n    assert(solve((333)).equals((\"1001\")));\n    assert(solve((963)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpm33jlont.java:24: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659804249

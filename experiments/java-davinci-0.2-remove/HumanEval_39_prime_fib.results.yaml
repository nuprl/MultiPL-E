language: java
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (true) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \            if (isPrime(fib[i])) {\n                n--;\n                if\
    \ (n == 0) {\n                    return fib[i];\n                }\n        \
    \    }\n            i++;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6hv5upph.java:17: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        for\
    \ (int i = 2; i < 100; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \        }\n        long[] prime = new long[100];\n        int count = 0;\n  \
    \      for (int i = 0; i < 100; i++) {\n            if (isPrime(fib[i])) {\n \
    \               prime[count] = fib[i];\n                count++;\n           \
    \ }\n        }\n        return prime[(int) n - 1];\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx_z25q1v.java:20: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n    \
    \    while (i < n) {\n            if (isPrime(c)) {\n                i++;\n  \
    \          }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyp1_hdgh.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (isPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvthupfqe.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 2;\n    \
    \    while (true) {\n            c = a + b;\n            a = b;\n            b\
    \ = c;\n            if (isPrime(c)) {\n                i++;\n                if\
    \ (i == n) {\n                    return c;\n                }\n            }\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1lf9j9jo.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fibs = new long[100];\n        fibs[0] = 1;\n        fibs[1] = 1;\n        int\
    \ i = 2;\n        while (i < 100) {\n            fibs[i] = fibs[i - 1] + fibs[i\
    \ - 2];\n            i++;\n        }\n        int j = 0;\n        while (j < 100)\
    \ {\n            if (isPrime(fibs[j])) {\n                n--;\n            }\n\
    \            if (n == 0) {\n                return fibs[j];\n            }\n \
    \           j++;\n        }\n        return -1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6yasp9za.java:21: error: cannot find symbol\n            if (isPrime(fibs[j]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c))\n                i++;\n        }\n     \
    \   return c;\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbkr_ty7p.java:19: error: cannot find symbol\n            if (isPrime(c))\n\
    \                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long count = 2;\n\
    \        while (count < n) {\n            a = b;\n            b = c;\n       \
    \     c = a + b;\n            if (isPrime(c)) {\n                count++;\n  \
    \          }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo9d11drd.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (isPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1ugohpg6.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long count = 0;\n\
    \        while (count < n) {\n            c = a + b;\n            a = b;\n   \
    \         b = c;\n            if (isPrime(c)) {\n                count++;\n  \
    \          }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwx0vcgm8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (true) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \            if (isPrime(fib[i])) {\n                n--;\n                if\
    \ (n == 0) {\n                    return fib[i];\n                }\n        \
    \    }\n            i++;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6hv5upph.java:17: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (true) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \            if (isPrime(fib[i])) {\n                n--;\n                if\
    \ (n == 0) {\n                    return fib[i];\n                }\n        \
    \    }\n            i++;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6hv5upph.java:17: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        for\
    \ (int i = 2; i < 100; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \        }\n        int count = 0;\n        for (int i = 0; i < 100; i++) {\n\
    \            if (isPrime(fib[i])) {\n                count++;\n            }\n\
    \            if (count == n) {\n                return fib[i];\n            }\n\
    \        }\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps9kdug0s.java:19: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long count = 2;\n\
    \        while (count < n) {\n            a = b;\n            b = c;\n       \
    \     c = a + b;\n            if (isPrime(c)) {\n                count++;\n  \
    \          }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo9d11drd.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[(int)n];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (i < n) {\n            fib[i] = fib[i-1] + fib[i-2];\n\
    \            i++;\n        }\n        return fib[i-1];\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 1 out of bounds for length 1\n\tat Problem.primeFib(tmpik3gy78e.java:13)\n\
    \tat Problem.main(tmpik3gy78e.java:22)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (true) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \            if (isPrime(fib[i])) {\n                n--;\n                if\
    \ (n == 0) {\n                    return fib[i];\n                }\n        \
    \    }\n            i++;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6hv5upph.java:17: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fibs = new long[(int)n];\n        fibs[0] = 1;\n        fibs[1] = 2;\n     \
    \   int i = 2;\n        while (i < n) {\n            fibs[i] = fibs[i-1] + fibs[i-2];\n\
    \            i++;\n        }\n        return fibs[i-1];\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 1 out of bounds for length 1\n\tat Problem.primeFib(tmpawd2iajf.java:13)\n\
    \tat Problem.main(tmpawd2iajf.java:22)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[(int)n];\n        fib[0] = 1;\n        fib[1] = 1;\n        for\
    \ (int i = 2; i < n; i++) {\n            fib[i] = fib[i-1] + fib[i-2];\n     \
    \   }\n        for (int i = 0; i < n; i++) {\n            if (isPrime(fib[i]))\
    \ {\n                return fib[i];\n            }\n        }\n        return\
    \ -1;\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_olnlsr8.java:18: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt2y9domo.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i <= n) {\n            c = a + b;\n            a = b;\n          \
    \  b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbjxj48qk.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt2y9domo.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (i < 100) {\n            fib[i] = fib[i - 1] + fib[i -\
    \ 2];\n            i++;\n        }\n        long[] prime = new long[100];\n  \
    \      int j = 0;\n        for (int k = 0; k < 100; k++) {\n            if (isPrime(fib[k]))\
    \ {\n                prime[j] = fib[k];\n                j++;\n            }\n\
    \        }\n        return prime[(int) n - 1];\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsv9zxqlu.java:22: error: cannot find symbol\n            if (isPrime(fib[k]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (isPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvthupfqe.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long count = 0;\n\
    \        while (count < n) {\n            c = a + b;\n            a = b;\n   \
    \         b = c;\n            if (isPrime(c))\n                count++;\n    \
    \    }\n        return c;\n    }\n    public static void main(String[] args) {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpylo04co0.java:19: error: cannot find symbol\n            if (isPrime(c))\n\
    \                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (isPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvthupfqe.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 0;\n        fib[1] = 1;\n        fib[2]\
    \ = 2;\n        int i = 3;\n        while (i < 100) {\n            fib[i] = fib[i\
    \ - 1] + fib[i - 2];\n            i++;\n        }\n        long[] prime = new\
    \ long[100];\n        prime[0] = 2;\n        prime[1] = 3;\n        prime[2] =\
    \ 5;\n        int j = 3;\n        int k = 5;\n        while (j < 100) {\n    \
    \        k += 2;\n            if (isPrime(k)) {\n                prime[j] = k;\n\
    \                j++;\n            }\n        }\n        long[] primeFib = new\
    \ long[100];\n        int l = 0;\n        for (int m = 0; m < 100; m++) {\n  \
    \          if (isPrime(fib[m])) {\n                primeFib[l] = fib[m];\n   \
    \             l++;\n            }\n        }\n        return primeFib[(int) n\
    \ - 1];\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4bfvqd1z.java:28: error: cannot find symbol\n            if (isPrime(k))\
    \ {\n                ^\n  symbol:   method isPrime(int)\n  location: class Problem\n\
    /tmp/tmp4bfvqd1z.java:36: error: cannot find symbol\n            if (isPrime(fib[m]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp79s1afyc.java:24)\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4nblb8f_.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[(int)n];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (i < n) {\n            fib[i] = fib[i-1] + fib[i-2];\n\
    \            i++;\n        }\n        return fib[i-1];\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 1 out of bounds for length 1\n\tat Problem.primeFib(tmpik3gy78e.java:13)\n\
    \tat Problem.main(tmpik3gy78e.java:22)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (isPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1ugohpg6.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        //\
    \ TODO: Implement this function.\n        long a = 0;\n        long b = 1;\n \
    \       long c = 0;\n        long count = 0;\n        while(count < n) {\n   \
    \         c = a + b;\n            a = b;\n            b = c;\n            if(isPrime(c))\
    \ {\n                count++;\n            }\n        }\n        return c;\n \
    \   }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7data04t.java:20: error: cannot find symbol\n            if(isPrime(c))\
    \ {\n               ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n    \
    \    while (i < n) {\n            if (isPrime(c)) {\n                i++;\n  \
    \          }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyp1_hdgh.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ f1 = 1, f2 = 1, f3 = 2;\n        long i = 3;\n        while (i < n) {\n    \
    \        f1 = f2;\n            f2 = f3;\n            f3 = f1 + f2;\n         \
    \   if (isPrime(f3)) {\n                i++;\n            }\n        }\n     \
    \   return f3;\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuhrt80y2.java:17: error: cannot find symbol\n            if (isPrime(f3))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (isPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvthupfqe.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        for\
    \ (int i = 2; i < 100; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \        }\n        long[] prime = new long[100];\n        int j = 0;\n      \
    \  for (int i = 0; i < 100; i++) {\n            if (isPrime(fib[i])) {\n     \
    \           prime[j] = fib[i];\n                j++;\n            }\n        }\n\
    \        return prime[(int)n - 1];\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4ye69_wg.java:20: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i <= n) {\n            c = a + b;\n            if (isPrime(c)) {\n\
    \                i++;\n            }\n            a = b;\n            b = c;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprj7me3nd.java:17: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (true) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \            if (isPrime(fib[i])) {\n                n--;\n                if\
    \ (n == 0) {\n                    return fib[i];\n                }\n        \
    \    }\n            i++;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6hv5upph.java:17: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt2y9domo.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmr7ar4u1.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5d6j80hd.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i <= n) {\n            c = a + b;\n            a = b;\n          \
    \  b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj1ctf9lv.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw7vktgd7.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplurvduyb.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fibs = new long[100];\n        fibs[0] = 1;\n        fibs[1] = 1;\n        int\
    \ i = 2;\n        while (true) {\n            fibs[i] = fibs[i - 1] + fibs[i -\
    \ 2];\n            if (isPrime(fibs[i])) {\n                n--;\n           \
    \     if (n == 0) {\n                    return fibs[i];\n                }\n\
    \            }\n            i++;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkmu6msaz.java:17: error: cannot find symbol\n            if (isPrime(fibs[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[(int)n];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (i < n) {\n            fib[i] = fib[i-1] + fib[i-2];\n\
    \            i++;\n        }\n        return fib[i-1];\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 1 out of bounds for length 1\n\tat Problem.primeFib(tmpik3gy78e.java:13)\n\
    \tat Problem.main(tmpik3gy78e.java:22)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i <= n) {\n            c = a + b;\n            a = b;\n          \
    \  b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbjxj48qk.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (isPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvthupfqe.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (isPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvthupfqe.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (isPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvthupfqe.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        //\
    \ TODO: Implement this method.\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm9rig5us.java:15)\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[(int)n];\n        fib[0] = 1;\n        fib[1] = 1;\n        for\
    \ (int i = 2; i < n; i++) {\n            fib[i] = fib[i-1] + fib[i-2];\n     \
    \   }\n        long[] primes = new long[(int)n];\n        primes[0] = 2;\n   \
    \     int count = 1;\n        for (int i = 3; i < fib[(int)n-1]; i++) {\n    \
    \        boolean isPrime = true;\n            for (int j = 0; j < count; j++)\
    \ {\n                if (i % primes[j] == 0) {\n                    isPrime =\
    \ false;\n                    break;\n                }\n            }\n     \
    \       if (isPrime) {\n                primes[count] = i;\n                count++;\n\
    \            }\n        }\n        for (int i = 0; i < n; i++) {\n           \
    \ for (int j = 0; j < count; j++) {\n                if (fib[i] == primes[j])\
    \ {\n                    return fib[i];\n                }\n            }\n  \
    \      }\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 1 out of bounds for length 1\n\tat Problem.primeFib(tmpoeu04c_8.java:13)\n\
    \tat Problem.main(tmpoeu04c_8.java:43)\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long count = 0;\n\
    \        while (count < n) {\n            c = a + b;\n            a = b;\n   \
    \         b = c;\n            if (isPrime(c)) {\n                count++;\n  \
    \          }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy9lpo0z4.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmr7ar4u1.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ i = 0;\n        long j = 1;\n        long k = 0;\n        long count = 0;\n\
    \        while (count < n) {\n            k = i + j;\n            i = j;\n   \
    \         j = k;\n            if (isPrime(k)) {\n                count++;\n  \
    \          }\n        }\n        return k;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi01x0ypi.java:19: error: cannot find symbol\n            if (isPrime(k))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 1;\n        while (fib[i] < 1000000000000L) {\n            i++;\n      \
    \      fib[i] = fib[i - 1] + fib[i - 2];\n        }\n        int j = 0;\n    \
    \    while (n > 0) {\n            if (isPrime(fib[j])) {\n                n--;\n\
    \            }\n            j++;\n        }\n        return fib[j - 1];\n    }\n\
    \    public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8_z19qvt.java:21: error: cannot find symbol\n            if (isPrime(fib[j]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt2y9domo.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[(int) n];\n        fib[0] = 1;\n        fib[1] = 1;\n       \
    \ for (int i = 2; i < n; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \        }\n        long[] primes = new long[(int) n];\n        primes[0] = 2;\n\
    \        primes[1] = 3;\n        int p = 2;\n        for (int i = 5; p < n; i\
    \ += 2) {\n            boolean isPrime = true;\n            for (int j = 0; j\
    \ < p; j++) {\n                if (i % primes[j] == 0) {\n                   \
    \ isPrime = false;\n                    break;\n                }\n          \
    \  }\n            if (isPrime) {\n                primes[p] = i;\n           \
    \     p++;\n            }\n        }\n        long[] primeFib = new long[(int)\
    \ n];\n        int f = 0;\n        for (int i = 0; i < n; i++) {\n           \
    \ if (Arrays.binarySearch(primes, fib[i]) >= 0) {\n                primeFib[f]\
    \ = fib[i];\n                f++;\n            }\n        }\n        return primeFib[(int)\
    \ n - 1];\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 1 out of bounds for length 1\n\tat Problem.primeFib(tmp8cucq7dz.java:13)\n\
    \tat Problem.main(tmp8cucq7dz.java:45)\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fibs = new long[100];\n        fibs[0] = 1;\n        fibs[1] = 1;\n        int\
    \ i = 2;\n        while (true) {\n            fibs[i] = fibs[i - 1] + fibs[i -\
    \ 2];\n            if (isPrime(fibs[i])) {\n                n--;\n           \
    \     if (n == 0) {\n                    return fibs[i];\n                }\n\
    \            }\n            i++;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkmu6msaz.java:17: error: cannot find symbol\n            if (isPrime(fibs[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        for\
    \ (int i = 2; i < 100; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \        }\n        long[] prime = new long[100];\n        prime[0] = 2;\n   \
    \     int j = 1;\n        for (int i = 3; i < 100; i++) {\n            boolean\
    \ isPrime = true;\n            for (int k = 2; k < i; k++) {\n               \
    \ if (i % k == 0) {\n                    isPrime = false;\n                  \
    \  break;\n                }\n            }\n            if (isPrime) {\n    \
    \            prime[j] = i;\n                j++;\n            }\n        }\n \
    \       long[] primeFib = new long[100];\n        int k = 0;\n        for (int\
    \ i = 0; i < 100; i++) {\n            for (int l = 0; l < 100; l++) {\n      \
    \          if (fib[i] == prime[l]) {\n                    primeFib[k] = fib[i];\n\
    \                    k++;\n                }\n            }\n        }\n     \
    \   return primeFib[(int) n - 1];\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2x148yov.java:51)\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fibs = new long[(int) n + 1];\n        fibs[0] = 0;\n        fibs[1] = 1;\n\
    \        for (int i = 2; i <= n; i++) {\n            fibs[i] = fibs[i - 1] + fibs[i\
    \ - 2];\n        }\n        long[] primes = new long[(int) n + 1];\n        primes[0]\
    \ = 0;\n        primes[1] = 0;\n        for (int i = 2; i <= n; i++) {\n     \
    \       primes[i] = i;\n        }\n        for (int i = 2; i <= n; i++) {\n  \
    \          if (primes[i] == 0) {\n                continue;\n            }\n \
    \           for (int j = i + i; j <= n; j += i) {\n                primes[j] =\
    \ 0;\n            }\n        }\n        long ans = 0;\n        for (int i = 1;\
    \ i <= n; i++) {\n            if (primes[i] != 0) {\n                ans = fibs[i];\n\
    \            }\n        }\n        return ans;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7qamc33c.java:40)\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (true) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \            if (fib[i] > 10000000000L) {\n                break;\n          \
    \  }\n            i++;\n        }\n        long[] prime = new long[100];\n   \
    \     int j = 0;\n        for (int k = 0; k < i; k++) {\n            if (isPrime(fib[k]))\
    \ {\n                prime[j] = fib[k];\n                j++;\n            }\n\
    \        }\n        return prime[(int) n - 1];\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi9inmq7a.java:25: error: cannot find symbol\n            if (isPrime(fib[k]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        for\
    \ (int i = 2; i < 100; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \        }\n        int count = 0;\n        for (int i = 0; i < 100; i++) {\n\
    \            if (isPrime(fib[i])) {\n                count++;\n            }\n\
    \            if (count == n) {\n                return fib[i];\n            }\n\
    \        }\n        return -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxouhexnc.java:19: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt2y9domo.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long count = 2;\n\
    \        while (count < n) {\n            c = a + b;\n            a = b;\n   \
    \         b = c;\n            if (isPrime(c)) {\n                count++;\n  \
    \          }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbn78krdd.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (true) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \            if (isPrime(fib[i])) {\n                n--;\n                if\
    \ (n == 0) {\n                    return fib[i];\n                }\n        \
    \    }\n            i++;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6hv5upph.java:17: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n    \
    \    while (i < n) {\n            if (isPrime(c)) {\n                i++;\n  \
    \          }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyp1_hdgh.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n    \
    \    while (i < n) {\n            if (isPrime(c)) {\n                i++;\n  \
    \          }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyp1_hdgh.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        //\
    \ TODO: implement this function\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_juo2saa.java:15)\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmr7ar4u1.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (isPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvthupfqe.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ i = 1;\n        long j = 1;\n        long k = 1;\n        while (n > 0) {\n\
    \            k = i + j;\n            i = j;\n            j = k;\n            if\
    \ (isPrime(k)) {\n                n--;\n            }\n        }\n        return\
    \ k;\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaq02t05e.java:18: error: cannot find symbol\n            if (isPrime(k))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt2y9domo.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        //\
    \ TODO: Implement this function.\n        return 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphz34aeqz.java:15)\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i <= n) {\n            if (isPrime(c)) {\n                i++;\n \
    \           }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0okb6kre.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4nblb8f_.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            if (isPrime(c)) {\n                i++;\n  \
    \          }\n            c = a + b;\n            a = b;\n            b = c;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpns8boj1e.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt2y9domo.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ i = 0;\n        long j = 1;\n        long k = 0;\n        long c = 0;\n    \
    \    while (c < n) {\n            k = i + j;\n            i = j;\n           \
    \ j = k;\n            if (isPrime(k)) {\n                c++;\n            }\n\
    \        }\n        return k;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoolp9g0_.java:19: error: cannot find symbol\n            if (isPrime(k))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = a + b;\n        long i = 0;\n\
    \        while (i < n) {\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9a28w5xj.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt2y9domo.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[(int) n + 1];\n        fib[0] = 0;\n        fib[1] = 1;\n   \
    \     for (int i = 2; i <= n; i++) {\n            fib[i] = fib[i - 1] + fib[i\
    \ - 2];\n        }\n        long[] prime = new long[(int) n + 1];\n        prime[0]\
    \ = 0;\n        prime[1] = 0;\n        for (int i = 2; i <= n; i++) {\n      \
    \      prime[i] = 1;\n        }\n        for (int i = 2; i <= n; i++) {\n    \
    \        if (prime[i] == 1) {\n                for (int j = 2; j * i <= n; j++)\
    \ {\n                    prime[j * i] = 0;\n                }\n            }\n\
    \        }\n        long[] primeFib = new long[(int) n + 1];\n        primeFib[0]\
    \ = 0;\n        primeFib[1] = 0;\n        for (int i = 2; i <= n; i++) {\n   \
    \         primeFib[i] = primeFib[i - 1];\n            if (prime[i] == 1 && fib[i]\
    \ == i) {\n                primeFib[i]++;\n            }\n        }\n        return\
    \ primeFib[(int) n];\n    }\n    public static void main(String[] args) {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe17riug2.java:42)\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (isPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvthupfqe.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt2y9domo.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw7vktgd7.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n    \
    \    while (i < n) {\n            if (isPrime(c)) {\n                i++;\n  \
    \          }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyp1_hdgh.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long count = 2;\n\
    \        while (count < n) {\n            if (isPrime(c)) {\n                count++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9ns030ng.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (i < 100) {\n            fib[i] = fib[i - 1] + fib[i -\
    \ 2];\n            i++;\n        }\n        i = 0;\n        long count = 0;\n\
    \        while (count < n) {\n            if (isPrime(fib[i])) {\n           \
    \     count++;\n            }\n            i++;\n        }\n        return fib[i\
    \ - 1];\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6cwohlmu.java:22: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long count = 2;\n\
    \        while (count < n) {\n            c = a + b;\n            a = b;\n   \
    \         b = c;\n            if (isPrime(c)) {\n                count++;\n  \
    \          }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpahtv4nv5.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        //\
    \ TODO: Implement this method.\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm9rig5us.java:15)\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n    \
    \    while (i < n) {\n            if (isPrime(c)) {\n                i++;\n  \
    \          }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyp1_hdgh.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[(int)n];\n        fib[0] = 1;\n        fib[1] = 1;\n        for\
    \ (int i = 2; i < n; i++) {\n            fib[i] = fib[i-1] + fib[i-2];\n     \
    \   }\n        for (int i = 0; i < n; i++) {\n            if (isPrime(fib[i]))\
    \ {\n                return fib[i];\n            }\n        }\n        return\
    \ -1;\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_olnlsr8.java:18: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw7vktgd7.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        for\
    \ (int i = 2; i < 100; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \        }\n        long count = 0;\n        for (int i = 0; i < 100; i++) {\n\
    \            if (isPrime(fib[i])) {\n                count++;\n            }\n\
    \            if (count == n) {\n                return fib[i];\n            }\n\
    \        }\n        return -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps8_q6l4x.java:19: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp79s1afyc.java:24)\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (true) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \            if (isPrime(fib[i])) {\n                n--;\n                if\
    \ (n == 0) {\n                    return fib[i];\n                }\n        \
    \    }\n            i++;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6hv5upph.java:17: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (true) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \            if (isPrime(fib[i])) {\n                n--;\n                if\
    \ (n == 0) {\n                    return fib[i];\n                }\n        \
    \    }\n            i++;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6hv5upph.java:17: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (true) {\n            if (isPrime(c)) {\n                if (i == n)\
    \ {\n                    return c;\n                }\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpab6pcjmj.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        for\
    \ (int i = 2; i < 100; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \        }\n        long count = 0;\n        for (int i = 0; i < 100; i++) {\n\
    \            if (isPrime(fib[i])) {\n                count++;\n            }\n\
    \            if (count == n) {\n                return fib[i];\n            }\n\
    \        }\n        return -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps8_q6l4x.java:19: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long count = 0;\n\
    \        while (count < n) {\n            c = a + b;\n            a = b;\n   \
    \         b = c;\n            if (isPrime(c)) {\n                count++;\n  \
    \          }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwx0vcgm8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n    \
    \    while (i < n) {\n            if (isPrime(c)) {\n                i++;\n  \
    \          }\n            c = a + b;\n            a = b;\n            b = c;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpihkd2534.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i <= n) {\n            c = a + b;\n            a = b;\n          \
    \  b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbjxj48qk.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 0;\n    \
    \    while (i < n) {\n            if (isPrime(c)) {\n                i++;\n  \
    \          }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyp1_hdgh.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        //\
    \ TODO: Implement this function.\n        return 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphz34aeqz.java:15)\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (isPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvthupfqe.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt2y9domo.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw7vktgd7.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long count = 2;\n\
    \        while (count < n) {\n            c = a + b;\n            a = b;\n   \
    \         b = c;\n            if (isPrime(c)) {\n                count++;\n  \
    \          }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbn78krdd.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw7vktgd7.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp79s1afyc.java:24)\n"
  stdout: ''
  timestamp: 1659976630
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        for\
    \ (int i = 2; i < 100; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \        }\n        long[] prime = new long[100];\n        int count = 0;\n  \
    \      for (int i = 0; i < 100; i++) {\n            if (isPrime(fib[i])) {\n \
    \               prime[count] = fib[i];\n                count++;\n           \
    \ }\n        }\n        return prime[(int) n - 1];\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx_z25q1v.java:20: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            if (isPrime(c)) {\n                a =\
    \ b;\n                b = c;\n                c = a + b;\n                i++;\n\
    \            } else {\n                a = b;\n                b = c;\n      \
    \          c = a + b;\n            }\n        }\n        return c;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_28wczcb.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 2;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (isPrime(c)) {\n                i++;\n          \
    \  }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvthupfqe.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4nblb8f_.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976629
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (true) {\n            if (isPrime(c)) {\n                if (i == n)\
    \ {\n                    return c;\n                }\n                i++;\n\
    \            }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpab6pcjmj.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 0;\n        long i = 0;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt2y9domo.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i <= n) {\n            if (isPrime(c)) {\n                i++;\n \
    \           }\n            a = b;\n            b = c;\n            c = a + b;\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0okb6kre.java:16: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = a + b;\n        long i = 3;\n\
    \        while (i <= n) {\n            a = b;\n            b = c;\n          \
    \  c = a + b;\n            if (isPrime(c)) {\n                i++;\n         \
    \   }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr65xu80.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 3;\n    \
    \    while (i < n) {\n            a = b;\n            b = c;\n            c =\
    \ a + b;\n            i++;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp624ailpj.java:25)\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        int\
    \ i = 2;\n        while (true) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \            if (isPrime(fib[i])) {\n                n--;\n                if\
    \ (n == 0) {\n                    return fib[i];\n                }\n        \
    \    }\n            i++;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6hv5upph.java:17: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 1;\n        long b = 1;\n        long c = 0;\n        long i = 2;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbrstd4o.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976628
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long\
    \ a = 0;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i++;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ad8d2j8.java:19: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976627
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    public static long primeFib(long n) {\n        long[]\
    \ fib = new long[100];\n        fib[0] = 1;\n        fib[1] = 1;\n        for\
    \ (int i = 2; i < 100; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n\
    \        }\n        long count = 0;\n        for (int i = 0; i < 100; i++) {\n\
    \            if (isPrime(fib[i])) {\n                count++;\n            }\n\
    \            if (count == n) {\n                return fib[i];\n            }\n\
    \        }\n        return -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps8_q6l4x.java:19: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659976631

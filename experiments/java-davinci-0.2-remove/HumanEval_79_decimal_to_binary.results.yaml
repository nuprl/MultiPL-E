language: java
name: HumanEval_79_decimal_to_binary
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        // Your code here\n        return \"\
    db\" + Integer.toBinaryString(decimal) + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n\
    \        for (int i = 0; i < binary.length(); i++) {\n            sb.append(binary.charAt(i));\n\
    \        }\n        sb.append(\"db\");\n        return sb.toString();\n}\n   \
    \ public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return binary;\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9nxtgjfk.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        // Your code here\n        return \"\
    db\" + Integer.toBinaryString(decimal) + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        // Your code here\n        return \"\
    db\" + Integer.toBinaryString(decimal) + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        // Your code here\n        return \"\
    \";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp072dj2aj.java:20)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        // your code here\n        return \"\
    \";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjz9ad4pn.java:20)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return binary;\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9nxtgjfk.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n\
    \        for (int i = 0; i < binary.length(); i++) {\n            sb.append(binary.charAt(i));\n\
    \        }\n        sb.append(\"db\");\n        return sb.toString();\n}\n   \
    \ public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        // Your code here\n        return \"\
    db\" + Integer.toBinaryString(decimal) + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        // Your code here\n        return \"\
    \";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp072dj2aj.java:20)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return binary;\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9nxtgjfk.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return binary;\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9nxtgjfk.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return binary;\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9nxtgjfk.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal != 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2dwh0xzg.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        // Your code here\n        return \"\
    db\" + Integer.toBinaryString(decimal) + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return binary;\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9nxtgjfk.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        int remainder\
    \ = 0;\n        while (decimal > 0) {\n            remainder = decimal % 2;\n\
    \            binary = remainder + binary;\n            decimal = decimal / 2;\n\
    \        }\n        return binary;\n}\n    public static void main(String[] args)\
    \ {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4z2t1o6f.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return binary;\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9nxtgjfk.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal != 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2dwh0xzg.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        StringBuilder sb = new StringBuilder();\n        sb.append(\"db\");\n\
    \        for (int i = 0; i < binary.length(); i++) {\n            sb.append(binary.charAt(i));\n\
    \        }\n        sb.append(\"db\");\n        return sb.toString();\n}\n   \
    \ public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        // Write your code here\n        return\
    \ \"\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcwu689va.java:20)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return binary;\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9nxtgjfk.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        // Your code here\n        return \"\
    db\" + Integer.toBinaryString(decimal) + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal != 0) {\n            binary = (decimal % 2) + binary;\n           \
    \ decimal /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public\
    \ static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsj2hn5np.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder binary = new StringBuilder();\n\
    \        binary.append(\"db\");\n        while (decimal > 0) {\n            binary.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        binary.append(\"db\");\n\
    \        return binary.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp98stxz8p.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return binary;\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9nxtgjfk.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        while (decimal > 0) {\n            sb.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        sb.append(\"db\");\n  \
    \      return sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyxu35at.java:26)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = \"\";\n        while\
    \ (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal\
    \ /= 2;\n        }\n        return \"db\" + binary + \"db\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n    assert(decimalToBinary((103)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy7usn1x.java:24)\n"
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        String binary = Integer.toBinaryString(decimal);\n\
    \        return \"db\" + binary + \"db\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0)).equals((\"db0db\")));\n    assert(decimalToBinary((32)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    public static String\
    \ decimalToBinary(int decimal) {\n        return \"db\" + Integer.toBinaryString(decimal)\
    \ + \"db\";\n}\n    public static void main(String[] args) {\n    assert(decimalToBinary((0)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32)).equals((\"db100000db\")));\n   \
    \ assert(decimalToBinary((103)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011358

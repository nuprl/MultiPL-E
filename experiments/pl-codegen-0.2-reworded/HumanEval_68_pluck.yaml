name: HumanEval_68_pluck
language: pl
prompt: "# \"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n# your task is to pluck one of the nodes and return it.\n# The\
  \ plucked node should be the node with the smallest even value.\n# If multiple nodes\
  \ with the same smallest even value are found return the node that has smallest\
  \ index.\n# The plucked node should be returned in an array, [ smalest_value, its\
  \ index ],\n# If there are no even values or the given array is empty, return [].\n\
  # Example 1:\n# >>> pluck([4, 2, 3])\n# [2, 1]\n# Explanation: 2 has the smallest\
  \ even value, and 2 has the smallest index.\n# Example 2:\n# >>> pluck([1, 2, 3])\n\
  # [2, 1]\n# Explanation: 2 has the smallest even value, and 2 has the smallest index.\n\
  # Example 3:\n# >>> pluck([])\n# []\n# Example 4:\n# >>> pluck([5, 0, 3, 0, 4, 2])\n\
  # [0, 1]\n# Explanation: 0 is the smallest value, but  there are two zeros,\n# so\
  \ we will choose the first zero, which has the smallest index.\n# Constraints:\n\
  # * 1 <= nodes.length <= 10000\n# * 0 <= node.value\nsub pluck {\n    my($arr) =\
  \ @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&pluck;\n\
  \        if(eq_deeply($candidate->([4, 2, 3]),[2, 1])) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3]),[2,\
  \ 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 0, 3, 0, 4, 2]),[0, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->([1, 2, 3, 0, 5, 3]),[0, 3])) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 4, 8, 4, 8]),[4, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->([7, 6, 7, 1]),[6, 1])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([7,\
  \ 9, 7, 1]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\
  \ntesthumaneval();"
completions: ["    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value)\
    \ = -1;\n    my($min_index_value) = -1;\n    my($min_index_value_index) = -1;\n\
    \    my($min_index_value_index_value) = -1;\n    my($min_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value) = -1;\n    my($min_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value) = -1;\n\
    \    my($min_index_value_index_value_index_value_index_value_index) = -1;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index_value) = -1;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value", "    my($smallest_even_value, $smallest_index)\
    \ = 0;\n    my($result) = [];\n    my($index) = 0;\n    foreach my $node (@$arr)\
    \ {\n        if ($node == 0) {\n            $result = [$node, $index];\n     \
    \       $index += 1;\n            continue;\n        }\n        if ($node % 2\
    \ == 0) {\n            $smallest_even_value = $node;\n            $smallest_index\
    \ = $index;\n        }\n        $index += 1;\n    }\n    if ($smallest_even_value\
    \ == 0) {\n        return $result;\n    }\n    my $result = [$smallest_even_value,\
    \ $smallest_index];\n    return $result;\n}\n", "    my($smallest_even_value)\
    \ = 0;\n    my($smallest_index) = 0;\n    my($result) = [];", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($smallest_even_value_index) = 0;\n    my($smallest_index_index)\
    \ = 0;\n    my($smallest_index_value) = 0;\n    my($smallest_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index) = 0;\n    my($smallest_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index) = 0;\n   \
    \ my($smallest_index_index_index_index_index_index_index_value) = 0;\n    my($smallest_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($result) = [];\n    my($index) = 0;\n    foreach\
    \ my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if ($node < $smallest_even_value)\
    \ {\n                $smallest_even_value = $node;\n                $smallest_index\
    \ = $index;\n            }\n        }\n        $index += 1;\n    }\n    if ($smallest_even_value\
    \ == 0) {\n        return $result;\n    }\n    $result = [ $smallest_even_value,\
    \ $smallest_index ];\n    return $result;\n}\n", "    my($min_value, $min_index)\
    \ = 0;\n    my($index, $value) = 0;\n    foreach my $node (@$arr) {\n        if\
    \ ($node == 0) {\n            continue;\n        }\n        my $even = $node %\
    \ 2;\n        if ($even == 0) {\n            if ($min_value == 0) {\n        \
    \        $min_index = $index;\n                $min_value = $node;\n         \
    \   } else if ($node < $min_value) {\n                $min_index = $index;\n \
    \               $min_value = $node;\n            }\n        }\n        $index\
    \ += 1;\n    }\n    return [$min_value, $min_index];\n}\n", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($result) = [];\n    my($index) = 0;\n    foreach\
    \ my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if ($node < $smallest_even_value)\
    \ {\n                $smallest_even_value = $node;\n                $smallest_index\
    \ = $index;\n            }\n        }\n        $index += 1;\n    }\n    if ($smallest_even_value\
    \ == 0) {\n        return $result;\n    }\n    $result = [$smallest_even_value,\
    \ $smallest_index];\n    return $result;\n}\n", "    my($smallest_value, $smallest_index)\
    \ = 0;\n    my($index) = 0;\n    my($result) = [];", "    my($min_even_value)\
    \ = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_",
  "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_index) = 0;\n    my($min_index_index_value) = 0;\n \
    \   my($min_index_index_index) = 0;\n    my($min_index_index_index_value) = 0;\n\
    \    my($min_index_index_index_index) = 0;\n    my($min_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index) = 0;\n  \
    \  my($min_index_index_index_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index", "    my($min_even_value, $min_even_index) = 0;\n \
    \   my($min_index, $min_value) = 0;\n    my($result) = [];\n    foreach my $node\
    \ (@$arr) {\n        if ($node == 0) {\n            continue;\n        }\n   \
    \     my $even_value = $node % 2;\n        if ($even_value == 0) {\n         \
    \   $result = [ $node, $min_index ];\n            $min_even_value = $node;\n \
    \           $min_even_index = $min_index;\n            $min_index = $node;\n \
    \       } else if ($even_value < $min_even_value) {\n            $result = [ $node,\
    \ $min_index ];\n            $min_even_value = $node;\n            $min_even_index\
    \ = $min_index;\n            $min_index = $node;\n        } else if ($even_value\
    \ == $min_even_value) {\n            if ($node < $min_index) {\n             \
    \   $result = [ $node, $min_index ];\n                $min_even_value = $node;\n\
    \                $min_even_index = $min_index;\n                $min_index = $node;\n\
    \            } else if ($node == $min_index) {\n                $result = [ $node,\
    \ $min_index ];\n            }\n        }\n    }\n    return $result;\n}\n", " \
    \   my($smallest_even_value, $smallest_even_index) = 0;\n    my($smallest_index,\
    \ $smallest_value) = 0;\n    my($index, $value) = 0;\n    my($result) = [];\n\
    \    foreach my $node (@$arr) {\n        $value = $node;\n        $index = $arr.index($node);\n\
    \        if ($value % 2 == 0) {\n            if ($smallest_even_value == 0) {\n\
    \                $smallest_even_value = $value;\n                $smallest_even_index\
    \ = $index;\n            } else if ($value < $smallest_even_value) {\n       \
    \         $smallest_even_value = $value;\n                $smallest_even_index\
    \ = $index;\n            }\n        }\n        if ($value < $smallest_value) {\n\
    \            $smallest_value = $value;\n            $smallest_index = $index;\n\
    \        }\n    }\n    if ($smallest_even_value == 0) {\n        $result = [$smallest_even_index,\
    \ $smallest_even_value];\n    } else {\n        $result = [$smallest_index, $smallest_value];\n\
    \    }\n    return $result;\n}\n", "    my($min_even) = 0;\n    my($min_index)\
    \ = 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_index)\
    \ = 0;\n    my($min_index_index_value) = 0;\n    my($min_index_index_index) =\
    \ 0;\n    my($min_index_index_index_value) = 0;\n    my($min_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_value) = 0;\n  \
    \  my($min_index_index_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_value) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_index) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index", "    my($smallest_even_value, $smallest_index) = 0;\n\
    \    my($smallest_even_value_index) = 0;\n    my($smallest_index_index) = 0;\n\
    \    my($smallest_index_value) = 0;\n    my($smallest_index_index_value) = 0;\n\
    \    my($smallest_index_index_index) = 0;\n    my($smallest_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index) = 0;\n   \
    \ my($smallest_index_index_index_index_index_index_index_value) = 0;\n    my($smallest_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_", "    my($min_even_value,\
    \ $min_even_index) = 0;\n    my($min_index, $min_value) = 0;\n    foreach my $node\
    \ (@$arr) {\n        if ($node == 0) {\n            continue;\n        }\n   \
    \     my $even_value = $node % 2;\n        if ($even_value == 0) {\n         \
    \   $min_even_value = $node;\n            $min_even_index = $node;\n        }\
    \ else if ($even_value < $min_even_value) {\n            $min_even_value = $node;\n\
    \            $min_even_index = $node;\n        }\n        if ($node < $min_value)\
    \ {\n            $min_value = $node;\n            $min_index = $node;\n      \
    \  }\n    }\n    return [$min_even_value, $min_even_index];\n}\n", "    my($min_even)\
    \ = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even_value, $min_even_index) = 0;\n    my($min_index, $min_value) =\
    \ 0;\n    foreach my $node (@$arr) {\n        if ($node == 0) {\n            continue;\n\
    \        }\n        my $even_value = $node % 2;\n        if ($even_value == 0)\
    \ {\n            $min_even_value = $node;\n            $min_even_index = $node;\n\
    \        } else if ($min_even_value == 0) {\n            $min_even_value = $node;\n\
    \            $min_even_index = $node;\n        } else if ($even_value < $min_even_value)\
    \ {\n            $min_even_value = $node;\n            $min_even_index = $node;\n\
    \        } else if ($even_value == $min_even_value) {\n            if ($node <\
    \ $min_even_index) {\n                $min_even_index = $node;\n            }\n\
    \        }\n    }\n    if ($min_even_value == 0) {\n        return [$min_even_index,\
    \ $min_even_index];\n    } else {\n        return [$min_even_value, $min_even_index];\n\
    \    }\n}\n", "    my($smalest_even_value, $index) = 0;\n    my($smalest_even_value_index)\
    \ = 0;\n    my($smalest_index) = 0;\n    my($smalest_index_index) = 0;\n    my($smalest_index_value)\
    \ = 0;\n    my($smalest_index_value_index) = 0;\n    my($smalest_index_value_index_index)\
    \ = 0;\n    my($smalest_index_value_index_value) = 0;\n    my($smalest_index_value_index_value_index)\
    \ = 0;\n    my($smalest_index_value_index_value_index_index) = 0;\n    my($smalest_index_value_index_value_index_value)\
    \ = 0;\n    my($smalest_index_value_index_value_index_value_index) = 0;\n    my($smalest_index_value_index_value_index_value_index_index)\
    \ = 0;\n    my($smalest_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($smalest_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($smalest_index_value_index_value_index_value_index_value_index_index)\
    \ = 0;\n    my($smalest_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smalest_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smalest_index_value_index_value_index_value_index_value_index_value_index_index)\
    \ = 0;\n    my($smalest_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smalest_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my", "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value)\
    \ = 0;\n    my($min_index_value) = 0;\n    my($min_index_index) = 0;\n    my($min_index_index_value)\
    \ = 0;\n    my($min_index_index_index) = 0;\n    my($min_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index) = 0;\n    my($min_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index) = 0;\n  \
    \  my($min_index_index_index_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index", "    my($min_even) = 0;\n    my($min_index) = 0;\n\
    \    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_index) = 0;\n    foreach my $node (@$arr) {\n      \
    \  my $even = $node % 2;\n        if ($even == 0) {\n            if ($min_even\
    \ == 0) {\n                $min_index_value = $node;\n                $min_index_index\
    \ = $node;\n            }\n            if ($node < $min_even) {\n            \
    \    $min_even = $node;\n                $min_index_value = $node;\n         \
    \       $min_index_index = $node;\n            }\n            if ($node < $min_value)\
    \ {\n                $min_value = $node;\n                $min_index_value = $node;\n\
    \                $min_index_index = $node;\n            }\n        }\n    }\n\
    \    return [$min_index_value, $min_index_index];\n}\n", "    my($min_even) =\
    \ -1;\n    my($min_index) = -1;\n    my($min_value) = -1;\n    my($min_index_value)\
    \ = -1;\n    my($min_index_index) = -1;\n    my($min_index_index_value) = -1;\n\
    \    my($min_index_index_index) = -1;\n    my($min_index_index_index_value) =\
    \ -1;\n    my($min_index_index_index_index) = -1;\n    my($min_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index) = -1;\n\
    \    my($min_index_index_index_index_index_index_index_index_value) = -1;\n  \
    \  my($min_index_index_index_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index", "    my($min_even_value,\
    \ $min_even_index) = 0;\n    my($min_index, $min_value) = 0;\n    foreach my $node\
    \ (@$arr) {\n        if ($node == 0) {\n            continue;\n        }\n   \
    \     my $even_value = $node % 2;\n        if ($even_value < $min_even_value)\
    \ {\n            $min_even_value = $even_value;\n            $min_even_index =\
    \ $node;\n        }\n        if ($node < $min_value) {\n            $min_index\
    \ = $node;\n            $min_value = $node;\n        }\n    }\n    return [$min_even_value,\
    \ $min_even_index];\n}\n", "    my($smallest_even_value, $smallest_index) = 0;\n\
    \    my($result) = [];\n    foreach my $node (@$arr) {\n        if ($node == 0)\
    \ {\n            $result = [$node, $smallest_index];\n            continue;\n\
    \        }\n        my $even_value = $node % 2;\n        if ($even_value < $smallest_even_value)\
    \ {\n            $smallest_even_value = $even_value;\n            $smallest_index\
    \ = $node;\n        }\n    }\n    $result = [$smallest_even_value, $smallest_index];\n\
    \    return $result;\n}\n", "    my($min_even, $min_index) = 0;\n    my($min_even_index)\
    \ = 0;\n    my($min_index_index) = 0;\n    foreach my $node (@$arr) {\n      \
    \  if ($node == 0) {\n            continue;\n        }\n        my $even = $node\
    \ % 2;\n        if ($even == 0 && $min_even == 0) {\n            $min_even_index\
    \ = $node;\n            $min_even = $node;\n        } else if ($even == 0 && $min_even\
    \ != 0) {\n            $min_even = $node;\n            $min_even_index = $node;\n\
    \        } else if ($even != 0 && $min_even == 0) {\n            $min_even = $node;\n\
    \            $min_even_index = $node;\n        } else if ($even != 0 && $min_even\
    \ != 0) {\n            if ($node < $min_even) {\n                $min_even = $node;\n\
    \                $min_even_index = $node;\n            } else if ($node == $min_even)\
    \ {\n                if ($node < $min_index) {\n                    $min_even\
    \ = $node;\n                    $min_even_index = $node;\n                } else\
    \ if ($node < $min_index_index) {\n                    $min_even = $node;\n  \
    \                  $min_even_index = $node;\n                }\n            }\n\
    \        }\n    }\n    if ($min_even_index == 0) {\n        return [0, 0];\n \
    \   } else {\n        return [$min_even, $min_even_index];\n    }\n}\n", "   \
    \ my($smalest_value, $index) = 0;\n    my($smallest_index) = 0;\n    my($smallest_value)\
    \ = 0;\n    my($smallest_index) = 0;\n    my($smallest_value) = 0;\n    my($smallest_index)\
    \ = 0;\n    my($smallest_value) = 0;\n    my($smallest_index) = 0;\n    my($smallest_value)\
    \ = 0;\n    my($smallest_index) = 0;\n    my($smallest_value) = 0;\n    my($smallest_index)\
    \ = 0;\n    my($smallest_value) = 0;\n    my($smallest_index) = 0;\n    my($smallest_value)\
    \ = 0;\n    my($smallest_index) = 0;\n    my($smallest_value) = 0;\n    my($smallest_index)\
    \ = 0;\n    my($smallest_value) = 0;\n    my($smallest_index) = 0;\n    my($smallest_value)\
    \ = 0;\n    my($smallest_index) = 0;\n    my($smallest_value) = 0;\n    my($smallest_index)\
    \ = 0;\n    my($smallest_value) = 0;\n    my($smallest_index) = 0;\n    my($smallest_value)\
    \ = 0;\n    my($smallest_index) = 0;\n    my($smallest_value) = 0;\n    my($smallest_index)\
    \ = 0;\n    my($smallest_value) = 0;\n    my($smallest_index) = 0;\n    my($smallest_value)\
    \ = 0;\n    my($smallest_index) = 0;\n    my($smallest_value) = 0;\n    my($smallest_index)\
    \ = 0;\n    my($smallest_value) = 0;\n    my($smallest_index) = 0;\n    my($smallest_value)\
    \ = 0;\n    my($smallest_index) = 0;\n    my($smallest_value) = 0;\n    my($smallest_index)\
    \ = 0;\n    my($small", "    my($min_even) = 0;\n    my($min_index) = 0;\n   \
    \ my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index)\
    \ = 0;\n    my($min_index_value_index_index) = 0;\n    foreach my $node (@$arr)\
    \ {\n        if ($node == 0) {\n            continue;\n        }\n        my $even\
    \ = $node % 2;\n        if ($even == 0) {\n            if ($min_even == 0) {\n\
    \                $min_even = $node;\n                $min_index = $node;\n   \
    \         } else {\n                $min_index_value = $node;\n              \
    \  $min_index_value_index = $node;\n            }\n        } else {\n        \
    \    if ($min_even == 0) {\n                $min_index_value_index = $node;\n\
    \                $min_index_value_index_index = $node;\n            } else {\n\
    \                $min_index_value = $node;\n                $min_index_value_index\
    \ = $node;\n            }\n        }\n    }\n    if ($min_even == 0) {\n     \
    \   return [$min_index, $min_index_value];\n    } else {\n        return [$min_index_value_index,\
    \ $min_index_value_index_index];\n    }\n}\n", "    my($min_even_value, $min_even_index)\
    \ = 0;\n    my($min_index, $min_value) = 0;\n    foreach my $node (@$arr) {\n\
    \        if ($node % 2 == 0) {\n            if ($min_even_value == 0) {\n    \
    \            $min_even_value = $node;\n                $min_even_index = $node;\n\
    \            } else if ($node < $min_even_value) {\n                $min_even_value\
    \ = $node;\n                $min_even_index = $node;\n            }\n        }\
    \ else if ($min_value == 0) {\n            $min_value = $node;\n            $min_index\
    \ = $node;\n        } else if ($node < $min_value) {\n            $min_value =\
    \ $node;\n            $min_index = $node;\n        }\n    }\n    if ($min_even_value\
    \ == 0) {\n        return [$min_value, $min_index];\n    } else {\n        return\
    \ [$min_even_value, $min_even_index];\n    }\n}\n", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($result) = [];\n    my($index) = 0;\n    foreach\
    \ my $node (@$arr) {\n        my $value = $node;\n        if ($value % 2 == 0)\
    \ {\n            if ($value < $smallest_even_value) {\n                $smallest_even_value\
    \ = $value;\n                $smallest_index = $index;\n            }\n      \
    \  }\n        $index += 1;\n    }\n    if ($smallest_even_value) {\n        $result\
    \ = [ $smallest_even_value, $smallest_index ];\n    }\n    return $result;\n}\n",
  "    my($smallest_even_value, $smallest_index) = 0;\n    my($result) = [];\n   \
    \ my($index) = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0)\
    \ {\n            if ($node < $smallest_even_value) {\n                $smallest_even_value\
    \ = $node;\n                $smallest_index = $index;\n            }\n       \
    \ }\n        $index += 1;\n    }\n    if ($smallest_even_value == 0) {\n     \
    \   $result = [$smallest_index, $smallest_index];\n    } else {\n        $result\
    \ = [$smallest_even_value, $smallest_index];\n    }\n    return $result;\n}\n",
  "    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value) = -1;\n \
    \   foreach my $node (@$arr) {\n        if ($node == 0) {\n            continue;\n\
    \        }\n        my $even = $node % 2;\n        if ($even == 0) {\n       \
    \     if ($min_even == -1 || $min_even > $even) {\n                $min_even =\
    \ $even;\n                $min_index = $node;\n            }\n        } else if\
    \ ($min_even == -1) {\n            $min_even = $even;\n            $min_index\
    \ = $node;\n        }\n    }\n    if ($min_even == -1) {\n        return [];\n\
    \    }\n    return [$min_even, $min_index];\n}\n", "    my($min_even) = 0;\n \
    \   my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n\
    \    my($min_index_index) = 0;\n    my($min_index_index_value) = 0;\n    my($min_index_index_index)\
    \ = 0;\n    my($min_index_index_index_value) = 0;\n    my($min_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_value) = 0;\n  \
    \  my($min_index_index_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_value) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_index) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index", "    my($smallest_value, $smallest_index) = 0;\n \
    \   my($index) = 0;\n    foreach my $node (@$arr) {\n        if ($node == 0) {\n\
    \            $index = $index + 1;\n            continue;\n        }\n        if\
    \ ($node < $smallest_value) {\n            $smallest_value = $node;\n        \
    \    $smallest_index = $index;\n        }\n        $index = $index + 1;\n    }\n\
    \    return [$smallest_value, $smallest_index];\n}\n", "    my($min_even_value,\
    \ $min_even_index) = 0;\n    my($min_index, $min_value) = 0;\n    my($index, $value)\
    \ = 0;\n    my($min_index_even, $min_value_even) = 0;\n    my($min_index_odd,\
    \ $min_value_odd) = 0;\n    my($min_index_even_odd, $min_value_even_odd) = 0;\n\
    \    my($min_index_even_odd_index, $min_value_even_odd_index) = 0;", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($smallest_index_value, $smallest_index_index)\
    \ = 0;\n    my($smallest_index_value_index, $smallest_index_index_index) = 0;\n\
    \    my($smallest_index_value_index_index) = 0;\n    my($smallest_index_value_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index) = 0;\n    my($smallest_index_value_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index) = 0;\n\
    \    my($smallest_index_value_index_index_index_index_index_index_index) = 0;\n\
    \    my($smallest_index_value_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_", "    my($min_even) = -1;\n    my($min_index)\
    \ = -1;\n    my($min_value) = -1;\n    my($min_index_value) = -1;\n    my($min_index_value_index)\
    \ = -1;\n    my($min_index_value_index_index) = -1;\n    my($min_index_value_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index) = -1;\n    my($min_index_value_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index) = -1;\n\
    \    my($min_index_value_index_index_index_index_index_index_index) = -1;\n  \
    \  my($min_index_value_index_index_index_index_index_index_index_index) = -1;\n\
    \    my($min_index_value_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index", "    my($min_even_value, $min_even_index)\
    \ = 0;\n    my($min_index, $min_value) = 0;\n    foreach my $node (@$arr) {\n\
    \        if ($node == 0) {\n            continue;\n        }\n        my $even_value\
    \ = $node % 2;\n        if ($even_value < $min_even_value) {\n            $min_even_value\
    \ = $even_value;\n            $min_even_index = $node;\n        }\n        if\
    \ ($even_value == $min_even_value) {\n            if ($node < $min_index) {\n\
    \                $min_index = $node;\n            }\n        }\n    }\n    return\
    \ [$min_even_value, $min_even_index];\n}\n", "    my($smallest_even_value, $smallest_index)\
    \ = 0;\n    my($result) = [];\n    foreach my $node (@$arr) {\n        if ($node\
    \ % 2 == 0) {\n            if ($smallest_even_value == 0) {\n                $smallest_even_value\
    \ = $node;\n                $smallest_index = $node;\n            } else if ($node\
    \ < $smallest_even_value) {\n                $smallest_even_value = $node;\n \
    \               $smallest_index = $node;\n            } else if ($node == $smallest_even_value)\
    \ {\n                if ($node < $smallest_index) {\n                    $smallest_index\
    \ = $node;\n                }\n            }\n        }\n    }\n    if ($smallest_even_value\
    \ == 0) {\n        return;\n    }\n    $result = [$smallest_even_value, $smallest_index];\n\
    \    return $result;\n}\n", "    my($min_even, $min_index) = 0;\n    my($min_even_index,\
    \ $min_index_index) = 0;\n    my($index) = 0;\n    my($even_value) = 0;\n    my($even_index)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n      \
    \      $even_value = $node;\n            $even_index = $index;\n        }\n  \
    \      $index += 1;\n        if ($node < $min_even) {\n            $min_even =\
    \ $node;\n            $min_even_index = $index;\n        }\n        if ($node\
    \ < $min_even_index) {\n            $min_even_index = $index;\n        }\n   \
    \ }\n    if ($min_even_index == 0) {\n        return [$min_even, $min_even_index];\n\
    \    }\n    return [$min_even, $min_even_index, $min_index_index];\n}\n", "  \
    \  my($smalest_value, $index) = 0;\n    my($result) = [];\n    foreach my $node\
    \ (@$arr) {\n        if ($node == 0) {\n            $result = [$smalest_value,\
    \ $index];\n            continue;\n        }\n        if ($node % 2 == 0) {\n\
    \            $smalest_value = $node;\n            $index = $node;\n        }\n\
    \    }\n    return $result;\n}\n", "    my($smallest_even_value, $smallest_index)\
    \ = 0;\n    my($result) = [];\n    my($index) = 0;\n    foreach my $node (@$arr)\
    \ {\n        if ($node % 2 == 0) {\n            if ($node < $smallest_even_value)\
    \ {\n                $smallest_even_value = $node;\n                $smallest_index\
    \ = $index;\n            }\n        }\n        $index += 1;\n    }\n    if ($smallest_even_value\
    \ == 0) {\n        $result = [$smallest_index, $smallest_even_value];\n    } else\
    \ {\n        $result = [$smallest_even_value, $smallest_index];\n    }\n    return\
    \ $result;\n}\n", "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value)\
    \ = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index) = 0;\n \
    \   my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value) = -1;\n \
    \   my($min_index_value) = -1;\n    my($min_index_value_index) = -1;\n    my($min_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index) = -1;\n    my($min_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index) = -1;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index) =\
    \ -1;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value", "    my($smalest_even_value, $index)\
    \ = 0;\n    my($smallest_index) = 0;\n    foreach my $node (@$arr) {\n       \
    \ if ($node == 0) {\n            $index = 0;\n            continue;\n        }\n\
    \        my $even_value = $node % 2;\n        if ($even_value < $smalest_even_value)\
    \ {\n            $smalest_even_value = $even_value;\n            $index = $node;\n\
    \        }\n        if ($node < $smallest_index) {\n            $smallest_index\
    \ = $node;\n        }\n    }\n    return [ $smalest_even_value, $index ];\n}\n",
  "    my($smallest_even_value) = 0;\n    my($smallest_index) = 0;\n    my($plucked_node)\
    \ = [];", "    my($min_even_value, $min_even_index) = 0;\n    my($min_index, $min_value)\
    \ = 0;\n    my($min_index_even, $min_value_even) = 0;\n    my($min_index_odd,\
    \ $min_value_odd) = 0;\n    my($min_index_even_odd, $min_value_even_odd) = 0;\n\
    \    foreach my $node (@$arr) {\n        if ($node == 0) {\n            continue;\n\
    \        }\n        my $even_value = $node % 2;\n        if ($even_value == 0)\
    \ {\n            if ($min_even_value == 0) {\n                $min_even_value\
    \ = $node;\n                $min_even_index = $node;\n            } else if ($min_even_value\
    \ > $node) {\n                $min_even_value = $node;\n                $min_even_index\
    \ = $node;\n            }\n        } else if ($min_even_value == 0) {\n      \
    \      $min_even_value = $node;\n            $min_even_index = $node;\n      \
    \  } else if ($min_even_value > $node) {\n            $min_even_value = $node;\n\
    \            $min_even_index = $node;\n        }\n        my $odd_value = $node\
    \ % 2;\n        if ($odd_value == 0) {\n            if ($min_index_even_odd ==\
    \ 0) {\n                $min_index_even_odd = $node;\n                $min_value_even_odd\
    \ = $node;\n            } else if ($min_index_even_odd > $node) {\n          \
    \      $min_index_even_odd = $node;\n                $min_value_even_odd = $node;\n\
    \            }\n        } else if ($min_index_even_odd == 0) {\n            $min_index_even_odd\
    \ = $node;\n            $min_value_even_odd = $node;\n        } else if ($min_index_even_odd\
    \ > $node) {\n            $min_index_even_odd = $node;\n            $min_value",
  "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_index) = 0;\n    my($min_index_value_index) = 0;\n \
    \   my($min_index_index_value) = 0;\n    my($min_index_index_value_index) = 0;\n\
    \    my($min_index_index_value_index_value) = 0;\n    my($min_index_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value) = 0;\n    my($min_index_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($", "    my($smallest_even_value, $smallest_index) = 0;\n    my($smallest_index_for_even_value)\
    \ = 0;\n    my($smallest_index_for_odd_value) = 0;\n    my($smallest_index_for_zero)\
    \ = 0;\n    my($smallest_index_for_nonzero) = 0;\n    my($smallest_index_for_odd_value_for_zero)\
    \ = 0;\n    my($smallest_index_for_odd_value_for_nonzero) = 0;\n    my($smallest_index_for_nonzero_for_zero)\
    \ = 0;\n    my($smallest_index_for_nonzero_for_odd_value) = 0;\n    my($smallest_index_for_zero_for_odd_value)\
    \ = 0;\n    my($smallest_index_for_nonzero_for_odd_value) = 0;\n    my($smallest_index_for_odd_value_for_nonzero)\
    \ = 0;\n    my($smallest_index_for_odd_value_for_zero) = 0;\n    my($smallest_index_for_zero_for_odd_value)\
    \ = 0;\n    my($smallest_index_for_nonzero_for_odd_value) = 0;\n    my($smallest_index_for_odd_value_for_nonzero)\
    \ = 0;\n    my($smallest_index_for_odd_value_for_zero) = 0;\n    my($smallest_index_for_zero_for_odd_value)\
    \ = 0;\n    my($smallest_index_for_nonzero_for_odd_value) = 0;\n    my($smallest_index_for_odd_value_for_nonzero)\
    \ = 0;\n    my($smallest_index_for_odd_value_for_zero) = 0;\n    my($smallest_index_for_zero_for_odd_value)\
    \ = 0;\n    my($smallest_index_for_nonzero_for_odd_value) = 0;\n    my($smallest_index_for_odd_value_for_nonzero)",
  "    my($min_even_value, $min_index) = 0;\n    my($min_even_value_index) = 0;\n\
    \    my($min_index_index) = 0;\n    my($min_index_value) = 0;\n    my($min_index_index_value)\
    \ = 0;\n    my($min_index_index_value_index) = 0;\n    my($min_index_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index) = 0;\n    my($min_index_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index) = 0;\n  \
    \  my($min_index_index_value_index_value_index_value_index_value) = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value", "    my($min_even_value,\
    \ $min_index) = 0;\n    my($min_even_value_index) = 0;\n    my($min_index_index)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n      \
    \      if ($min_even_value == 0) {\n                $min_even_value = $node;\n\
    \                $min_even_value_index = $node;\n            } else if ($node\
    \ < $min_even_value) {\n                $min_even_value = $node;\n           \
    \     $min_even_value_index = $node;\n            }\n        }\n        if ($min_index\
    \ == 0) {\n            $min_index = $node;\n            $min_index_index = $node;\n\
    \        } else if ($node < $min_index) {\n            $min_index = $node;\n \
    \           $min_index_index = $node;\n        }\n    }\n    return [$min_even_value,\
    \ $min_even_value_index, $min_index, $min_index_index];\n}\n", "    my($min_even_value)\
    \ = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_",
  "    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value) = -1;\n \
    \   my($min_index_value) = -1;\n    my($min_index_index) = -1;\n    foreach my\
    \ $node (@$arr) {\n        if ($node % 2 == 0) {\n            if ($min_even ==\
    \ -1 || $node < $min_even) {\n                $min_even = $node;\n           \
    \     $min_index = $node;\n            }\n        } else {\n            if ($min_value\
    \ == -1 || $node < $min_value) {\n                $min_value = $node;\n      \
    \          $min_index_value = $node;\n                $min_index_index = $node;\n\
    \            }\n        }\n    }\n    if ($min_even == -1) {\n        return [];\n\
    \    }\n    if ($min_index_value == -1) {\n        return [$min_value, $min_index];\n\
    \    }\n    if ($min_index_index == -1) {\n        return [$min_value, $min_index_value];\n\
    \    }\n    return [$min_value, $min_index, $min_index_value, $min_index_index];\n\
    }\n", "    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value) =\
    \ -1;\n    my($min_index_value) = -1;\n    my($min_index_index) = -1;\n    foreach\
    \ my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if ($min_even\
    \ == -1 || $min_even > $node) {\n                $min_even = $node;\n        \
    \    }\n        }\n        if ($min_index == -1 || $min_index > $node) {\n   \
    \         $min_index = $node;\n        }\n    }\n    if ($min_even == -1) {\n\
    \        return [];\n    }\n    if ($min_index == -1) {\n        return [ $min_even,\
    \ $min_index ];\n    }\n    if ($min_even == $min_index) {\n        return [ $min_even,\
    \ $min_index ];\n    }\n    if ($min_even > $min_index) {\n        return [ $min_index,\
    \ $min_index ];\n    }\n    return [ $min_even, $min_index ];\n}\n", "    my($smallest_value,\
    \ $smallest_index) = 0;\n    my($result) = [];", "    my($min_even) = 0;\n   \
    \ my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n\
    \    my($min_index_value_index) = 0;\n    my($min_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($smallest_even_value) = 0;\n    my($smallest_index) = 0;\n    my($result)\
    \ = [];\n    my($index) = 0;\n    foreach my $node (@$arr) {\n        if ($node\
    \ % 2 == 0) {\n            if ($node < $smallest_even_value) {\n             \
    \   $smallest_even_value = $node;\n                $smallest_index = $index;\n\
    \            }\n        }\n        $index += 1;\n    }\n    if ($smallest_even_value\
    \ == 0) {\n        return $result;\n    }\n    $result = [$smallest_even_value,\
    \ $smallest_index];\n    return $result;\n}\n", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($smallest_even_value_index) = 0;\n    my($smallest_index_index)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n      \
    \      if ($smallest_even_value == 0) {\n                $smallest_even_value\
    \ = $node;\n                $smallest_even_value_index = $node;\n            }\
    \ else if ($node < $smallest_even_value) {\n                $smallest_even_value\
    \ = $node;\n                $smallest_even_value_index = $node;\n            }\n\
    \        }\n        if ($node < $smallest_index) {\n            $smallest_index\
    \ = $node;\n            $smallest_index_index = $node;\n        }\n    }\n   \
    \ if ($smallest_even_value == 0) {\n        return [$smallest_index, $smallest_index_index];\n\
    \    } else {\n        return [$smallest_even_value, $smallest_even_value_index];\n\
    \    }\n}\n", "    my($smalest_even_value, $index) = 0;\n    my($smallest_index)\
    \ = 0;\n    my($smallest_value) = 0;\n    foreach my $node (@$arr) {\n       \
    \ if ($node == 0) {\n            continue;\n        }\n        my $even_value\
    \ = $node % 2;\n        if ($even_value == 0) {\n            $index = $node;\n\
    \            $smalest_even_value = $node;\n            $smallest_index = $node;\n\
    \            $smallest_value = $node;\n        } else if ($smalest_even_value\
    \ == 0) {\n            $index = $node;\n            $smalest_even_value = $node;\n\
    \            $smallest_index = $node;\n            $smallest_value = $node;\n\
    \        } else if ($smalest_even_value < $node) {\n            $index = $node;\n\
    \            $smalest_even_value = $node;\n            $smallest_index = $node;\n\
    \            $smallest_value = $node;\n        }\n    }\n    return [$smalest_even_value,\
    \ $smallest_index];\n}\n", "    my($min_even_value) = 0;\n    my($min_index) =\
    \ 0;\n    my($min_value) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n\
    \    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index) = 0;\n \
    \   my($min_value) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n  \
    \  my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index) = 0;\n   \
    \ my($min_value) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index)\
    \ = 0;\n    my($min_value) = 0;\n    my($min_index) = 0;\n    my($min_value) =\
    \ 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index) = 0;\n\
    \    my($min_value) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n \
    \   my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index) = 0;\n  \
    \  my($min_value) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n   \
    \ my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index) = 0;\n    my($min_value)\
    \ = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index) =\
    \ 0;\n    my($min_value) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n\
    \    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index) = 0;\n \
    \   my($min", "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value)\
    \ = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index) = 0;\n \
    \   my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even, $min_index) = 0;\n    my($min_even_index, $min_index_index) =\
    \ 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n        \
    \    if ($min_even == 0 || $node < $min_even) {\n                $min_even = $node;\n\
    \                $min_even_index = $node;\n            }\n        }\n        if\
    \ ($node < $min_index) {\n            $min_index = $node;\n            $min_index_index\
    \ = $node;\n        }\n    }\n    if ($min_even_index) {\n        return [$min_even_index,\
    \ $min_index_index];\n    } else {\n        return [];\n    }\n}\n", "    my($min_even_value,\
    \ $min_even_index) = 0;\n    my($min_index, $min_value) = 0;\n    my($min_index_even,\
    \ $min_value_even) = 0;\n    foreach my $node (@$arr) {\n        if ($node ==\
    \ 0) {\n            continue;\n        }\n        my $even_value = $node % 2;\n\
    \        if ($even_value == 0) {\n            if ($min_even_value == 0) {\n  \
    \              $min_even_index = $node;\n                $min_even_value = $node;\n\
    \            } else {\n                $min_even_index = $node;\n            \
    \    $min_even_value = $node;\n            }\n        } else if ($min_even_value\
    \ == 0) {\n            $min_even_index = $node;\n            $min_even_value =\
    \ $node;\n        } else if ($min_even_value < $node) {\n            $min_even_index\
    \ = $node;\n            $min_even_value = $node;\n        }\n        if ($min_index\
    \ == 0) {\n            $min_index = $node;\n            $min_value = $node;\n\
    \        } else if ($min_value < $node) {\n            $min_index = $node;\n \
    \           $min_value = $node;\n        }\n    }\n    if ($min_even_value ==\
    \ 0) {\n        return [$min_even_index, $min_even_value];\n    }\n    if ($min_index\
    \ == 0) {\n        return [$min_index, $min_value];\n    }\n    return [$min_index,\
    \ $min_value];\n}\n", "    my($min_even_value, $min_even_index) = 0;\n    my($min_index,\
    \ $min_value) = 0;\n    my($index, $value) = 0;\n    my($result) = [];\n    foreach\
    \ my $node (@$arr) {\n        if ($node == 0) {\n            continue;\n     \
    \   }\n        my $even_value = $node % 2;\n        if ($even_value == 0) {\n\
    \            if ($min_even_value == 0) {\n                $min_even_index = $index;\n\
    \                $min_even_value = $value;\n            }\n            else {\n\
    \                if ($value < $min_even_value) {\n                    $min_even_index\
    \ = $index;\n                    $min_even_value = $value;\n                }\n\
    \            }\n        }\n        else {\n            if ($min_value == 0) {\n\
    \                $min_index = $index;\n                $min_value = $value;\n\
    \            }\n            else {\n                if ($value < $min_value) {\n\
    \                    $min_index = $index;\n                    $min_value = $value;\n\
    \                }\n            }\n        }\n        $index += 1;\n        $value\
    \ += $node;\n    }\n    if ($min_even_value == 0) {\n        $result = [$min_even_value,\
    \ $min_even_index];\n    }\n    else {\n        $result = [$min_value, $min_index];\n\
    \    }\n    return $result;\n}\n", "    my($min_even) = 0;\n    my($min_index)\
    \ = 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($smallest_even_value, $smallest_index) = 0;\n    my($result) = [];\n   \
    \ my($index) = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0)\
    \ {\n            if ($node < $smallest_even_value) {\n                $smallest_even_value\
    \ = $node;\n                $smallest_index = $index;\n            }\n       \
    \ }\n        $index += 1;\n    }\n    if ($smallest_even_value == 0) {\n     \
    \   return $result;\n    }\n    $result = [ $smallest_even_value, $smallest_index\
    \ ];\n    return $result;\n}\n", "    my($min_even) = 0;\n    my($min_index) =\
    \ 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($smalest_value, $index) = 0;\n    my($result) = [];\n    my($i) = 0;\n \
    \   foreach my $node (@$arr) {\n        if ($node == 0) {\n            $smalest_value\
    \ = $node;\n            $index = $i;\n        }\n        $i += 1;\n    }\n   \
    \ if ($smalest_value == 0) {\n        $result = [$smalest_value, $index];\n  \
    \  }\n    return $result;\n}\n", "    my($min_even_value, $min_index) = 0;\n \
    \   my($result) = [];\n    foreach my $node (@$arr) {\n        if ($node % 2 ==\
    \ 0) {\n            if ($node < $min_even_value) {\n                $min_even_value\
    \ = $node;\n                $min_index = $node;\n            }\n            else\
    \ if ($node == $min_even_value) {\n                $min_index = min($min_index,\
    \ $node);\n            }\n        }\n    }\n    if ($min_even_value) {\n     \
    \   $result = [$min_even_value, $min_index];\n    }\n    return $result;\n}\n",
  "    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value) = -1;\n \
    \   my($min_index_value) = -1;\n    my($min_index_value_index) = -1;\n    my($min_index_value_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index) = -1;\n    my($min_index_value_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index) = -1;\n    my($min_index_value_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index) =\
    \ -1;\n    my($min_index_value_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_value_index_index", "    my($smallest_value, $smallest_index)\
    \ = 0;\n    my($result) = [];\n    my($index) = 0;\n    foreach my $node (@$arr)\
    \ {\n        if ($node == 0) {\n            $result = [ $node, $index ];\n   \
    \         $index += 1;\n            continue;\n        }\n        if ($node %\
    \ 2 == 0) {\n            if ($node < $smallest_value) {\n                $smallest_value\
    \ = $node;\n                $smallest_index = $index;\n            }\n       \
    \ }\n        $index += 1;\n    }\n    if ($smallest_value == 0) {\n        $result\
    \ = [];\n    } else {\n        $result = [ $smallest_value, $smallest_index ];\n\
    \    }\n    return $result;\n}\n", "    my($min_even) = 0;\n    my($min_index)\
    \ = 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n    foreach my\
    \ $node (@$arr) {\n        if ($node == 0) {\n            continue;\n        }\n\
    \        my $even = $node % 2;\n        if ($even == 0) {\n            $min_even\
    \ = $node;\n            $min_index = $node;\n            $min_value = $node;\n\
    \        } else if ($even < $min_even) {\n            $min_even = $even;\n   \
    \         $min_index = $node;\n            $min_value = $node;\n        } else\
    \ if ($even == $min_even) {\n            if ($node < $min_value) {\n         \
    \       $min_value = $node;\n                $min_index = $node;\n           \
    \ } else if ($node == $min_value) {\n                $min_index_value = $node;\n\
    \            }\n        }\n    }\n    if ($min_even == 0) {\n        return [$min_value,\
    \ $min_index];\n    } else if ($min_even == $min_index_value) {\n        return\
    \ [$min_value, $min_index];\n    } else {\n        return [$min_index, $min_index];\n\
    \    }\n}\n", "    my($smalest_value, $index) = 0;\n    my($result) = [];\n  \
    \  foreach my $node (@$arr) {\n        if ($node == 0) {\n            $result\
    \ = [$smalest_value, $index];\n            continue;\n        }\n        if ($node\
    \ % 2 == 0) {\n            $smalest_value = $node;\n            $index = $node;\n\
    \        }\n    }\n    return $result;\n}\n", "    my($smallest_even_value, $smallest_index)\
    \ = 0;\n    my($smallest_even_value_index) = 0;\n    my($smallest_index_index)\
    \ = 0;\n    my($smallest_index_value) = 0;\n    my($smallest_index_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index) = 0;\n    my($smallest_index_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index) = 0;\n    my($smallest_index_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index) = 0;\n\
    \    my($smallest_index_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($smallest_index_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0", "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value) =\
    \ 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index) = 0;\n   \
    \ my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even_value, $min_even_index) = 0;\n    my($min_index, $min_value) =\
    \ 0;\n    my($result) = [];\n    foreach my $node (@$arr) {\n        if ($node\
    \ == 0) {\n            continue;\n        }\n        my $even_value = $node %\
    \ 2;\n        if ($even_value == 0) {\n            $result = [$node, $min_index];\n\
    \            $min_even_value = $node;\n            $min_even_index = $min_index;\n\
    \        } else if ($even_value < $min_even_value) {\n            $min_even_value\
    \ = $even_value;\n            $min_even_index = $min_index;\n        }\n     \
    \   $min_index += 1;\n    }\n    return $result;\n}\n", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($smallest_index_of_smallest_even_value) = 0;\n\
    \    my($smallest_value_of_smallest_even_value) = 0;\n    my($smallest_index_of_smallest_value)\
    \ = 0;\n    my($smallest_value_of_smallest_value) = 0;\n    my($smallest_index_of_smallest_value_of_smallest_even_value)\
    \ = 0;\n    my($smallest_index_of_smallest_value_of_smallest_value) = 0;\n   \
    \ my($smallest_index_of_smallest_value_of_smallest_value_of_smallest_even_value)\
    \ = 0;\n    my($smallest_index_of_smallest_value_of_smallest_value_of_smallest_value)\
    \ = 0;\n    my($smallest_index_of_smallest_value_of_smallest_value_of_smallest_value_of_smallest_even_value)\
    \ = 0;\n    my($smallest_index_of_smallest_value_of_smallest_value_of_smallest_value_of_smallest_value)\
    \ = 0;\n    my($smallest_index_of_smallest_value_of_smallest_value_of_smallest_value_of_smallest_value_of_smallest_even_value)\
    \ = 0;\n    my($smallest_index_of_smallest_value_of_smallest_value_of_smallest_value_of_smallest_value_of_smallest_value)\
    \ = 0;\n    my($smallest_index_of_smallest_value_of_smallest_value_of_smallest_value_of_smallest_value_of_smallest_value_of_smallest_even_value)\
    \ = 0;\n    my($smallest_index_of_smallest_value_of_smallest_value_of_smallest_value_of_smallest_value_of_smallest_value_of_smallest_value)\
    \ = 0;\n    my", "    my($min_even_value, $min_even_index) = 0;\n    my($min_index,\
    \ $min_value) = 0;\n    foreach my $node (@$arr) {\n        if ($node == 0) {\n\
    \            continue;\n        }\n        my $even_value = $node % 2;\n     \
    \   if ($even_value < $min_even_value) {\n            $min_even_value = $even_value;\n\
    \            $min_even_index = $node;\n        }\n        if ($node < $min_value)\
    \ {\n            $min_index = $node;\n            $min_value = $node;\n      \
    \  }\n    }\n    return [$min_even_value, $min_even_index];\n}\n", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($index) = 0;\n    foreach my $node (@$arr) {\n\
    \        if ($node % 2 == 0) {\n            if ($node < $smallest_even_value)\
    \ {\n                $smallest_even_value = $node;\n                $smallest_index\
    \ = $index;\n            }\n        }\n        $index++;\n    }\n    return [$smallest_even_value,\
    \ $smallest_index];\n}\n", "    my($min_even) = 0;\n    my($min_index) = 0;\n\
    \    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($smallest_even_value, $smallest_index) = 0;\n    my($result) = [];\n   \
    \ my($index) = 0;\n    foreach my $node (@$arr) {\n        if ($node == 0) {\n\
    \            $result = [$node, $index];\n            $index += 1;\n        } else\
    \ if ($node % 2 == 0) {\n            $smallest_even_value = $node;\n         \
    \   $smallest_index = $index;\n        }\n        $index += 1;\n    }\n    if\
    \ ($smallest_even_value == 0) {\n        return $result;\n    } else {\n     \
    \   $result = [$smallest_even_value, $smallest_index];\n        return $result;\n\
    \    }\n}\n", "    my($min_even_value, $min_even_index) = 0;\n    my($min_index,\
    \ $min_value) = 0;\n    my($min_index_even, $min_value_even) = 0;\n    foreach\
    \ my $node (@$arr) {\n        if ($node == 0) {\n            continue;\n     \
    \   }\n        my $even_value = $node % 2;\n        if ($even_value == 0) {\n\
    \            if ($min_even_value == 0) {\n                $min_even_index = $node;\n\
    \                $min_even_value = $node;\n            } else {\n            \
    \    $min_even_value = $node;\n                $min_even_index = $node;\n    \
    \        }\n        } else if ($min_even_value == 0) {\n            $min_even_value\
    \ = $node;\n            $min_even_index = $node;\n        } else if ($min_even_value\
    \ > $node) {\n            $min_even_value = $node;\n            $min_even_index\
    \ = $node;\n        }\n    }\n    if ($min_even_value == 0) {\n        return\
    \ [$min_even_value, $min_even_index];\n    }\n    if ($min_even_value > 0) {\n\
    \        return [$min_even_value, $min_index];\n    }\n    return [$min_value,\
    \ $min_index];\n}\n", "    my($min_even, $min_index) = 0;\n    my($min_even_index)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n      \
    \      if ($min_even == 0) {\n                $min_even = $node;\n           \
    \     $min_even_index = $node;\n            } else if ($node < $min_even) {\n\
    \                $min_even = $node;\n                $min_even_index = $node;\n\
    \            }\n        }\n    }\n    if ($min_even == 0) {\n        return [$min_even_index,\
    \ $min_even_index];\n    } else {\n        return [$min_even, $min_even_index];\n\
    \    }\n}\n", "    my($smallest_even_value, $smallest_index) = 0;\n    my($result)\
    \ = [];\n    my($index) = 0;\n    foreach my $node (@$arr) {\n        my $value\
    \ = $node;\n        if ($value % 2 == 0) {\n            if ($value < $smallest_even_value)\
    \ {\n                $smallest_even_value = $value;\n                $smallest_index\
    \ = $index;\n            }\n        }\n        $index++;\n    }\n    if ($smallest_even_value\
    \ == 0) {\n        return $result;\n    }\n    $result = [$smallest_even_value,\
    \ $smallest_index];\n    return $result;\n}\n", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($index, $value) = 0;\n    my($smallest_index,\
    \ $smallest_value) = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2\
    \ == 0) {\n            if ($smallest_even_value == 0) {\n                $smallest_even_value\
    \ = $node;\n                $smallest_index = $index;\n            } else if ($node\
    \ < $smallest_even_value) {\n                $smallest_even_value = $node;\n \
    \               $smallest_index = $index;\n            }\n        }\n        $index\
    \ += 1;\n    }\n    if ($smallest_even_value == 0) {\n        return [0, $smallest_index];\n\
    \    } else {\n        return [$smallest_even_value, $smallest_index];\n    }\n\
    }\n", "    my($smallest_even_value, $smallest_index) = 0;\n    my($smallest_index_for_even_value)\
    \ = 0;\n    my($smallest_index_for_odd_value) = 0;\n    my($smallest_index_for_zero)\
    \ = 0;\n    my($smallest_index_for_non_zero) = 0;\n    my($smallest_index_for_non_zero_even)\
    \ = 0;\n    my($smallest_index_for_non_zero_odd) = 0;\n    my($smallest_index_for_non_zero_zero)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero) = 0;\n    my($smallest_index_for_non_zero_non_zero_even)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero_odd) = 0;\n    my($smallest_index_for_non_zero_non_zero_zero)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero) = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_even)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_odd) = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_zero)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_non_zero) = 0;\n\
    \    my($smallest_index_for_non_zero_non_zero_non_zero_non_zero_even) = 0;\n \
    \   my($smallest_index_for_non_zero_non_zero_non_zero_non_zero_odd) = 0;\n   \
    \ my($smallest_index_for_non_zero_non_zero_non_zero_non_zero_zero) = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_non_zero_non_zero)\
    \ = 0", "    my($min_value, $min_index) = 0;\n    my($min_value_index) = 0;\n\
    \    my($min_index_index) = 0;\n    foreach my $node (@$arr) {\n        if ($node\
    \ == 0) {\n            continue;\n        }\n        my $value = $node;\n    \
    \    my $index = $arr.index($node);\n        if ($value % 2 == 0) {\n        \
    \    if ($min_value == 0) {\n                $min_value = $value;\n          \
    \      $min_value_index = $index;\n            } else if ($value < $min_value)\
    \ {\n                $min_value = $value;\n                $min_value_index =\
    \ $index;\n            }\n        }\n        if ($index < $min_index_index ||\
    \ $min_index_index == 0) {\n            $min_index_index = $index;\n        }\n\
    \    }\n    if ($min_value_index == 0) {\n        return [0, 0];\n    }\n    return\
    \ [$min_value, $min_value_index];\n}\n", "    my($smallest_even_value, $smallest_index)\
    \ = 0;\n    my($smallest_even_value_index) = 0;\n    my($smallest_index_index)\
    \ = 0;\n    my($smallest_index_value) = 0;\n    my($smallest_index_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index) = 0;\n    my($smallest_index_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index) = 0;\n    my($smallest_index_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index) = 0;\n\
    \    my($smallest_index_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($smallest_index_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0", "    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value)\
    \ = -1;\n    my($min_index_value) = -1;\n    my($min_index_index) = -1;\n    my($min_index_index_value)\
    \ = -1;\n    my($min_index_index_index) = -1;\n    my($min_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index) = -1;\n    my($min_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index) = -1;\n\
    \    my($min_index_index_index_index_index_index_index_index_value) = -1;\n  \
    \  my($min_index_index_index_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index", "    my($min_even)\
    \ = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($smallest_even_value, $smallest_index) = 0;\n    my($result) = [];\n   \
    \ my($i) = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n\
    \            if ($node < $smallest_even_value) {\n                $smallest_even_value\
    \ = $node;\n                $smallest_index = $i;\n            }\n        }\n\
    \        $i++;\n    }\n    if ($smallest_even_value) {\n        $result = [ $smallest_even_value,\
    \ $smallest_index ];\n    }\n    return $result;\n}\n", "    my($min_even) = -1;\n\
    \    my($min_index) = -1;\n    my($min_value) = -1;\n    my($min_index_value)\
    \ = -1;\n    my($min_index_index) = -1;\n    my($min_index_index_value) = -1;\n\
    \    my($min_index_index_index) = -1;\n    my($min_index_index_index_value) =\
    \ -1;\n    my($min_index_index_index_index) = -1;\n    my($min_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index) = -1;\n\
    \    my($min_index_index_index_index_index_index_index_index_value) = -1;\n  \
    \  my($min_index_index_index_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($smallest_index_value, $smallest_index_index)\
    \ = 0;\n    my($smallest_index_value_index, $smallest_index_index_index) = 0;\n\
    \    my($smallest_index_value_index_index) = 0;\n    my($smallest_index_value_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index) = 0;\n    my($smallest_index_value_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index) = 0;\n\
    \    my($smallest_index_value_index_index_index_index_index_index_index) = 0;\n\
    \    my($smallest_index_value_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_", "    my($min_even_value, $min_even_index)\
    \ = 0;\n    my($min_index, $min_value) = 0;\n    foreach my $node (@$arr) {\n\
    \        if ($node % 2 == 0) {\n            if ($min_even_value == 0) {\n    \
    \            $min_even_value = $node;\n                $min_even_index = $node;\n\
    \            } else if ($node < $min_even_value) {\n                $min_even_value\
    \ = $node;\n                $min_even_index = $node;\n            }\n        }\
    \ else if ($min_value == 0) {\n            $min_value = $node;\n            $min_index\
    \ = $node;\n        } else if ($node < $min_value) {\n            $min_value =\
    \ $node;\n            $min_index = $node;\n        }\n    }\n    return [$min_even_value,\
    \ $min_even_index];\n}\n", "    my($smalest_value, $smalest_index) = 0;\n    my($smallest_index)\
    \ = 0;\n    my($smallest_value) = 0;\n    my($index) = 0;\n    my($result) = [];",
  "    my($smallest_even_value, $smallest_even_index) = 0;\n    my($smallest_index)\
    \ = 0;\n    my($smallest_value) = 0;\n    my($index) = 0;\n    my($i) = 0;\n \
    \   my($j) = 0;\n    my($result) = [];\n    foreach my $node (@$arr) {\n     \
    \   if ($node == 0) {\n            $result = [$node, $i];\n            return\
    \ $result;\n        }\n        if ($node % 2 == 0) {\n            $smallest_even_value\
    \ = $node;\n            $smallest_even_index = $i;\n        }\n        $i += 1;\n\
    \    }\n    if ($smallest_even_value == 0) {\n        $result = [$smallest_even_value,\
    \ $smallest_even_index];\n        return $result;\n    }\n    foreach my $node\
    \ (@$arr) {\n        if ($node == 0) {\n            $result = [$node, $i];\n \
    \           return $result;\n        }\n        if ($node < $smallest_even_value)\
    \ {\n            $smallest_value = $node;\n            $smallest_index = $i;\n\
    \        }\n        $i += 1;\n    }\n    $result = [$smallest_value, $smallest_index];\n\
    \    return $result;\n}\n", "    my($smallest_even_value, $smallest_index) = 0;\n\
    \    my($smallest_even_value_index) = 0;\n    my($smallest_index_index) = 0;\n\
    \    my($smallest_index_value) = 0;\n    my($smallest_index_index_value) = 0;\n\
    \    my($smallest_index_index_index) = 0;\n    my($smallest_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index) = 0;\n   \
    \ my($smallest_index_index_index_index_index_index_index_value) = 0;\n    my($smallest_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($smallest_index_node) = 0;\n    foreach my $node\
    \ (@$arr) {\n        if ($node % 2 == 0) {\n            if ($smallest_even_value\
    \ == 0) {\n                $smallest_even_value = $node;\n                $smallest_index_node\
    \ = $node;\n            } else if ($node < $smallest_even_value) {\n         \
    \       $smallest_even_value = $node;\n                $smallest_index_node =\
    \ $node;\n            } else if ($node == $smallest_even_value) {\n          \
    \      if ($smallest_index_node < $node) {\n                    $smallest_index_node\
    \ = $node;\n                }\n            }\n        }\n    }\n    return [$smallest_even_value,\
    \ $smallest_index_node];\n}\n", "    my($min_even) = 0;\n    my($min_index) =\
    \ 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value) = -1;\n \
    \   my($min_index_value) = -1;\n    my($min_index_index) = -1;\n    my($min_index_index_value)\
    \ = -1;\n    my($min_index_index_index) = -1;\n    my($min_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index) = -1;\n    my($min_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index) = -1;\n\
    \    my($min_index_index_index_index_index_index_index_index_value) = -1;\n  \
    \  my($min_index_index_index_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($index) = 0;\n    foreach my $node (@$arr) {\n\
    \        if ($node % 2 == 0) {\n            if ($smallest_even_value == 0) {\n\
    \                $smallest_even_value = $node;\n                $smallest_index\
    \ = $index;\n            } else if ($node < $smallest_even_value) {\n        \
    \        $smallest_even_value = $node;\n                $smallest_index = $index;\n\
    \            }\n        }\n        $index += 1;\n    }\n    return [$smallest_even_value,\
    \ $smallest_index];\n}\n", "    my($smallest_even_value, $smallest_index) = 0;\n\
    \    my($plucked_node) = [];\n    foreach my $node (@$arr) {\n        if ($node\
    \ % 2 == 0) {\n            if ($node < $smallest_even_value) {\n             \
    \   $smallest_even_value = $node;\n                $smallest_index = $node;\n\
    \            }\n            else if ($node == $smallest_even_value) {\n      \
    \          $smallest_index = min($smallest_index, $node);\n            }\n   \
    \     }\n    }\n    if ($smallest_even_value) {\n        $plucked_node = [$smallest_even_value,\
    \ $smallest_index];\n    }\n    return $plucked_node;\n}\n", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($index) = 0;\n    my($result) = [];", "    my($min_even_value,\
    \ $min_index) = 0;\n    my($min_even_value_index) = 0;\n    my($min_index_index)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n      \
    \      if ($min_even_value == 0) {\n                $min_even_value = $node;\n\
    \                $min_even_value_index = $node;\n            } else if ($node\
    \ < $min_even_value) {\n                $min_even_value = $node;\n           \
    \     $min_even_value_index = $node;\n            }\n        }\n        if ($min_index\
    \ == 0) {\n            $min_index = $node;\n            $min_index_index = $node;\n\
    \        } else if ($node < $min_index) {\n            $min_index = $node;\n \
    \           $min_index_index = $node;\n        }\n    }\n    return [$min_even_value_index,\
    \ $min_index_index];\n}\n", "    my($min_even_value, $min_even_index) = 0;\n \
    \   my($min_index, $min_value) = 0;\n    foreach my $node (@$arr) {\n        if\
    \ ($node == 0) {\n            continue;\n        }\n        my $even_value = $node\
    \ % 2;\n        if ($even_value == 0) {\n            if ($min_even_value == 0)\
    \ {\n                $min_even_index = $node;\n            }\n            else\
    \ {\n                $min_even_index = $min_index;\n            }\n          \
    \  $min_even_value = $node;\n        }\n        else {\n            if ($min_value\
    \ == 0) {\n                $min_index = $node;\n            }\n            else\
    \ {\n                $min_index = $min_index;\n            }\n            $min_value\
    \ = $node;\n        }\n    }\n    return [$min_even_value, $min_even_index];\n\
    }\n", "    my($min_even_value, $min_even_index) = 0;\n    my($min_index, $min_value)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n      \
    \      if ($node < $min_even_value) {\n                $min_even_value = $node;\n\
    \                $min_even_index = $node;\n            }\n            else if\
    \ ($node == $min_even_value) {\n                $min_even_index = $node;\n   \
    \         }\n        }\n        else {\n            if ($node < $min_value) {\n\
    \                $min_value = $node;\n                $min_index = $node;\n  \
    \          }\n            else if ($node == $min_value) {\n                $min_index\
    \ = $node;\n            }\n        }\n    }\n    if ($min_even_value == 0) {\n\
    \        return [$min_index, $min_index];\n    }\n    else {\n        return [$min_even_value,\
    \ $min_even_index];\n    }\n}\n", "    my($min_even) = -1;\n    my($min_index)\
    \ = -1;\n    my($min_value) = -1;\n    my($min_index_value) = -1;\n    my($min_index_value_index)\
    \ = -1;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n     \
    \       if ($min_even == -1 || $min_even > $node) {\n                $min_even\
    \ = $node;\n            }\n        }\n        if ($min_index == -1 || $min_index\
    \ > $node) {\n            $min_index = $node;\n        }\n        if ($min_value\
    \ == -1 || $min_value > $node) {\n            $min_value = $node;\n        }\n\
    \        if ($min_index_value == -1 || $min_index_value > $node) {\n         \
    \   $min_index_value = $node;\n        }\n        if ($min_index_value_index ==\
    \ -1 || $min_index_value_index > $node) {\n            $min_index_value_index\
    \ = $node;\n        }\n    }\n    if ($min_even == -1) {\n        return [];\n\
    \    }\n    return [$min_even, $min_index];\n}\n", "    my($min_even) = 0;\n \
    \   my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n\
    \    my($min_index_value_index) = 0;\n    my($min_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even_value, $min_even_index) = 0;\n    my($min_index, $min_value) =\
    \ 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n        \
    \    if ($min_even_value == 0 || $node < $min_even_value) {\n                $min_even_value\
    \ = $node;\n                $min_even_index = $node;\n            }\n        }\
    \ else {\n            if ($min_value == 0 || $node < $min_value) {\n         \
    \       $min_value = $node;\n                $min_index = $node;\n           \
    \ }\n        }\n    }\n    return [$min_even_value, $min_even_index];\n}\n", " \
    \   my($smallest_even_value, $smallest_index) = 0;\n    my($smallest_even_value_index)\
    \ = 0;\n    my($smallest_index_index) = 0;\n    my($smallest_index_value) = 0;\n\
    \    my($smallest_index_index_value) = 0;\n    my($smallest_index_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value) = 0;\n    my($smallest_index_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value) = 0;\n   \
    \ my($smallest_index_index_value_index_value_index_value_index) = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0", "    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value)\
    \ = -1;\n    my($min_index_value) = -1;\n    foreach my $node (@$arr) {\n    \
    \    my $even = $node % 2;\n        if ($even == 0) {\n            if ($min_even\
    \ == -1) {\n                $min_even = $node;\n                $min_index = $node;\n\
    \            } else if ($min_even == $node) {\n                $min_index = $node;\n\
    \            } else if ($min_even > $node) {\n                $min_even = $node;\n\
    \                $min_index = $node;\n            } else if ($min_even == $node\
    \ && $min_index > $node) {\n                $min_index = $node;\n            }\n\
    \        }\n        if ($min_even == -1) {\n            $min_even = $node;\n \
    \           $min_index = $node;\n        }\n    }\n    if ($min_even == -1) {\n\
    \        return [];\n    }\n    return [$min_even, $min_index];\n}\n", "    my($min_even)\
    \ = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($smallest_even_value, $smallest_index) = 0;\n    my($smallest_even_value_index)\
    \ = 0;\n    my($smallest_index_index) = 0;\n    my($index) = 0;\n    my($index_index)\
    \ = 0;\n    my($index_index_index) = 0;\n    my($index_index_index_index) = 0;\n\
    \    my($index_index_index_index_index) = 0;\n    my($index_index_index_index_index_index)\
    \ = 0;\n    my($index_index_index_index_index_index_index) = 0;\n    my($index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($index_index_index_index_index_index_index_index_index) = 0;\n\
    \    my($index_index_index_index_index_index_index_index_index_index) = 0;\n \
    \   my($index_index_index_index_index_index_index_index_index_index_index) = 0;\n\
    \    my($index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_",
  "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($smallest_even_value) = 0;\n    my($smallest_index) = 0;\n    my($index)\
    \ = 0;\n    my($result) = [];\n    my($result_index) = 0;\n    foreach my $node\
    \ (@$arr) {\n        if ($node == 0) {\n            $result_index = $index;\n\
    \            $result = [ $node, $index ];\n            $index += 1;\n        }\
    \ else {\n            if ($node % 2 == 0) {\n                $smallest_even_value\
    \ = $node;\n                $smallest_index = $index;\n            }\n       \
    \     $index += 1;\n        }\n    }\n    if ($smallest_even_value == 0) {\n \
    \       return $result;\n    } else {\n        return [ $smallest_even_value,\
    \ $smallest_index ];\n    }\n}\n", "    my($smallest_even_value, $smallest_index)\
    \ = 0;\n    my($smallest_even_value_index) = 0;\n    my($smallest_index_index)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n      \
    \      if ($smallest_even_value == 0) {\n                $smallest_even_value\
    \ = $node;\n                $smallest_even_value_index = $node;\n            }\
    \ else if ($node < $smallest_even_value) {\n                $smallest_even_value\
    \ = $node;\n                $smallest_even_value_index = $node;\n            }\n\
    \        }\n        if ($node < $smallest_index) {\n            $smallest_index\
    \ = $node;\n            $smallest_index_index = $node;\n        }\n    }\n   \
    \ if ($smallest_even_value == 0) {\n        return [$smallest_index, $smallest_index_index];\n\
    \    } else {\n        return [$smallest_even_value, $smallest_even_value_index];\n\
    \    }\n}\n", "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value)\
    \ = 0;\n    my($min_index_value) = 0;\n    my($min_index_index) = 0;\n    my($min_index_index_value)\
    \ = 0;\n    my($min_index_index_index) = 0;\n    my($min_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index) = 0;\n    my($min_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index) = 0;\n  \
    \  my($min_index_index_index_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index", "    my($min_even) = 0;\n    my($min_index) = 0;\n\
    \    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_index)\
    \ = 0;\n    my($min_index_index_value) = 0;\n    my($min_index_index_index) =\
    \ 0;\n    my($min_index_index_index_value) = 0;\n    my($min_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_value) = 0;\n  \
    \  my($min_index_index_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_value) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_index) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index", "    my($smallest_even_value, $smallest_index) = 0;\n\
    \    my($smallest_even_value_index) = 0;\n    my($smallest_index_index) = 0;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if\
    \ ($node < $smallest_even_value) {\n                $smallest_even_value = $node;\n\
    \                $smallest_even_value_index = $node;\n            }\n        \
    \    else if ($node == $smallest_even_value) {\n                $smallest_even_value_index\
    \ = $node;\n            }\n        }\n        if ($node < $smallest_index) {\n\
    \            $smallest_index = $node;\n            $smallest_index_index = $node;\n\
    \        }\n        else if ($node == $smallest_index) {\n            $smallest_index_index\
    \ = $node;\n        }\n    }\n    if ($smallest_even_value_index) {\n        return\
    \ [$smallest_even_value_index, $smallest_index_index];\n    }\n    else if ($smallest_index_index)\
    \ {\n        return [$smallest_index_index, $smallest_index_index];\n    }\n \
    \   else {\n        return [];\n    }\n}\n", "    my($min_even_value, $min_even_index)\
    \ = 0;\n    my($min_index, $min_value) = 0;\n    my($min_index_even, $min_value_even)\
    \ = 0;\n    my($min_index_odd, $min_value_odd) = 0;\n    my($min_index_even_odd,\
    \ $min_value_even_odd) = 0;\n    my($min_index_even_odd_even, $min_value_even_odd_even)\
    \ = 0;\n    my($min_index_even_odd_odd, $min_value_even_odd_odd) = 0;\n    my($min_index_even_odd_even_odd,\
    \ $min_value_even_odd_even_odd) = 0;\n    my($min_index_even_odd_odd_even, $min_value_even_odd_odd_even)\
    \ = 0;\n    my($min_index_even_odd_odd_odd_even, $min_value_even_odd_odd_odd_even)\
    \ = 0;\n    my($min_index_even_odd_odd_odd_odd_even, $min_value_even_odd_odd_odd_odd_even)\
    \ = 0;\n    my($min_index_even_odd_odd_odd_odd_odd_even, $min_value_even_odd_odd_odd_odd_odd_even)\
    \ = 0;\n    my($min_index_even_odd_odd_odd_odd_odd_odd_even, $min_value_even_odd_odd_odd_odd_odd_odd_even)\
    \ = 0;\n    my($min_index_even_odd_odd_odd_odd_odd_odd_odd_even, $min_value_even_odd_odd_odd_odd_odd_odd_odd_even)\
    \ = 0;\n    my($min_index_even_odd_odd_odd_odd_odd_odd_odd_odd_even, $min_value_even_odd_odd_odd_odd_odd_odd_odd_odd_even)\
    \ = 0;\n    my($min_index_even_odd_odd_odd_odd", "    my($min_even_value) = -1;\n\
    \    my($min_even_index) = -1;\n    my($min_index) = -1;\n    my($min_value) =\
    \ -1;\n    my($min_index_value) = -1;\n    my($min_index_value_index) = -1;\n\
    \    my($min_index_value_index_value) = -1;\n    my($min_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value) = -1;\n    my($min_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value) = -1;\n\
    \    my($min_index_value_index_value_index_value_index_value_index) = -1;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index_value) = -1;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ =", "    my($smalest_value, $index) = 0;\n    my($smallest_index) = 0;\n   \
    \ my($smallest_value) = 0;\n    my($smallest_index_value) = 0;\n    my($smallest_index_value_index)\
    \ = 0;\n    my($smallest_index_value_index_index) = 0;\n    my($smallest_index_value_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index) = 0;\n    my($smallest_index_value_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index) = 0;\n\
    \    my($smallest_index_value_index_index_index_index_index_index_index) = 0;\n\
    \    my($smallest_index_value_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_", "    my($min_even) = 0;\n    my($min_index)\
    \ = 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_index)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n      \
    \      if ($min_even == 0) {\n                $min_even = $node;\n           \
    \     $min_index = $node;\n            } else if ($min_even > $node) {\n     \
    \           $min_even = $node;\n                $min_index = $node;\n        \
    \    } else if ($min_even == $node) {\n                if ($min_index == 0) {\n\
    \                    $min_index_value = $node;\n                    $min_index_index\
    \ = $node;\n                } else if ($min_index > $node) {\n               \
    \     $min_index_value = $node;\n                    $min_index_index = $node;\n\
    \                } else if ($min_index == $node) {\n                    if ($min_index_index\
    \ == 0) {\n                        $min_index_value = $node;\n               \
    \         $min_index_index = $node;\n                    } else if ($min_index_index\
    \ > $node) {\n                        $min_index_value = $node;\n            \
    \            $min_index_index = $node;\n                    } else if ($min_index_index\
    \ == $node) {\n                        die \"Duplicate even values\";\n      \
    \              }\n                }\n            }\n        }\n    }\n    if ($min_even\
    \ == 0) {\n        return [];\n    } else {\n        return [ $min_even, $min_index\
    \ ];\n    }\n}\n", "    my($min_even_value, $min_even_index) = 0;\n    my($min_index,\
    \ $min_value) = 0;\n    my($result) = [];\n    my($index, $value) = 0;\n    foreach\
    \ my $node (@$arr) {\n        if ($node == 0) {\n            $index = $value;\n\
    \            $value = 0;\n        } else {\n            $value += $node;\n   \
    \     }\n        if ($value % 2 == 0) {\n            if ($value < $min_even_value)\
    \ {\n                $min_even_value = $value;\n                $min_even_index\
    \ = $index;\n            }\n        } else {\n            if ($value < $min_value)\
    \ {\n                $min_value = $value;\n                $min_index = $index;\n\
    \            }\n        }\n    }\n    if ($min_even_value) {\n        $result\
    \ = [$min_even_value, $min_even_index];\n    } else if ($min_value) {\n      \
    \  $result = [$min_value, $min_index];\n    }\n    return $result;\n}\n", "  \
    \  my($smallest_even_value, $smallest_index) = 0;\n    my($smallest_index_of_smallest_even_value)\
    \ = 0;\n    my($smallest_value_of_smallest_even_value) = 0;\n    my($smallest_index_of_smallest_value)\
    \ = 0;\n    my($smallest_value_of_smallest_value) = 0;\n    my($index_of_smallest_value)\
    \ = 0;\n    my($index_of_smallest_even_value) = 0;\n    my($index_of_smallest_value_of_smallest_even_value)\
    \ = 0;\n    my($index_of_smallest_even_value_of_smallest_value) = 0;\n    my($index_of_smallest_value_of_smallest_value_of_smallest_even_value)\
    \ = 0;\n    my($index_of_smallest_value_of_smallest_value_of_smallest_even_value)\
    \ = 0;\n    my($index_of_smallest_value_of_smallest_value_of_smallest_even_value_of_smallest_value)\
    \ = 0;\n    my($index_of_smallest_value_of_smallest_value_of_smallest_even_value_of_smallest_value_of_smallest_even_value)\
    \ = 0;\n    my($index_of_smallest_value_of_smallest_value_of_smallest_even_value_of_smallest_value_of_smallest_even_value_of_smallest_value)\
    \ = 0;\n    my($index_of_smallest_value_of_smallest_value_of_smallest_even_value_of_smallest_value_of_smallest_even_value_of_smallest_value_of_smallest_even_value)\
    \ = 0;\n    my($index_of_smallest_value_of_smallest_value_of_smallest_even_value_of_smallest_value_of_smallest_even_value_of_smallest_value_of_smallest_even_",
  "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_index) = 0;\n    my($min_index_index_value) = 0;\n \
    \   my($min_index_index_index) = 0;\n    my($min_index_index_index_value) = 0;\n\
    \    my($min_index_index_index_index) = 0;\n    my($min_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index) = 0;\n  \
    \  my($min_index_index_index_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index", "    my($min_even_value, $min_even_index) = 0;\n \
    \   my($min_index, $min_value) = 0;\n    my($min_index_even_value, $min_index_even_index)\
    \ = 0;\n    my($min_index_value, $min_index_value_index) = 0;\n    foreach my\
    \ $node (@$arr) {\n        if ($node == 0) {\n            continue;\n        }\n\
    \        my $even_value = $node % 2;\n        if ($even_value == 0) {\n      \
    \      if ($min_even_value == 0) {\n                $min_even_index = $node;\n\
    \                $min_even_value = $node;\n            } else {\n            \
    \    $min_even_index = $node;\n                $min_even_value = $node;\n    \
    \        }\n        } else {\n            if ($min_index_even_value == 0) {\n\
    \                $min_index_even_index = $node;\n                $min_index_even_value\
    \ = $node;\n            } else {\n                $min_index_even_index = $node;\n\
    \                $min_index_even_value = $node;\n            }\n        }\n  \
    \      if ($min_index == 0) {\n            $min_index = $node;\n            $min_value\
    \ = $node;\n        } else {\n            if ($min_index_value == 0) {\n     \
    \           $min_index_value_index = $node;\n                $min_index_value\
    \ = $node;\n            } else {\n                $min_index_value_index = $node;\n\
    \                $min_index_value = $node;\n            }\n        }\n    }\n\
    \    if ($min_even_value == 0) {\n        return [$min_even_index, $min_even_value];\n\
    \    } else {\n        return [$min_index_even_index, $min_index_even_value];\n\
    \    }\n}\n", "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value)\
    \ = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index) = 0;\n \
    \   my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value) = -1;\n \
    \   my($min_index_value) = -1;\n    foreach my $node (@$arr) {\n        if ($node\
    \ == 0) {\n            continue;\n        }\n        my $even = $node % 2;\n \
    \       if ($even == 0) {\n            if ($min_even == -1) {\n              \
    \  $min_even = $node;\n                $min_index = $node;\n            } else\
    \ if ($node < $min_even) {\n                $min_even = $node;\n             \
    \   $min_index = $node;\n            }\n        } else if ($min_even == -1) {\n\
    \            $min_even = $node;\n            $min_index = $node;\n        }\n\
    \    }\n    if ($min_even == -1) {\n        return [];\n    }\n    return [$min_even,\
    \ $min_index];\n}\n", "    my($smalest_even_value, $index) = 0;\n    my($smallest_index)\
    \ = 0;\n    my($smallest_value) = 0;\n    foreach my $node (@$arr) {\n       \
    \ if ($node == 0) {\n            continue;\n        }\n        if ($node % 2 ==\
    \ 0) {\n            $smalest_even_value = $node;\n            $index = $node;\n\
    \        } else {\n            if ($smalest_even_value == 0) {\n             \
    \   $smalest_even_value = $node;\n                $index = $node;\n          \
    \  } else {\n                if ($node < $smalest_even_value) {\n            \
    \        $smalest_even_value = $node;\n                    $index = $node;\n \
    \               }\n                if ($node < $smallest_value) {\n          \
    \          $smallest_value = $node;\n                    $smallest_index = $node;\n\
    \                }\n            }\n        }\n    }\n    if ($smalest_even_value\
    \ == 0) {\n        return [$smallest_value, $smallest_index];\n    } else {\n\
    \        return [$smalest_even_value, $index];\n    }\n}\n", "    my($smallest_even_value,\
    \ $smallest_even_index) = 0;\n    my($smallest_index) = 0;\n    my($smallest_value)\
    \ = 0;\n    my($smallest_index_value) = 0;\n    my($smallest_index_value_index)\
    \ = 0;\n    my($smallest_index_value_index_value) = 0;\n    my($smallest_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_value_index_value_index_value) = 0;\n    my($smallest_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($smallest_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($smallest_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($smallest_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($smallest_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my", "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value)\
    \ = 0;\n    my($min_index_value) = 0;\n    my($min_index_index) = 0;\n    my($min_index_index_value)\
    \ = 0;\n    my($min_index_index_index) = 0;\n    my($min_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index) = 0;\n    my($min_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index) = 0;\n  \
    \  my($min_index_index_index_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index", "    my($smallest_even_value) = 0;\n    my($smallest_index)\
    \ = 0;\n    my($smallest_value_index) = 0;\n    my($smallest_index_value) = 0;\n\
    \    my($smallest_index_index) = 0;\n    my($smallest_index_index_value) = 0;\n\
    \    my($smallest_index_index_index) = 0;\n    my($smallest_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index) = 0;\n   \
    \ my($smallest_index_index_index_index_index_index_index_value) = 0;\n    my($smallest_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_", "    my($min_even_value) = 0;\n\
    \    my($min_even_index) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n\
    \    my($min_index_value) = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value", "    my($min_even_value)\
    \ = 0;\n    my($min_even_index) = 0;\n    my($min_index) = 0;\n    my($min_value)\
    \ = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index) = 0;\n \
    \   my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value", "    my($smalest_even_value,\
    \ $index) = 0;\n    my($smallest_index) = 0;\n    my($smallest_index_value) =\
    \ 0;\n    my($smallest_index_index) = 0;\n    my($smallest_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index) = 0;\n    my($smallest_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index) = 0;\n    my($smallest_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index) = 0;\n   \
    \ my($smallest_index_index_index_index_index_index_index_value) = 0;\n    my($smallest_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_index_index_index_index_index_index_index_", " \
    \   my($smallest_even_value) = 0;\n    my($smallest_index) = 0;\n    my($result)\
    \ = [];", "    my($smallest_value, $smallest_index) = 0;\n    my($smallest_index_value,\
    \ $smallest_index_index) = 0;\n    my($index) = 0;\n    my($index_value) = 0;\n\
    \    my($index_index) = 0;\n    foreach my $node (@$arr) {\n        $index = $node\
    \ - 1;\n        $index_value = $node;\n        $index_index = $index;\n      \
    \  if ($index_value % 2 == 0) {\n            if ($smallest_value == 0) {\n   \
    \             $smallest_value = $index_value;\n                $smallest_index\
    \ = $index_index;\n            } else if ($index_value < $smallest_value) {\n\
    \                $smallest_value = $index_value;\n                $smallest_index\
    \ = $index_index;\n            }\n        }\n    }\n    if ($smallest_value ==\
    \ 0) {\n        return [$smallest_value, $smallest_index];\n    } else {\n   \
    \     return [$smallest_value, $smallest_index];\n    }\n}\n", "    my($min_even)\
    \ = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_index) = 0;\n    my($min_index_index_value) = 0;\n \
    \   my($min_index_index_index) = 0;\n    my($min_index_index_index_value) = 0;\n\
    \    my($min_index_index_index_index) = 0;\n    my($min_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index) = 0;\n  \
    \  my($min_index_index_index_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index", "    my($min_even) = -1;\n    my($min_index) = -1;\n\
    \    my($min_value) = -1;\n    my($min_index_value) = -1;\n    my($min_index_index)\
    \ = -1;\n    my($min_index_index_value) = -1;\n    my($min_index_index_index)\
    \ = -1;\n    my($min_index_index_index_value) = -1;\n    my($min_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_value) = -1;\n    my($min_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_value) = -1;\n    my($min_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index_value) = -1;\n    my($min_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_value) = -1;\n\
    \    my($min_index_index_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index) =\
    \ -1;\n    my($min_index_index_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($smallest_index_for_even_value) = 0;\n    my($smallest_index_for_odd_value)\
    \ = 0;\n    my($smallest_index_for_zero) = 0;\n    my($smallest_index_for_non_zero)\
    \ = 0;\n    my($smallest_index_for_non_zero_even) = 0;\n    my($smallest_index_for_non_zero_odd)\
    \ = 0;\n    my($smallest_index_for_non_zero_zero) = 0;\n    my($smallest_index_for_non_zero_non_zero)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero_even) = 0;\n    my($smallest_index_for_non_zero_non_zero_odd)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero_zero) = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_even) = 0;\n   \
    \ my($smallest_index_for_non_zero_non_zero_non_zero_odd) = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_zero)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_non_zero) = 0;\n\
    \    my($smallest_index_for_non_zero_non_zero_non_zero_non_zero_even) = 0;\n \
    \   my($smallest_index_for_non_zero_non_zero_non_zero_non_zero_odd) = 0;\n   \
    \ my($smallest_index_for_non_zero_non_zero_non_zero_non_zero_zero) = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_non_zero_non_zero)\
    \ = 0", "    my($min_even_value, $min_even_index) = 0;\n    my($min_index, $min_value)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n      \
    \      if ($min_even_value == 0) {\n                $min_even_value = $node;\n\
    \                $min_even_index = $node;\n            } else if ($node < $min_even_value)\
    \ {\n                $min_even_value = $node;\n                $min_even_index\
    \ = $node;\n            }\n        } else if ($min_value == 0) {\n           \
    \ $min_value = $node;\n            $min_index = $node;\n        } else if ($node\
    \ < $min_value) {\n            $min_value = $node;\n            $min_index = $node;\n\
    \        }\n    }\n    return [$min_even_value, $min_even_index];\n}\n", "   \
    \ my($smallest_value, $smallest_index) = 0;\n    my($result) = [];\n    my($index)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node == 0) {\n          \
    \  $result = [ $node, $index ];\n            $index += 1;\n        } else {\n\
    \            if ($node < $smallest_value) {\n                $smallest_value =\
    \ $node;\n                $smallest_index = $index;\n            }\n        }\n\
    \        $index += 1;\n    }\n    if ($smallest_value == 0) {\n        return\
    \ $result;\n    } else {\n        return [ $smallest_value, $smallest_index ];\n\
    \    }\n}\n", "    my($smallest_even_value) = 0;\n    my($smallest_index) = 0;\n\
    \    my($plucked_node) = [];\n    foreach my $node (@$arr) {\n        if ($node\
    \ == 0) {\n            $plucked_node = [$smallest_even_value, $smallest_index];\n\
    \            $smallest_even_value = $node;\n            $smallest_index = $node;\n\
    \        } else if ($node % 2 == 0) {\n            $smallest_even_value = $node;\n\
    \            $smallest_index = $node;\n        }\n    }\n    return $plucked_node;\n\
    }\n", "    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value) =\
    \ -1;\n    my($min_index_value) = -1;\n    my($min_index_index) = -1;\n    foreach\
    \ my $node (@$arr) {\n        if ($node == 0) {\n            continue;\n     \
    \   }\n        my $even = $node % 2;\n        if ($min_even == -1 || $even < $min_even)\
    \ {\n            $min_even = $even;\n            $min_index = $node;\n       \
    \ }\n        if ($min_even == $even && $min_index == $node) {\n            continue;\n\
    \        }\n        if ($min_value == -1 || $node < $min_value) {\n          \
    \  $min_value = $node;\n            $min_index_value = $node;\n            $min_index_index\
    \ = $node;\n        }\n        if ($min_value == $node && $min_index_value ==\
    \ $node) {\n            continue;\n        }\n        if ($min_index_index ==\
    \ $node) {\n            continue;\n        }\n        $min_index_index = $node;\n\
    \    }\n    if ($min_index_index == -1) {\n        return [];\n    }\n    return\
    \ [$min_value, $min_index_index];\n}\n", "    my($min_even) = 0;\n    my($min_index)\
    \ = 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even, $min_index) = 0;\n    my($min_index_even, $min_index_index) =\
    \ 0;\n    my($min_index_even_index, $min_index_index_index) = 0;\n    my($min_index_even_index_index)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n      \
    \      if ($min_even == 0 || $node < $min_even) {\n                $min_even =\
    \ $node;\n                $min_index = $node;\n            }\n            if ($min_even\
    \ == $node) {\n                $min_index_even = $node;\n                $min_index_index\
    \ = $node;\n            }\n        }\n        if ($node % 2 == 1) {\n        \
    \    if ($min_even == 0 || $node < $min_even) {\n                $min_even = $node;\n\
    \                $min_index_even = $node;\n                $min_index_even_index\
    \ = $node;\n            }\n            if ($min_even == $node) {\n           \
    \     $min_index_even_index = $node;\n                $min_index_even_index_index\
    \ = $node;\n            }\n        }\n    }\n    if ($min_even == 0) {\n     \
    \   return [0, 0];\n    }\n    if ($min_even == $min_index) {\n        return\
    \ [$min_index, $min_index_index];\n    }\n    if ($min_even == $min_index_even)\
    \ {\n        return [$min_index_even, $min_index_even_index];\n    }\n    if ($min_even\
    \ == $min_index_even_index) {\n        return [$min_index_even_index, $min_index_even_index_index];\n\
    \    }\n    return [$min_index, $min_index_index];\n}\n", "    my($min_even) =\
    \ 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node == 0) {\n          \
    \  continue;\n        }\n        my $even = $node % 2;\n        if ($even == 0)\
    \ {\n            $min_even = $node;\n            $min_index = $node;\n       \
    \     $min_value = $node;\n        } else if ($min_even == 0) {\n            $min_index_value\
    \ = $node;\n            $min_index = $node;\n        } else if ($min_even == $even)\
    \ {\n            $min_index_value = $node;\n            $min_index = $node;\n\
    \        } else if ($min_even < $even) {\n            $min_index_value = $node;\n\
    \            $min_index = $node;\n        }\n    }\n    if ($min_even == 0) {\n\
    \        return [$min_value, $min_index];\n    } else {\n        return [$min_index_value,\
    \ $min_index];\n    }\n}\n", "    my($min_even_value, $min_even_index) = 0;\n\
    \    my($min_index, $min_value) = 0;\n    foreach my $node (@$arr) {\n       \
    \ if ($node % 2 == 0) {\n            if ($min_even_value == 0) {\n           \
    \     $min_even_value = $node;\n                $min_even_index = $node;\n   \
    \         } else if ($node < $min_even_value) {\n                $min_even_value\
    \ = $node;\n                $min_even_index = $node;\n            }\n        }\
    \ else {\n            if ($min_value == 0) {\n                $min_value = $node;\n\
    \                $min_index = $node;\n            } else if ($node < $min_value)\
    \ {\n                $min_value = $node;\n                $min_index = $node;\n\
    \            }\n        }\n    }\n    if ($min_even_value == 0) {\n        return\
    \ [$min_even_index, $min_even_index];\n    } else if ($min_value == 0) {\n   \
    \     return [$min_index, $min_index];\n    } else {\n        return [$min_even_index,\
    \ $min_index];\n    }\n}\n", "    my($min_even) = 0;\n    my($min_index) = 0;\n\
    \    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_index)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_index_index) =\
    \ 0;\n    my($min_index_value_index_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_index_index) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_index_index) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_index) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index_index_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_index_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_index)\
    \ = 0;\n    my($min_index", "    my($min_even_value, $min_even_index) = 0;\n \
    \   my($min_index, $min_value) = 0;\n    my($min_index_even_value, $min_index_even_value)\
    \ = 0;\n    my($min_index_even_value_index, $min_index_even_value_index) = 0;\n\
    \    foreach my $node (@$arr) {\n        if ($node == 0) {\n            continue;\n\
    \        }\n        my $even_value = $node % 2;\n        if ($even_value == 0)\
    \ {\n            $min_even_value = $node;\n            $min_even_index = $node;\n\
    \            $min_index_even_value = $node;\n            $min_index_even_value_index\
    \ = $node;\n        } else if ($even_value < $min_even_value) {\n            $min_even_value\
    \ = $node;\n            $min_even_index = $node;\n            $min_index_even_value\
    \ = $node;\n            $min_index_even_value_index = $node;\n        } else if\
    \ ($even_value == $min_even_value) {\n            if ($node < $min_index_even_value)\
    \ {\n                $min_index_even_value = $node;\n                $min_index_even_value_index\
    \ = $node;\n            } else if ($node == $min_index_even_value) {\n       \
    \         if ($node < $min_index_even_value_index) {\n                    $min_index_even_value_index\
    \ = $node;\n                }\n            }\n        }\n    }\n    if ($min_even_value\
    \ == 0) {\n        return [0, 0];\n    }\n    return [$min_even_value, $min_index_even_value];\n\
    }\n", "    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value) =\
    \ -1;\n    my($min_index_value) = -1;\n    my($min_index_value_index) = -1;\n\
    \    my($min_index_value_index_value) = -1;\n    my($min_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value) = -1;\n    my($min_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value) = -1;\n\
    \    my($min_index_value_index_value_index_value_index_value_index) = -1;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index_value) = -1;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_value_index_value", "    my($smallest_even_value, $smallest_even_index)\
    \ = 0;\n    my($smallest_index) = 0;\n    foreach my $node (@$arr) {\n       \
    \ if ($node % 2 == 0) {\n            if ($smallest_even_value == 0) {\n      \
    \          $smallest_even_value = $node;\n                $smallest_even_index\
    \ = $node;\n            } else if ($node < $smallest_even_value) {\n         \
    \       $smallest_even_value = $node;\n                $smallest_even_index =\
    \ $node;\n            } else if ($node < $smallest_even_value) {\n           \
    \     $smallest_even_index = $node;\n            }\n        } else {\n       \
    \     if ($smallest_index == 0) {\n                $smallest_index = $node;\n\
    \            } else if ($node < $smallest_index) {\n                $smallest_index\
    \ = $node;\n            }\n        }\n    }\n    return [$smallest_even_value,\
    \ $smallest_even_index];\n}\n", "    my($min_even_value, $min_index) = -1;\n \
    \   my($min_even_value_index) = -1;\n    my($min_index_index) = -1;\n    my($min_index_value)\
    \ = -1;\n    my($min_index_index_value) = -1;\n    my($min_index_index_value_index)\
    \ = -1;\n    my($min_index_index_value_index_value) = -1;\n    my($min_index_index_value_index_value_index)\
    \ = -1;\n    my($min_index_index_value_index_value_index_value) = -1;\n    my($min_index_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_index_value_index_value_index_value_index_value) =\
    \ -1;\n    my($min_index_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = -1;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = -1;", "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value)\
    \ = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index) = 0;\n \
    \   my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even_value, $min_even_index) = 0;\n    my($min_index, $min_value) =\
    \ 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n        \
    \    if ($min_even_value == 0 || $node < $min_even_value) {\n                $min_even_value\
    \ = $node;\n                $min_even_index = $node;\n            }\n        }\
    \ else {\n            if ($min_value == 0 || $node < $min_value) {\n         \
    \       $min_value = $node;\n                $min_index = $node;\n           \
    \ }\n        }\n    }\n    return [$min_even_value, $min_even_index];\n}\n", " \
    \   my($smallest_even_value, $smallest_index) = 0;\n    my($smallest_index_in_array)\
    \ = 0;\n    my($smallest_index_in_array_index) = 0;\n    my($smallest_index_in_array_value)\
    \ = 0;\n    my($smallest_index_in_array_index_value) = 0;\n    my($smallest_index_in_array_index_value_value)\
    \ = 0;\n    my($smallest_index_in_array_index_value_value_value) = 0;\n    my($smallest_index_in_array_index_value_value_value_value)\
    \ = 0;\n    my($smallest_index_in_array_index_value_value_value_value_value) =\
    \ 0;\n    my($smallest_index_in_array_index_value_value_value_value_value_value)\
    \ = 0;\n    my($smallest_index_in_array_index_value_value_value_value_value_value_value)\
    \ = 0;\n    my($smallest_index_in_array_index_value_value_value_value_value_value_value_value)\
    \ = 0;\n    my($smallest_index_in_array_index_value_value_value_value_value_value_value_value_value)\
    \ = 0;\n    my($smallest_index_in_array_index_value_value_value_value_value_value_value_value_value_value)\
    \ = 0;\n    my($smallest_index_in_array_index_value_value_value_value_value_value_value_value_value_value_value)\
    \ = 0;\n    my($smallest_index_in_array_index_value_value_value_value_value_value_value_value_value_value_value_value)\
    \ = 0;\n    my($smallest_index_in_array_index_value_value_value_value_value_value_value_value_value_value_value_value_value)\
    \ = 0;\n    my($smallest_index_in_array_index_value_value_value_value_value_",
  "    my($min_even, $min_index) = 0;\n    my($min_index_even, $min_index_index) =\
    \ 0;\n    my($min_index_even_index, $min_index_index_index) = 0;\n    my($min_index_even_index_index)\
    \ = 0;\n    my($min_index_even_index_index_index) = 0;\n    my($min_index_even_index_index_index_index)\
    \ = 0;\n    my($min_index_even_index_index_index_index_index) = 0;\n    my($min_index_even_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_even_index_index_index_index_index_index_index) = 0;\n\
    \    my($min_index_even_index_index_index_index_index_index_index_index) = 0;\n\
    \    my($min_index_even_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_even_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_even_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_even_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_even_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_even_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_even_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_even_index_index_index_index_index_index_index_index_index_index_index_index",
  "    my($smallest_value, $smallest_index) = 0;\n    my($result) = [];", "    my($min_even_value,\
    \ $min_even_index) = 0;\n    my($min_index, $min_value) = 0;\n    my($min_index_even,\
    \ $min_value_even) = 0;\n    my($min_index_odd, $min_value_odd) = 0;\n    my($min_index_even_odd,\
    \ $min_value_even_odd) = 0;\n    my($min_index_even_odd_even, $min_value_even_odd_even)\
    \ = 0;\n    my($min_index_even_odd_odd, $min_value_even_odd_odd) = 0;\n    my($min_index_even_odd_even_odd,\
    \ $min_value_even_odd_even_odd) = 0;\n    my($min_index_even_odd_odd_even, $min_value_even_odd_odd_even)\
    \ = 0;\n    my($min_index_even_odd_odd_odd, $min_value_even_odd_odd_odd) = 0;\n\
    \    my($min_index_even_odd_odd_even_odd, $min_value_even_odd_odd_even_odd) =\
    \ 0;\n    my($min_index_even_odd_odd_odd_even_odd, $min_value_even_odd_odd_odd_even_odd)\
    \ = 0;\n    my($min_index_even_odd_odd_odd_even_odd_even, $min_value_even_odd_odd_odd_even_odd_even)\
    \ = 0;\n    my($min_index_even_odd_odd_odd_even_odd_odd, $min_value_even_odd_odd_odd_even_odd_odd)\
    \ = 0;\n    my($min_index_even_odd_odd_odd_even_odd_odd_even, $min_value_even_odd_odd_odd_even_odd_odd_even)\
    \ = 0;\n    my($min_index_even_odd_odd_odd_even_odd_odd_odd, $min_value_even_odd_odd_odd_even_odd_odd_odd)\
    \ = 0;\n", "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value)\
    \ = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index) = 0;\n \
    \   my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even, $min_index) = 0;\n    my($result) = [];\n    my($index) = 0;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if\
    \ ($node < $min_even) {\n                $min_even = $node;\n                $min_index\
    \ = $index;\n            }\n        }\n        $index += 1;\n    }\n    if ($min_even\
    \ == 0) {\n        $result = [$min_index, $min_even];\n    } else {\n        $result\
    \ = [$min_index, $min_even, $min_index];\n    }\n    return $result;\n}\n", " \
    \   my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n   \
    \ my($min_index_value) = 0;\n    my($min_index_value_index) = 0;\n    foreach\
    \ my $node (@$arr) {\n        if ($node == 0) {\n            continue;\n     \
    \   }\n        my $even = $node % 2;\n        if ($even == 0) {\n            $min_even\
    \ = $node;\n            $min_index = $node;\n            $min_value = $node;\n\
    \            $min_index_value = $node;\n            $min_index_value_index = $node;\n\
    \        } else if ($even < $min_even) {\n            $min_even = $node;\n   \
    \         $min_index = $node;\n            $min_value = $node;\n            $min_index_value\
    \ = $node;\n            $min_index_value_index = $node;\n        } else if ($even\
    \ == $min_even) {\n            if ($node < $min_index_value) {\n             \
    \   $min_index_value = $node;\n                $min_index_value_index = $node;\n\
    \            }\n            if ($node < $min_index) {\n                $min_index\
    \ = $node;\n                $min_index_value = $node;\n                $min_index_value_index\
    \ = $node;\n            }\n        }\n    }\n    if ($min_index_value_index ==\
    \ 0) {\n        return [$min_value, $min_index];\n    } else {\n        return\
    \ [$min_index_value, $min_index_value_index];\n    }\n}\n", "    my($min_even_value,\
    \ $min_even_index) = 0;\n    my($min_index, $min_value) = 0;\n    my($index, $value)\
    \ = 0;\n    my($min_index_even, $min_value_even) = 0;\n    my($min_index_odd,\
    \ $min_value_odd) = 0;\n    my($min_index_even_index, $min_value_even_index) =\
    \ 0;\n    my($min_index_odd_index, $min_value_odd_index) = 0;\n    foreach my\
    \ $node (@$arr) {\n        my $even_value = $node % 2;\n        if ($even_value\
    \ == 0) {\n            if ($min_even_value == 0) {\n                $min_even_index\
    \ = $index;\n                $min_even_value = $value;\n            }\n      \
    \      else {\n                if ($value < $min_even_value) {\n             \
    \       $min_even_index = $index;\n                    $min_even_value = $value;\n\
    \                }\n            }\n        }\n        else {\n            if ($min_value\
    \ == 0) {\n                $min_index = $index;\n                $min_value =\
    \ $value;\n            }\n            else {\n                if ($value < $min_value)\
    \ {\n                    $min_index = $index;\n                    $min_value\
    \ = $value;\n                }\n            }\n        }\n        $index += 1;\n\
    \        $value += $node;\n    }\n    if ($min_even_value == 0) {\n        return\
    \ [$min_even_value, $min_even_index];\n    }\n    else {\n        if ($min_value\
    \ == 0) {\n            return [$min_value, $min_index];\n        }\n        else\
    \ {\n            if ($min_even_value < $min_value) {\n                return [$min_even_value,\
    \ $min_even_index];\n            }\n            else {\n                if ($min_even_value\
    \ == $min_value) {\n                    if ($min_even_index < $min_index) {\n\
    \                        return [$min", "    my($min_even_value, $min_even_index)\
    \ = 0;\n    my($min_index, $min_value) = 0;\n    foreach my $node (@$arr) {\n\
    \        if ($node % 2 == 0) {\n            if ($node < $min_even_value) {\n \
    \               $min_even_value = $node;\n                $min_even_index = $node;\n\
    \            }\n            else if ($node == $min_even_value) {\n           \
    \     $min_even_index = $node;\n            }\n        }\n        else {\n   \
    \         if ($node < $min_value) {\n                $min_value = $node;\n   \
    \             $min_index = $node;\n            }\n            else if ($node ==\
    \ $min_value) {\n                $min_index = $node;\n            }\n        }\n\
    \    }\n    if ($min_even_value == 0) {\n        return [$min_index, $min_value];\n\
    \    }\n    else {\n        return [$min_even_index, $min_even_value];\n    }\n\
    }\n", "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n\
    \    my($min_index_value) = 0;\n    my($min_index_index) = 0;\n    foreach my\
    \ $node (@$arr) {\n        if ($node % 2 == 0) {\n            if ($min_even ==\
    \ 0 || $min_even > $node) {\n                $min_even = $node;\n            \
    \    $min_index = $node;\n            }\n        } else {\n            if ($min_value\
    \ == 0 || $min_value > $node) {\n                $min_value = $node;\n       \
    \         $min_index_value = $node;\n                $min_index_index = $node;\n\
    \            }\n        }\n    }\n    if ($min_even == 0) {\n        return [$min_value,\
    \ $min_index_index];\n    } else {\n        return [$min_even, $min_index];\n\
    \    }\n}\n", "    my($min_even, $min_index) = 0;\n    my($min_even_index) = 0;\n\
    \    my($min_index_index) = 0;\n    my($min_index_value) = 0;\n    my($min_index_index_value)\
    \ = 0;\n    my($min_index_index_value_index) = 0;\n    my($min_index_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index) = 0;\n    my($min_index_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index) = 0;\n  \
    \  my($min_index_index_value_index_value_index_value_index_value) = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value", " \
    \   my($smallest_even_value, $smallest_index) = 0;\n    my($result) = [];\n  \
    \  foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if ($smallest_even_value\
    \ == 0) {\n                $smallest_even_value = $node;\n                $smallest_index\
    \ = $node;\n            } else if ($node < $smallest_even_value) {\n         \
    \       $smallest_even_value = $node;\n                $smallest_index = $node;\n\
    \            } else if ($node == $smallest_even_value) {\n                if ($node\
    \ < $smallest_index) {\n                    $smallest_index = $node;\n       \
    \         }\n            }\n        }\n    }\n    if ($smallest_even_value ==\
    \ 0) {\n        return $result;\n    }\n    $result = [ $smallest_even_value,\
    \ $smallest_index ];\n    return $result;\n}\n", "    my($min_even) = 0;\n   \
    \ my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n\
    \    my($min_index_value_index) = 0;\n    my($min_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even_value, $min_even_index) = 0;\n    my($min_index, $min_value) =\
    \ 0;\n    my($min_index_even, $min_value_even) = 0;\n    my($min_index_odd, $min_value_odd)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node == 0) {\n          \
    \  continue;\n        }\n        my $even_value = $node % 2;\n        if ($even_value\
    \ == 0) {\n            if ($min_even_value == 0) {\n                $min_even_index\
    \ = $node;\n                $min_even_value = $node;\n            } else {\n \
    \               $min_even_index = $min_even_index;\n                $min_even_value\
    \ = $min_even_value;\n            }\n        } else if ($even_value == 1) {\n\
    \            if ($min_even_value == 0) {\n                $min_even_index = $node;\n\
    \                $min_even_value = $node;\n            } else {\n            \
    \    $min_even_index = $min_even_index;\n                $min_even_value = $min_even_value;\n\
    \            }\n        }\n    }\n    if ($min_even_value == 0) {\n        return\
    \ [$min_even_value, $min_even_index];\n    }\n    if ($min_even_value == 1) {\n\
    \        return [$min_even_value, $min_even_index];\n    }\n    if ($min_even_value\
    \ == 2) {\n        return [$min_even_value, $min_even_index];\n    }\n    if ($min_even_value\
    \ == 3) {\n        return [$min_even_value, $min_even_index];\n    }\n    if ($min_even_value\
    \ == 4) {\n        return [$min_even_value, $min_even_index];\n    }\n    if ($min_even_value\
    \ == 5) {\n        return [$min_even_value, $min_even_index];\n    }\n    if ($min_even_",
  "    my($smallest_even_value, $smallest_index) = 0;\n    my($result) = [];\n   \
    \ my($index) = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0)\
    \ {\n            if ($smallest_even_value == 0) {\n                $smallest_even_value\
    \ = $node;\n                $smallest_index = $index;\n            } else if ($node\
    \ < $smallest_even_value) {\n                $smallest_even_value = $node;\n \
    \               $smallest_index = $index;\n            }\n        }\n        $index++;\n\
    \    }\n    if ($smallest_even_value == 0) {\n        return $result;\n    } else\
    \ {\n        $result = [ $smallest_even_value, $smallest_index ];\n    }\n}\n",
  "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($smallest_even_value, $smallest_even_index) = 0;\n    my($smallest_index,\
    \ $smallest_value) = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2\
    \ == 0) {\n            $smallest_even_value = $node;\n            $smallest_even_index\
    \ = $node;\n        } else {\n            $smallest_index = $node;\n         \
    \   $smallest_value = $node;\n        }\n    }\n    if ($smallest_even_value ==\
    \ 0) {\n        return [$smallest_index, $smallest_value];\n    } else {\n   \
    \     return [$smallest_even_index, $smallest_even_value];\n    }\n}\n", "   \
    \ my($smallest_even_value, $smallest_index) = 0;\n    my($result) = [];\n    my($index)\
    \ = 0;\n    foreach my $node (@$arr) {\n        my $value = $node;\n        if\
    \ ($value % 2 == 0) {\n            if ($value < $smallest_even_value) {\n    \
    \            $smallest_even_value = $value;\n                $smallest_index =\
    \ $index;\n            }\n        }\n        $index += 1;\n    }\n    if ($smallest_even_value)\
    \ {\n        $result = [$smallest_even_value, $smallest_index];\n    }\n    return\
    \ $result;\n}\n", "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value)\
    \ = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index) = 0;\n \
    \   my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($smallest_even_value, $smallest_index) = 0;\n    my($smallest_index_value,\
    \ $smallest_index_index) = 0;\n    my($smallest_index_value_index, $smallest_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index) = 0;\n    my($smallest_index_value_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index) = 0;\n    my($smallest_index_value_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index) = 0;\n\
    \    my($smallest_index_value_index_index_index_index_index_index_index) = 0;\n\
    \    my($smallest_index_value_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($smallest_index_value_", "    my($min_even) = 0;\n    my($min_index)\
    \ = 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value) = 0;\n    my($min_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value) = 0;\n    my($min_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value) = 0;\n  \
    \  my($min_index_value_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($smallest_even_value, $smallest_index) = 0;\n    my($smallest_index_for_even_value)\
    \ = 0;\n    my($smallest_index_for_odd_value) = 0;\n    my($smallest_index_for_zero)\
    \ = 0;\n    my($smallest_index_for_non_zero) = 0;\n    my($smallest_index_for_non_zero_even)\
    \ = 0;\n    my($smallest_index_for_non_zero_odd) = 0;\n    my($smallest_index_for_non_zero_zero)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero) = 0;\n    my($smallest_index_for_non_zero_non_zero_even)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero_odd) = 0;\n    my($smallest_index_for_non_zero_non_zero_zero)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero) = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_even)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_odd) = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_zero)\
    \ = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_non_zero) = 0;\n\
    \    my($smallest_index_for_non_zero_non_zero_non_zero_non_zero_even) = 0;\n \
    \   my($smallest_index_for_non_zero_non_zero_non_zero_non_zero_odd) = 0;\n   \
    \ my($smallest_index_for_non_zero_non_zero_non_zero_non_zero_zero) = 0;\n    my($smallest_index_for_non_zero_non_zero_non_zero_non_zero_non_zero)\
    \ = 0", "    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value)\
    \ = -1;\n    my($min_index_value) = -1;\n    my($min_index_index) = -1;\n    my($min_index_index_value)\
    \ = -1;\n    my($min_index_index_index) = -1;\n    my($min_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index) = -1;\n    my($min_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index) = -1;\n\
    \    my($min_index_index_index_index_index_index_index_index_value) = -1;\n  \
    \  my($min_index_index_index_index_index_index_index_index_index) = -1;\n    my($min_index_index_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = -1;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = -1;\n    my($min_index_index_index_index_index_index", "    my($smallest_even_value,\
    \ $smallest_even_index) = 0;\n    my($smallest_index, $smallest_value) = 0;\n\
    \    my($result) = [];\n    foreach my $node (@$arr) {\n        if ($node % 2\
    \ == 0) {\n            if ($node < $smallest_even_value) {\n                $smallest_even_value\
    \ = $node;\n                $smallest_even_index = $node;\n            }\n   \
    \         if ($node < $smallest_value) {\n                $smallest_value = $node;\n\
    \                $smallest_index = $node;\n            }\n        }\n    }\n \
    \   if ($smallest_even_value == 0) {\n        $result = [ $smallest_index, $smallest_value\
    \ ];\n    } else {\n        $result = [ $smallest_even_index, $smallest_even_value\
    \ ];\n    }\n    return $result;\n}\n", "    my($min_even_value, $min_index) =\
    \ 0;\n    my($min_even_value_index) = 0;\n    my($min_index_index) = 0;\n    foreach\
    \ my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if ($min_even_value\
    \ == 0) {\n                $min_even_value = $node;\n                $min_even_value_index\
    \ = $node;\n            } else if ($node < $min_even_value) {\n              \
    \  $min_even_value = $node;\n                $min_even_value_index = $node;\n\
    \            }\n        }\n        if ($min_index == 0) {\n            $min_index\
    \ = $node;\n            $min_index_index = $node;\n        } else if ($node <\
    \ $min_index) {\n            $min_index = $node;\n            $min_index_index\
    \ = $node;\n        }\n    }\n    if ($min_even_value_index == 0) {\n        return\
    \ [$min_even_value, $min_index_index];\n    } else {\n        return [$min_even_value,\
    \ $min_even_value_index];\n    }\n}\n", "    my($min_even_value, $min_even_index)\
    \ = 0;\n    my($min_index, $min_value) = 0;\n    foreach my $node (@$arr) {\n\
    \        if ($node % 2 == 0) {\n            if ($min_even_value == 0) {\n    \
    \            $min_even_value = $node;\n                $min_even_index = $node;\n\
    \            } else if ($node < $min_even_value) {\n                $min_even_value\
    \ = $node;\n                $min_even_index = $node;\n            }\n        }\
    \ else {\n            if ($min_value == 0) {\n                $min_value = $node;\n\
    \                $min_index = $node;\n            } else if ($node < $min_value)\
    \ {\n                $min_value = $node;\n                $min_index = $node;\n\
    \            }\n        }\n    }\n    if ($min_even_value == 0) {\n        return\
    \ [$min_even_index, $min_even_index];\n    } else if ($min_value == 0) {\n   \
    \     return [$min_index, $min_index];\n    } else {\n        return [$min_even_index,\
    \ $min_index];\n    }\n}\n", "    my($smallest_even_value, $smallest_index) =\
    \ 0;\n    my($smallest_even_value_index) = 0;\n    my($smallest_index_index) =\
    \ 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n        \
    \    if ($node < $smallest_even_value) {\n                $smallest_even_value\
    \ = $node;\n                $smallest_even_value_index = $node;\n            }\n\
    \            else if ($node == $smallest_even_value) {\n                $smallest_even_value_index\
    \ = $node;\n            }\n        }\n        if ($node < $smallest_index) {\n\
    \            $smallest_index = $node;\n            $smallest_index_index = $node;\n\
    \        }\n        else if ($node == $smallest_index) {\n            $smallest_index_index\
    \ = $node;\n        }\n    }\n    return [$smallest_even_value_index, $smallest_index_index];\n\
    }\n", "    my($smallest_even_value) = 0;\n    my($smallest_index) = 0;\n    my($index)\
    \ = 0;\n    my($result) = [];\n    foreach my $node (@$arr) {\n        if ($node\
    \ % 2 == 0) {\n            if ($node < $smallest_even_value) {\n             \
    \   $smallest_even_value = $node;\n                $smallest_index = $index;\n\
    \            }\n            $index += 1;\n        }\n    }\n    if ($smallest_even_value\
    \ == 0) {\n        return $result;\n    }\n    $result = [$smallest_even_value,\
    \ $smallest_index];\n    return $result;\n}\n", "    my($min_even) = 0;\n    my($min_index)\
    \ = 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_index)\
    \ = 0;\n    my($min_index_index_value) = 0;\n    my($min_index_index_index) =\
    \ 0;\n    my($min_index_index_index_value) = 0;\n    my($min_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_value) = 0;\n  \
    \  my($min_index_index_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_value) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_index) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index", "    my($min_even) = 0;\n    my($min_index) = 0;\n\
    \    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_index)\
    \ = 0;\n    my($min_index_index_value) = 0;\n    my($min_index_index_index) =\
    \ 0;\n    my($min_index_index_index_value) = 0;\n    my($min_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_value) = 0;\n    my($min_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_value) = 0;\n  \
    \  my($min_index_index_index_index_index_index_index_index) = 0;\n    my($min_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_value) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_index) = 0;\n\
    \    my($min_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_index_index_index_index_index_index_index_index_index_value)\
    \ = 0;\n    my($min_index", "    my($min_even, $min_index) = 0;\n    my($min_even_index)\
    \ = 0;\n    my($min_index_index) = 0;\n    my($min_index_value) = 0;\n    my($min_index_index_value)\
    \ = 0;\n    my($min_index_index_value_index) = 0;\n    my($min_index_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index) = 0;\n    my($min_index_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index) = 0;\n  \
    \  my($min_index_index_value_index_value_index_value_index_value) = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value", " \
    \   my($smalest_even_value, $index) = 0;\n    my($smallest_index) = 0;\n    foreach\
    \ my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if ($node < $smalest_even_value)\
    \ {\n                $smalest_even_value = $node;\n                $index = $smallest_index;\n\
    \            }\n            if ($node < $smalest_even_value) {\n             \
    \   $smalest_even_value = $node;\n                $index = $smallest_index;\n\
    \            }\n        }\n        $smallest_index += 1;\n    }\n    return [\
    \ $smalest_even_value, $index ];\n}\n", "    my($smallest_even_value) = 0;\n \
    \   my($smallest_index) = 0;\n    my($plucked_node) = [];", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($result) = [];", "    my($smallest_even_value,\
    \ $smallest_index) = 0;\n    my($result) = [];\n    my($index) = 0;\n    foreach\
    \ my $node (@$arr) {\n        if ($node == 0) {\n            $result = [$node,\
    \ $index];\n            $index += 1;\n        } else if ($node % 2 == 0) {\n \
    \           $smallest_even_value = $node;\n            $smallest_index = $index;\n\
    \        }\n        $index += 1;\n    }\n    if ($smallest_even_value == 0) {\n\
    \        return $result;\n    } else {\n        my $result = [$smallest_even_value,\
    \ $smallest_index];\n        return $result;\n    }\n}\n", "    my($min_even)\
    \ = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($min_even) = -1;\n    my($min_index) = -1;\n    my($min_value) = -1;\n \
    \   foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if\
    \ ($min_even == -1 || $node < $min_even) {\n                $min_even = $node;\n\
    \                $min_index = $node;\n            }\n        }\n    }\n    if\
    \ ($min_even == -1) {\n        return [];\n    }\n    return [$min_even, $min_index];\n\
    }\n", "    my($smalest_value, $index) = 0;\n    my($result) = [];\n    my($i)\
    \ = 0;\n    foreach my $node (@$arr) {\n        if ($node == 0) {\n          \
    \  $result = [$node, $i];\n            $smalest_value = $node;\n            $index\
    \ = $i;\n            continue;\n        }\n        if ($node % 2 == 0) {\n   \
    \         $smalest_value = $node;\n            $index = $i;\n        }\n     \
    \   $i++;\n    }\n    return $result;\n}\n", "    my($min_even) = 0;\n    my($min_index)\
    \ = 0;\n    my($min_value) = 0;\n    my($min_index_value) = 0;\n    my($min_index_index)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_index_index) =\
    \ 0;\n    my($min_index_index_value_index) = 0;\n    my($min_index_index_value_index_index)\
    \ = 0;\n    my($min_index_index_value_index_value) = 0;\n    my($min_index_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_index) = 0;\n    my($min_index_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_index) = 0;\n\
    \    my($min_index_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_index_value_index_value_index_value_index_value_index_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_index_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_index_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_index_index_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_index_index_index_index_index)\
    \ = 0;\n    my($min_index_index_value_index_value_index_value_index_value_index_index_index_index_index_index_",
  "    my($min_even) = 0;\n    my($min_index) = 0;\n    my($min_value) = 0;\n    my($min_index_value)\
    \ = 0;\n    my($min_index_value_index) = 0;\n    my($min_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index) = 0;\n    my($min_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value) = 0;\n\
    \    my($min_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index)\
    \ = 0;\n    my($min_index_value_index_value_index_value_index_value_index_value_index_value_index_",
  "    my($smallest_even_value, $smallest_index) = 0;\n    my($smallest_index_of_smallest_even_value)\
    \ = 0;\n    my($smallest_index_of_smallest_even_value_in_array) = 0;\n    my($smallest_index_of_smallest_even_value_in_array_in_array)\
    \ = 0;\n    my($smallest_index_of_smallest_even_value_in_array_in_array_in_array)\
    \ = 0;\n    my($smallest_index_of_smallest_even_value_in_array_in_array_in_array_in_array)\
    \ = 0;\n    my($smallest_index_of_smallest_even_value_in_array_in_array_in_array_in_array_in_array)\
    \ = 0;\n    my($smallest_index_of_smallest_even_value_in_array_in_array_in_array_in_array_in_array_in_array)\
    \ = 0;\n    my($smallest_index_of_smallest_even_value_in_array_in_array_in_array_in_array_in_array_in_array_in_array)\
    \ = 0;\n    my($smallest_index_of_smallest_even_value_in_array_in_array_in_array_in_array_in_array_in_array_in_array_in_array)\
    \ = 0;\n    my($smallest_index_of_smallest_even_value_in_array_in_array_in_array_in_array_in_array_in_array_in_array_in_array_in_array)\
    \ = 0;\n    my($smallest_index_of_smallest_even_value_in_array_in_array_in_array_in_array_in_array_in_array_in_array_in_array_in_array_in_array)\
    \ = 0;\n    my($smallest_index_of_smallest_even_value_in_array_in_array_in_array_in_array_in_array_in_array_",
  "    my($smallest_even_value, $smallest_index) = 0;\n    my($smallest_index_value)\
    \ = 0;\n    my($smallest_index_index) = 0;\n    foreach my $node (@$arr) {\n \
    \       if ($node % 2 == 0) {\n            if ($smallest_even_value == 0) {\n\
    \                $smallest_even_value = $node;\n                $smallest_index\
    \ = $node;\n            } else if ($node < $smallest_even_value) {\n         \
    \       $smallest_even_value = $node;\n                $smallest_index = $node;\n\
    \            }\n        }\n    }\n    if ($smallest_even_value == 0) {\n     \
    \   return [];\n    } else {\n        $smallest_index_value = $smallest_even_value;\n\
    \        $smallest_index_index = $smallest_index;\n    }\n    foreach my $node\
    \ (@$arr) {\n        if ($node == $smallest_index_value) {\n            $smallest_index_value\
    \ = $node;\n            $smallest_index_index = $node;\n        }\n    }\n   \
    \ return [ $smallest_index_value, $smallest_index_index ];\n}\n"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

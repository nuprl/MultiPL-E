{
  "name": "HumanEval_21_rescale_to_unit",
  "language": "pl",
  "prompt": "# Given array of numbers (of at least two elements), apply a linear transform to that array,\n# such that the smallest number will become 0 and the largest will become 1\n# >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n# [0.0, 0.25, 0.5, 0.75, 1.0]\nsub rescale_to_unit {\n    my($numbers) = @_;\n",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rescale_to_unit;\n        if(eq_deeply($candidate->([2.0, 49.9]),[0.0, 1.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([100.0, 49.9]),[1.0, 0.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),[0.0, 0.25, 0.5, 0.75, 1.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2.0, 1.0, 5.0, 3.0, 4.0]),[0.25, 0.0, 1.0, 0.5, 0.75])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([12.0, 11.0, 15.0, 13.0, 14.0]),[0.25, 0.0, 1.0, 0.5, 0.75])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "completions": [
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    $numbers = $min + ($max - $min) * $numbers;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [0];\n    foreach my $number (@$numbers) {\n        $result = [$result, $number - $min / $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [];\n    foreach my $number (@$numbers) {\n        my $scaled = $number - $min;\n        my $scaled_by_scale = $scaled / $scale;\n        my $scaled_by_1 = $scaled_by_scale - floor($scaled_by_scale);\n        my $scaled_by_1_plus_1 = $scaled_by_scale - floor($scaled_by_scale);\n        my $scaled_by_1_plus_2 = $scaled_by_scale - floor($scaled_by_scale);\n        my $scaled_by_1_plus_3 = $scaled_by_scale - floor($scaled_by_scale);\n        my $scaled_by_1_plus_4 = $scaled_by_scale - floor($scaled_by_scale);\n        my $scaled_by_1_plus_5 = $scaled_by_scale - floor($scaled_by_scale);\n        my $scaled_by_1_plus_6 = $scaled_by_scale - floor($scaled_by_scale);\n        my $scaled_by_1_plus_7 = $scaled_by_scale - floor($scaled_by_scale);\n        my $scaled_by_1_plus_8 = $scaled_by_scale - floor($scaled_by_scale);\n        my $scaled_by_1_plus_9 = $scaled_by_scale - floor($scaled_by_scale);\n        my $scaled_by_1_plus_10 = $scaled_by_scale - floor($scaled_by_scale);\n        my $scaled_by_1_plus_11 = $scaled_by_scale - floor($scaled_by_scale);\n        my $scaled_by_1_plus_12 = $scaled_by_scale - floor($scaled_by_scale);\n        my $scaled_by_1_plus_13 = $",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n *= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = ($numbers - $offset) / $scale;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += $number * $scale;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * ($n - $min) / $scale for $n in $numbers];\n}",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += [$number * $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale, $max];\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    return [$min * $scale, $max * $scale];\n}",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (sort { $a <=> $b } $numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my($min, $max) = minmax($numbers);\n    my $scale = 1.0 / $max - 1.0 / $min;\n    return [$scale * $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    $numbers = ($numbers - $min) / ($max - $min);\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $offset for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $scale * $min for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    $numbers = $min + ($max - $min) * $numbers;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $scale * $min for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n *= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $min for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += $number * $scale;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale, $max];\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [];\n    foreach my $n (@$numbers) {\n        my $scaled = ($n - $min) / $scale;\n        my $scaled_floor = floor($scaled);\n        my $scaled_ceil = ceil($scaled);\n        if ($scaled_floor == $scaled_ceil) {\n            $result += [$scaled_floor];\n        } else {\n            $result += [$scaled_floor, $scaled_ceil];\n        }\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $scale * $min for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $min for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [0];\n    foreach my $number (@$numbers) {\n        $result = [$result, $number - $min / $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    if ($scale == 0) {\n        return $numbers;\n    }\n    return map { $x - $min / $scale } @$numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $min for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale];\n    foreach my $number (@$numbers) {\n        $result += [$number - $min, $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += $number * $scale;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = $numbers - $offset;\n    $numbers = $numbers / $scale;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n ( @$numbers ) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale, $max];\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    return [$scale * ($n - $min) for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += [$number - $min] * $scale;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / $max - 1.0 / $min;\n    return [$min * $scale, $max * $scale];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    foreach my $number (@$numbers) {\n        $number -= $min;\n        $number /= $scale;\n        $number += 0.5;\n        $number = round($number, 2);\n        $number += $min;\n        $number = abs($number);\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number = $number + $min;\n        $number = $number / $scale;\n        $number =",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = map { $x - $offset } @$numbers;\n    $numbers = map { $x / $scale } @$numbers;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [0];\n    foreach my $number (@$numbers) {\n        $result = [$result, $number - $min / $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    my $result = [$offset];\n    foreach my $number (@$numbers) {\n        $result = [$offset + ($number - $min) * $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [0.0];\n    foreach my $number (@$numbers) {\n        $result = [$result, $number * $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = ($numbers - $offset) / $scale;\n    return $numbers;\n}",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    return [$min * $scale, $max * $scale];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [0];\n    foreach my $number (@$numbers) {\n        $result = [$result, $number - $min / $scale];\n    }\n    return $result;\n}",
    "    my($min, $max) = minmax($numbers);\n    my $scale = 1.0 / $max - 1.0 / $min;\n    return [$scale * $numbers[0], $scale * $numbers[1], $scale * $numbers[2], $scale * $numbers[3], $scale * $numbers[4]];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    return [$min * $scale, $max * $scale];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    foreach my $n (@$numbers) {\n        $n -= $min;\n        $n /= $scale;\n        $n += $min;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    return [$scale * ($n - $min) for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale, $max];\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $scale * $min];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n *= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $x for $x in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $scale * $min for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [0.0];\n    foreach my $number (@$numbers) {\n        $result[0] += $number * $scale;\n    }\n    return $result;\n}",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}",
    "    my($min, $max) = minmax($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $scale * $min for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    $numbers = ($numbers - $min) / ($max - $min);\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min];\n    foreach my $n (@$numbers) {\n        $result = [$n - $min] + $result;\n    }\n    $result = [$scale] + $result;\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [0];\n    foreach my $number (@$numbers) {\n        $result = [$result, $number - $min / $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $x - $scale / 2 for $x in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    return [$min * $scale, $max * $scale];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    $numbers = map { $x * $scale } @$numbers;\n    return $numbers;\n}",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += $number * $scale;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [0];\n    foreach my $number (@$numbers) {\n        $result = [$result, $number - $min / $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    foreach my $n (@$numbers) {\n        $n -= $min;\n        $n /= $scale;\n        $n += $min;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    foreach my $number (@$numbers) {\n        $number *= $scale;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    foreach my $n (@$numbers) {\n        $n -= $min;\n        $n /= $scale;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = map { $x - $offset } @$numbers;\n    $numbers = map { $x / $scale } @$numbers;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $number (@$numbers) {\n        $number -= $offset;\n        $number /= $scale;\n        $number += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $new_numbers = $numbers - $min;\n    $new_numbers *= $scale;\n    $new_numbers /= $max - $min;\n    $new_numbers += $min;\n    return $new_numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = [$offset + $scale * $x for $x in $numbers];\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += [$number * $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n *= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    return [$min, $max - $min];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += [$number - $min] * $scale;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $offset for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale];\n    foreach my $number (@$numbers) {\n        $result = [$result, $number - $min];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += ($number - $offset) * $scale;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [$min * $scale];\n    foreach my $number (@$numbers) {\n        $result = [$result, $number * $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min];\n    foreach my $number (@$numbers) {\n        $result = [$result, $number - $min];\n    }\n    $result = [$result, $max];\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $scale * $min for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = [$offset + $scale * $x for $x in $numbers];\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $new_min = 0.0;\n    my $new_max = 1.0;\n    my $new_numbers = [];\n    foreach my $number (@$numbers) {\n        my $new_number = ($number - $min) / $scale;\n        $new_numbers = [$new_number, $new_number];\n    }\n    return $new_numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    if ($scale == 0) {\n        return $numbers;\n    }\n    my $factor = 1 / $scale;\n    return [$min * $factor, $max * $factor];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = map { $x - $offset } @$numbers;\n    $numbers = map { $x / $scale } @$numbers;\n    return $numbers;\n}",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale, $max];\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [];\n    foreach my $n (@$numbers) {\n        $result += ($n - $min) / $scale;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = map { $x - $offset } @$numbers;\n    $numbers = map { $x / $scale } @$numbers;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $x - $scale / 2 for $x in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale, $max];\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    foreach my $n (@$numbers) {\n        $n -= $min;\n        $n /= $scale;\n        $n += $min;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n ( @$numbers ) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [$min];\n    foreach my $number (@$numbers) {\n        $result = [$number * $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale, $max];\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min];\n    foreach my $number (@$numbers) {\n        $result = [$scale * $number + $min];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $scale * $min for $n in $numbers];\n}",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    if ($scale == 0) {\n        return $numbers;\n    }\n    my $scaled = [0] * @{$numbers};\n    foreach my $number (@$numbers) {\n        $scaled[$number - $min] = $number / $scale;\n    }\n    return $scaled;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = map { $x - $offset } @$numbers;\n    $numbers = map { $x / $scale } @$numbers;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [];\n    foreach my $n (@$numbers) {\n        $result += $n * $scale;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = $max - $min;\n    my $scale = 1.0 / $range;\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += [$number * $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $x - $scale / 2 for $x in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    if ($scale == 0) {\n        return $numbers;\n    }\n    my $unit = 1 / $scale;\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += [$number * $unit];\n    }\n    return $result;\n}",
    "    my($min, $max) = minmax($numbers);\n    $numbers = $numbers - $min;\n    $numbers = $numbers / $max;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $offset for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [0] * @{$numbers};\n    for (my $i = 0; $i < @{$numbers}; $i++) {\n        $result[$i] = $numbers[$i] - $min;\n        $result[$i] /= $scale;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    if ($scale == 0) {\n        return $numbers;\n    }\n    my $scaled = [];\n    foreach my $number (@$numbers) {\n        my $scaled_number = ($number - $min) / $scale;\n        $scaled_number = round($scaled_number, 2);\n        $scaled_number = $scaled_number if $scaled_number >= 0.0 and $scaled_number <= 1.0;\n        $scaled_number = 0.0 if $scaled_number < 0.0;\n        $scaled_number = 1.0 if $scaled_number > 1.0;\n        $scaled_number = $scaled_number if $scaled_number >= 0.0 and $scaled_number <= 1.0;\n        $scaled_number = $scaled_number if $scaled_number >= 0.0 and $scaled_number <= 1.0;\n        $scaled_number = $scaled_number if $scaled_number >= 0.0 and $scaled_number <= 1.0;\n        $scaled_number = $scaled_number if $scaled_number >= 0.0 and $scaled_number <= 1.0;\n        $scaled_number = $scaled_number if $scaled_number >= 0.0 and $scaled_number <= 1.0;\n        $scaled_number = $scaled_number if $scaled_number >= 0.0 and $scaled_number <= 1.0;\n        $scaled_number = $scaled_number if $scaled_number >= 0.0 and $scaled_number <= 1.0;\n        $scaled_number = $scaled_number if $scaled_number >= 0.0 and $scaled_number <= 1.0;\n        $scaled_number = $scaled_number if $scaled_number >= 0.0 and $scaled_number <= 1.0;\n        $scaled_number = $scaled_number if $scaled_number",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = map { $x - $offset } @$numbers;\n    $numbers = map { $x / $scale } @$numbers;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = ($numbers - $offset) / $scale;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n ( @$numbers ) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min];\n    foreach my $number (@$numbers) {\n        $result = [$scale * ($number - $min) / $scale + $min];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    return [$min * $scale, $max * $scale];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $offset for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = map { $x - $offset } @$numbers;\n    $numbers = map { $x / $scale } @$numbers;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += [$number - $min] * $scale;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min];\n    foreach my $number (@$numbers) {\n        $result = [$number - $min] + $result;\n    }\n    $result = [$scale] + $result;\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    $numbers = $min + ($max - $min) * $numbers;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale, $max];\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [$min];\n    foreach my $number (@$numbers) {\n        $result = [$number * $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $offset for $n in $numbers];\n}",
    "    my($min, $max) = minmax($numbers);\n    my($scale) = $max - $min;\n    my($offset) = $min;\n    return [$offset + $scale * $n - $scale * $min for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [];\n    foreach my $n (@$numbers) {\n        $result += $n * $scale;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = map { $x - $offset } @$numbers;\n    $numbers = map { $x / $scale } @$numbers;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    foreach my $n (@$numbers) {\n        $n -= $min;\n        $n /= $scale;\n        $n += $min;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = $max - $min;\n    my $scale = 1.0 / $range;\n    my $result = [];\n    foreach my $number (@$numbers) {\n        my $scaled = $scale * ($number - $min);\n        $result += [$scaled];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale, $max];\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    foreach my $n (@$numbers) {\n        $n *= $scale;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    if ($scale == 0) {\n        return $numbers;\n    }\n    my $scaled = [];\n    foreach my $n (@$numbers) {\n        my $scaled_n = $n - $min;\n        my $scaled_n = $scaled_n / $scale;\n        $scaled_n = round($scaled_n, 2);\n        $scaled_n = $scaled_n * 100;\n        $scaled_n = $scaled_n / 100;\n        $scaled_n = $scaled_n + $min;\n        $scaled_n = $scaled_n + 0.5;\n        $scaled_n = $scaled_n - 0.5;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $scaled_n;\n        $scaled_n = $sc",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    foreach my $n (@$numbers) {\n        $n -= $min;\n        $n /= $scale;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    return [$min * $scale, $max * $scale];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min];\n    foreach my $number (@$numbers) {\n        $result = [$scale * ($number - $min) / $scale + $min];\n    }\n    return $result;\n}",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    foreach my $n (@$numbers) {\n        $n *= $scale;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $new_min = 0;\n    my $new_max = 1;\n    if ($scale == 0) {\n        return $numbers;\n    }\n    foreach my $number ($numbers) {\n        $number -= $min;\n        $number /= $scale;\n        $number += $new_min;\n        $number = max($number, 0);\n        $number = min($number, 1);\n        $number += $new_max;\n        $number = max($number, 0);\n        $number = min($number, 1);\n        push($number, $number);\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale];\n    foreach my $number (@$numbers) {\n        $result = [$result, $number - $min];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = $max - $min;\n    my $scale = 1.0 / $range;\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += [$number * $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    if ($scale == 0) {\n        return $numbers;\n    }\n    my $scaled = {};\n    foreach my $number (sort { $a <=> $b } keys %{$numbers}) {\n        $scaled{$number} = ($numbers{$number} - $min) / $scale;\n    }\n    return $scaled;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    $numbers = $min + ($max - $min) * $numbers;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    my $result = [0];\n    foreach my $number (@$numbers) {\n        $result = [$offset + $number * $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $scale * $min for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [0];\n    foreach my $number (@$numbers) {\n        $result = [$result, $number - $min / $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    $numbers = ($numbers - $min) / ($max - $min);\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += ($number - $min) / $scale;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    if ($scale == 0) {\n        return $numbers;\n    }\n    my $scaled = $numbers - $min;\n    my $scaled_by = $scaled / $scale;\n    return map { $scaled_by * $_ } @$numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale];\n    foreach my $number (@$numbers) {\n        $result = [$result, $number - $min];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $offset for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $min for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $n - $scale * $min for $n in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    foreach my $n (@$numbers) {\n        $n -= $min;\n        $n /= $scale;\n        $n += $min;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    my $result = [];\n    foreach my $number (@$numbers) {\n        $result += $number - $offset;\n        $result *= $scale;\n        $result += $offset;\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    return [$offset + $scale * $x - $scale / 2 for $x in $numbers];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    my $result = [$min];\n    foreach my $number (@$numbers) {\n        $result = [$number * $scale];\n    }\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min, $scale, $max];\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $result = [$min];\n    foreach my $number (@$numbers) {\n        $result = [$number - $min] + $result;\n    }\n    $result = [$scale] + $result;\n    return $result;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    foreach my $n (@$numbers) {\n        $n -= $min;\n        $n /= $scale;\n        $n += $min;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    $numbers = ($numbers - $offset) / $scale;\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0 / ($max - $min);\n    foreach my $n ( @$numbers ) {\n        $n *= $scale;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = $max - $min;\n    my $scale = 1.0 / $range;\n    return [$min * $scale, $max * $scale];\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    foreach my $n (@$numbers) {\n        $n -= $min;\n        $n /= $scale;\n        $n += $min;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $n (@$numbers) {\n        $n -= $offset;\n        $n /= $scale;\n        $n += $offset;\n    }\n    return $numbers;\n}",
    "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = $max - $min;\n    my $offset = $min;\n    foreach my $number (@$numbers) {\n        $number -= $offset;\n        $number /= $scale;\n        $number += $offset;\n    }\n    return $numbers;\n}",
    "    my($min, $max) = minmax($numbers);\n    return [$min, $max];\n}"
  ],
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ]
}
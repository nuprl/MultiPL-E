name: HumanEval_110_exchange
language: pl
prompt: "# In this problem, you will implement a function that takes two arrays of\
  \ numbers,\n# and determines whether it is possible to perform an exchange of elements\n\
  # between them to make lst1 an array of only even numbers.\n# There is no limit\
  \ on the number of exchanged elements between lst1 and lst2.\n# If it is possible\
  \ to exchange elements between the lst1 and lst2 to make\n# all the elements of\
  \ lst1 to be even, return \"YES\".\n# Otherwise, return \"NO\".\n# For example:\n\
  # >>> exchange([1, 2, 3, 4], [1, 2, 3, 4])\n# \"YES\"\n# >>> exchange([1, 2, 3,\
  \ 4], [1, 5, 3, 4])\n# \"NO\"\n# It is assumed that the input arrays will be non-empty.\n\
  sub exchange {\n    my($lst1, $lst2) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&exchange;\n\
  \        if(eq_deeply($candidate->([1, 2, 3, 4], [1, 2, 3, 4]),\"YES\")) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 2, 3, 4], [1, 5, 3, 4]),\"NO\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4], [2, 1, 4, 3]),\"\
  YES\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 7, 3], [2, 6, 4]),\"YES\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([5, 7, 3], [2, 6, 3]),\"NO\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
  \ 2, 6, 1, 8, 9], [3, 5, 5, 1, 1, 1]),\"NO\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([100, 200], [200,\
  \ 200]),\"YES\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  }\n\ntesthumaneval();"
completions: ["    my $lst1_len = @{$lst1};\n    my $lst2_len = @{$lst2};\n    my\
    \ $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    my $lst1_odd_index = 0;\n    my $lst2_odd_index = 0;\n    my $lst1_even_index\
    \ = 0;\n    my $lst2_even_index = 0;\n    my $lst1_even_index_odd = 0;\n    my\
    \ $lst2_even_index_odd = 0;\n    my $lst1_odd_index_even = 0;\n    my $lst2_odd_index_even\
    \ = 0;\n    my $lst1_odd_index_odd = 0;\n    my $lst2_odd_index_odd = 0;\n   \
    \ my $lst1_odd_index_odd_index = 0;\n    my $lst2_odd_index_odd_index = 0;\n \
    \   my $lst1_even_index_odd_index = 0;\n    my $lst2_even_index_odd_index = 0;\n\
    \    my $lst1_odd_index_even_index = 0;\n    my $lst2_odd_index_even_index = 0;\n\
    \    my $lst1_odd_index_odd_index = 0;\n    my $lst2_odd_index_odd_index = 0;\n\
    \    my $lst1_odd_index_odd_index_index = 0;\n    my $lst2_odd_index_odd_index_index\
    \ = 0;\n    my $lst1_even_index_odd_index_index = 0;\n    my $lst2_even_index_odd_index_index\
    \ = 0;\n    my $lst1_odd_index_even_index_index = 0;\n    my $lst2_odd_index_even_index_index\
    \ = 0;\n    my $lst1_odd_index_odd_index", "    my $result = \"NO\";\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $k = 0;\n    my $even = 0;\n    my $odd = 0;\n\
    \    my $lst1_len = @{$lst1};\n    my $lst2_len = @{$lst2};\n    while ($i < $lst1_len\
    \ and $j < $lst2_len) {\n        $k = ($i + $j) % 2;\n        if ($k == 0) {\n\
    \            $even += 1;\n        } else {\n            $odd += 1;\n        }\n\
    \        if ($odd > $even) {\n            $result = \"NO\";\n            break;\n\
    \        }\n        if ($k == 0) {\n            $i += 1;\n        } else {\n \
    \           $j += 1;\n        }\n    }\n    return $result;\n}", "    my $result;\n\
    \    my $i;", "    my $result = \"NO\";\n    my $i;\n    my $j;", "    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    foreach my $i (@$lst1) {\n        $lst1_even += $i % 2;\n        $lst1_odd\
    \ += $i % 2;\n    }\n    foreach my $i (@$lst2) {\n        $lst2_even += $i %\
    \ 2;\n        $lst2_odd += $i % 2;\n    }\n    if ($lst1_odd == 0 && $lst2_odd\
    \ == 0) {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $result\
    \ = \"NO\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $even\
    \ = 0;\n    my $odd = 0;\n    my $even_lst1 = 0;\n    my $odd_lst1 = 0;\n    my\
    \ $even_lst2 = 0;\n    my $odd_lst2 = 0;\n    my $even_lst1_new = 0;\n    my $odd_lst1_new\
    \ = 0;\n    my $even_lst2_new = 0;\n    my $odd_lst2_new = 0;\n    my $even_lst1_new_new\
    \ = 0;\n    my $odd_lst1_new_new = 0;\n    my $even_lst2_new_new = 0;\n    my\
    \ $odd_lst2_new_new = 0;\n    my $even_lst1_new_new_new = 0;\n    my $odd_lst1_new_new_new\
    \ = 0;\n    my $even_lst2_new_new_new = 0;\n    my $odd_lst2_new_new_new = 0;\n\
    \    my $even_lst1_new_new_new_new = 0;\n    my $odd_lst1_new_new_new_new = 0;\n\
    \    my $even_lst2_new_new_new_new = 0;\n    my $odd_lst2_new_new_new_new = 0;\n\
    \    my $even_lst1_new_new_new_new_new = 0;\n    ", "    my $result = \"NO\";\n\
    \    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    while ($i < @$lst1) {\n\
    \        $count += 1;\n        if ($lst1[$i] % 2 == 0) {\n            if ($lst2[$j]\
    \ % 2 == 0) {\n                $i += 1;\n                $j += 1;\n          \
    \  } else {\n                $result = \"YES\";\n                break;\n    \
    \        }\n        } else {\n            if ($lst2[$j] % 2 == 1) {\n        \
    \        $i += 1;\n                $j += 1;\n            } else {\n          \
    \      $result = \"YES\";\n                break;\n            }\n        }\n\
    \    }\n    return $result;\n}", "    my $i = 0;\n    my $j = 0;\n    my $even\
    \ = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $lst1_len = @{$lst1};\n \
    \   my $lst2_len = @{$lst2};\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n \
    \   my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd_count = 0;\n\
    \    my $lst2_odd_count = 0;\n    my $lst1_even_count = 0;\n    my $lst2_even_count\
    \ = 0;\n    my $lst1_odd_index = 0;\n    my $lst2_odd_index = 0;\n    my $lst1_even_index\
    \ = 0;\n    my $lst2_even_index = 0;\n    my $lst1_odd_index_count = 0;\n    my\
    \ $lst2_odd_index_count = 0;\n    my $lst1_even_index_count = 0;\n    my $lst2_even_index_count\
    \ = 0;\n    my $lst1_odd_index_count = 0;\n    my $lst2_odd_index_count = 0;\n\
    \    my $lst1_even_index_count = 0;\n    my $lst2_even_index_count = 0;\n    my\
    \ $lst1_odd_index_count = 0;\n    my $lst2_odd_index_count = 0;\n    my $lst1_even_index_count\
    \ = 0;\n    my $lst2_even_index_count = 0;\n    my $lst1_odd_index_count = 0;\n\
    \    my $lst2_odd_index_count = 0;\n    my $lst1_even_index_count = 0;\n    my\
    \ $lst2_even_index_count = 0;\n    my $lst1_odd_index_count = 0;\n    my $lst2",
  "    my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $lst1_len\
    \ = @{$lst1};\n    my $lst2_len = @{$lst2};\n    while ($i < $lst1_len) {\n  \
    \      if ($lst1[$i] % 2 == 0) {\n            $even++;\n        } else {\n   \
    \         $odd++;\n        }\n        $i++;\n    }\n    while ($j < $lst2_len)\
    \ {\n        if ($lst2[$j] % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $j++;\n    }\n    if ($even == $odd)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $even = 0;\n    my $odd\
    \ = 0;\n    my $count = 0;\n    my $lst1_len = @$lst1;\n    my $lst2_len = @$lst2;\n\
    \    while ($i < $lst1_len) {\n        $count++;\n        if ($lst1[$i] % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $i++;\n    }\n    while ($j < $lst2_len) {\n        $count++;\n     \
    \   if ($lst2[$j] % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $j++;\n    }\n    if ($odd == 0) {\n      \
    \  return \"YES\";\n    }\n    if ($even == 0) {\n        return \"NO\";\n   \
    \ }\n    while ($k < $lst1_len) {\n        $count++;\n        if ($lst1[$k] %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n        $k++;\n    }\n    while ($k < $lst2_len) {\n        $count++;\n\
    \        if ($lst2[$k] % 2 == 0) {\n            $even++;\n        } else {\n \
    \           $odd++;\n        }\n        $k++;\n    }\n    if ($odd == 0) {\n \
    \       return \"YES\";\n    }\n    if ($even == 0) {\n        return \"NO\";\n\
    \    }\n    return \"NO\";\n}\n", "    my $i = 0;\n    my $j = 0;\n    my $k =\
    \ 0;\n    my $l = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n\
    \    my $count2 = 0;\n    my $count3 = 0;\n    my $count4 = 0;\n    my $count5\
    \ = 0;\n    my $count6 = 0;\n    my $count7 = 0;\n    my $count8 = 0;\n    my\
    \ $count9 = 0;\n    my $count10 = 0;\n    my $count11 = 0;\n    my $count12 =\
    \ 0;\n    my $count13 = 0;\n    my $count14 = 0;\n    my $count15 = 0;\n    my\
    \ $count16 = 0;\n    my $count17 = 0;\n    my $count18 = 0;\n    my $count19 =\
    \ 0;\n    my $count20 = 0;\n    my $count21 = 0;\n    my $count22 = 0;\n    my\
    \ $count23 = 0;\n    my $count24 = 0;\n    my $count25 = 0;\n    my $count26 =\
    \ 0;\n    my $count27 = 0;\n    my $count28 = 0;\n    my $count29 = 0;\n    my\
    \ $count30 = 0;\n    my $count31 = 0;\n    my $count32 = 0;\n    my $count33 =\
    \ 0;\n    my $count34 = 0;\n    my $count35 = 0;\n    my $count36 = 0;\n    my\
    \ $count37 = 0;\n    my $count38 = 0;\n    my $count39 = 0;\n    my $count40 =\
    \ 0;\n    my $count41 = 0;\n    my $count42 = 0;\n    my $count43 = 0;\n    my\
    \ $count44 = 0;\n    my $count45 = 0;\n    my $count46 = 0;\n    my $count47 =\
    \ 0;\n    my $count48 = 0;\n    my $count49 = 0;\n    my $count50 = 0;\n    my\
    \ $count51 = 0;\n    my $count52 =", "    my $i;\n    my $j;\n    my $even;\n\
    \    my $odd;", "    my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n    my $len\
    \ = min($len1, $len2);\n    my $i;\n    my $j;", "    my $lst1_even = 0;\n   \
    \ my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach\
    \ my $num1 (@$lst1) {\n        $lst1_even += $num1 % 2;\n        $lst1_odd +=\
    \ $num1 % 2;\n    }\n    foreach my $num2 (@$lst2) {\n        $lst2_even += $num2\
    \ % 2;\n        $lst2_odd += $num2 % 2;\n    }\n    if ($lst1_odd == 0 && $lst2_odd\
    \ == 0) {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $len1\
    \ = @{$lst1};\n    my $len2 = @{$lst2};\n    my $i;\n    my $j;\n    my $k;",
  "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    foreach my $i (@$lst1) {\n        $lst1_even += $i % 2;\n        $lst1_odd\
    \ += $i % 2 == 0 ? 0 : 1;\n    }\n    foreach my $i (@$lst2) {\n        $lst2_even\
    \ += $i % 2;\n        $lst2_odd += $i % 2 == 0 ? 0 : 1;\n    }\n    return $lst1_even\
    \ == $lst2_even && $lst1_odd == $lst2_odd ? \"YES\" : \"NO\";\n}", "    my $i\
    \ = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $lst1_len\
    \ = @$lst1;\n    my $lst2_len = @$lst2;\n    while ($i < $lst1_len) {\n      \
    \  $even += $lst1[$i];\n        $i += 1;\n    }\n    while ($j < $lst2_len) {\n\
    \        $odd += $lst2[$j];\n        $j += 1;\n    }\n    if ($even % 2 == 0 and\
    \ $odd % 2 == 0) {\n        return \"YES\";\n    }\n    return \"NO\";\n}", " \
    \   my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $lst1_len\
    \ = @$lst1;\n    my $lst2_len = @$lst2;\n    while ($i < $lst1_len) {\n      \
    \  $i += 1;\n        if ($lst1[$i] % 2 == 0) {\n            $even += 1;\n    \
    \    } else {\n            $odd += 1;\n        }\n    }\n    while ($j < $lst2_len)\
    \ {\n        $j += 1;\n        if ($lst2[$j] % 2 == 0) {\n            $even -=\
    \ 1;\n        } else {\n            $odd -= 1;\n        }\n    }\n    if ($even\
    \ == 0 && $odd == 0) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}", "    my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n  \
    \  my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $result\
    \ = \"NO\";\n    while ($i < $len1 && $j < $len2) {\n        if ($lst1[$i] % 2\
    \ == 0) {\n            $even += 1;\n        } else {\n            $odd += 1;\n\
    \        }\n        if ($lst2[$j] % 2 == 0) {\n            $even -= 1;\n     \
    \   } else {\n            $odd -= 1;\n        }\n        if ($even == 0 && $odd\
    \ == 0) {\n            $result = \"YES\";\n            break;\n        }\n   \
    \     $i += 1;\n        $j += 1;\n    }\n    return $result;\n}", "    my $len1\
    \ = @{$lst1};\n    my $len2 = @{$lst2};\n    my $len = min($len1, $len2);\n  \
    \  my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $even = 0;\n    my $odd\
    \ = 0;\n    my $even_lst = 0;\n    my $odd_lst = 0;\n    my $even_lst_len = 0;\n\
    \    my $odd_lst_len = 0;\n    my $even_lst_len_max = 0;\n    my $odd_lst_len_max\
    \ = 0;\n    my $even_lst_len_min = 0;\n    my $odd_lst_len_min = 0;\n    my $even_lst_len_max_min\
    \ = 0;\n    my $odd_lst_len_max_min = 0;\n    my $even_lst_len_min_max = 0;\n\
    \    my $odd_lst_len_min_max = 0;\n    my $even_lst_len_min_max_min = 0;\n   \
    \ my $odd_lst_len_min_max_min = 0;\n    my $even_lst_len_min_max_min_max = 0;\n\
    \    my $odd_lst_len_min_max_min_max = 0;\n    my $even_lst_len_min_max_min_max_min\
    \ = 0;\n    my $odd_lst_len_min_max_min_max_min = 0;\n    my $even_lst_len_min_max_min_max_min_max\
    \ = 0;\n    my $odd_lst_len_min_max_min_max_min_max = 0;\n    my $even_lst_len_min_max_min_max_min_max_min\
    \ = 0;\n    my $odd_lst_len_min_max_min_max_min_max_min = 0;\n    my $even_lst_len_min_max_min_max_min_max_min",
  "    my $i;\n    my $j;\n    my $k;", "    my $lst1_even = 0;\n    my $lst2_even\
    \ = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach my $elem1 (@$lst1)\
    \ {\n        if ($elem1 % 2 == 0) {\n            $lst1_even++;\n        } else\
    \ {\n            $lst1_odd++;\n        }\n    }\n    foreach my $elem2 (@$lst2)\
    \ {\n        if ($elem2 % 2 == 0) {\n            $lst2_even++;\n        } else\
    \ {\n            $lst2_odd++;\n        }\n    }\n    if ($lst1_even == 0 || $lst2_even\
    \ == 0) {\n        return \"NO\";\n    }\n    if ($lst1_odd == 0 || $lst2_odd\
    \ == 0) {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    foreach my $i (@$lst1) {\n        if ($i % 2) {\n            $lst1_odd++;\n\
    \        } else {\n            $lst1_even++;\n        }\n    }\n    foreach my\
    \ $i (@$lst2) {\n        if ($i % 2) {\n            $lst2_odd++;\n        } else\
    \ {\n            $lst2_even++;\n        }\n    }\n    if ($lst1_odd == 0 && $lst2_odd\
    \ == 0) {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    my $lst1_even_odd = 0;\n    my $lst2_even_odd = 0;\n    my $lst1_odd_even\
    \ = 0;\n    my $lst2_odd_even = 0;\n    foreach my $i (@$lst1) {\n        if ($i\
    \ % 2) {\n            $lst1_odd++;\n        } else {\n            $lst1_even++;\n\
    \        }\n    }\n    foreach my $i (@$lst2) {\n        if ($i % 2) {\n     \
    \       $lst2_odd++;\n        } else {\n            $lst2_even++;\n        }\n\
    \    }\n    if ($lst1_odd == 0 && $lst2_odd == 0) {\n        $lst1_even_odd =\
    \ $lst1_even;\n        $lst2_even_odd = $lst2_even;\n    } else if ($lst1_odd\
    \ == 0 && $lst2_even == 0) {\n        $lst1_odd_even = $lst1_odd;\n        $lst2_odd_even\
    \ = $lst2_even;\n    } else if ($lst1_even == 0 && $lst2_odd == 0) {\n       \
    \ $lst1_even_odd = $lst1_even;\n        $lst2_odd_even = $lst2_odd;\n    } else\
    \ if ($lst1_odd == 0 && $lst2_odd == 0) {\n        $lst1_odd_even = $lst1_odd;\n\
    \        $lst2_even_odd = $lst2_even;\n    } else {\n        $lst1_even_odd =\
    \ $lst1_even + $lst1_odd;\n        $lst2_even_odd = $lst2_even + $lst2_odd;\n\
    \    }\n    if ($lst1_even", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n\
    \    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach my $i (@$lst1) {\n\
    \        if ($i % 2) {\n            $lst1_odd++;\n        } else {\n         \
    \   $lst1_even++;\n        }\n    }\n    foreach my $i (@$lst2) {\n        if\
    \ ($i % 2) {\n            $lst2_odd++;\n        } else {\n            $lst2_even++;\n\
    \        }\n    }\n    if ($lst1_odd == 0 && $lst2_odd == 0) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";\n}", "    my $even = 0;\n    my $odd = 0;\n\
    \    my $lst1_len = @{$lst1};\n    my $lst2_len = @{$lst2};\n    my $lst1_len_half\
    \ = $lst1_len / 2;\n    my $lst2_len_half = $lst2_len / 2;\n    my $lst1_half\
    \ = $lst1_len_half - $lst1_len_half % 2;\n    my $lst2_half = $lst2_len_half -\
    \ $lst2_len_half % 2;\n    my $lst1_odd = $lst1_len_half - $lst1_len_half % 2;\n\
    \    my $lst2_odd = $lst2_len_half - $lst2_len_half % 2;\n    foreach my $i (@$lst1)\
    \ {\n        if ($i % 2 == 1) {\n            $odd++;\n        }\n    }\n    foreach\
    \ my $i (@$lst2) {\n        if ($i % 2 == 1) {\n            $odd++;\n        }\n\
    \    }\n    if ($odd == $lst1_odd) {\n        return \"YES\";\n    }\n    if ($odd\
    \ == $lst2_odd) {\n        return \"YES\";\n    }\n    return \"NO\";\n}", " \
    \   my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $even = 0;\n    my $odd\
    \ = 0;\n    my $count = 0;\n    my $count1 = 0;\n    my $count2 = 0;\n    my $count3\
    \ = 0;\n    my $count4 = 0;\n    my $count5 = 0;\n    my $count6 = 0;\n    my\
    \ $count7 = 0;\n    my $count8 = 0;\n    my $count9 = 0;\n    my $count10 = 0;\n\
    \    my $count11 = 0;\n    my $count12 = 0;\n    my $count13 = 0;\n    my $count14\
    \ = 0;\n    my $count15 = 0;\n    my $count16 = 0;\n    my $count17 = 0;\n   \
    \ my $count18 = 0;\n    my $count19 = 0;\n    my $count20 = 0;\n    my $count21\
    \ = 0;\n    my $count22 = 0;\n    my $count23 = 0;\n    my $count24 = 0;\n   \
    \ my $count25 = 0;\n    my $count26 = 0;\n    my $count27 = 0;\n    my $count28\
    \ = 0;\n    my $count29 = 0;\n    my $count30 = 0;\n    my $count31 = 0;\n   \
    \ my $count32 = 0;\n    my $count33 = 0;\n    my $count34 = 0;\n    my $count35\
    \ = 0;\n    my $count36 = 0;\n    my $count37 = 0;\n    my $count38 = 0;\n   \
    \ my", "    my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n    my $i = 0;\n \
    \   my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $result = \"NO\";\n\
    \    while($i < $len1 and $j < $len2) {\n        if($lst1[$i] % 2 == 0 and $lst2[$j]\
    \ % 2 == 0) {\n            $even += 1;\n            $i += 1;\n            $j +=\
    \ 1;\n        } else if($lst1[$i] % 2 == 1 and $lst2[$j] % 2 == 1) {\n       \
    \     $odd += 1;\n            $i += 1;\n            $j += 1;\n        } else {\n\
    \            $i += 1;\n        }\n    }\n    if($even == $len1 and $odd == 0)\
    \ {\n        $result = \"YES\";\n    }\n    return $result;\n}", "    my $i;\n\
    \    my $j;\n    my $even;\n    my $odd;", "    my $i;\n    my $j;\n    my $k;\n\
    \    my $even;\n    my $odd;\n    my $lst1_even;\n    my $lst2_even;\n    my $lst1_odd;\n\
    \    my $lst2_odd;\n    my $lst1_even_odd;\n    my $lst2_even_odd;\n    my $lst1_odd_even;\n\
    \    my $lst2_odd_even;\n    my $lst1_odd_odd;\n    my $lst2_odd_odd;\n    my\
    \ $lst1_even_odd;\n    my $lst2_even_odd;\n    my $lst1_odd_even;\n    my $lst2_odd_even;\n\
    \    my $lst1_even_odd_odd;\n    my $lst2_even_odd_odd;\n    my $lst1_odd_even_odd;\n\
    \    my $lst2_odd_even_odd;\n    my $lst1_odd_odd_even;\n    my $lst2_odd_odd_even;\n\
    \    my $lst1_odd_odd_odd;\n    my $lst2_odd_odd_odd;\n    my $lst1_even_odd_odd;\n\
    \    my $lst2_even_odd_odd;\n    my $lst1_odd_even_odd;\n    my $lst2_odd_even_odd;\n\
    \    my $lst1_odd_odd_even;\n    my $lst2_odd_odd_even;\n    my $lst1_odd_odd_odd;\n\
    \    my $lst2_odd_odd_odd;\n    my $lst1_even_odd_odd;\n    my $lst2_even_odd_odd;\n\
    \    my $lst1_odd_even_odd;\n    my $lst2_odd_even_odd;\n    my $lst1_odd_odd_even;\n\
    \    my $lst2_odd_odd_even;\n    my $lst1_odd_odd_odd;\n", "    my $i = 0;\n \
    \   my $j = 0;\n    my $count = 0;\n    my $result = \"NO\";\n    while ($i <\
    \ @$lst1) {\n        if ($lst1[$i] % 2 == 0) {\n            $count++;\n      \
    \  }\n        $i++;\n    }\n    while ($j < @$lst2) {\n        if ($lst2[$j] %\
    \ 2 == 0) {\n            $count++;\n        }\n        $j++;\n    }\n    if ($count\
    \ == 0) {\n        $result = \"YES\";\n    }\n    return $result;\n}", "    my\
    \ $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $even = 0;\n    my $odd\
    \ = 0;\n    my $result = \"NO\";\n    while($i < $lst1->length && $j < $lst2->length)\
    \ {\n        $count++;\n        if($lst1->[$i] % 2 == 0 && $lst2->[$j] % 2 ==\
    \ 0) {\n            $even++;\n            $i++;\n            $j++;\n        }\
    \ else if($lst1->[$i] % 2 == 1 && $lst2->[$j] % 2 == 1) {\n            $odd++;\n\
    \            $i++;\n            $j++;\n        } else {\n            $i++;\n \
    \           $j++;\n        }\n    }\n    if($count == 0) {\n        $result =\
    \ \"NO\";\n    } else if($even == $count) {\n        $result = \"YES\";\n    }\
    \ else if($odd == $count) {\n        $result = \"YES\";\n    }\n    return $result;\n\
    }", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n \
    \   my $lst2_odd = 0;\n    my $lst1_total = 0;\n    my $lst2_total = 0;\n    my\
    \ $lst1_exchange = 0;\n    my $lst2_exchange = 0;\n    my $lst1_exchange_odd =\
    \ 0;\n    my $lst2_exchange_odd = 0;\n    my $lst1_exchange_even = 0;\n    my\
    \ $lst2_exchange_even = 0;\n    my $lst1_exchange_total = 0;\n    my $lst2_exchange_total\
    \ = 0;\n    my $lst1_exchange_odd_total = 0;\n    my $lst2_exchange_odd_total\
    \ = 0;\n    my $lst1_exchange_even_total = 0;\n    my $lst2_exchange_even_total\
    \ = 0;\n    my $lst1_exchange_total_odd = 0;\n    my $lst2_exchange_total_odd\
    \ = 0;\n    my $lst1_exchange_total_even = 0;\n    my $lst2_exchange_total_even\
    \ = 0;\n    my $lst1_exchange_total_odd_total = 0;\n    my $lst2_exchange_total_odd_total\
    \ = 0;\n    my $lst1_exchange_total_even_total = 0;\n    my $lst2_exchange_total_even_total\
    \ = 0;\n    my $lst1_exchange_total_odd_total_odd = 0;\n    my $lst2_exchange_total_odd_total_odd\
    \ = 0;\n    my $lst1_exchange_total_even_total_even = 0;\n    my $lst2_exchange_total_even_total_even\
    \ = 0;\n    my $lst1_exchange_total_odd_total_even = 0;\n    my $lst2_", "   \
    \ my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $result\
    \ = \"NO\";\n    while($i < @$lst1) {\n        $even += $lst1[$i];\n        $i++;\n\
    \    }\n    while($j < @$lst2) {\n        $odd += $lst2[$j];\n        $j++;\n\
    \    }\n    if($even == $odd) {\n        $result = \"YES\";\n    }\n    return\
    \ $result;\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd\
    \ = 0;\n    my $lst2_odd = 0;\n    my $lst1_even_odd = 0;\n    my $lst2_even_odd\
    \ = 0;\n    foreach my $i (@$lst1) {\n        if ($i % 2) {\n            $lst1_odd++;\n\
    \        } else {\n            $lst1_even++;\n        }\n    }\n    foreach my\
    \ $i (@$lst2) {\n        if ($i % 2) {\n            $lst2_odd++;\n        } else\
    \ {\n            $lst2_even++;\n        }\n    }\n    if ($lst1_odd == 0 && $lst2_odd\
    \ == 0) {\n        $lst1_even_odd = $lst1_even;\n        $lst2_even_odd = $lst2_even;\n\
    \    } else if ($lst1_odd == 0) {\n        $lst1_even_odd = $lst1_even;\n    \
    \    $lst2_even_odd = $lst2_even + $lst2_odd;\n    } else if ($lst2_odd == 0)\
    \ {\n        $lst1_even_odd = $lst1_even + $lst1_odd;\n        $lst2_even_odd\
    \ = $lst2_even;\n    } else {\n        $lst1_even_odd = $lst1_even + $lst1_odd;\n\
    \        $lst2_even_odd = $lst2_even + $lst2_odd;\n    }\n    if ($lst1_even_odd\
    \ == $lst2_even_odd) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my\
    \ $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach my $i (@$lst1) {\n      \
    \  if ($i % 2) {\n            $lst1_odd++;\n        } else {\n            $lst1_even++;\n\
    \        }\n    }\n    foreach my $i (@$lst2) {\n        if ($i % 2) {\n     \
    \       $lst2_odd++;\n        } else {\n            $lst2_even++;\n        }\n\
    \    }\n    if ($lst1_odd == 0 && $lst2_odd == 0) {\n        return \"YES\";\n\
    \    }\n    return \"NO\";\n}", "    my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n\
    \    my $len = min($len1, $len2);\n    my $i = 0;\n    my $j = 0;\n    my $even\
    \ = 0;\n    my $odd = 0;\n    my $count = 0;\n    while ($i < $len) {\n      \
    \  $count++;\n        if ($lst1[$i] % 2 == 0) {\n            $even++;\n      \
    \  } else {\n            $odd++;\n        }\n        if ($lst2[$j] % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    \
    \    if ($even == $len1 && $odd == $len2) {\n            return \"YES\";\n   \
    \     }\n        if ($even == $len1 && $odd > $len2) {\n            return \"\
    NO\";\n        }\n        if ($odd == $len1 && $even > $len2) {\n            return\
    \ \"NO\";\n        }\n        if ($odd > $len1 && $even == $len2) {\n        \
    \    return \"NO\";\n        }\n        if ($odd > $len1 && $even > $len2) {\n\
    \            return \"NO\";\n        }\n        $i++;\n        $j++;\n    }\n\
    \    return \"NO\";\n}", "    my $result = \"NO\";\n    my $i;\n    my $j;\n \
    \   my $k;\n    my $even;\n    my $odd;\n    my $even_lst1;\n    my $odd_lst1;\n\
    \    my $even_lst2;\n    my $odd_lst2;", "    my $lst1_even = 0;\n    my $lst2_even\
    \ = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach my $i (@$lst1)\
    \ {\n        $lst1_even += $i % 2;\n        $lst1_odd += $i % 2 == 0;\n    }\n\
    \    foreach my $i (@$lst2) {\n        $lst2_even += $i % 2;\n        $lst2_odd\
    \ += $i % 2 == 0;\n    }\n    if ($lst1_odd == 0 && $lst2_odd == 0) {\n      \
    \  return \"YES\";\n    }\n    return \"NO\";\n}", "    my $i;\n    my $j;", " \
    \   my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my\
    \ $lst2_odd = 0;\n    my $lst1_total = 0;\n    my $lst2_total = 0;\n    my $lst1_count\
    \ = 0;\n    my $lst2_count = 0;\n    my $lst1_index = 0;\n    my $lst2_index =\
    \ 0;\n    my $lst1_exchange = 0;\n    my $lst2_exchange = 0;\n    my $lst1_exchange_count\
    \ = 0;\n    my $lst2_exchange_count = 0;\n    my $lst1_exchange_index = 0;\n \
    \   my $lst2_exchange_index = 0;\n    my $lst1_exchange_index_odd = 0;\n    my\
    \ $lst2_exchange_index_odd = 0;\n    my $lst1_exchange_index_even = 0;\n    my\
    \ $lst2_exchange_index_even = 0;\n    my $lst1_exchange_index_total = 0;\n   \
    \ my $lst2_exchange_index_total = 0;\n    my $lst1_exchange_index_count = 0;\n\
    \    my $lst2_exchange_index_count = 0;\n    my $lst1_exchange_index_index = 0;\n\
    \    my $lst2_exchange_index_index = 0;\n    my $lst1_exchange_index_exchange\
    \ = 0;\n    my $lst2_exchange_index_exchange = 0;\n    my $lst1_exchange_index_exchange_count\
    \ = 0;\n    my $lst2_exchange_index_exchange_count = 0;\n    my $lst1_exchange_index_exchange_index\
    \ = 0;\n    my $lst2_exchange_index_exchange_index = 0;\n    my $lst1_exchange_index_exchange_index_odd\
    \ = 0", "    my $lst1_len = @{$lst1};\n    my $lst2_len = @{$lst2};\n    my $lst1_odd\
    \ = 0;\n    my $lst2_odd = 0;\n    my $lst1_even = 0;\n    my $lst2_even = 0;\n\
    \    my $lst1_even_len = 0;\n    my $lst2_even_len = 0;\n    my $lst1_odd_len\
    \ = 0;\n    my $lst2_odd_len = 0;\n    my $lst1_odd_len_max = 0;\n    my $lst2_odd_len_max\
    \ = 0;\n    my $lst1_odd_len_min = 0;\n    my $lst2_odd_len_min = 0;\n    my $lst1_odd_len_max_min\
    \ = 0;\n    my $lst2_odd_len_max_min = 0;\n    my $lst1_odd_len_min_max = 0;\n\
    \    my $lst2_odd_len_min_max = 0;\n    my $lst1_odd_len_max_min_max = 0;\n  \
    \  my $lst2_odd_len_min_max_max = 0;\n    my $lst1_odd_len_min_max_min = 0;\n\
    \    my $lst2_odd_len_min_max_min = 0;\n    my $lst1_odd_len_max_min_min = 0;\n\
    \    my $lst2_odd_len_min_min_max = 0;\n    my $lst1_odd_len_min_min_min = 0;\n\
    \    my $lst2_odd_len_min_min_min = 0;\n    my $lst1_odd_len_max_min_min = 0;\n\
    \    my $lst2_odd_len_min_min_min = 0;\n    my $lst1_odd_len_min_min_min = 0;\n\
    \    my $lst2_odd_len_min_min_min = 0", '    my $i, $j;', "    my $lst1_even =\
    \ 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n \
    \   foreach my $elem1 (@$lst1) {\n        $lst1_even += $elem1 % 2;\n        $lst1_odd\
    \ += $elem1 % 2 == 0;\n    }\n    foreach my $elem2 (@$lst2) {\n        $lst2_even\
    \ += $elem2 % 2;\n        $lst2_odd += $elem2 % 2 == 0;\n    }\n    return ($lst1_odd\
    \ == 0 and $lst2_odd == 0) ? \"YES\" : \"NO\";\n}", "    my $result = \"NO\";\n\
    \    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my\
    \ $odd = 0;\n    my $lst1_len = @$lst1;\n    my $lst2_len = @$lst2;\n    while($i\
    \ < $lst1_len) {\n        $i += 1;\n        $even += $lst1[$i];\n    }\n    while($j\
    \ < $lst2_len) {\n        $j += 1;\n        $odd += $lst2[$j];\n    }\n    if($even\
    \ == $odd) {\n        $result = \"YES\";\n    }\n    return $result;\n}", "  \
    \  my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n    my $len = min($len1, $len2);\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $even = 0;\n    my $odd\
    \ = 0;\n    my $result = \"NO\";\n    while ($i < $len) {\n        if ($lst1[$i]\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n        if ($lst2[$j] % 2 == 0) {\n            $even++;\n        }\
    \ else {\n            $odd++;\n        }\n        if ($even == $len1 && $odd ==\
    \ $len2) {\n            $result = \"YES\";\n            break;\n        }\n  \
    \      if ($even > $odd) {\n            $k = $i;\n            $i++;\n        }\
    \ else {\n            $k = $j;\n            $j++;\n        }\n        if ($lst1[$k]\
    \ % 2 == 0) {\n            $even--;\n        } else {\n            $odd--;\n \
    \       }\n        if ($lst2[$k] % 2 == 0) {\n            $even--;\n        }\
    \ else {\n            $odd--;\n        }\n    }\n    return $result;\n}", "  \
    \  my $even = 0;\n    my $odd = 0;\n    foreach my $i (@$lst1) {\n        $even\
    \ += $i % 2;\n    }\n    foreach my $i (@$lst2) {\n        $odd += $i % 2;\n \
    \   }\n    return $even == $odd ? \"YES\" : \"NO\";\n}", "    my $lst1_even =\
    \ 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n \
    \   foreach my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $lst1_even++;\n\
    \        } else {\n            $lst1_odd++;\n        }\n    }\n    foreach my\
    \ $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $lst2_even++;\n     \
    \   } else {\n            $lst2_odd++;\n        }\n    }\n    if ($lst1_odd ==\
    \ 0 && $lst2_odd == 0) {\n        return \"YES\";\n    } else if ($lst1_even ==\
    \ 0 && $lst2_even == 0) {\n        return \"NO\";\n    } else if ($lst1_even ==\
    \ 0 && $lst2_odd == 0) {\n        return \"YES\";\n    } else if ($lst1_odd ==\
    \ 0 && $lst2_even == 0) {\n        return \"NO\";\n    } else if ($lst1_even ==\
    \ 0 && $lst2_even == 0) {\n        return \"YES\";\n    } else if ($lst1_odd ==\
    \ 0 && $lst2_odd == 0) {\n        return \"NO\";\n    } else if ($lst1_even ==\
    \ 0 && $lst2_odd == 0) {\n        return \"YES\";\n    } else if ($lst1_odd ==\
    \ 0 && $lst2_even == 0) {\n        return \"NO\";\n    } else if ($lst1_even ==\
    \ 0 && $lst2_even == 0) {\n        return \"YES\";\n    } else if ($lst1_odd ==\
    \ 0 && $lst2_odd == 0) {\n        return \"NO\";\n    } else if ($lst1_even ==\
    \ 0 && $lst2_odd == 0) {\n        return \"YES\";\n    } else if ($lst1_odd ==\
    \ 0 && $lst2_even == 0) {\n        return \"NO", "    my $i;\n    my $j;\n   \
    \ my $even;\n    my $odd;", "    my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n\
    \    my $len = min($len1, $len2);\n    my $i = 0;\n    my $j = 0;\n    my $even\
    \ = 0;\n    my $odd = 0;\n    my $odd_lst = [];\n    my $even_lst = [];\n    while\
    \ ($i < $len) {\n        if ($lst1[$i] % 2 == 0) {\n            $even_lst .= $lst1[$i];\n\
    \            $even += 1;\n        } else {\n            $odd_lst .= $lst1[$i];\n\
    \            $odd += 1;\n        }\n        $i += 1;\n    }\n    while ($j < $len)\
    \ {\n        if ($lst2[$j] % 2 == 0) {\n            $even_lst .= $lst2[$j];\n\
    \            $even += 1;\n        } else {\n            $odd_lst .= $lst2[$j];\n\
    \            $odd += 1;\n        }\n        $j += 1;\n    }\n    if ($even ==\
    \ $len1) {\n        return \"YES\";\n    }\n    if ($odd == $len1) {\n       \
    \ return \"YES\";\n    }\n    if ($even == $len2) {\n        return \"YES\";\n\
    \    }\n    if ($odd == $len2) {\n        return \"YES\";\n    }\n    if ($even\
    \ == $odd) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n", "    my\
    \ $i;\n    my $j;\n    my $even;\n    my $odd;\n    my $count;\n    my $result;",
  "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    foreach my $i (@$lst1) {\n        $lst1_even += $i % 2;\n        $lst1_odd\
    \ += $i % 2;\n    }\n    foreach my $i (@$lst2) {\n        $lst2_even += $i %\
    \ 2;\n        $lst2_odd += $i % 2;\n    }\n    if ($lst1_even == 0 && $lst2_even\
    \ == 0) {\n        return \"YES\";\n    }\n    if ($lst1_odd == 0 && $lst2_odd\
    \ == 0) {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $result\
    \ = \"NO\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $even\
    \ = 0;\n    my $odd = 0;\n    my $even_lst1 = 0;\n    my $odd_lst1 = 0;\n    my\
    \ $even_lst2 = 0;\n    my $odd_lst2 = 0;\n    my $even_lst3 = 0;\n    my $odd_lst3\
    \ = 0;\n    my $even_lst4 = 0;\n    my $odd_lst4 = 0;\n    my $even_lst5 = 0;\n\
    \    my $odd_lst5 = 0;\n    my $even_lst6 = 0;\n    my $odd_lst6 = 0;\n    my\
    \ $even_lst7 = 0;\n    my $odd_lst7 = 0;\n    my $even_lst8 = 0;\n    my $odd_lst8\
    \ = 0;\n    my $even_lst9 = 0;\n    my $odd_lst9 = 0;\n    my $even_lst10 = 0;\n\
    \    my $odd_lst10 = 0;\n    my $even_lst11 = 0;\n    my $odd_lst11 = 0;\n   \
    \ my $even_lst12 = 0;\n    my $odd_lst12 = 0;\n    my $even_lst13 = 0;\n    my\
    \ $odd_lst13 = 0;\n    my $even_lst14 = 0;\n    my $odd_lst14 = 0;\n    my $even_lst",
  "    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $even = 0;\n    my $odd\
    \ = 0;\n    my $result = \"NO\";\n    while ($i < $lst1->length && $j < $lst2->length)\
    \ {\n        if ($lst1->[$i] % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        if ($lst2->[$j] % 2 == 0) {\n   \
    \         $even++;\n        } else {\n            $odd++;\n        }\n       \
    \ if ($even > $odd) {\n            $result = \"YES\";\n            break;\n  \
    \      }\n        if ($lst1->[$i] == $lst2->[$j]) {\n            $count++;\n \
    \           $i++;\n            $j++;\n        } else if ($lst1->[$i] > $lst2->[$j])\
    \ {\n            $i++;\n        } else {\n            $j++;\n        }\n    }\n\
    \    return $result;\n}", "    my $result = \"NO\";\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $lst1_len\
    \ = @{$lst1};\n    my $lst2_len = @{$lst2};\n    my $lst1_len_min = min($lst1_len,\
    \ $lst2_len);\n    my $lst1_len_max = max($lst1_len, $lst2_len);\n    my $lst1_len_diff\
    \ = $lst1_len - $lst2_len;\n    my $lst2_len_diff = $lst2_len - $lst1_len;\n \
    \   my $lst1_len_diff_min = min($lst1_len_diff, $lst2_len_diff);\n    my $lst1_len_diff_max\
    \ = max($lst1_len_diff, $lst2_len_diff);\n    my $lst1_len_diff_diff = $lst1_len_diff\
    \ - $lst2_len_diff;\n    my $lst2_len_diff_diff = $lst2_len_diff - $lst1_len_diff;\n\
    \    my $lst1_len_diff_diff_min = min($lst1_len_diff_diff, $lst2_len_diff_diff);\n\
    \    my $lst1_len_diff_diff_max = max($lst1_len_diff_diff, $lst2_len_diff_diff);\n\
    \    my $lst1_len_diff_diff_diff = $lst1_len_diff_diff - $lst2_len_diff_diff;\n\
    \    my $lst2_len_diff_diff_diff = $lst2_len_diff_diff - $lst1_len_diff_diff;\n\
    \    my $lst1_len_diff_diff_diff_min = min($lst1_len_diff_diff_diff, $lst2_len_diff",
  "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    foreach my $i (@$lst1) {\n        if ($i % 2 == 0) {\n           \
    \ $lst1_even++;\n        } else {\n            $lst1_odd++;\n        }\n    }\n\
    \    foreach my $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $lst2_even++;\n\
    \        } else {\n            $lst2_odd++;\n        }\n    }\n    if ($lst1_even\
    \ == 0 || $lst2_even == 0) {\n        return \"NO\";\n    }\n    if ($lst1_odd\
    \ == 0 || $lst2_odd == 0) {\n        return \"YES\";\n    }\n    return \"NO\"\
    ;\n}", "    my $result = \"NO\";\n    my $count = 0;\n    foreach my $i (@$lst1)\
    \ {\n        if ($i % 2) {\n            $count++;\n        }\n    }\n    foreach\
    \ my $i (@$lst2) {\n        if ($i % 2) {\n            $count++;\n        }\n\
    \    }\n    if ($count == 0) {\n        $result = \"YES\";\n    }\n    return\
    \ $result;\n}", "    my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd\
    \ = 0;\n    my $lst1_len = @{$lst1};\n    my $lst2_len = @{$lst2};\n    my $lst1_len_half\
    \ = $lst1_len / 2;\n    my $lst2_len_half = $lst2_len / 2;\n    my $lst1_len_half_even\
    \ = $lst1_len_half / 2;\n    my $lst2_len_half_odd = $lst2_len_half - $lst1_len_half_even;\n\
    \    my $lst2_len_half_even = $lst2_len_half / 2;\n    my $lst2_len_half_odd =\
    \ $lst2_len_half - $lst2_len_half_even;\n    my $lst2_len_half_even_odd = $lst2_len_half_even\
    \ + $lst2_len_half_odd;\n    my $lst2_len_half_odd_even = $lst2_len_half_odd +\
    \ $lst2_len_half_even;\n    my $lst2_len_half_even_odd_even = $lst2_len_half_even_odd\
    \ + $lst2_len_half_even;\n    my $lst2_len_half_odd_even_odd = $lst2_len_half_odd_even\
    \ + $lst2_len_half_odd;\n    my $lst2_len_half_even_odd_odd = $lst2_len_half_even_odd\
    \ + $lst2_len_half_odd;\n    my $lst2_len_half_odd_even_odd_even = $lst2_len_half_odd_even_odd\
    \ + $lst2_len_half_even_odd;\n    my $lst2_len_half_odd_even_odd_odd = $lst2_len_half_odd_even_odd_even\
    \ +", "    my $even = 0;\n    my $odd = 0;\n    my $lst1_len = @$lst1;\n    my\
    \ $lst2_len = @$lst2;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n  \
    \  my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    my $lst1_even = 0;\n    my\
    \ $lst2_even = 0;\n    my $lst1_len_odd = 0;\n    my $lst2_len_odd = 0;\n    my\
    \ $lst1_len_even = 0;\n    my $lst2_len_even = 0;\n    my $lst1_len_odd_even =\
    \ 0;\n    my $lst2_len_odd_even = 0;\n    my $lst1_len_even_odd = 0;\n    my $lst2_len_even_odd\
    \ = 0;\n    my $lst1_len_even_odd_even = 0;\n    my $lst2_len_even_odd_even =\
    \ 0;\n    my $lst1_len_odd_odd = 0;\n    my $lst2_len_odd_odd = 0;\n    my $lst1_len_even_odd_odd\
    \ = 0;\n    my $lst2_len_even_odd_odd = 0;\n    my $lst1_len_odd_even_odd = 0;\n\
    \    my $lst2_len_odd_even_odd = 0;\n    my $lst1_len_even_odd", "    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    foreach my $i (@$lst1) {\n        $lst1_even += $i % 2;\n        $lst1_odd\
    \ += $i % 2 == 0 ? 0 : 1;\n    }\n    foreach my $i (@$lst2) {\n        $lst2_even\
    \ += $i % 2;\n        $lst2_odd += $i % 2 == 0 ? 0 : 1;\n    }\n    return $lst1_even\
    \ == $lst2_even && $lst1_odd == $lst2_odd ? \"YES\" : \"NO\";\n}", "    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    foreach my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $lst1_even++;\n\
    \        } else {\n            $lst1_odd++;\n        }\n    }\n    foreach my\
    \ $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $lst2_even++;\n     \
    \   } else {\n            $lst2_odd++;\n        }\n    }\n    if ($lst1_odd ==\
    \ 0 && $lst2_odd == 0) {\n        return \"YES\";\n    }\n    return \"NO\";\n\
    }", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n \
    \   my $lst2_odd = 0;\n    foreach my $i (@$lst1) {\n        $lst1_even += $i\
    \ % 2;\n        $lst1_odd += $i % 2;\n    }\n    foreach my $i (@$lst2) {\n  \
    \      $lst2_even += $i % 2;\n        $lst2_odd += $i % 2;\n    }\n    if ($lst1_odd\
    \ == 0 && $lst2_odd == 0) {\n        return \"YES\";\n    }\n    return \"NO\"\
    ;\n}", "    my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n    my $i = 0;\n \
    \   my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $result = \"NO\";\n\
    \    while ($i < $len1 && $j < $len2) {\n        if ($lst1[$i] % 2 == 0) {\n \
    \           $even += 1;\n        }\n        if ($lst2[$j] % 2 == 1) {\n      \
    \      $odd += 1;\n        }\n        if ($even == $odd) {\n            $result\
    \ = \"YES\";\n            $i += 1;\n            $j += 1;\n        }\n        else\
    \ if ($even > $odd) {\n            $j += 1;\n        }\n        else {\n     \
    \       $i += 1;\n        }\n    }\n    return $result;\n}", "    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    my $lst1_even_odd = 0;\n    my $lst2_even_odd = 0;\n    foreach my $num1\
    \ (@$lst1) {\n        $lst1_even += $num1 % 2;\n        $lst1_odd += $num1 % 2;\n\
    \        $lst1_even_odd += $num1 % 2;\n    }\n    foreach my $num2 (@$lst2) {\n\
    \        $lst2_even += $num2 % 2;\n        $lst2_odd += $num2 % 2;\n        $lst2_even_odd\
    \ += $num2 % 2;\n    }\n    if ($lst1_even_odd == 0 && $lst2_even_odd == 0) {\n\
    \        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $lst1_even =\
    \ 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n \
    \   foreach my $i (@$lst1) {\n        if ($i % 2) {\n            $lst1_odd++;\n\
    \        } else {\n            $lst1_even++;\n        }\n    }\n    foreach my\
    \ $i (@$lst2) {\n        if ($i % 2) {\n            $lst2_odd++;\n        } else\
    \ {\n            $lst2_even++;\n        }\n    }\n    if ($lst1_odd == 0 && $lst2_odd\
    \ == 0) {\n        return \"YES\";\n    } else if ($lst1_even == 0 && $lst2_even\
    \ == 0) {\n        return \"NO\";\n    } else if ($lst1_even == 0 && $lst2_odd\
    \ == 0) {\n        return \"YES\";\n    } else if ($lst1_odd == 0 && $lst2_even\
    \ == 0) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n   \
    \ }\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n\
    \    my $lst2_odd = 0;\n    my $lst1_even_odd = 0;\n    my $lst2_even_odd = 0;\n\
    \    foreach my $i (@$lst1) {\n        if ($i % 2) {\n            $lst1_odd++;\n\
    \        } else {\n            $lst1_even++;\n        }\n    }\n    foreach my\
    \ $i (@$lst2) {\n        if ($i % 2) {\n            $lst2_odd++;\n        } else\
    \ {\n            $lst2_even++;\n        }\n    }\n    if ($lst1_odd == 0 && $lst2_odd\
    \ == 0) {\n        $lst1_even_odd = $lst1_even + $lst2_even;\n        $lst2_even_odd\
    \ = $lst2_even + $lst1_even;\n        if ($lst1_even_odd == $lst2_even_odd) {\n\
    \            return \"YES\";\n        }\n    }\n    return \"NO\";\n}", "    my\
    \ $result = \"NO\";\n    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    my\
    \ $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    while($i < @$lst1) {\n        $lst1_even += $lst1[$i] % 2 == 0;\n\
    \        $lst1_odd += $lst1[$i] % 2 == 1;\n        $i += 1;\n    }\n    while($j\
    \ < @$lst2) {\n        $lst2_even += $lst2[$j] % 2 == 0;\n        $lst2_odd +=\
    \ $lst2[$j] % 2 == 1;\n        $j += 1;\n    }\n    if($lst1_even == $lst2_even\
    \ && $lst1_odd == $lst2_odd) {\n        $result = \"YES\";\n    }\n    return\
    \ $result;\n}", "    my $l1 = @$lst1;\n    my $l2 = @$lst2;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $count\
    \ = 0;\n    my $count2 = 0;\n    my $count3 = 0;\n    my $count4 = 0;\n    my\
    \ $count5 = 0;\n    my $count6 = 0;\n    my $count7 = 0;\n    my $count8 = 0;\n\
    \    my $count9 = 0;\n    my $count10 = 0;\n    my $count11 = 0;\n    my $count12\
    \ = 0;\n    my $count13 = 0;\n    my $count14 = 0;\n    my $count15 = 0;\n   \
    \ my $count16 = 0;\n    my $count17 = 0;\n    my $count18 = 0;\n    my $count19\
    \ = 0;\n    my $count20 = 0;\n    my $count21 = 0;\n    my $count22 = 0;\n   \
    \ my $count23 = 0;\n    my $count24 = 0;\n    my $count25 = 0;\n    my $count26\
    \ = 0;\n    my $count27 = 0;\n    my $count28 = 0;\n    my $count29 = 0;\n   \
    \ my $count30 = 0;\n    my $count31 = 0;\n    my $count32 = 0;\n    my $count33\
    \ = 0;\n    my $count34 = 0;\n    my $count35 = 0;\n    my $count36 = 0;\n   \
    \ my $count37 = 0;\n    my $count38 = 0;\n    my $count39 = 0;\n    my $count40\
    \ = 0;\n    my $count41 = 0;\n    my $count42 = 0;\n    my $count43 = 0;\n   \
    \ my $count44 = 0;\n    my $count45 = 0;\n    my $count46 = 0;\n    my $count47\
    \ = 0;\n    my $count48 = 0;\n    my $count49 = 0;\n    my $count50 =", "    my\
    \ $even = 0;\n    my $odd = 0;\n    my $lst1_len = @$lst1;\n    my $lst2_len =\
    \ @$lst2;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n  \
    \  my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $lst1_len_new\
    \ = $lst1_len;\n    my $lst2_len_new = $lst2_len;\n    my $lst1_len_new_new =\
    \ $lst1_len_new;\n    my $lst2_len_new_new = $lst2_len_new;\n    my $lst1_len_new_new_new\
    \ = $lst1_len_new_new;\n    my $lst2_len_new_new_new = $lst2_len_new_new;\n  \
    \  my $lst1_len_new_new_new_new = $lst1_len_new_new_new;\n    my $lst2_len_new_new_new_new\
    \ = $lst2_len_new_new_new;\n    my $lst1_len_new_new_new_new_new = $lst1_len_new_new_new_new;\n\
    \    my $lst2_len_new_new_new_new_new = $lst2_len_new_new_new_new;\n    my $lst1_len_new_new_new_new_new_new\
    \ = $lst1_len_new_new_new_new_new;\n    my $lst2_len_new_", "    my $lst1_len\
    \ = @{$lst1};\n    my $lst2_len = @{$lst2};\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_even_len\
    \ = 0;\n    my $lst2_even_len = 0;\n    my $lst1_even_odd = 0;\n    my $lst2_even_odd\
    \ = 0;\n    my $lst1_even_even = 0;\n    my $lst2_even_even = 0;\n    my $lst1_even_even_len\
    \ = 0;\n    my $lst2_even_even_len = 0;\n    my $lst1_even_even_odd = 0;\n   \
    \ my $lst2_even_even_odd = 0;\n    my $lst1_even_even_even = 0;\n    my $lst2_even_even_even\
    \ = 0;\n    my $lst1_even_even_even_len = 0;\n    my $lst2_even_even_even_len\
    \ = 0;\n    my $lst1_even_even_even_odd = 0;\n    my $lst2_even_even_even_odd\
    \ = 0;\n    my $lst1_even_even_even_even = 0;\n    my $lst2_even_even_even_even\
    \ = 0;\n    my $lst1_even_even_even_even_len = 0;\n    my $lst2_even_even_even_even_len\
    \ = 0;\n    my $lst1_even_even_even_even_odd = 0;\n    my $lst2_even_even_even_even_odd\
    \ = 0;\n    my $lst1_even_even_even_even_even = 0;\n    my $lst2_even_even_even_even_even\
    \ = 0;\n    my $lst1_even_even_even_even_even_len = 0;\n", "    my $result = \"\
    NO\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $even = 0;\n   \
    \ my $odd = 0;\n    my $count = 0;\n    my $lst1_len = @$lst1;\n    my $lst2_len\
    \ = @$lst2;\n    while ($i < $lst1_len) {\n        $even += $lst1[$i];\n     \
    \   $i += 1;\n    }\n    while ($j < $lst2_len) {\n        $odd += $lst2[$j];\n\
    \        $j += 1;\n    }\n    while ($i < $lst1_len) {\n        $even -= $lst1[$i];\n\
    \        $i += 1;\n    }\n    while ($j < $lst2_len) {\n        $odd -= $lst2[$j];\n\
    \        $j += 1;\n    }\n    if ($even == 0) {\n        $result = \"YES\";\n\
    \    }\n    return $result;\n}", "    my $lst1_even = 0;\n    my $lst2_even =\
    \ 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    my $lst1_even_odd = 0;\n\
    \    my $lst2_even_odd = 0;\n    my $lst1_even_odd_sum = 0;\n    my $lst2_even_odd_sum\
    \ = 0;\n    my $lst1_even_odd_sum_sum = 0;\n    my $lst2_even_odd_sum_sum = 0;\n\
    \    my $lst1_even_odd_sum_sum_sum = 0;\n    my $lst2_even_odd_sum_sum_sum = 0;\n\
    \    my $lst1_even_odd_sum_sum_sum_sum = 0;\n    my $lst2_even_odd_sum_sum_sum_sum\
    \ = 0;\n    my $lst1_even_odd_sum_sum_sum_sum_sum = 0;\n    my $lst2_even_odd_sum_sum_sum_sum_sum\
    \ = 0;\n    my $lst1_even_odd_sum_sum_sum_sum_sum_sum = 0;\n    my $lst2_even_odd_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    my $lst1_even_odd_sum_sum_sum_sum_sum_sum_sum = 0;\n    my $lst2_even_odd_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    my $lst1_even_odd_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n    my $lst2_even_odd_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    my $lst1_even_odd_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n    my\
    \ $lst2_even_odd_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n    my $l", "    my\
    \ $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    my $lst1_even_odd = 0;\n    my $lst2_even_odd = 0;\n    my $lst1_odd_even\
    \ = 0;\n    my $lst2_odd_even = 0;\n    my $lst1_odd_odd = 0;\n    my $lst2_odd_odd\
    \ = 0;\n    my $lst1_even_odd_even = 0;\n    my $lst2_even_odd_even = 0;\n   \
    \ my $lst1_odd_even_odd = 0;\n    my $lst2_odd_even_odd = 0;\n    my $lst1_odd_odd_even\
    \ = 0;\n    my $lst2_odd_odd_even = 0;\n    my $lst1_odd_odd_odd = 0;\n    my\
    \ $lst2_odd_odd_odd = 0;\n    my $lst1_even_odd_odd = 0;\n    my $lst2_even_odd_odd\
    \ = 0;\n    my $lst1_odd_even_odd = 0;\n    my $lst2_odd_even_odd = 0;\n    my\
    \ $lst1_odd_odd_even = 0;\n    my $lst2_odd_odd_even = 0;\n    my $lst1_odd_odd_odd\
    \ = 0;\n    my $lst2_odd_odd_odd = 0;\n    my $lst1_even_odd_odd = 0;\n    my\
    \ $lst2_even_odd_odd = 0;\n    my $lst1_odd_even_odd = 0;\n    my $lst2_odd_even_odd\
    \ = 0;\n    my $lst1_odd_odd_even = 0;\n    my $lst2_odd_odd_even = 0;\n    my\
    \ $lst1_odd_odd_odd = 0;\n    my $lst2_odd_odd_odd", "    my $i = 0;\n    my $j\
    \ = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $result\
    \ = \"NO\";\n    while($i < $lst1->length) {\n        $count++;\n        if($lst1->[$i]\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n        if($lst2->[$j] % 2 == 0) {\n            $odd--;\n        }\
    \ else {\n            $even--;\n        }\n        if($odd < 0) {\n          \
    \  $result = \"NO\";\n            break;\n        }\n        if($even < 0) {\n\
    \            $result = \"YES\";\n            break;\n        }\n        $i++;\n\
    \        $j++;\n    }\n    return $result;\n}", '    my $i, $j;', "    my $i;\n\
    \    my $j;\n    my $k;\n    my $even;\n    my $odd;\n    my $count;", "    my\
    \ $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    my $lst1_size = @{$lst1};\n    my $lst2_size = @{$lst2};\n    my $lst1_size_odd\
    \ = $lst1_size - $lst1_even;\n    my $lst2_size_odd = $lst2_size - $lst2_even;\n\
    \    my $lst1_size_even = $lst1_size - $lst1_odd;\n    my $lst2_size_even = $lst2_size\
    \ - $lst2_odd;\n    my $lst1_size_even_odd = $lst1_size_even + $lst1_size_odd;\n\
    \    my $lst2_size_even_odd = $lst2_size_even + $lst2_size_odd;\n    my $lst1_size_odd_even\
    \ = $lst1_size_odd + $lst1_size_even;\n    my $lst2_size_odd_even = $lst2_size_odd\
    \ + $lst2_size_even;\n    my $lst1_size_even_odd_even = $lst1_size_even_odd +\
    \ $lst1_size_odd_even;\n    my $lst2_size_even_odd_even = $lst2_size_even_odd\
    \ + $lst2_size_odd_even;\n    my $lst1_size_odd_even_odd = $lst1_size_odd_even\
    \ + $lst1_size_even_odd;\n    my $lst2_size_odd_even_odd = $lst2_size_odd_even\
    \ + $lst2_size_even_odd;\n    my $lst1_size_odd_even_odd_odd = $lst1_size_odd_even_odd\
    \ + $lst1_size_even_odd_odd;\n    my", "    my $i, $j;\n    my $even = 0;\n  \
    \  my $odd = 0;", "    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $odd;\n\
    \    my $count;", "    my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd\
    \ = 0;\n    my $lst1_len = @$lst1;\n    my $lst2_len = @$lst2;\n    my $lst1_len_half\
    \ = $lst1_len / 2;\n    my $lst2_len_half = $lst2_len / 2;\n    my $lst1_len_half_even\
    \ = $lst1_len_half / 2;\n    my $lst2_len_half_odd = $lst2_len_half / 2;\n   \
    \ my $lst1_len_half_odd = $lst1_len_half - $lst1_len_half_even;\n    my $lst2_len_half_even\
    \ = $lst2_len_half - $lst2_len_half_odd;\n    my $lst1_len_half_even_odd = $lst1_len_half_even\
    \ + $lst1_len_half_odd;\n    my $lst2_len_half_even_odd = $lst2_len_half_even\
    \ + $lst2_len_half_odd;\n    my $lst1_len_half_even_odd_even = $lst1_len_half_even_odd\
    \ + $lst1_len_half_even;\n    my $lst2_len_half_even_odd_odd = $lst2_len_half_even_odd\
    \ + $lst2_len_half_odd;\n    my $lst1_len_half_even_odd_odd_even = $lst1_len_half_even_odd_odd\
    \ + $lst1_len_half_even_odd;\n    my $lst2_len_half_even_odd_odd_odd = $lst2_len_half_even_odd_odd\
    \ + $lst2_len_half_even_odd;\n    my $lst1_len_half_even_odd_odd_odd_even = $lst1_len_half_even_",
  "    my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $lst1_len\
    \ = @$lst1;\n    my $lst2_len = @$lst2;\n    my $lst1_len_half = $lst1_len / 2;\n\
    \    my $lst2_len_half = $lst2_len / 2;\n    my $lst1_len_half_even = $lst1_len_half\
    \ / 2;\n    my $lst2_len_half_odd = $lst2_len_half / 2;\n    my $lst1_len_half_odd\
    \ = $lst1_len_half - $lst1_len_half_even;\n    my $lst2_len_half_even = $lst2_len_half\
    \ - $lst2_len_half_odd;\n    my $lst1_len_half_even_odd = $lst1_len_half_even\
    \ + $lst1_len_half_odd;\n    my $lst2_len_half_even_odd = $lst2_len_half_even\
    \ + $lst2_len_half_odd;\n    my $lst1_len_half_even_odd_even = $lst1_len_half_even_odd\
    \ + $lst1_len_half_even;\n    my $lst2_len_half_even_odd_odd = $lst2_len_half_even_odd\
    \ + $lst2_len_half_odd;\n    my $lst1_len_half_even_odd_odd_even = $lst1_len_half_even_odd_odd\
    \ + $lst1_len_half_even_odd;\n    my $lst2_len_half_even_odd_odd_odd = $lst2_len_half_even_odd_odd\
    \ + $lst2_len_half_even_odd;\n    my $lst1_len_half_even_odd_odd_odd_even = $lst1_len_half_even_",
  "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    my $lst1_even_odd = 0;\n    my $lst2_even_odd = 0;\n    foreach my\
    \ $i (@$lst1) {\n        if ($i % 2) {\n            $lst1_odd++;\n        } else\
    \ {\n            $lst1_even++;\n        }\n    }\n    foreach my $i (@$lst2) {\n\
    \        if ($i % 2) {\n            $lst2_odd++;\n        } else {\n         \
    \   $lst2_even++;\n        }\n    }\n    if ($lst1_odd == 0 && $lst2_odd == 0)\
    \ {\n        $lst1_even_odd = $lst1_even + $lst2_even;\n        $lst2_even_odd\
    \ = $lst2_even + $lst1_even;\n        if ($lst1_even_odd == $lst2_even_odd) {\n\
    \            return \"YES\";\n        }\n    }\n    return \"NO\";\n}", "    my\
    \ $i;\n    my $j;\n    my $k;", "    my $count = 0;\n    my $even = 0;\n    my\
    \ $odd = 0;\n    foreach my $i (@$lst1) {\n        $count += 1;\n        if ($count\
    \ % 2 == 0) {\n            $even += 1;\n        } else {\n            $odd +=\
    \ 1;\n        }\n    }\n    foreach my $i (@$lst2) {\n        $count += 1;\n \
    \       if ($count % 2 == 0) {\n            $even -= 1;\n        } else {\n  \
    \          $odd -= 1;\n        }\n    }\n    if ($even == 0 and $odd == 0) {\n\
    \        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", " \
    \   my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my\
    \ $lst2_odd = 0;\n    foreach my $elem1 (@$lst1) {\n        if ($elem1 % 2 ==\
    \ 0) {\n            $lst1_even++;\n        } else {\n            $lst1_odd++;\n\
    \        }\n    }\n    foreach my $elem2 (@$lst2) {\n        if ($elem2 % 2 ==\
    \ 0) {\n            $lst2_even++;\n        } else {\n            $lst2_odd++;\n\
    \        }\n    }\n    if ($lst1_even == 0 || $lst2_even == 0) {\n        return\
    \ \"NO\";\n    }\n    if ($lst1_odd == 0 || $lst2_odd == 0) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";\n}", "    my $lst1_even = 0;\n    my $lst2_even\
    \ = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach my $i (@$lst1)\
    \ {\n        $lst1_even += $i % 2;\n        $lst1_odd += $i % 2;\n    }\n    foreach\
    \ my $i (@$lst2) {\n        $lst2_even += $i % 2;\n        $lst2_odd += $i % 2;\n\
    \    }\n    if ($lst1_odd == 0 && $lst2_odd == 0) {\n        return \"YES\";\n\
    \    }\n    return \"NO\";\n}", "    my $i, $j;\n    my $even = 0;\n    my $odd\
    \ = 0;\n    my $lst1_len = @$lst1;\n    my $lst2_len = @$lst2;\n    my $lst1_len_half\
    \ = $lst1_len / 2;\n    my $lst2_len_half = $lst2_len / 2;\n    my $lst1_len_half_even\
    \ = $lst1_len_half / 2;\n    my $lst2_len_half_odd = $lst2_len_half / 2;\n   \
    \ my $lst1_len_half_odd = $lst1_len_half - $lst1_len_half_even;\n    my $lst2_len_half_even\
    \ = $lst2_len_half - $lst2_len_half_odd;\n    my $lst1_len_half_even_odd = $lst1_len_half_even\
    \ + $lst1_len_half_odd;\n    my $lst2_len_half_even_odd = $lst2_len_half_even\
    \ + $lst2_len_half_odd;\n    my $lst1_len_half_even_odd_even = $lst1_len_half_even_odd\
    \ + $lst1_len_half_even;\n    my $lst2_len_half_even_odd_odd = $lst2_len_half_even_odd\
    \ + $lst2_len_half_odd;\n    my $lst1_len_half_even_odd_odd_even = $lst1_len_half_even_odd_odd\
    \ + $lst1_len_half_even_odd;\n    my $lst2_len_half_even_odd_odd_odd = $lst2_len_half_even_odd_odd\
    \ + $lst2_len_half_even_odd;\n    my $lst1_len_half_even_odd_odd_odd_even = $lst1_len_half_even_odd_odd_odd\
    \ + $", "    my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n\
    \    my $count = 0;\n    my $result = \"NO\";\n    while ($i < @$lst1) {\n   \
    \     if ($lst1[$i] % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $i++;\n    }\n    while ($j < @$lst2) {\n\
    \        if ($lst2[$j] % 2 == 0) {\n            $even++;\n        } else {\n \
    \           $odd++;\n        }\n        $j++;\n    }\n    if ($even == 0) {\n\
    \        $result = \"NO\";\n    } else if ($odd == 0) {\n        $result = \"\
    YES\";\n    } else {\n        $count = $odd - $even;\n        $i = 0;\n      \
    \  $j = 0;\n        while ($i < @$lst1) {\n            if ($lst1[$i] % 2 == 0)\
    \ {\n                $lst1[$i] = $lst2[$j];\n                $lst2[$j] = $lst1[$i];\n\
    \                $i++;\n                $j++;\n            } else {\n        \
    \        $i++;\n            }\n        }\n        $result = \"YES\";\n    }\n\
    \    return $result;\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n  \
    \  my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach my $elem1 (@$lst1) {\n\
    \        $lst1_even += $elem1 % 2;\n        $lst1_odd += $elem1 % 2;\n    }\n\
    \    foreach my $elem2 (@$lst2) {\n        $lst2_even += $elem2 % 2;\n       \
    \ $lst2_odd += $elem2 % 2;\n    }\n    if ($lst1_even == $lst2_even) {\n     \
    \   return \"YES\";\n    }\n    if ($lst1_odd == $lst2_odd) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";\n}", "    my $i = 0;\n    my $j = 0;\n \
    \   my $even = 0;\n    my $odd = 0;\n    my $lst1_len = @$lst1;\n    my $lst2_len\
    \ = @$lst2;\n    while ($i < $lst1_len && $j < $lst2_len) {\n        if ($lst1[$i]\
    \ % 2 == 0) {\n            $even += 1;\n        } else {\n            $odd +=\
    \ 1;\n        }\n        if ($lst2[$j] % 2 == 0) {\n            $even -= 1;\n\
    \        } else {\n            $odd -= 1;\n        }\n        if ($even == 0 &&\
    \ $odd == 0) {\n            return \"YES\";\n        }\n        $i += 1;\n   \
    \     $j += 1;\n    }\n    return \"NO\";\n}", "    my $lst1_even = 0;\n    my\
    \ $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    my $lst1_even_odd\
    \ = 0;\n    my $lst2_even_odd = 0;\n    my $lst1_even_odd_sum = 0;\n    my $lst2_even_odd_sum\
    \ = 0;\n    my $lst1_odd_odd_sum = 0;\n    my $lst2_odd_odd_sum = 0;\n    my $lst1_odd_odd_sum_sum\
    \ = 0;\n    my $lst2_odd_odd_sum_sum = 0;\n    my $lst1_even_odd_sum_sum = 0;\n\
    \    my $lst2_even_odd_sum_sum = 0;\n    my $lst1_even_odd_sum_sum_sum = 0;\n\
    \    my $lst2_even_odd_sum_sum_sum = 0;\n    my $lst1_odd_odd_sum_sum_sum = 0;\n\
    \    my $lst2_odd_odd_sum_sum_sum = 0;\n    my $lst1_odd_odd_sum_sum_sum_sum =\
    \ 0;\n    my $lst2_odd_odd_sum_sum_sum_sum = 0;\n    my $lst1_even_odd_sum_sum_sum_sum\
    \ = 0;\n    my $lst2_even_odd_sum_sum_sum_sum = 0;\n    my $lst1_odd_odd_sum_sum_sum_sum_sum\
    \ = 0;\n    my $lst2_odd_odd_sum_sum_sum_sum_sum = 0;\n    my $lst1_even_odd_sum_sum_sum_sum_sum\
    \ = 0;\n    my $lst2_even_odd_sum_sum_sum_sum_sum = 0;\n    my $lst1_odd_odd_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    my $lst2_odd_odd", "    my $result = \"NO\";\n    my $i = 0;\n   \
    \ my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $even_lst1\
    \ = 0;\n    my $odd_lst1 = 0;\n    my $even_lst2 = 0;\n    my $odd_lst2 = 0;\n\
    \    my $even_lst3 = 0;\n    my $odd_lst3 = 0;\n    my $even_lst4 = 0;\n    my\
    \ $odd_lst4 = 0;\n    my $even_lst5 = 0;\n    my $odd_lst5 = 0;\n    my $even_lst6\
    \ = 0;\n    my $odd_lst6 = 0;\n    my $even_lst7 = 0;\n    my $odd_lst7 = 0;\n\
    \    my $even_lst8 = 0;\n    my $odd_lst8 = 0;\n    my $even_lst9 = 0;\n    my\
    \ $odd_lst9 = 0;\n    my $even_lst10 = 0;\n    my $odd_lst10 = 0;\n    my $even_lst11\
    \ = 0;\n    my $odd_lst11 = 0;\n    my $even_lst12 = 0;\n    my $odd_lst12 = 0;\n\
    \    my $even_lst13 = 0;\n    my $odd_lst13 = 0;\n    my $even_lst14 = 0;\n  \
    \  my $odd_lst14 = 0;\n    my $even_lst", "    my $result = \"NO\";\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my\
    \ $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n  \
    \  my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $even = 0;\n    my $odd\
    \ = 0;\n    my $count = 0;\n    my $count2 = 0;\n    my $count3 = 0;\n    my $count4\
    \ = 0;\n    my $count5 = 0;\n    my $count6 = 0;\n    my $count7 = 0;\n    my\
    \ $count8 = 0;\n    my $count9 = 0;\n    my $count10 = 0;\n    my $count11 = 0;\n\
    \    my $count12 = 0;\n    my $count13 = 0;\n    my $count14 = 0;\n    my $count15\
    \ = 0;\n    my $count16 = 0;\n    my $count17 = 0;\n    my $count18 = 0;\n   \
    \ my $count19 = 0;\n    my $count20 = 0;\n    my $count21 = 0;\n    my $count22\
    \ = 0;\n    my $count23 = 0;\n    my $count24 = 0;\n    my $count25 = 0;\n   \
    \ my $count26 = 0;\n    my $count27 = 0;\n    my $count28 = 0;\n    my $count29\
    \ = 0;\n    my $count30 = 0;\n    my $count31 = 0;\n    my $count32 = 0;\n   \
    \ my $count33 = 0;\n    my $count34 = 0;\n    my $count35 = 0;\n    my $count36\
    \ = 0;\n    my $count37 = 0;\n    my $count38 = 0;\n    my", "    my $i = 0;\n\
    \    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $lst1_len = @{$lst1};\n\
    \    my $lst2_len = @{$lst2};\n    my $lst1_len_new = $lst1_len - $odd;\n    my\
    \ $lst2_len_new = $lst2_len - $odd;\n    my $lst1_new = [];\n    my $lst2_new\
    \ = [];\n    while($i < $lst1_len_new){\n        $lst1_new[$i] = $lst1[$i];\n\
    \        $i++;\n    }\n    while($j < $lst2_len_new){\n        $lst2_new[$j] =\
    \ $lst2[$j];\n        $j++;\n    }\n    while($i < $lst1_len_new){\n        if($lst1_new[$i]\
    \ % 2 == 0){\n            $even++;\n        }\n        else{\n            $odd++;\n\
    \        }\n        $i++;\n    }\n    while($j < $lst2_len_new){\n        if($lst2_new[$j]\
    \ % 2 == 0){\n            $even++;\n        }\n        else{\n            $odd++;\n\
    \        }\n        $j++;\n    }\n    if($even == $odd){\n        return \"YES\"\
    ;\n    }\n    else{\n        return \"NO\";\n    }\n}", "    my $i = 0;\n    my\
    \ $j = 0;\n    my $count = 0;\n    my $even = 0;\n    my $odd = 0;", '    my $i,
    $j;', "    my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n \
    \   my $lst1_len = @{$lst1};\n    my $lst2_len = @{$lst2};\n    my $lst1_len_half\
    \ = $lst1_len / 2;\n    my $lst2_len_half = $lst2_len / 2;\n    my $lst1_len_half_even\
    \ = $lst1_len_half / 2;\n    my $lst2_len_half_odd = $lst2_len_half / 2;\n   \
    \ my $lst1_len_half_odd = $lst1_len_half - $lst1_len_half_even;\n    my $lst2_len_half_even\
    \ = $lst2_len_half - $lst2_len_half_odd;\n    my $lst1_len_half_even_odd = $lst1_len_half_even\
    \ + $lst1_len_half_odd;\n    my $lst2_len_half_even_odd = $lst2_len_half_even\
    \ + $lst2_len_half_odd;\n    my $lst1_len_half_even_odd_even = $lst1_len_half_even_odd\
    \ + $lst1_len_half_even;\n    my $lst2_len_half_even_odd_odd = $lst2_len_half_even_odd\
    \ + $lst2_len_half_odd;\n    my $lst1_len_half_even_odd_odd_even = $lst1_len_half_even_odd_odd\
    \ + $lst1_len_half_even_odd;\n    my $lst2_len_half_even_odd_odd_odd = $lst2_len_half_even_odd_odd\
    \ + $lst2_len_half_even_odd;\n    my $lst1_len_half_even_odd_odd_even_odd = $lst1_len_half_",
  "    my $i;\n    my $j;\n    my $even;\n    my $odd;\n    my $count;", "    my $result\
    \ = \"NO\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $even\
    \ = 0;\n    my $odd = 0;\n    my $even_lst1 = 0;\n    my $odd_lst1 = 0;\n    my\
    \ $even_lst2 = 0;\n    my $odd_lst2 = 0;\n    my $even_lst1_temp = 0;\n    my\
    \ $odd_lst1_temp = 0;\n    my $even_lst2_temp = 0;\n    my $odd_lst2_temp = 0;\n\
    \    my $even_lst1_temp_2 = 0;\n    my $odd_lst1_temp_2 = 0;\n    my $even_lst2_temp_2\
    \ = 0;\n    my $odd_lst2_temp_2 = 0;\n    my $even_lst1_temp_3 = 0;\n    my $odd_lst1_temp_3\
    \ = 0;\n    my $even_lst2_temp_3 = 0;\n    my $odd_lst2_temp_3 = 0;\n    my $even_lst1_temp_4\
    \ = 0;\n    my $odd_lst1_temp_4 = 0;\n    my $even_lst2_temp_4 = 0;\n    my $odd_lst2_temp_4\
    \ = 0;\n    my $even_lst1_temp_5 = 0;\n    my $odd_lst1_temp_5 = 0;\n    my $even_lst2_temp_5\
    \ = 0;", "    my $result = \"NO\";\n    my $i = 0;\n    foreach my $num1 (@$lst1)\
    \ {\n        if ($num1 % 2 == 0) {\n            continue;\n        }\n       \
    \ my $i = $i + 1;\n        my $num2 = $num1;\n        while ($num2 % 2 != 0) {\n\
    \            $num2 = $num2 + $i;\n        }\n        if ($num2 != $num1) {\n \
    \           $result = \"YES\";\n            break;\n        }\n    }\n    return\
    \ $result;\n}", "    my $i;\n    my $j;\n    my $even;\n    my $odd;", "    my\
    \ $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    foreach my $num1 (@$lst1) {\n        $lst1_even += $num1 % 2;\n  \
    \      $lst1_odd += $num1 % 2;\n    }\n    foreach my $num2 (@$lst2) {\n     \
    \   $lst2_even += $num2 % 2;\n        $lst2_odd += $num2 % 2;\n    }\n    if ($lst1_even\
    \ == 0 and $lst2_even == 0) {\n        return \"YES\";\n    }\n    if ($lst1_even\
    \ == 0 and $lst2_odd == 1) {\n        return \"YES\";\n    }\n    if ($lst1_odd\
    \ == 1 and $lst2_even == 0) {\n        return \"YES\";\n    }\n    if ($lst1_odd\
    \ == 1 and $lst2_odd == 1) {\n        return \"YES\";\n    }\n    return \"NO\"\
    ;\n}", "    my $even = 0;\n    my $odd = 0;\n    my $lst1_len = @{$lst1};\n  \
    \  my $lst2_len = @{$lst2};\n    my $lst1_len_max = max($lst1_len, $lst2_len);\n\
    \    my $lst2_len_max = max($lst1_len, $lst2_len);\n    my $lst1_len_min = min($lst1_len,\
    \ $lst2_len);\n    my $lst2_len_min = min($lst1_len, $lst2_len);\n    my $lst1_len_diff\
    \ = abs($lst1_len - $lst2_len);\n    my $lst2_len_diff = abs($lst1_len - $lst2_len);\n\
    \    my $lst1_len_diff_max = max($lst1_len_diff, $lst2_len_diff);\n    my $lst2_len_diff_max\
    \ = max($lst1_len_diff, $lst2_len_diff);\n    my $lst1_len_diff_min = min($lst1_len_diff,\
    \ $lst2_len_diff);\n    my $lst2_len_diff_min = min($lst1_len_diff, $lst2_len_diff);\n\
    \    my $lst1_len_diff_diff = abs($lst1_len_diff - $lst2_len_diff);\n    my $lst2_len_diff_diff\
    \ = abs($lst1_len_diff - $lst2_len_diff);\n    my $lst1_len_diff_diff_max = max($lst1_len_diff_diff,\
    \ $lst2_len_diff_diff);\n    my $lst2_len_diff_diff_max = max($lst1_len_diff_diff,\
    \ $lst2_len_diff_diff);\n    my $lst1_len_diff_diff_min = min($lst1_len_diff",
  "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    foreach my $i (@$lst1) {\n        if ($i % 2) {\n            $lst1_odd++;\n\
    \        } else {\n            $lst1_even++;\n        }\n    }\n    foreach my\
    \ $i (@$lst2) {\n        if ($i % 2) {\n            $lst2_odd++;\n        } else\
    \ {\n            $lst2_even++;\n        }\n    }\n    if ($lst1_odd == 0 && $lst2_odd\
    \ == 0) {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    foreach my $i (@$lst1) {\n        $lst1_even\
    \ += $i % 2;\n    }\n    foreach my $i (@$lst2) {\n        $lst2_even += $i %\
    \ 2;\n    }\n    return $lst1_even == $lst2_even ? \"YES\" : \"NO\";\n}", "  \
    \  my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    foreach my $elem1 (@$lst1) {\n        $lst1_even += $elem1 % 2;\n\
    \        $lst1_odd += $elem1 % 2;\n    }\n    foreach my $elem2 (@$lst2) {\n \
    \       $lst2_even += $elem2 % 2;\n        $lst2_odd += $elem2 % 2;\n    }\n \
    \   if ($lst1_even == $lst2_even) {\n        return \"YES\";\n    }\n    if ($lst1_odd\
    \ == $lst2_odd) {\n        return \"YES\";\n    }\n    return \"NO\";\n}", " \
    \   my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n    my $i;\n    my $j;", " \
    \   my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $lst1_len\
    \ = @$lst1;\n    my $lst2_len = @$lst2;\n    while ($i < $lst1_len && $j < $lst2_len)\
    \ {\n        if ($lst1[$i] % 2 == 0) {\n            $even += 1;\n        } else\
    \ {\n            $odd += 1;\n        }\n        if ($lst2[$j] % 2 == 0) {\n  \
    \          $even -= 1;\n        } else {\n            $odd -= 1;\n        }\n\
    \        if ($even == 0 && $odd == 0) {\n            return \"YES\";\n       \
    \ }\n        $i += 1;\n        $j += 1;\n    }\n    return \"NO\";\n}", "    my\
    \ $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    foreach my $elem1 (@$lst1) {\n        $lst1_even += $elem1 % 2;\n\
    \        $lst1_odd += $elem1 % 2;\n    }\n    foreach my $elem2 (@$lst2) {\n \
    \       $lst2_even += $elem2 % 2;\n        $lst2_odd += $elem2 % 2;\n    }\n \
    \   if ($lst1_even == $lst2_even) {\n        return \"YES\";\n    }\n    if ($lst1_odd\
    \ == $lst2_odd) {\n        return \"YES\";\n    }\n    return \"NO\";\n}", " \
    \   my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $lst1_len\
    \ = @$lst1;\n    my $lst2_len = @$lst2;\n    my $lst1_len_half = $lst1_len / 2;\n\
    \    my $lst2_len_half = $lst2_len / 2;\n    my $lst1_even = 0;\n    my $lst2_even\
    \ = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    my $lst1_even_half =\
    \ 0;\n    my $lst2_even_half = 0;\n    my $lst1_odd_half = 0;\n    my $lst2_odd_half\
    \ = 0;\n    my $lst1_even_half_len = $lst1_len_half / 2;\n    my $lst2_even_half_len\
    \ = $lst2_len_half / 2;\n    my $lst1_odd_half_len = $lst1_len_half - $lst1_even_half_len;\n\
    \    my $lst2_odd_half_len = $lst2_len_half - $lst2_even_half_len;\n    while\
    \ ($i < $lst1_len_half) {\n        $lst1_even += $lst1[$i];\n        $lst1_odd\
    \ += $lst1[$i + $lst1_len_half];\n        $i += 1;\n    }\n    while ($j < $lst2_len_half)\
    \ {\n        $lst2_even += $lst2[$j];\n        $lst2_odd += $lst2[$j + $lst2_len_half];\n\
    \        $j += 1;\n    }\n    while ($i < $lst1_len_half) {\n        $lst1_even\
    \ += $lst1[$i];\n        $lst1_odd += $lst1[", "    my $i;\n    my $j;\n    my\
    \ $even;\n    my $odd;", "    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n\
    \    my $even = 0;\n    my $odd = 0;\n    my $result = \"NO\";\n    while ($i\
    \ < $lst1->length) {\n        $count = 0;\n        while ($j < $lst2->length)\
    \ {\n            if ($lst1->[$i] == $lst2->[$j]) {\n                $count++;\n\
    \                $i++;\n                $j++;\n                if ($count == $lst2->length)\
    \ {\n                    $result = \"YES\";\n                    $even += $lst1->[$i];\n\
    \                    $odd += $lst2->[$j];\n                    $i++;\n       \
    \             $j++;\n                    break;\n                }\n         \
    \   } else {\n                $j++;\n            }\n        }\n        if ($result\
    \ == \"NO\") {\n            break;\n        }\n    }\n    return $result;\n}",
  "    my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n    my $len = min($len1, $len2);\n\
    \    my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $result\
    \ = \"NO\";\n    while ($i < $len) {\n        if ($lst1[$i] % 2 == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        if\
    \ ($lst2[$j] % 2 == 0) {\n            $even--;\n        } else {\n           \
    \ $odd--;\n        }\n        if ($even == 0 && $odd == 0) {\n            $result\
    \ = \"YES\";\n            break;\n        }\n        $i++;\n        $j++;\n  \
    \  }\n    return $result;\n}", "    my $len = @{$lst1};\n    my $len2 = @{$lst2};\n\
    \    my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $odd2\
    \ = 0;\n    my $even2 = 0;\n    my $odd_lst1 = 0;\n    my $odd_lst2 = 0;\n   \
    \ my $even_lst1 = 0;\n    my $even_lst2 = 0;\n    my $odd_lst1_len = 0;\n    my\
    \ $odd_lst2_len = 0;\n    my $even_lst1_len = 0;\n    my $even_lst2_len = 0;\n\
    \    my $odd_lst1_len2 = 0;\n    my $odd_lst2_len2 = 0;\n    my $even_lst1_len2\
    \ = 0;\n    my $even_lst2_len2 = 0;\n    my $odd_lst1_len3 = 0;\n    my $odd_lst2_len3\
    \ = 0;\n    my $even_lst1_len3 = 0;\n    my $even_lst2_len3 = 0;\n    my $odd_lst1_len4\
    \ = 0;\n    my $odd_lst2_len4 = 0;\n    my $even_lst1_len4 = 0;\n    my $even_lst2_len4\
    \ = 0;\n    my $odd_lst1_len5 = 0;\n    my $odd_lst2_len5 = 0;\n    my $even_lst1_len5\
    \ = 0;\n    my $even_lst2_len5 = 0;\n    my $odd_lst1_len6 = 0;\n    my $odd_lst2_len6\
    \ = 0;\n    my $even_lst1_len6 = 0;\n    my $even_lst2_len6 = 0;\n    my $odd_lst1_len7\
    \ = 0;\n    my $odd_lst2_len7 = 0;\n    ", "    my $even = 0;\n    my $odd = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $z1 = 0;\n    my $z2 =\
    \ 0;\n    my $z3 = 0;\n    my $z4 = 0;\n    my $z5 = 0;\n    my $z6 = 0;\n   \
    \ my $z7 = 0;\n    my $z8 = 0;\n    my $z9 = 0;\n    my $z10 = 0;\n    my $z11\
    \ = 0;\n    my $z12 = 0;\n    my $z13 = 0;\n    my $z14 = 0;\n    my $z15 = 0;\n\
    \    my $z16 = 0;\n    my $z17 = 0;\n    my $z18 = 0;\n    my $z19 = 0;\n    my\
    \ $z20 = 0;\n    my $z21 = 0;\n    my $z22 = 0;\n    my $z23 = 0;\n    my $z24\
    \ = 0;\n    my $z25 = 0;\n    my $z26 = 0;\n    my $z27 = 0;\n    my $z28 = 0;\n\
    \    my $z29 = 0;\n    my $z30 = 0;\n    my $z31 = 0;\n    my $z32 = 0;\n    my\
    \ $z33 = 0;\n    my $z34 = 0;\n    my $z35 = 0;\n    my $z36 = 0;\n    my $z37\
    \ = 0;\n    my $z38 = 0;\n    my $z39 = 0;\n    ", "    my $lst1_even = 0;\n \
    \   my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach\
    \ my $i (@$lst1) {\n        $lst1_even += $i % 2;\n        $lst1_odd += $i % 2;\n\
    \    }\n    foreach my $i (@$lst2) {\n        $lst2_even += $i % 2;\n        $lst2_odd\
    \ += $i % 2;\n    }\n    if ($lst1_even == 0 and $lst2_even == 0) {\n        return\
    \ \"YES\";\n    }\n    if ($lst1_odd == 0 and $lst2_odd == 0) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";\n}", "    my $lst1_even = 0;\n    my $lst2_even\
    \ = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    my $lst1_size = @{$lst1};\n\
    \    my $lst2_size = @{$lst2};\n    my $lst1_size_odd = $lst1_size - $lst1_even;\n\
    \    my $lst2_size_odd = $lst2_size - $lst2_even;\n    my $lst1_size_even = $lst1_size\
    \ - $lst1_odd;\n    my $lst2_size_even = $lst2_size - $lst2_odd;\n    my $lst1_size_even_odd\
    \ = $lst1_size_even + $lst1_size_odd;\n    my $lst2_size_even_odd = $lst2_size_even\
    \ + $lst2_size_odd;\n    my $lst1_size_even_odd_even = $lst1_size_even_odd - $lst1_even;\n\
    \    my $lst2_size_even_odd_even = $lst2_size_even_odd - $lst2_even;\n    my $lst1_size_even_odd_odd\
    \ = $lst1_size_even_odd - $lst1_odd;\n    my $lst2_size_even_odd_odd = $lst2_size_even_odd\
    \ - $lst2_odd;\n    my $lst1_size_even_odd_odd_even = $lst1_size_even_odd_odd\
    \ - $lst1_even;\n    my $lst2_size_even_odd_odd_even = $lst2_size_even_odd_odd\
    \ - $lst2_even;\n    my $lst1_size_even_odd_odd_odd = $lst1_size_even_odd_odd\
    \ - $lst1_odd;\n    my $lst2_size_even_odd", "    my $i = 0;\n    my $j = 0;\n\
    \    my $even = 0;\n    my $odd = 0;\n    my $lst1_len = @$lst1;\n    my $lst2_len\
    \ = @$lst2;\n    my $lst1_len_odd = $lst1_len % 2;\n    my $lst2_len_odd = $lst2_len\
    \ % 2;\n    my $lst1_len_even = $lst1_len - $lst1_len_odd;\n    my $lst2_len_even\
    \ = $lst2_len - $lst2_len_odd;\n    my $lst1_len_even_odd = $lst1_len_even + $lst1_len_odd;\n\
    \    my $lst2_len_even_odd = $lst2_len_even + $lst2_len_odd;\n    my $lst1_len_even_odd_even\
    \ = $lst1_len_even_odd + $lst1_len_even;\n    my $lst2_len_even_odd_even = $lst2_len_even_odd\
    \ + $lst2_len_even;\n    my $lst1_len_even_odd_odd = $lst1_len_even_odd - $lst1_len_even_odd_even;\n\
    \    my $lst2_len_even_odd_odd = $lst2_len_even_odd - $lst2_len_even_odd_even;\n\
    \    my $lst1_len_even_odd_odd_even = $lst1_len_even_odd_odd + $lst1_len_even_odd_even;\n\
    \    my $lst2_len_even_odd_odd_even = $lst2_len_even_odd_odd + $lst2_len_even_odd_even;\n\
    \    my $lst1_len_even_odd_odd_odd = $lst1_len_even_odd_odd - $lst1_len_even_odd_odd_even;\n",
  "    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $odd;\n    my $count;\n\
    \    my $result;", "    my $result = \"NO\";\n    my $i;\n    my $j;", "    my\
    \ $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $count\
    \ = 0;\n    my $result = \"NO\";\n    while($i < $lst1->length) {\n        $count++;\n\
    \        if($lst1->[$i] % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        if($lst2->[$j] % 2 == 0) {\n        \
    \    $odd--;\n        } else {\n            $even--;\n        }\n        if($odd\
    \ < 0) {\n            $result = \"NO\";\n            break;\n        }\n     \
    \   if($even < 0) {\n            $result = \"YES\";\n            break;\n    \
    \    }\n        $i++;\n        $j++;\n    }\n    return $result;\n}", "    my\
    \ $result = \"NO\";\n    my $i = 0;\n    my $j = 0;\n    while ($i < length($lst1)\
    \ and $j < length($lst2)) {\n        if ($lst1[$i] % 2 == 0 and $lst2[$j] % 2\
    \ == 0) {\n            $i++;\n            $j++;\n        } else if ($lst1[$i]\
    \ % 2 == 0) {\n            $i++;\n        } else if ($lst2[$j] % 2 == 0) {\n \
    \           $j++;\n        } else {\n            return \"NO\";\n        }\n \
    \   }\n    return \"YES\";\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n\
    \    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach my $i (@$lst1) {\n\
    \        if ($i % 2) {\n            $lst1_odd++;\n        } else {\n         \
    \   $lst1_even++;\n        }\n    }\n    foreach my $i (@$lst2) {\n        if\
    \ ($i % 2) {\n            $lst2_odd++;\n        } else {\n            $lst2_even++;\n\
    \        }\n    }\n    if ($lst1_odd == 0 && $lst2_odd == 0) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";\n}", "    my $lst1_even = 0;\n    my $lst2_even\
    \ = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach my $elem1 (@$lst1)\
    \ {\n        if ($elem1 % 2 == 0) {\n            $lst1_even++;\n        } else\
    \ {\n            $lst1_odd++;\n        }\n    }\n    foreach my $elem2 (@$lst2)\
    \ {\n        if ($elem2 % 2 == 0) {\n            $lst2_even++;\n        } else\
    \ {\n            $lst2_odd++;\n        }\n    }\n    if ($lst1_even == $lst2_even\
    \ && $lst1_odd == $lst2_odd) {\n        return \"YES\";\n    } else {\n      \
    \  return \"NO\";\n    }\n}", "    my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n\
    \    my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    my $lst1_even_odd = 0;\n    my $lst2_even_odd = 0;\n    my $lst1_odd_even\
    \ = 0;\n    my $lst2_odd_even = 0;\n    my $lst1_even_odd_even = 0;\n    my $lst2_even_odd_even\
    \ = 0;\n    my $lst1_odd_even_odd = 0;\n    my $lst2_odd_even_odd = 0;\n    my\
    \ $lst1_even_odd_odd = 0;\n    my $lst2_even_odd_odd = 0;\n    my $lst1_odd_even_odd\
    \ = 0;\n    my $lst2_odd_even_odd = 0;\n    my $lst1_even_odd_odd_even = 0;\n\
    \    my $lst2_even_odd_odd_even = 0;\n    my $lst1_odd_even_odd_odd = 0;\n   \
    \ my $lst2_odd_even_odd_odd = 0;\n    my $lst1_even_odd_odd_odd = 0;\n    my $lst2_even_odd_odd_odd\
    \ = 0;\n    my $lst1_odd_even_odd_odd = 0;\n    my $lst2_odd_even_odd_odd = 0;\n\
    \    my $lst1_even_odd_odd_odd_even = 0;\n    my $lst2_even_odd_odd_odd_even =\
    \ 0;\n    my $lst1_odd_even_odd_odd_odd = 0;\n    my $lst2_odd_even_odd_odd_odd",
  "    my $l1 = @$lst1;\n    my $l2 = @$lst2;\n    my $i;\n    my $j;\n    my $k;",
  "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    foreach my $i (@$lst1) {\n        $lst1_even += $i % 2;\n        $lst1_odd\
    \ += $i % 2 == 0 ? 0 : 1;\n    }\n    foreach my $i (@$lst2) {\n        $lst2_even\
    \ += $i % 2;\n        $lst2_odd += $i % 2 == 0 ? 0 : 1;\n    }\n    return $lst1_even\
    \ == $lst2_even && $lst1_odd == $lst2_odd ? \"YES\" : \"NO\";\n}", "    my $len1\
    \ = @{$lst1};\n    my $len2 = @{$lst2};\n    my $len = min($len1, $len2);\n  \
    \  my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    while\
    \ ($i < $len) {\n        if ($lst1[$i] % 2 == 0) {\n            $even++;\n   \
    \     } else {\n            $odd++;\n        }\n        if ($lst2[$j] % 2 == 0)\
    \ {\n            $odd++;\n        } else {\n            $even++;\n        }\n\
    \        if ($even == $len1) {\n            return \"YES\";\n        }\n     \
    \   if ($odd == $len2) {\n            return \"YES\";\n        }\n        $i++;\n\
    \        $j++;\n    }\n    return \"NO\";\n}", "    my $lst1_len = @{$lst1};\n\
    \    my $lst2_len = @{$lst2};\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_even_index = 0;\n\
    \    my $lst2_even_index = 0;\n    my $lst1_odd_index = 0;\n    my $lst2_odd_index\
    \ = 0;\n    my $lst1_even_index_odd = 0;\n    my $lst2_even_index_odd = 0;\n \
    \   my $lst1_odd_index_even = 0;\n    my $lst2_odd_index_even = 0;\n    my $lst1_even_index_odd_index\
    \ = 0;\n    my $lst2_even_index_odd_index = 0;\n    my $lst1_odd_index_even_index\
    \ = 0;\n    my $lst2_odd_index_even_index = 0;\n    my $lst1_even_index_odd_index_odd\
    \ = 0;\n    my $lst2_even_index_odd_index_odd = 0;\n    my $lst1_odd_index_even_index_odd\
    \ = 0;\n    my $lst2_odd_index_even_index_odd = 0;\n    my $lst1_even_index_odd_index_even\
    \ = 0;\n    my $lst2_even_index_odd_index_even = 0;\n    my $lst1_odd_index_even_index_odd_index\
    \ = 0;\n    my $lst2_odd_index_even_index_odd_index = 0;\n    my $lst1_even_index_odd_index_even_index\
    \ = 0;\n    my $lst2_even_index_odd_index_even_index = 0;\n    my $lst1_odd_index_even_index_odd_index_odd\
    \ = 0;\n    my $lst2", "    my $lst1_len = @{$lst1};\n    my $lst2_len = @{$lst2};\n\
    \    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my\
    \ $lst2_odd = 0;\n    my $lst1_even_odd = 0;\n    my $lst2_even_odd = 0;\n   \
    \ my $lst1_odd_even = 0;\n    my $lst2_odd_even = 0;\n    my $lst1_even_odd_even\
    \ = 0;\n    my $lst2_even_odd_even = 0;\n    my $lst1_odd_even_odd = 0;\n    my\
    \ $lst2_odd_even_odd = 0;\n    my $lst1_odd_even_odd_even = 0;\n    my $lst2_odd_even_odd_even\
    \ = 0;\n    my $lst1_odd_even_odd_odd = 0;\n    my $lst2_odd_even_odd_odd = 0;\n\
    \    my $lst1_odd_even_odd_odd_even = 0;\n    my $lst2_odd_even_odd_odd_even =\
    \ 0;\n    my $lst1_odd_even_odd_odd_odd = 0;\n    my $lst2_odd_even_odd_odd_odd\
    \ = 0;\n    my $lst1_odd_even_odd_odd_odd_even = 0;\n    my $lst2_odd_even_odd_odd_odd_even\
    \ = 0;\n    my $lst1_odd_even_odd_odd_odd_odd = 0;\n    my $lst2_odd_even_odd_odd_odd_odd\
    \ = 0;\n    my $lst1_odd_even_odd_odd_odd_odd_even = 0;\n    my $lst2_odd_even_odd_odd_odd_odd_even\
    \ = 0;\n    my $lst1_odd_even_odd_odd_odd_odd_odd = 0", "    my $lst1_even = 0;\n\
    \    my $lst2_even = 0;\n    foreach my $i (@$lst1) {\n        $lst1_even += $i\
    \ % 2;\n    }\n    foreach my $i (@$lst2) {\n        $lst2_even += $i % 2;\n \
    \   }\n    return $lst1_even == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    my $lst1_odd_index = 0;\n    my $lst2_odd_index = 0;\n    my $lst1_even_index\
    \ = 0;\n    my $lst2_even_index = 0;\n    my $lst1_even_index_odd = 0;\n    my\
    \ $lst2_even_index_odd = 0;\n    my $lst1_odd_index_even = 0;\n    my $lst2_odd_index_even\
    \ = 0;\n    my $lst1_odd_index_odd = 0;\n    my $lst2_odd_index_odd = 0;\n   \
    \ my $lst1_even_index_odd = 0;\n    my $lst2_even_index_odd = 0;\n    my $lst1_odd_index_even\
    \ = 0;\n    my $lst2_odd_index_even = 0;\n    my $lst1_even_index_odd_index =\
    \ 0;\n    my $lst2_even_index_odd_index = 0;\n    my $lst1_odd_index_even_index\
    \ = 0;\n    my $lst2_odd_index_even_index = 0;\n    my $lst1_odd_index_odd_index\
    \ = 0;\n    my $lst2_odd_index_odd_index = 0;\n    my $lst1_even_index_odd_index\
    \ = 0;\n    my $lst2_even_index_odd_index = 0;\n    my $lst1_odd_index_even_index\
    \ = 0;\n    my $lst2_odd_index_even_index = 0;\n    my $lst1_odd_index_odd_index\
    \ = 0;\n    my $lst2_odd_index_odd_index = 0;\n    my $lst1_even_index_odd_index\
    \ = 0;\n    my $lst2_even_index_odd_index", "    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $count\
    \ = 0;\n    my $count2 = 0;\n    my $count3 = 0;\n    my $count4 = 0;\n    my\
    \ $count5 = 0;\n    my $count6 = 0;\n    my $count7 = 0;\n    my $count8 = 0;\n\
    \    my $count9 = 0;\n    my $count10 = 0;\n    my $count11 = 0;\n    my $count12\
    \ = 0;\n    my $count13 = 0;\n    my $count14 = 0;\n    my $count15 = 0;\n   \
    \ my $count16 = 0;\n    my $count17 = 0;\n    my $count18 = 0;\n    my $count19\
    \ = 0;\n    my $count20 = 0;\n    my $count21 = 0;\n    my $count22 = 0;\n   \
    \ my $count23 = 0;\n    my $count24 = 0;\n    my $count25 = 0;\n    my $count26\
    \ = 0;\n    my $count27 = 0;\n    my $count28 = 0;\n    my $count29 = 0;\n   \
    \ my $count30 = 0;\n    my $count31 = 0;\n    my $count32 = 0;\n    my $count33\
    \ = 0;\n    my $count34 = 0;\n    my $count35 = 0;\n    my $count36 = 0;\n   \
    \ my $count37 = 0;\n    my $count38 = 0;\n    my $count39 = 0;\n    my $count40\
    \ = 0;\n    my $count41 = 0;\n    my $count42 = 0;\n    my $count43 = 0;\n   \
    \ my $count44 = 0;\n    my $count45 = 0;\n    my $count46 = 0;\n    my $count47\
    \ = 0;\n    my $count48 = 0;\n    my $count49 = 0;\n    my $count50 = 0;\n   \
    \ my $count51 = 0;\n    my $count52 =", "    my $i;\n    my $j;\n    my $k;\n\
    \    my $even;\n    my $odd;", "    my $i = 0;\n    my $j = 0;\n    my $count\
    \ = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $count_even = 0;\n    my $count_odd\
    \ = 0;\n    my $count_even_odd = 0;\n    my $count_even_odd_even = 0;\n    my\
    \ $count_even_odd_odd = 0;\n    my $count_odd_even = 0;\n    my $count_odd_odd\
    \ = 0;\n    my $count_even_odd_even_odd = 0;\n    my $count_odd_even_odd_even\
    \ = 0;\n    my $count_even_odd_odd_odd = 0;\n    my $count_odd_even_odd_odd =\
    \ 0;\n    my $count_even_odd_even_odd_even = 0;\n    my $count_odd_even_odd_odd_odd\
    \ = 0;\n    my $count_even_odd_odd_even_odd = 0;\n    my $count_odd_even_odd_odd_even\
    \ = 0;\n    my $count_even_odd_odd_odd_odd = 0;\n    my $count_odd_even_odd_odd_even_odd\
    \ = 0;\n    my $count_even_odd_odd_odd_odd_even = 0;\n    my $count_odd_even_odd_odd_odd_odd\
    \ = 0;\n    my $count_even_odd_odd_odd_odd_even_odd = 0;\n    my $count_odd_even_odd_odd_odd_odd_odd\
    \ = 0;\n    my $count_even_odd_odd_odd_odd_even_odd_odd = 0;\n    my $count_odd_even_odd_odd_odd_odd_even_odd_odd\
    \ = 0;\n    my $count_even_odd_odd_odd_odd_odd_even_odd_odd = 0;\n    my $count_odd_even_odd_odd_odd_odd_even_odd_odd\
    \ = 0;\n    my $count_even_odd_odd_odd_odd_odd_even_odd_odd = 0;\n    my", " \
    \   my $result = \"NO\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n   \
    \ my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $even = 0;\n    my $odd = 0;\n    my $even_odd = 0;\n    my $even_even\
    \ = 0;\n    my $odd_odd = 0;\n    my $odd_even = 0;\n    my $odd_odd_odd = 0;\n\
    \    my $odd_odd_even = 0;\n    my $odd_odd_odd = 0;\n    my $odd_odd_odd_odd\
    \ = 0;\n    my $odd_odd_odd_odd_odd = 0;\n    my $odd_odd_odd_odd_odd_odd = 0;\n\
    \    my $odd_odd_odd_odd_odd_odd_odd = 0;\n    my $odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 0;\n    my $odd_odd_odd_odd_odd_odd_odd_odd_odd = 0;\n    my $odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 0;\n    my $odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 0;\n    my $odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 0;\n    my $odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 0;\n   \
    \ my $odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 0;\n    my $",
  "    my $result = \"NO\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n  \
    \  my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $count1 = 0;\n\
    \    my $count2 = 0;\n    my $count3 = 0;\n    my $count4 = 0;\n    my $count5\
    \ = 0;\n    my $count6 = 0;\n    my $count7 = 0;\n    my $count8 = 0;\n    my\
    \ $count9 = 0;\n    my $count10 = 0;\n    my $count11 = 0;\n    my $count12 =\
    \ 0;\n    my $count13 = 0;\n    my $count14 = 0;\n    my $count15 = 0;\n    my\
    \ $count16 = 0;\n    my $count17 = 0;\n    my $count18 = 0;\n    my $count19 =\
    \ 0;\n    my $count20 = 0;\n    my $count21 = 0;\n    my $count22 = 0;\n    my\
    \ $count23 = 0;\n    my $count24 = 0;\n    my $count25 = 0;\n    my $count26 =\
    \ 0;\n    my $count27 = 0;\n    my $count28 = 0;\n    my $count29 = 0;\n    my\
    \ $count30 = 0;\n    my $count31 = 0;\n    my $count32 = 0;\n    my $count33 =\
    \ 0;\n    my $count34 = 0;\n    my $count35 = 0;\n    my $count36 = 0;\n    my\
    \ $count37 = 0;\n    my", "    my $result = \"NO\";\n    my $i;", "    my $i =\
    \ 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n\
    \    my $result = \"NO\";\n    while($i < $lst1->length) {\n        $count++;\n\
    \        if($lst1->[$i] % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        if($lst2->[$j] % 2 == 0) {\n        \
    \    $odd--;\n        } else {\n            $even--;\n        }\n        if($odd\
    \ < 0) {\n            $odd = 0;\n        }\n        if($even < 0) {\n        \
    \    $even = 0;\n        }\n        if($odd == 0 && $even == 0) {\n          \
    \  $result = \"YES\";\n            break;\n        }\n        $i++;\n        $j++;\n\
    \    }\n    return $result;\n}", "    my $result = \"NO\";\n    my $count = 0;\n\
    \    my $i;\n    my $j;", "    my $even = 0;\n    my $odd = 0;\n    foreach my\
    \ $i (@$lst1) {\n        $even += $i % 2;\n    }\n    foreach my $i (@$lst2) {\n\
    \        $odd += $i % 2;\n    }\n    return $even == $odd ? \"YES\" : \"NO\";\n\
    }", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n \
    \   my $lst2_odd = 0;\n    foreach my $elem1 (@$lst1) {\n        $lst1_even +=\
    \ $elem1 % 2;\n        $lst1_odd += $elem1 % 2 == 0 ? 0 : 1;\n    }\n    foreach\
    \ my $elem2 (@$lst2) {\n        $lst2_even += $elem2 % 2;\n        $lst2_odd +=\
    \ $elem2 % 2 == 0 ? 0 : 1;\n    }\n    return $lst1_even == $lst2_even && $lst1_odd\
    \ == $lst2_odd ? \"YES\" : \"NO\";\n}", "    my $i = 0;\n    my $j = 0;\n    my\
    \ $count = 0;\n    my $odd = 0;\n    my $even = 0;\n    my $result = \"NO\";\n\
    \    while($i < $lst1->length && $j < $lst2->length) {\n        if($lst1->[$i]\
    \ % 2 == 1) {\n            $odd++;\n        } else {\n            $even++;\n \
    \       }\n        if($lst2->[$j] % 2 == 1) {\n            $odd++;\n        }\
    \ else {\n            $even++;\n        }\n        if($odd == 0 && $even == 0)\
    \ {\n            $count++;\n        }\n        if($count == $lst1->length) {\n\
    \            $result = \"YES\";\n            break;\n        }\n        if($lst1->[$i]\
    \ == $lst2->[$j]) {\n            $i++;\n            $j++;\n        } else if($lst1->[$i]\
    \ > $lst2->[$j]) {\n            $j++;\n        } else {\n            $i++;\n \
    \       }\n    }\n    return $result;\n}", "    my $lst1_len = @{$lst1};\n   \
    \ my $lst2_len = @{$lst2};\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n   \
    \ my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_even_len = 0;\n   \
    \ my $lst2_even_len = 0;\n    my $lst1_even_odd = 0;\n    my $lst2_even_odd =\
    \ 0;\n    my $lst1_even_even = 0;\n    my $lst2_even_even = 0;\n    my $lst1_even_even_len\
    \ = 0;\n    my $lst2_even_even_len = 0;\n    my $lst1_even_odd_len = 0;\n    my\
    \ $lst2_even_odd_len = 0;\n    my $lst1_even_odd_odd = 0;\n    my $lst2_even_odd_odd\
    \ = 0;\n    my $lst1_even_odd_even = 0;\n    my $lst2_even_odd_even = 0;\n   \
    \ my $lst1_even_odd_odd_len = 0;\n    my $lst2_even_odd_odd_len = 0;\n    my $lst1_even_odd_odd_odd\
    \ = 0;\n    my $lst2_even_odd_odd_odd = 0;\n    my $lst1_even_odd_odd_even = 0;\n\
    \    my $lst2_even_odd_odd_even = 0;\n    my $lst1_even_odd_odd_odd_len = 0;\n\
    \    my $lst2_even_odd_odd_odd_len = 0;\n    my $lst1_even_odd_odd_odd_odd = 0;\n\
    \    my $lst2_even_odd_odd_odd_odd = 0;\n    my $lst1_even_odd_odd_odd_even =\
    \ 0;\n    my $lst2_even_odd", "    my $result = \"NO\";\n    my $i = 0;\n    my\
    \ $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n  \
    \  my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $even_lst1\
    \ = 0;\n    my $odd_lst1 = 0;\n    my $even_lst2 = 0;\n    my $odd_lst2 = 0;\n\
    \    my $even_lst1_temp = 0;\n    my $odd_lst1_temp = 0;\n    my $even_lst2_temp\
    \ = 0;\n    my $odd_lst2_temp = 0;\n    my $even_lst1_temp_2 = 0;\n    my $odd_lst1_temp_2\
    \ = 0;\n    my $even_lst2_temp_2 = 0;\n    my $odd_lst2_temp_2 = 0;\n    my $even_lst1_temp_3\
    \ = 0;\n    my $odd_lst1_temp_3 = 0;\n    my $even_lst2_temp_3 = 0;\n    my $odd_lst2_temp_3\
    \ = 0;\n    my $even_lst1_temp_4 = 0;\n    my $odd_lst1_temp_4 = 0;\n    my $even_lst2_temp_4\
    \ = 0;\n    my $odd_lst2_temp_4 = 0;\n    my $even_lst1_temp_5 = 0;\n    my $odd_lst1_temp_5\
    \ = 0;\n    my $even_lst2_temp_5 = 0;", "    my $lst1_even = 0;\n    my $lst2_even\
    \ = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach my $i (@$lst1)\
    \ {\n        if ($i % 2) {\n            $lst1_odd++;\n        } else {\n     \
    \       $lst1_even++;\n        }\n    }\n    foreach my $i (@$lst2) {\n      \
    \  if ($i % 2) {\n            $lst2_odd++;\n        } else {\n            $lst2_even++;\n\
    \        }\n    }\n    if ($lst1_odd == 0 && $lst2_odd == 0) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";\n}", "    my $result = \"NO\";\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my\
    \ $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n\
    \    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $z1;\n    my $z2;\n  \
    \  my $z3;\n    my $z4;\n    my $z5;\n    my $z6;\n    my $z7;\n    my $z8;\n\
    \    my $z9;\n    my $z10;\n    my $z11;\n    my $z12;\n    my $z13;\n    my $z14;\n\
    \    my $z15;\n    my $z16;\n    my $z17;\n    my $z18;\n    my $z19;\n    my\
    \ $z20;\n    my $z21;\n    my $z22;\n    my $z23;\n    my $z24;\n    my $z25;\n\
    \    my $z26;\n    my $z27;\n    my $z28;\n    my $z29;\n    my $z30;\n    my\
    \ $z31;\n    my $z32;\n    my $z33;\n    my $z34;\n    my $z35;\n    my $z36;\n\
    \    my $z37;\n    my $z38;\n    my $z39;\n    my $z40;\n    my $z41;\n    my\
    \ $z42;\n    my $z43;\n    my $z44;\n    my $z45;\n    my $z46;\n    my $z47;\n\
    \    my $z48;\n    my $z49;\n    my $z50;\n    my $z51;\n    my $z52;\n    my\
    \ $z53;\n    my $z54;\n    my $z55;\n    my $z56;\n    my $", "    my $result\
    \ = \"NO\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $even\
    \ = 0;\n    my $odd = 0;\n    my $even_index = 0;\n    my $odd_index = 0;\n  \
    \  my $even_index_lst1 = 0;\n    my $odd_index_lst1 = 0;\n    my $even_index_lst2\
    \ = 0;\n    my $odd_index_lst2 = 0;\n    my $even_index_lst1_lst2 = 0;\n    my\
    \ $odd_index_lst1_lst2 = 0;\n    my $even_index_lst2_lst1 = 0;\n    my $odd_index_lst2_lst1\
    \ = 0;\n    my $even_index_lst2_lst1_lst2 = 0;\n    my $odd_index_lst2_lst1_lst2\
    \ = 0;\n    my $even_index_lst2_lst1_lst2_lst1 = 0;\n    my $odd_index_lst2_lst1_lst2_lst1\
    \ = 0;\n    my $even_index_lst2_lst1_lst2_lst2 = 0;\n    my $odd_index_lst2_lst1_lst2_lst2\
    \ = 0;\n    my $even_index_lst2_lst1_lst2_lst3 = 0;\n    my $odd_index_lst2_lst1_lst2_lst",
  "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    my $lst1_size = @{$lst1};\n    my $lst2_size = @{$lst2};\n    my $lst1_size_even\
    \ = 0;\n    my $lst2_size_even = 0;\n    my $lst1_size_odd = 0;\n    my $lst2_size_odd\
    \ = 0;\n    my $lst1_size_even_odd = 0;\n    my $lst2_size_even_odd = 0;\n   \
    \ my $lst1_size_odd_even = 0;\n    my $lst2_size_odd_even = 0;\n    my $lst1_size_even_odd_even\
    \ = 0;\n    my $lst2_size_even_odd_even = 0;\n    my $lst1_size_odd_even_odd =\
    \ 0;\n    my $lst2_size_odd_even_odd = 0;\n    my $lst1_size_even_odd_odd = 0;\n\
    \    my $lst2_size_even_odd_odd = 0;\n    my $lst1_size_odd_even_odd = 0;\n  \
    \  my $lst2_size_odd_even_odd = 0;\n    my $lst1_size_even_odd_even = 0;\n   \
    \ my $lst2_size_even_odd_even = 0;\n    my $lst1_size_odd_even_odd_odd = 0;\n\
    \    my $lst2_size_even_odd_odd_odd = 0;\n    my $lst1_size_even_odd_odd_even\
    \ = 0;\n    my $lst2_size_even_odd_odd_even = 0;\n    my $lst1_size_odd_even_odd_odd\
    \ = 0;\n    my $lst2_size_even_odd_odd_odd = 0;\n    my $lst1_size_even", "  \
    \  my $result = \"NO\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n  \
    \  my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $even = 0;\n    my $odd = 0;\n    my $total = 0;\n    my $total_even =\
    \ 0;\n    my $total_odd = 0;\n    my $total_even_odd = 0;\n    my $total_even_odd_even\
    \ = 0;\n    my $total_even_odd_odd = 0;\n    my $total_odd_even = 0;\n    my $total_odd_odd\
    \ = 0;\n    my $total_odd_even = 0;\n    my $total_odd_odd_even = 0;\n    my $total_odd_odd_odd\
    \ = 0;\n    my $total_odd_odd_even = 0;\n    my $total_odd_odd_odd = 0;\n    my\
    \ $total_odd_odd_even = 0;\n    my $total_odd_odd_odd = 0;\n    my $total_odd_odd_odd_even\
    \ = 0;\n    my $total_odd_odd_odd_odd = 0;\n    my $total_odd_odd_odd_odd_even\
    \ = 0;\n    my $total_odd_odd_odd_odd_odd = 0;\n    my $total_odd_odd_odd_odd_odd_even\
    \ = 0;\n    my $total_odd_odd_odd_odd_odd_odd = 0;\n    my $total_odd_odd_odd_odd_odd_odd_even\
    \ = 0;\n    my $total_odd_odd_odd_odd_odd_odd_odd = 0;\n    my $", "    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    my $lst1_odd_index = 0;\n    my $lst2_odd_index = 0;\n    my $lst1_even_index\
    \ = 0;\n    my $lst2_even_index = 0;\n    my $lst1_even_index_odd = 0;\n    my\
    \ $lst2_even_index_odd = 0;\n    my $lst1_odd_index_even = 0;\n    my $lst2_odd_index_even\
    \ = 0;\n    my $lst1_odd_index_odd = 0;\n    my $lst2_odd_index_odd = 0;\n   \
    \ my $lst1_even_index_odd = 0;\n    my $lst2_even_index_odd = 0;\n    my $lst1_odd_index_even\
    \ = 0;\n    my $lst2_odd_index_even = 0;\n    my $lst1_odd_index_odd = 0;\n  \
    \  my $lst2_odd_index_odd = 0;\n    my $lst1_even_index_odd = 0;\n    my $lst2_even_index_odd\
    \ = 0;\n    my $lst1_odd_index_even = 0;\n    my $lst2_odd_index_even = 0;\n \
    \   my $lst1_odd_index_odd = 0;\n    my $lst2_odd_index_odd = 0;\n    my $lst1_even_index_odd\
    \ = 0;\n    my $lst2_even_index_odd = 0;\n    my $lst1_odd_index_even = 0;\n \
    \   my $lst2_odd_index_even = 0;\n    my $lst1_odd_index_odd = 0;\n    my $lst2_odd_index_odd\
    \ = 0;\n    my $lst1_even_index_odd = 0;\n    my $lst2_even", "    my $i = 0;\n\
    \    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $lst1_len = @{$lst1};\n\
    \    my $lst2_len = @{$lst2};\n    while($i < $lst1_len and $j < $lst2_len) {\n\
    \        if($lst1[$i] % 2 == 0) {\n            $even += 1;\n        } else {\n\
    \            $odd += 1;\n        }\n        if($lst2[$j] % 2 == 0) {\n       \
    \     $even -= 1;\n        } else {\n            $odd -= 1;\n        }\n     \
    \   if($even == 0 and $odd == 0) {\n            return \"YES\";\n        }\n \
    \       if($even == 0) {\n            $i += 1;\n        } else {\n           \
    \ $i -= 1;\n        }\n        if($odd == 0) {\n            $j += 1;\n       \
    \ } else {\n            $j -= 1;\n        }\n    }\n    return \"NO\";\n}", " \
    \   my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my\
    \ $lst2_odd = 0;\n    my $lst1_total = 0;\n    my $lst2_total = 0;\n    my $lst1_even_total\
    \ = 0;\n    my $lst2_even_total = 0;\n    my $lst1_odd_total = 0;\n    my $lst2_odd_total\
    \ = 0;\n    my $lst1_even_odd = 0;\n    my $lst2_even_odd = 0;\n    my $lst1_odd_even\
    \ = 0;\n    my $lst2_odd_even = 0;\n    my $lst1_even_odd_total = 0;\n    my $lst2_even_odd_total\
    \ = 0;\n    my $lst1_odd_even_total = 0;\n    my $lst2_odd_even_total = 0;\n \
    \   my $lst1_even_odd_total = 0;\n    my $lst2_even_odd_total = 0;\n    my $lst1_odd_even_total\
    \ = 0;\n    my $lst2_odd_even_total = 0;\n    my $lst1_odd_even_odd = 0;\n   \
    \ my $lst2_odd_even_odd = 0;\n    my $lst1_odd_even_odd_total = 0;\n    my $lst2_odd_even_odd_total\
    \ = 0;\n    my $lst1_odd_even_odd_total = 0;\n    my $lst2_odd_even_odd_total\
    \ = 0;\n    my $lst1_odd_even_odd_total = 0;\n    my $lst2_odd_even_odd_total\
    \ = 0;\n    my $lst1_odd_even_odd_total = 0;\n    my $lst2_odd_even_odd_total\
    \ = 0;\n    my $lst1_odd_even_odd_total = 0;\n    my $lst2", "    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    foreach my $i (@$lst1) {\n        $lst1_even += $i % 2;\n        $lst1_odd\
    \ += $i % 2 == 0 ? 0 : 1;\n    }\n    foreach my $i (@$lst2) {\n        $lst2_even\
    \ += $i % 2;\n        $lst2_odd += $i % 2 == 0 ? 0 : 1;\n    }\n    return $lst1_even\
    \ == $lst2_even && $lst1_odd == $lst2_odd ? \"YES\" : \"NO\";\n}", "    my $even\
    \ = 0;\n    my $odd = 0;\n    my $i;", "    my $i;\n    my $j;\n    my $even;\n\
    \    my $odd;", "    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $even\
    \ = 0;\n    my $odd = 0;\n    my $result = \"NO\";\n    while ($i < @$lst1) {\n\
    \        $count++;\n        if ($lst1[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $i++;\n    }\n    while\
    \ ($j < @$lst2) {\n        $count++;\n        if ($lst2[$j] % 2 == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $j++;\n\
    \    }\n    if ($count == 0) {\n        $result = \"YES\";\n    }\n    return\
    \ $result;\n}", "    my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $result =\
    \ \"NO\";\n    while ($i < $len1 && $j < $len2) {\n        if ($lst1[$i] % 2 ==\
    \ 0) {\n            $even += 1;\n        } else {\n            $odd += 1;\n  \
    \      }\n        if ($lst2[$j] % 2 == 0) {\n            $even -= 1;\n       \
    \ } else {\n            $odd -= 1;\n        }\n        if ($even == 0 && $odd\
    \ == 0) {\n            $result = \"YES\";\n            break;\n        }\n   \
    \     $i += 1;\n        $j += 1;\n    }\n    return $result;\n}", "    my $result\
    \ = \"NO\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $even\
    \ = 0;\n    my $odd = 0;\n    my $even_lst1 = 0;\n    my $odd_lst1 = 0;\n    my\
    \ $even_lst2 = 0;\n    my $odd_lst2 = 0;\n    my $even_lst1_temp = 0;\n    my\
    \ $odd_lst1_temp = 0;\n    my $even_lst2_temp = 0;\n    my $odd_lst2_temp = 0;\n\
    \    my $even_lst1_temp_temp = 0;\n    my $odd_lst1_temp_temp = 0;\n    my $even_lst2_temp_temp\
    \ = 0;\n    my $odd_lst2_temp_temp = 0;\n    my $even_lst1_temp_temp_temp = 0;\n\
    \    my $odd_lst1_temp_temp_temp = 0;\n    my $even_lst2_temp_temp_temp = 0;\n\
    \    my $odd_lst2_temp_temp_temp = 0;\n    my $even_lst1_temp_temp_temp_temp =\
    \ 0;\n    my $odd_lst1_temp_temp_temp_temp = 0;\n    my $even_lst2_temp_temp_temp_temp\
    \ = 0;\n    my $odd_lst2_temp_temp_temp_temp = 0;\n    my $even_lst1_temp_temp_temp_temp_temp\
    \ = 0;\n    ", "    my $result = \"NO\";\n    my $i = 0;\n    foreach my $elem1\
    \ (@$lst1) {\n        my $elem2 = @$lst2[$i];\n        if ($elem1 % 2 == 0) {\n\
    \            if ($elem2 % 2 != 0) {\n                $result = \"YES\";\n    \
    \            break;\n            }\n        } else {\n            if ($elem2 %\
    \ 2 == 0) {\n                $result = \"NO\";\n                break;\n     \
    \       }\n        }\n        $i++;\n    }\n    return $result;\n}", "    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    my $lst1_odd_index = 0;\n    my $lst2_odd_index = 0;\n    my $lst1_even_index\
    \ = 0;\n    my $lst2_even_index = 0;\n    my $lst1_even_index_odd = 0;\n    my\
    \ $lst2_even_index_odd = 0;\n    my $lst1_odd_index_even = 0;\n    my $lst2_odd_index_even\
    \ = 0;\n    my $lst1_odd_index_odd = 0;\n    my $lst2_odd_index_odd = 0;\n   \
    \ my $lst1_even_index_odd = 0;\n    my $lst2_even_index_odd = 0;\n    my $lst1_odd_index_even\
    \ = 0;\n    my $lst2_odd_index_even = 0;\n    my $lst1_even_index_even = 0;\n\
    \    my $lst2_even_index_even = 0;\n    my $lst1_odd_index_even = 0;\n    my $lst2_odd_index_even\
    \ = 0;\n    my $lst1_odd_index_odd = 0;\n    my $lst2_odd_index_odd = 0;\n   \
    \ my $lst1_even_index_odd = 0;\n    my $lst2_even_index_odd = 0;\n    my $lst1_odd_index_even\
    \ = 0;\n    my $lst2_odd_index_even = 0;\n    my $lst1_odd_index_odd = 0;\n  \
    \  my $lst2_odd_index_odd = 0;\n    my $lst1_even_index_odd = 0;\n    my $lst2_even_index_odd\
    \ = 0;\n    my $lst1_odd_index_even = 0;\n    my $lst2_odd", "    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    foreach my $i (@$lst1) {\n        $lst1_even += $i % 2;\n        $lst1_odd\
    \ += $i % 2 == 0 ? 0 : 1;\n    }\n    foreach my $i (@$lst2) {\n        $lst2_even\
    \ += $i % 2;\n        $lst2_odd += $i % 2 == 0 ? 0 : 1;\n    }\n    return $lst1_even\
    \ == $lst2_even && $lst1_odd == $lst2_odd ? \"YES\" : \"NO\";\n}", "    my $result\
    \ = \"NO\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $even\
    \ = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $count2 = 0;\n    my $count3\
    \ = 0;\n    my $count4 = 0;\n    my $count5 = 0;\n    my $count6 = 0;\n    my\
    \ $count7 = 0;\n    my $count8 = 0;\n    my $count9 = 0;\n    my $count10 = 0;\n\
    \    my $count11 = 0;\n    my $count12 = 0;\n    my $count13 = 0;\n    my $count14\
    \ = 0;\n    my $count15 = 0;\n    my $count16 = 0;\n    my $count17 = 0;\n   \
    \ my $count18 = 0;\n    my $count19 = 0;\n    my $count20 = 0;\n    my $count21\
    \ = 0;\n    my $count22 = 0;\n    my $count23 = 0;\n    my $count24 = 0;\n   \
    \ my $count25 = 0;\n    my $count26 = 0;\n    my $count27 = 0;\n    my $count28\
    \ = 0;\n    my $count29 = 0;\n    my $count30 = 0;\n    my $count31 = 0;\n   \
    \ my $count32 = 0;\n    my $count33 = 0;\n    my $count34 = 0;\n    my $count35\
    \ = 0;\n    my $count36 = 0;\n    my $count37 = 0;\n    my $count38 = 0;\n   \
    \ my", "    my $i, $j;\n    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n\
    \    my $count_odd = 0;\n    my $count_even = 0;\n    my $count_even_odd = 0;\n\
    \    my $count_odd_even = 0;\n    my $count_even_odd_even = 0;\n    my $count_odd_even_odd\
    \ = 0;\n    my $count_odd_even_odd_even = 0;\n    my $count_odd_even_odd_odd =\
    \ 0;\n    my $count_odd_odd_even = 0;\n    my $count_odd_odd_odd_even = 0;\n \
    \   my $count_odd_odd_odd_odd = 0;\n    my $count_odd_odd_odd_odd_even = 0;\n\
    \    my $count_odd_odd_odd_odd_odd = 0;\n    my $count_odd_odd_odd_odd_odd_even\
    \ = 0;\n    my $count_odd_odd_odd_odd_odd_odd = 0;\n    my $count_odd_odd_odd_odd_odd_odd_even\
    \ = 0;\n    my $count_odd_odd_odd_odd_odd_odd_odd = 0;\n    my $count_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0;\n    my $count_odd_odd_odd_odd_odd_odd_odd_odd = 0;\n    my $count_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0;\n    my $count_odd_odd_odd_odd_odd_odd_odd_odd_odd = 0;\n    my $count_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0;\n    my $count_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 0;\n    my $count_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0;\n    my $count_odd_odd_odd_odd_odd_odd_odd_odd_odd_", "    my $len1 = @{$lst1};\n\
    \    my $len2 = @{$lst2};\n    my $i1 = 0;\n    my $i2 = 0;\n    my $i3 = 0;\n\
    \    my $i4 = 0;\n    my $i5 = 0;\n    my $i6 = 0;\n    my $i7 = 0;\n    my $i8\
    \ = 0;\n    my $i9 = 0;\n    my $i10 = 0;\n    my $i11 = 0;\n    my $i12 = 0;\n\
    \    my $i13 = 0;\n    my $i14 = 0;\n    my $i15 = 0;\n    my $i16 = 0;\n    my\
    \ $i17 = 0;\n    my $i18 = 0;\n    my $i19 = 0;\n    my $i20 = 0;\n    my $i21\
    \ = 0;\n    my $i22 = 0;\n    my $i23 = 0;\n    my $i24 = 0;\n    my $i25 = 0;\n\
    \    my $i26 = 0;\n    my $i27 = 0;\n    my $i28 = 0;\n    my $i29 = 0;\n    my\
    \ $i30 = 0;\n    my $i31 = 0;\n    my $i32 = 0;\n    my $i33 = 0;\n    my $i34\
    \ = 0;\n    my $i35 = 0;\n    my $i36 = 0;\n    my $i37 = 0;\n    my $i38 = 0;\n\
    \    my $i39 = 0;\n    my $i40 = 0;\n    my $i41 = 0;\n    my $i42 = 0;\n    my\
    \ $i43 = 0;\n    my $i44 = 0;\n    my $i45 = 0;\n    my $i46 = 0;\n    my $i47\
    \ = 0;\n    my $i48 = 0;\n    my $i49 = 0;\n    my $i50 = 0;\n    my $i51 = 0;\n\
    \    my $i52 = 0;\n    my $i53 = 0;\n    my $i54 = 0", "    my $result = \"NO\"\
    ;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m =\
    \ 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r\
    \ = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my\
    \ $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $even = 0;\n\
    \    my $odd = 0;\n    my $count = 0;\n    my $count_even = 0;\n    my $count_odd\
    \ = 0;\n    my $count_even_odd = 0;\n    my $count_even_odd_even = 0;\n    my\
    \ $count_odd_even = 0;\n    my $count_odd_odd = 0;\n    my $count_even_odd_odd\
    \ = 0;\n    my $count_odd_even_odd = 0;\n    my $count_even_odd_even_odd = 0;\n\
    \    my $count_odd_even_odd_even = 0;\n    my $count_odd_odd_even = 0;\n    my\
    \ $count_odd_odd_odd = 0;\n    my $count_even_odd_odd_even = 0;\n    my $count_odd_even_odd_odd\
    \ = 0;\n    my $count_even_odd_odd_odd = 0;\n    my $count_odd_even_odd_even_odd\
    \ = 0;\n    my $count_odd_odd_even_odd_odd = 0;\n    my $count_even_odd_odd_even_odd_odd\
    \ = 0;\n    my $count_odd_even_odd_odd_even_odd_odd = 0;\n    my $count_odd_odd_even_odd_odd_even_odd\
    \ = 0;\n    my $count_odd_odd_odd_even_odd_even_odd = 0;\n    my $count_odd_",
  "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k\
    \ = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my\
    \ $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n  \
    \  my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n",
  "    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $result = \"NO\";\n\
    \    while ($i < $lst1->length && $j < $lst2->length) {\n        if ($lst1->[$i]\
    \ % 2 == 0 && $lst2->[$j] % 2 == 0) {\n            $count++;\n            $i++;\n\
    \            $j++;\n        } else if ($lst1->[$i] % 2 == 0) {\n            $i++;\n\
    \        } else if ($lst2->[$j] % 2 == 0) {\n            $j++;\n        } else\
    \ {\n            $result = \"NO\";\n            break;\n        }\n    }\n   \
    \ if ($count == $lst1->length) {\n        $result = \"YES\";\n    }\n    return\
    \ $result;\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd\
    \ = 0;\n    my $lst2_odd = 0;\n    foreach my $i (@$lst1) {\n        $lst1_even\
    \ += $i % 2;\n        $lst1_odd += $i % 2;\n    }\n    foreach my $i (@$lst2)\
    \ {\n        $lst2_even += $i % 2;\n        $lst2_odd += $i % 2;\n    }\n    if\
    \ ($lst1_even == 0 and $lst2_even == 0) {\n        return \"YES\";\n    }\n  \
    \  if ($lst1_odd == 0 and $lst2_odd == 0) {\n        return \"YES\";\n    }\n\
    \    return \"NO\";\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n   \
    \ my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach my $i (@$lst1) {\n   \
    \     $lst1_even += $i % 2;\n        $lst1_odd += $i % 2 == 0 ? 0 : 1;\n    }\n\
    \    foreach my $i (@$lst2) {\n        $lst2_even += $i % 2;\n        $lst2_odd\
    \ += $i % 2 == 0 ? 0 : 1;\n    }\n    return $lst1_even == 0 && $lst2_even ==\
    \ 0 && $lst1_odd == $lst2_odd ? \"YES\" : \"NO\";\n}", "    my $i = 0;\n    my\
    \ $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $lst1_len\
    \ = @{$lst1};\n    my $lst2_len = @{$lst2};\n    while ($i < $lst1_len) {\n  \
    \      $count++;\n        if ($lst1[$i] % 2 == 0) {\n            $even++;\n  \
    \      } else {\n            $odd++;\n        }\n        $i++;\n    }\n    while\
    \ ($j < $lst2_len) {\n        $count++;\n        if ($lst2[$j] % 2 == 0) {\n \
    \           $even++;\n        } else {\n            $odd++;\n        }\n     \
    \   $j++;\n    }\n    if ($odd == 0) {\n        return \"YES\";\n    }\n    return\
    \ \"NO\";\n}", "    my $i;\n    my $j;\n    my $k;\n    my $even;", "    my $lst1_len\
    \ = @{$lst1};\n    my $lst2_len = @{$lst2};\n    my $lst1_even = 0;\n    my $lst2_even\
    \ = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    my $lst1_odd_len = 0;\n\
    \    my $lst2_odd_len = 0;\n    my $lst1_even_len = 0;\n    my $lst2_even_len\
    \ = 0;\n    my $lst1_odd_len = 0;\n    my $lst2_odd_len = 0;\n    my $lst1_even_odd\
    \ = 0;\n    my $lst2_even_odd = 0;\n    my $lst1_odd_even = 0;\n    my $lst2_odd_even\
    \ = 0;\n    my $lst1_odd_odd = 0;\n    my $lst2_odd_odd = 0;\n    my $lst1_even_odd\
    \ = 0;\n    my $lst2_even_odd = 0;\n    my $lst1_odd_even = 0;\n    my $lst2_odd_even\
    \ = 0;\n    my $lst1_even_even = 0;\n    my $lst2_even_even = 0;\n    my $lst1_odd_even\
    \ = 0;\n    my $lst2_odd_even = 0;\n    my $lst1_even_odd = 0;\n    my $lst2_even_odd\
    \ = 0;\n    my $lst1_odd_even = 0;\n    my $lst2_odd_even = 0;\n    my $lst1_even_even\
    \ = 0;\n    my $lst2_even_even = 0;\n    my $lst1_odd_odd = 0;\n    my $lst2_odd_odd\
    \ = 0;\n    my $lst1_even_odd = 0;\n    my $lst2_even_odd = 0;\n    my $lst1_odd_even",
  "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    foreach my $i (@$lst1) {\n        if ($i % 2 == 0) {\n           \
    \ $lst1_even++;\n        } else {\n            $lst1_odd++;\n        }\n    }\n\
    \    foreach my $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $lst2_even++;\n\
    \        } else {\n            $lst2_odd++;\n        }\n    }\n    if ($lst1_odd\
    \ == 0 && $lst2_odd == 0) {\n        return \"YES\";\n    }\n    return \"NO\"\
    ;\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n\
    \    my $lst2_odd = 0;\n    foreach my $i (@$lst1) {\n        if ($i % 2 == 0)\
    \ {\n            $lst1_even++;\n        } else {\n            $lst1_odd++;\n \
    \       }\n    }\n    foreach my $i (@$lst2) {\n        if ($i % 2 == 0) {\n \
    \           $lst2_even++;\n        } else {\n            $lst2_odd++;\n      \
    \  }\n    }\n    if ($lst1_even == 0 || $lst2_even == 0) {\n        return \"\
    NO\";\n    }\n    if ($lst1_odd == 0 || $lst2_odd == 0) {\n        return \"YES\"\
    ;\n    }\n    return \"NO\";\n}", "    my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n\
    \    my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $result\
    \ = \"NO\";\n    while ($i < $len1 && $j < $len2) {\n        my $temp = $lst1[$i];\n\
    \        $lst1[$i] = $lst2[$j];\n        $lst2[$j] = $temp;\n        $i += 1;\n\
    \        $j += 1;\n        if ($i % 2 == 0) {\n            $even += 1;\n     \
    \   } else {\n            $odd += 1;\n        }\n        if ($even == $len1 &&\
    \ $odd == $len2) {\n            $result = \"YES\";\n            break;\n     \
    \   }\n    }\n    return $result;\n}", "    my $i;\n    my $j;", "    my $i =\
    \ 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $lst1_len =\
    \ @$lst1;\n    my $lst2_len = @$lst2;\n    my $lst1_len_min = min($lst1_len, $lst2_len);\n\
    \    my $lst1_len_max = max($lst1_len, $lst2_len);\n    my $lst2_len_min = min($lst1_len,\
    \ $lst2_len);\n    my $lst2_len_max = max($lst1_len, $lst2_len);\n    while ($i\
    \ < $lst1_len_min || $j < $lst2_len_min) {\n        if ($lst1[$i] % 2 == 0) {\n\
    \            $even++;\n        }\n        if ($lst2[$j] % 2 == 1) {\n        \
    \    $odd++;\n        }\n        if ($even > $odd) {\n            return \"NO\"\
    ;\n        }\n        if ($odd > $even) {\n            return \"YES\";\n     \
    \   }\n        $i++;\n        $j++;\n    }\n    return \"YES\";\n}", "    my $even\
    \ = 0;\n    my $odd = 0;\n    my $i;", "    my $lst1_even = 0;\n    my $lst2_even\
    \ = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach my $i (@$lst1)\
    \ {\n        $lst1_even += $i % 2;\n        $lst1_odd += $i % 2;\n    }\n    foreach\
    \ my $i (@$lst2) {\n        $lst2_even += $i % 2;\n        $lst2_odd += $i % 2;\n\
    \    }\n    if ($lst1_odd == 0 && $lst2_odd == 0) {\n        return \"YES\";\n\
    \    }\n    return \"NO\";\n}", "    my $i;\n    my $j;\n    my $even;\n    my\
    \ $odd;", "    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $odd;", " \
    \   my $i;\n    my $j;", "    my $i;\n    my $j;", "    my $lst1_even = 0;\n \
    \   my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    my $lst1_size\
    \ = @{$lst1};\n    my $lst2_size = @{$lst2};", "    my $result = \"NO\";\n   \
    \ my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $odd;", "    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n", "    my $lst1_even = 0;\n\
    \    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    my\
    \ $lst1_size = @{$lst1};\n    my $lst2_size = @{$lst2};\n    my $lst1_size_odd\
    \ = $lst1_size - $lst1_even;\n    my $lst2_size_odd = $lst2_size - $lst2_even;\n\
    \    my $lst1_size_even = $lst1_size - $lst1_odd;\n    my $lst2_size_even = $lst2_size\
    \ - $lst2_odd;\n    my $lst1_size_even_odd = $lst1_size_even + $lst1_size_odd;\n\
    \    my $lst2_size_even_odd = $lst2_size_even + $lst2_size_odd;\n    my $lst1_size_odd_even\
    \ = $lst1_size_odd + $lst1_size_even;\n    my $lst2_size_odd_even = $lst2_size_odd\
    \ + $lst2_size_even;\n    my $lst1_size_even_odd_even = $lst1_size_even_odd +\
    \ $lst1_size_odd_even;\n    my $lst2_size_even_odd_even = $lst2_size_even_odd\
    \ + $lst2_size_odd_even;\n    my $lst1_size_odd_even_odd = $lst1_size_odd_even\
    \ + $lst1_size_even_odd;\n    my $lst2_size_odd_even_odd = $lst2_size_odd_even\
    \ + $lst2_size_even_odd;\n    my $lst1_size_odd_even_odd_odd = $lst1_size_odd_even_odd\
    \ + $lst1_size_even_odd_odd;\n    my", "    my $i;\n    my $j;\n    my $k;\n \
    \   my $even;\n    my $odd;\n    my $even_lst1;\n    my $odd_lst1;\n    my $even_lst2;\n\
    \    my $odd_lst2;\n    my $lst1_len = @{$lst1};\n    my $lst2_len = @{$lst2};\n\
    \    my $lst1_len_new = $lst1_len - 1;\n    my $lst2_len_new = $lst2_len - 1;\n\
    \    my $lst1_len_new_new = $lst1_len_new - 1;\n    my $lst2_len_new_new = $lst2_len_new\
    \ - 1;\n    my $lst1_len_new_new_new = $lst1_len_new_new - 1;\n    my $lst2_len_new_new_new\
    \ = $lst2_len_new_new - 1;\n    my $lst1_len_new_new_new_new = $lst1_len_new_new_new\
    \ - 1;\n    my $lst2_len_new_new_new_new = $lst2_len_new_new_new - 1;\n    my\
    \ $lst1_len_new_new_new_new_new = $lst1_len_new_new_new_new - 1;\n    my $lst2_len_new_new_new_new_new\
    \ = $lst2_len_new_new_new_new - 1;\n    my $lst1_len_new_new_new_new_new_new =\
    \ $lst1_len_new_new_new_new_new - 1;\n    my $lst2_len_new_new_new_new_new_new\
    \ = $lst2_len_new_new_new_new_new - 1;\n    my $lst1_len_new_new_new_new_new_new_new\
    \ = $lst1_len_new_new_new_", "    my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n\
    \    my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $result\
    \ = \"NO\";\n    while($i < $len1 && $j < $len2) {\n        my $temp = $lst1[$i];\n\
    \        $lst1[$i] = $lst2[$j];\n        $lst2[$j] = $temp;\n        $i += 1;\n\
    \        $j += 1;\n        if ($i % 2 == 0) {\n            $even += 1;\n     \
    \   } else {\n            $odd += 1;\n        }\n    }\n    if ($even == $len1)\
    \ {\n        $result = \"YES\";\n    }\n    return $result;\n}", '    my $i;',
  "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd\
    \ = 0;\n    my $lst1_even_odd = 0;\n    my $lst2_even_odd = 0;\n    foreach my\
    \ $i (@$lst1) {\n        if ($i % 2) {\n            $lst1_odd++;\n        } else\
    \ {\n            $lst1_even++;\n        }\n    }\n    foreach my $i (@$lst2) {\n\
    \        if ($i % 2) {\n            $lst2_odd++;\n        } else {\n         \
    \   $lst2_even++;\n        }\n    }\n    if ($lst1_odd == 0 && $lst2_odd == 0)\
    \ {\n        $lst1_even_odd = $lst1_even + $lst2_even;\n        $lst2_even_odd\
    \ = $lst1_even - $lst2_even;\n        if ($lst1_even_odd == $lst2_even_odd) {\n\
    \            return \"YES\";\n        }\n    }\n    return \"NO\";\n}", "    my\
    \ $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n    my $i = 0;\n    my $j = 0;\n\
    \    my $even = 0;\n    my $odd = 0;\n    my $result = \"NO\";\n    while ($i\
    \ < $len1 && $j < $len2) {\n        if ($lst1[$i] % 2 == 0) {\n            $even\
    \ += 1;\n        }\n        if ($lst2[$j] % 2 == 1) {\n            $odd += 1;\n\
    \        }\n        if ($even == $odd) {\n            $result = \"YES\";\n   \
    \         $i += 1;\n            $j += 1;\n        } else if ($even > $odd) {\n\
    \            $j += 1;\n        } else {\n            $i += 1;\n        }\n   \
    \ }\n    return $result;\n}", "    my $i;\n    my $j;\n    my $even;\n    my $odd;\n\
    \    my $result;", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd\
    \ = 0;\n    my $lst2_odd = 0;\n    foreach my $i (@$lst1) {\n        $lst1_even\
    \ += $i % 2;\n        $lst1_odd += $i % 2;\n    }\n    foreach my $i (@$lst2)\
    \ {\n        $lst2_even += $i % 2;\n        $lst2_odd += $i % 2;\n    }\n    if\
    \ ($lst1_odd == 0 && $lst2_odd == 0) {\n        return \"YES\";\n    }\n    return\
    \ \"NO\";\n}", "    my $len1 = @{$lst1};\n    my $len2 = @{$lst2};\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n\
    \    my $result = \"NO\";\n    while ($i < $len1 && $j < $len2) {\n        $count++;\n\
    \        if ($lst1[$i] % 2 == 0 && $lst2[$j] % 2 == 0) {\n            $even++;\n\
    \        } else if ($lst1[$i] % 2 == 1 && $lst2[$j] % 2 == 1) {\n            $odd++;\n\
    \        }\n        if ($even == $len1 && $odd == $len2) {\n            $result\
    \ = \"YES\";\n            break;\n        }\n        if ($even > $odd) {\n   \
    \         $i++;\n        } else if ($odd > $even) {\n            $j++;\n     \
    \   } else {\n            $i++;\n            $j++;\n        }\n    }\n    return\
    \ $result;\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    foreach my\
    \ $elem1 (@$lst1) {\n        $lst1_even += $elem1 % 2;\n    }\n    foreach my\
    \ $elem2 (@$lst2) {\n        $lst2_even += $elem2 % 2;\n    }\n    return $lst1_even\
    \ == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $result = \"NO\";\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $lst1_even = 0;\n    my $lst2_even = 0;\n    foreach\
    \ my $elem1 (@$lst1) {\n        $i++;\n        if ($elem1 % 2 == 0) {\n      \
    \      $lst1_even++;\n        }\n    }\n    foreach my $elem2 (@$lst2) {\n   \
    \     $j++;\n        if ($elem2 % 2 == 0) {\n            $lst2_even++;\n     \
    \   }\n    }\n    if ($lst1_even == $lst2_even) {\n        $result = \"YES\";\n\
    \    }\n    return $result;\n}", "    my $lst1_even = 0;\n    my $lst2_even =\
    \ 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach my $i (@$lst1)\
    \ {\n        $lst1_even += $i % 2;\n        $lst1_odd += $i % 2;\n    }\n    foreach\
    \ my $i (@$lst2) {\n        $lst2_even += $i % 2;\n        $lst2_odd += $i % 2;\n\
    \    }\n    if ($lst1_odd == 0 && $lst2_odd == 0) {\n        return \"YES\";\n\
    \    }\n    return \"NO\";\n}", "    my $result = \"NO\";\n    my $count = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    while($i < length($lst1) and $j < length($lst2))\
    \ {\n        if($lst1[$i] % 2 == 0 and $lst2[$j] % 2 == 0) {\n            $count++;\n\
    \            $i++;\n            $j++;\n        } else if($lst1[$i] % 2 == 1 and\
    \ $lst2[$j] % 2 == 1) {\n            $count++;\n            $i++;\n          \
    \  $j++;\n        } else if($lst1[$i] % 2 == 0 and $lst2[$j] % 2 == 1) {\n   \
    \         $count++;\n            $i++;\n        } else if($lst1[$i] % 2 == 1 and\
    \ $lst2[$j] % 2 == 0) {\n            $count++;\n            $j++;\n        } else\
    \ {\n            $count++;\n            $i++;\n            $j++;\n        }\n\
    \    }\n    if($count == length($lst1)) {\n        $result = \"YES\";\n    }\n\
    \    return $result;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_161_solve
language: pl
prompt: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
  \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
  \ contains no letters, reverse the string.\n# The function should return the resulted\
  \ string.\n# Examples\n# >>> solve(\"1234\")\n# \"4321\"\n# >>> solve(\"ab\")\n\
  # \"AB\"\n# >>> solve(\"#a@C\")\n# \"#A@c\"\nsub solve {\n    my($s) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n\
  \        if(eq_deeply($candidate->(\"AsDf\"),\"aSdF\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1234\"\
  ),\"4321\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
  \   if(eq_deeply($candidate->(\"ab\"),\"AB\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  #AsdfW^45\"),\"#aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  #$a^D\"),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $result = $s;\n    for (my $i = 0; $i < length($s); $i++) {\n\
    \        if ($s[$i] =~ /[a-zA-Z]/) {\n            $result[$i] =~ s/[a-z]/lc $s[$i];\n\
    \        } else {\n            $result[$i] =~ s/[A-Z]/uc $s[$i];\n        }\n\
    \    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n    while\
    \ ($i < length($s)) {\n        my $c = $s[$i];\n        if ($c =~ /[a-zA-Z]/)\
    \ {\n            $result .= $c;\n        } else {\n            $result .= $c.toupper();\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    my $result =\
    \ $s;\n    my $i = 0;\n    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-z]/i)\
    \ {\n            $result =~ s/[a-z]/toupper($s[$i]),/i;\n        } else if ($s[$i]\
    \ =~ /[A-Z]/i) {\n            $result =~ s/[A-Z]/tolower($s[$i]),/i;\n       \
    \ } else {\n            $result =~ s/[^a-zA-Z]/tolower($s[$i]),/i;\n        }\n\
    \        $i++;\n    }\n    return $result;\n}\n", "    my $result;\n    if (not\
    \ $s) {\n        $result = $s;\n    }\n    else {\n        my $i = 0;\n      \
    \  while ($i < length($s)) {\n            if (isalpha($s[$i])) {\n           \
    \     $result .= substr($s, $i, 1).uc;\n            }\n            else {\n  \
    \              $result .= substr($s, $i, 1);\n            }\n            $i +=\
    \ 1;\n        }\n    }\n    return $result;\n}\n", "    my $result;\n    if ($s\
    \ =~ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc $s;\n    } else {\n        $result\
    \ =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n}\n", "    my $s =~ s/[a-z]/lc($s);\n\
    \    my $s =~ s/[A-Z]/uc($s);\n    return $s;\n}\n", "    my $result = $s;\n \
    \   my $i = 0;\n    while($i < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/)\
    \ {\n            $result =~ s/[a-z]/lc($s[$i]),/g;\n        } else {\n       \
    \     $result =~ s/[A-Z]/lc($s[$i]),/g;\n        }\n        $i++;\n    }\n   \
    \ return $result;\n}\n", "    my $result;\n    my $i = 0;\n    while ($i < length($s))\
    \ {\n        if (isalpha($s[$i])) {\n            $result .= substr($s, $i, 1).uc;\n\
    \        } else {\n            $result .= substr($s, $i, 1);\n        }\n    \
    \    $i++;\n    }\n    return $result;\n}\n", "    my $result = $s;\n    my $i\
    \ = 0;\n    while($i < length($s)) {\n        if(isalpha($s[$i])) {\n        \
    \    $result[$i] = $s[$i];\n            $result[$i] = $s[$i] = toupper($s[$i]);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    my $result;\n\
    \    if ($s =~ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc $s;\n    } else {\n\
    \        $result =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n}\n", "    my\
    \ $result = $s;\n    my $i = 0;\n    while ($i < length($s)) {\n        if ($s[$i]\
    \ =~ /[a-zA-Z]/) {\n            $result =~ s/[a-z]/lc($s[$i]),/g;\n        } else\
    \ {\n            $result =~ s/[A-Z]/uc($s[$i]),/g;\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    my $result = $s;\n    my $c = 0;\n   \
    \ while($c < length($s)) {\n        if(isalpha($s[$c])) {\n            $result\
    \ = substr($result, 0, $c) .\n                chr(toupper(substr($s, $c, 1)))\
    \ .\n                substr($result, $c + 1);\n        }\n        else {\n   \
    \         $result = substr($result, 0, $c) . substr($s, $c);\n        }\n    \
    \    $c += 1;\n    }\n    return $result;\n}\n", "    my $result;\n    my $i =\
    \ 0;\n    while($s[$i]) {\n        if($s[$i] >= 'a' && $s[$i] <= 'z') {\n    \
    \        $result .= $s[$i] . chr(($s[$i] - 'a' + 'A'));\n        } else {\n  \
    \          $result .= $s[$i];\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    my $result = $s;\n    for $i (0..strlen($s)-1) {\n        if ($s[$i]\
    \ =~ /[a-zA-Z]/) {\n            $result[$i] =~ /[a-z]/ ? \"A\" : \"a\";\n    \
    \    }\n    }\n    return $result;\n}\n", "    my $result = $s;\n    for my $i\
    \ (0..strlen($s)-1) {\n        if ($s[$i] =~ /[a-zA-Z]/) {\n            $result[$i]\
    \ =~ s/[a-z]/lc $s[$i];\n        } else {\n            $result[$i] =~ s/[A-Z]/uc\
    \ $s[$i];\n        }\n    }\n    return $result;\n}\n", "    my $result;\n   \
    \ if ($s =~ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc $s;\n    } else {\n \
    \       $result =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n}\n", "    my $result;\n\
    \    if ($s =~ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc $s;\n    } else {\n\
    \        $result =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n}\n", "    my\
    \ $result = $s;\n    my $i = 0;\n    while ($i < length($s)) {\n        if ($s[$i]\
    \ =~ /[a-z]/i) {\n            $result =~ s/[a-z]/lc($s[$i]),/i;\n        } else\
    \ {\n            $result =~ s/[A-Z]/uc($s[$i]),/i;\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    my $result;\n    if ($s =~ /[a-zA-Z]/)\
    \ {\n        $result =~ s/[a-z]/lc $s;\n    } else {\n        $result =~ s/[A-Z]/uc\
    \ $s;\n    }\n    return $result;\n}\n", "    my $s =~ s/[a-z]/lc($s);\n    my\
    \ $s =~ s/[A-Z]/uc($s);\n    return $s;\n}\n", "    my $result;\n    if ($s =~\
    \ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc $s;\n    } else {\n        $result\
    \ =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n}\n", "    my $result;\n    my\
    \ $i = 0;\n    while($s[$i]) {\n        if($s[$i] >= 'a' && $s[$i] <= 'z') {\n\
    \            $result .= $s[$i];\n            $s[$i] = $s[$i] - 'a' + 'A';\n  \
    \      } else if($s[$i] >= 'A' && $s[$i] <= 'Z') {\n            $result .= $s[$i];\n\
    \            $s[$i] = $s[$i] - 'A' + 'a';\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n        $i++;\n    }\n    return $result;\n}\n", "  \
    \  my $result;\n    my $i = 0;\n    while($i < length($s)) {\n        if($s[$i]\
    \ =~ /[a-zA-Z]/) {\n            $result .= $s[$i];\n            $s[$i] =~ /[a-z]/\
    \ ? \"A\" : \"a\";\n        }\n        else {\n            $result .= $s[$i];\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    my $result =\
    \ $s;\n    for $i (0..strlen($s)-1) {\n        if ($s[$i] =~ /[a-zA-Z]/) {\n \
    \           $result[$i] =~ s/([a-z])/lc($1),/;\n        }\n    }\n    return $result;\n\
    }\n", "    my $result = $s;\n    my $i = 0;\n    while ($i < length($s)) {\n \
    \       if (isalpha($s[$i])) {\n            $result =~ s/[a-z]/lc($s[$i]),/g;\n\
    \            $result =~ s/[A-Z]/uc($s[$i]),/g;\n        }\n        $i++;\n   \
    \ }\n    return $result;\n}\n", "    my $result = $s;\n    for $i (0..strlen($s)-1)\
    \ {\n        if ($s[$i] =~ /[a-zA-Z]/) {\n            $result[$i] =~ /[a-z]/ ?\
    \ \"A\" : \"a\";\n        } else {\n            $result[$i] =~ /[A-Z]/ ? \"a\"\
    \ : \"A\";\n        }\n    }\n    return $result;\n}\n", "    my $result;\n  \
    \  my $i = 0;\n    while($s[$i]) {\n        if($s[$i] >= 'a' && $s[$i] <= 'z')\
    \ {\n            $result .= $s[$i] . chr(($s[$i] - 'a' + 'A'));\n        } else\
    \ {\n            $result .= $s[$i];\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n", "    my $result = $s;\n    for my $i (0..strlen($s)-1) {\n \
    \       if ($s[$i] =~ /[a-z]/i) {\n            $result[$i] =~ s/[a-z]/toupper($s[$i]);\n\
    \        } else {\n            $result[$i] =~ s/[A-Z]/tolower($s[$i]);\n     \
    \   }\n    }\n    return $result;\n}\n", "    my $result = $s;\n    for (my $i\
    \ = 0; $i < length($s); $i++) {\n        if ($s[$i] =~ /[a-z]/i) {\n         \
    \   $result[$i] =~ s/[a-z]/[A-Z]/i;\n        } else {\n            $result[$i]\
    \ =~ s/[A-Z]/[a-z]/i;\n        }\n    }\n    return $result;\n}\n", "    my $result;\n\
    \    my $i;", "    my $result = $s;\n    my $i = 0;\n    while($i < length($s))\
    \ {\n        if($s[$i] =~ /[a-z]/i) {\n            $result =~ s/[a-z]/toupper($s[$i]),/i;\n\
    \        } else {\n            $result =~ s/[A-Z]/tolower($s[$i]),/i;\n      \
    \  }\n        $i++;\n    }\n    return $result;\n}\n", "    my $result = $s;\n\
    \    my $i = 0;\n    while($i < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/)\
    \ {\n            $result =~ s/[a-z]/lc $s[$i]/g;\n        } else {\n         \
    \   $result =~ s/[A-Z]/lc $s[$i]/g;\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n", "    my $result;\n    my $i = 0;\n    while($i < length($s))\
    \ {\n        if($s[$i] =~ /[a-zA-Z]/) {\n            $result .= $s[$i];\n    \
    \        $s[$i] =~ /[a-z]/ ? \"A\" : \"a\";\n        }\n        else {\n     \
    \       $result .= $s[$i];\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    my $result = $s;\n    my $c = 0;\n    while($s){\n        if($s =~\
    \ /[a-zA-Z]/){\n            $s =~ s/[a-z]/lc $1/;\n            $s =~ s/[A-Z]/uc\
    \ $1/;\n        }\n        else{\n            $s =~ s/[^a-zA-Z]/lc $1/;\n    \
    \        $s =~ s/[^A-Z]/uc $1/;\n        }\n        $c++;\n    }\n    if($c ==\
    \ 0){\n        $result =~ s/[^a-zA-Z]/lc $1/;\n        $result =~ s/[^A-Z]/uc\
    \ $1/;\n    }\n    return $result;\n}\n", "    my $result;\n    if ($s =~ /[a-zA-Z]/)\
    \ {\n        $result =~ s/[a-z]/lc $s;\n    } else {\n        $result =~ s/[A-Z]/uc\
    \ $s;\n    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n  \
    \  while ($i < length($s)) {\n        if ($s[$i] =~ /[a-z]/i) {\n            $result\
    \ .= $s[$i];\n            $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~\
    \ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i]\
    \ =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i {\
    \ $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i\
    \ { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i\
    \ { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i\
    \ { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i\
    \ { $s[$i] =~ /[a", "    my $s =~ s/[a-zA-Z]/lc($s);\n    return $s;\n}", "  \
    \  my $result;\n    my $i = 0;\n    while ($i < length($s)) {\n        if ($s[$i]\
    \ =~ /[a-z]/i) {\n            $result .= substr($s, $i, 1).uc;\n        } else\
    \ {\n            $result .= substr($s, $i, 1);\n        }\n        $i++;\n   \
    \ }\n    return $result;\n}\n", "    my $result = $s;\n    for $i (0..strlen($s)-1)\
    \ {\n        if ($s[$i] =~ /[a-z]/i) {\n            $result[$i] =~ s/([a-z])/\
    \ $1.lc();\n        } else {\n            $result[$i] =~ s/([A-Z])/ $1.uc();\n\
    \        }\n    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n\
    \    while($i < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/) {\n          \
    \  $result .= $s[$i];\n            $s[$i] =~ /[a-z]/ ? \"A\" : \"a\";\n      \
    \  }\n        else {\n            $result .= $s[$i];\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    my $result;\n    if ($s =~ /[a-zA-Z]/)\
    \ {\n        $result =~ s/[a-z]/lc $s;\n    } else {\n        $result =~ s/[A-Z]/uc\
    \ $s;\n    }\n    return $result;\n}\n", "    my $result = $s;\n    my $i = 0;\n\
    \    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-zA-Z]/) {\n        \
    \    $result =~ s/[a-z]/lc $s[$i]/g;\n        } else {\n            $result =~\
    \ s/[A-Z]/lc $s[$i]/g;\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    my $s =~ s/[a-z]/lc($s);\n    my $s =~ s/[A-Z]/uc($s);\n    return\
    \ $s;\n}\n", "    my $result;\n    if (length($s) == 0) {\n        $result = $s;\n\
    \    } else {\n        $result = \"\";\n        for my $i (0..length($s)-1) {\n\
    \            $result .= substr($s, $i, 1);\n            if ($s[$i] == \" \") {\n\
    \                $result .= \" \";\n            } else {\n                $result\
    \ .= substr($s, $i, 1).uc;\n            }\n        }\n    }\n    return $result;\n\
    }\n", "    my $result;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my\
    \ $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n\
    \    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my\
    \ $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n\
    \    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my\
    \ $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n\
    \    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my\
    \ $Z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n\
    \    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my\
    \ $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n\
    \    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my\
    \ $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n\
    \    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my\
    \ $M;\n    my $N;\n    my", "    my $result;\n    my $i = 0;\n    while($s[$i])\
    \ {\n        if(isalpha($s[$i])) {\n            $result .= $s[$i];\n         \
    \   $result =~ s/([a-z])/ $1 /g;\n            $result =~ s/([A-Z])/ $1 /g;\n \
    \       }\n        else {\n            $result .= $s[$i];\n        }\n       \
    \ $i++;\n    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n\
    \    while($s[$i]) {\n        if($s[$i] >= 'a' && $s[$i] <= 'z') {\n         \
    \   $result .= $s[$i] . chr(($s[$i] - 'a' + 'A'));\n        } else {\n       \
    \     $result .= $s[$i];\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    my $result;\n    if ($s =~ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc\
    \ $s;\n    } else {\n        $result =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n\
    }\n", "    my $s2 = $s;\n    my $s3 = \"\";\n    my $s4 = \"\";\n    my $s5 =\
    \ \"\";\n    my $s6 = \"\";\n    my $s7 = \"\";\n    my $s8 = \"\";\n    my $s9\
    \ = \"\";\n    my $s10 = \"\";\n    my $s11 = \"\";\n    my $s12 = \"\";\n   \
    \ my $s13 = \"\";\n    my $s14 = \"\";\n    my $s15 = \"\";\n    my $s16 = \"\"\
    ;\n    my $s17 = \"\";\n    my $s18 = \"\";\n    my $s19 = \"\";\n    my $s20\
    \ = \"\";\n    my $s21 = \"\";\n    my $s22 = \"\";\n    my $s23 = \"\";\n   \
    \ my $s24 = \"\";\n    my $s25 = \"\";\n    my $s26 = \"\";\n    my $s27 = \"\"\
    ;\n    my $s28 = \"\";\n    my $s29 = \"\";\n    my $s30 = \"\";\n    my $s31\
    \ = \"\";\n    my $s32 = \"\";\n    my $s33 = \"\";\n    my $s34 = \"\";\n   \
    \ my $s35 = \"\";\n    my $s36 = \"\";\n    my $s37 = \"\";\n    my $s38 = \"\"\
    ;\n    my $s39 = \"\";\n    my $s40 = \"\";\n    my $s41 = \"\";\n    my $s42\
    \ = \"\";\n    my $s43 = \"\";\n    my $s44 = \"\";\n    my $s45 = \"\";\n   \
    \ my $s46 = \"\";\n    my $s47 = \"\";\n    my $s48 = \"\";\n    my $s49 = \"\"\
    ;\n    my $s50 = \"\";\n    my $s51 = \"\";\n    my $s52 = \"\";\n    my $s53\
    \ = \"\";\n    my $s54 = \"\";\n    my $s55 = \"\";\n    my $s56 = \"\";\n   \
    \ my $s57 = \"\";\n    my $s58 = \"", "    my $result;\n    my $i = 0;\n    while($s[$i])\
    \ {\n        if($s[$i] >= 'a' && $s[$i] <= 'z') {\n            $result .= $s[$i]\
    \ . chr(($s[$i] - 'a' + 'A'));\n        } else {\n            $result .= $s[$i];\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    my $result;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n\
    \    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n\
    \    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n\
    \    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n\
    \    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n\
    \    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my", "    my $result;\n \
    \   if ($s =~ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc $s;\n    } else {\n\
    \        $result =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n}\n", "    my\
    \ $result = $s;\n    my $i = 0;\n    while($i < length($s)) {\n        if($s[$i]\
    \ =~ /[a-z]/i) {\n            $result =~ s/[a-z]/toupper($s[$i]);\n        } else\
    \ {\n            $result =~ s/[A-Z]/tolower($s[$i]);\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/){\n            $s[$i] =~ s/[a-z]/lc($s[$i]);\n\
    \        } else {\n            $s[$i] =~ s/[A-Z]/uc($s[$i]);\n        }\n    \
    \    $i++;\n    }\n    $result = $s;\n    return $result;\n}\n", "    my $result;\n\
    \    if (not $s) {\n        $result = $s;\n    }\n    else {\n        $result\
    \ = $s;\n        for $i (0..length($s)-1) {\n            if ($s[$i] =~ /[a-zA-Z]/)\
    \ {\n                $result[$i] =~ /[a-z]/ ? \"A\" : \"a\";\n            }\n\
    \            else {\n                $result[$i] =~ /[A-Z]/ ? \"a\" : \"A\";\n\
    \            }\n        }\n    }\n    return $result;\n}\n", "    my $result =\
    \ $s;\n    for $i (0..strlen($s)-1) {\n        if ($s[$i] =~ /[a-z]/i) {\n   \
    \         $result[$i] =~ s/([a-z])/ $1.lc();\n        } else {\n            $result[$i]\
    \ =~ s/([A-Z])/ $1.uc();\n        }\n    }\n    return $result;\n}\n", "    my\
    \ $result = $s;\n    my $i = 0;\n    while ($i < length($s)) {\n        if ($s[$i]\
    \ =~ /[a-zA-Z]/) {\n            $result[$i] =~ s/[a-z]/lc($s[$i]);\n        }\
    \ else {\n            $result[$i] =~ s/[A-Z]/uc($s[$i]);\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    my $result = $s;\n    my $i = 0;\n   \
    \ while ($i < length($s)) {\n        if (isalpha($s[$i])) {\n            $result[$i]\
    \ = islower($s[$i]) ? toupper($s[$i]) : tolower($s[$i]);\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    my $result;\n    if ($s =~ /[a-zA-Z]/)\
    \ {\n        $result = $s;\n        $s =~ s/[a-z]/lc $s;\n        $s =~ s/[A-Z]/uc\
    \ $s;\n        $s =~ s/[0-9]/lc $s;\n        $s =~ s/[^a-zA-Z0-9]/lc $s;\n   \
    \ }\n    else {\n        $result = $s;\n        $s =~ s/[^a-zA-Z]/lc $s;\n   \
    \ }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/) {\n            $result .=\
    \ $s[$i];\n            $s[$i] =~ /[a-z]/ ? \"A\" : \"a\";\n        }\n       \
    \ else {\n            $result .= $s[$i];\n        }\n        $i++;\n    }\n  \
    \  return $result;\n}\n", "    my $result;\n    if ($s =~ /[a-zA-Z]/) {\n    \
    \    $result =~ s/[a-z]/lc $s;\n    } else {\n        $result =~ s/[A-Z]/uc $s;\n\
    \    }\n    return $result;\n}\n", "    my $s =~ s/[a-zA-Z]/lc($s);\n    return\
    \ $s;\n}\n", "    my $result;\n    my $i = 0;\n    my $c;\n    while($i < length($s))\
    \ {\n        $c = substr($s, $i, 1);\n        if ($c =~ /[a-zA-Z]/) {\n      \
    \      $c =~ s/[a-z]/lc($c);\n            $c =~ s/[A-Z]/uc($c);\n        }\n \
    \       else {\n            $c =~ s/[a-z]/lc($c);\n            $c =~ s/[A-Z]/uc($c);\n\
    \        }\n        $s = substr($s, 0, $i) . $c . substr($s, $i + 1);\n      \
    \  $i += 1;\n    }\n    $result = $s;\n    return $result;\n}\n", "    my $result;\n\
    \    my $i;\n    my $c;", "    my $result;\n    my $i = 0;\n    while($i < length($s))\
    \ {\n        if(isalpha($s[$i])) {\n            $result .= $s[$i];\n         \
    \   $result .= $s[$i] = toupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n        $i++;\n    }\n    return $result;\n}\n", "  \
    \  my $result = $s;\n    my $i = 0;\n    while($i < length($s)) {\n        if($s[$i]\
    \ =~ /[a-zA-Z]/) {\n            $result =~ s/[a-z]/lc($s[$i]),/g;\n        } else\
    \ {\n            $result =~ s/[A-Z]/uc($s[$i]),/g;\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n    while($s[$i])\
    \ {\n        if(isalpha($s[$i])) {\n            $result .= $s[$i];\n         \
    \   $result =~ s/\\b\\w+\\b/\\w+/g;\n            $result =~ s/\\b\\w+\\b/\\w+/g;\n\
    \        }\n        else {\n            $result .= $s[$i];\n        }\n      \
    \  $i++;\n    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n\
    \    while($s[$i]) {\n        if($s[$i] == '#') {\n            $result .= $s[$i];\n\
    \            $i++;\n            while($s[$i] && $s[$i] != '@') {\n           \
    \     $result .= $s[$i];\n                $i++;\n            }\n            $i++;\n\
    \            $result .= $s[$i];\n            $i++;\n        } else {\n       \
    \     $result .= $s[$i];\n            $i++;\n        }\n    }\n    $result .=\
    \ $s[$i];\n    return $result;\n}\n", "    my $result = $s;\n    my $i = 0;\n\
    \    while($i < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/){\n           \
    \ $result =~ s/[a-z]/lc($s[$i]),/g;\n        }\n        else {\n            $result\
    \ =~ s/[A-Z]/lc($s[$i]),/g;\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    my $result;\n    my $i;\n    my $c;\n    my $c_lower;\n    my $c_upper;\n\
    \    my $c_lower_new;\n    my $c_upper_new;\n    my $c_lower_old;\n    my $c_upper_old;\n\
    \    my $c_lower_new_old;\n    my $c_upper_new_old;\n    my $c_lower_old_old;\n\
    \    my $c_upper_old_old;\n    my $c_lower_new_old_old;\n    my $c_upper_new_old_old;\n\
    \    my $c_lower_old_old_old;\n    my $c_upper_old_old_old;\n    my $c_lower_new_old_old_old;\n\
    \    my $c_upper_new_old_old_old;\n    my $c_lower_old_old_old_old;\n    my $c_upper_old_old_old_old;\n\
    \    my $c_lower_new_old_old_old_old;\n    my $c_upper_new_old_old_old_old;\n\
    \    my $c_lower_old_old_old_old_old;\n    my $c_upper_old_old_old_old_old;\n\
    \    my $c_lower_new_old_old_old_old_old;\n    my $c_upper_new_old_old_old_old_old;\n\
    \    my $c_lower_old_old_old_old_old_old;\n    my $c_upper_old_old_old_old_old_old;\n\
    \    my $c_lower_new_old_old_old_old_old_old;\n    my $c_upper_new_old_old_old_old_old_old;\n\
    \    my $c_lower_old_old_old_old_old_old_old;\n    my $c_upper_old_old_old_old_old_old_old;\n\
    \    my $c_lower_new_old_old_old_old_old_old_old;\n    my $c_upper", "    my $s2\
    \ = $s;\n    my $s3 = \"\";\n    my $s4 = \"\";\n    my $s5 = \"\";\n    my $s6\
    \ = \"\";\n    my $s7 = \"\";\n    my $s8 = \"\";\n    my $s9 = \"\";\n    my\
    \ $s10 = \"\";\n    my $s11 = \"\";\n    my $s12 = \"\";\n    my $s13 = \"\";\n\
    \    my $s14 = \"\";\n    my $s15 = \"\";\n    my $s16 = \"\";\n    my $s17 =\
    \ \"\";\n    my $s18 = \"\";\n    my $s19 = \"\";\n    my $s20 = \"\";\n    my\
    \ $s21 = \"\";\n    my $s22 = \"\";\n    my $s23 = \"\";\n    my $s24 = \"\";\n\
    \    my $s25 = \"\";\n    my $s26 = \"\";\n    my $s27 = \"\";\n    my $s28 =\
    \ \"\";\n    my $s29 = \"\";\n    my $s30 = \"\";\n    my $s31 = \"\";\n    my\
    \ $s32 = \"\";\n    my $s33 = \"\";\n    my $s34 = \"\";\n    my $s35 = \"\";\n\
    \    my $s36 = \"\";\n    my $s37 = \"\";\n    my $s38 = \"\";\n    my $s39 =\
    \ \"\";\n    my $s40 = \"\";\n    my $s41 = \"\";\n    my $s42 = \"\";\n    my\
    \ $s43 = \"\";\n    my $s44 = \"\";\n    my $s45 = \"\";\n    my $s46 = \"\";\n\
    \    my $s47 = \"\";\n    my $s48 = \"\";\n    my $s49 = \"\";\n    my $s50 =\
    \ \"\";\n    my $s51 = \"\";\n    my $s52 = \"\";\n    my $s53 = \"\";\n    my\
    \ $s54 = \"\";\n    my $s55 = \"\";\n    my $s56 = \"\";\n    my $s57 = \"\";\n\
    \    my $s58 = \"", "    my $result;\n    if ($s =~ /[a-zA-Z]/) {\n        $result\
    \ =~ s/[a-z]/lc $s;\n    } else {\n        $result =~ s/[A-Z]/uc $s;\n    }\n\
    \    return $result;\n}\n", "    my $result;\n    if ($s =~ /[a-zA-Z]/) {\n  \
    \      $result =~ s/[a-z]/lc $s;\n    }\n    else {\n        $result =~ s/[A-Z]/uc\
    \ $s;\n    }\n    return $result;\n}\n", "    my $result = $s;\n    my $i = 0;\n\
    \    while($i < length($s)) {\n        if(isalpha($s[$i])) {\n            $result[$i]\
    \ = islower($s[$i]) ? toupper($s[$i]) : tolower($s[$i]);\n        } else {\n \
    \           $result[$i] = $s[$i];\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n", "    my $result = $s;\n    my $i = 0;\n    while ($i < length($s))\
    \ {\n        if ($s[$i] =~ /[a-z]/i) {\n            $result =~ s/[a-z]/lc($s[$i]);\n\
    \        } else {\n            $result =~ s/[A-Z]/uc($s[$i]);\n        }\n   \
    \     $i++;\n    }\n    return $result;\n}\n", "    my $result = $s;\n    my $i\
    \ = 0;\n    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-z]/i) {\n   \
    \         $result =~ s/[a-z]/lc($s[$i]),/i;\n        } else {\n            $result\
    \ =~ s/[A-Z]/uc($s[$i]),/i;\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    my $result;\n    my $i = 0;\n    while ($i < length($s)) {\n      \
    \  if ($s[$i] =~ /[a-zA-Z]/i) {\n            $result .= $s[$i];\n            $s[$i]\
    \ =~ /[a-z]/i ? \"A\" : \"a\";\n        }\n        else {\n            $result\
    \ .= $s[$i];\n        }\n        $i++;\n    }\n    return $result;\n}\n", "  \
    \  my $result;\n    if ($s =~ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc $s;\n\
    \    } else {\n        $result =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n\
    }\n", "    my $result = $s;\n    for (my $i = 0; $i < length($s); $i++) {\n  \
    \      if ($s[$i] =~ /[a-zA-Z]/) {\n            $result[$i] = $s[$i] =~ /[a-z]/\
    \ ? \"A\" : \"a\";\n        }\n    }\n    return $result;\n}\n", "    my $result;\n\
    \    my $i = 0;\n    while($s[$i]) {\n        if(isalpha($s[$i])) {\n        \
    \    $result .= $s[$i];\n            $result =~ s/\\b\\w+\\b/\\w+/g;\n       \
    \     $result =~ s/\\b\\w+\\b/\\w+/g;\n        }\n        else {\n           \
    \ $result .= $s[$i];\n        }\n        $i++;\n    }\n    return $result;\n}\n",
  "    my $result;\n    if (length($s) == 0) {\n        $result = $s;\n    } else\
    \ {\n        $result = \"\";\n        for $i (0..length($s)-1) {\n           \
    \ $c = $s[$i];\n            if ($c >= \"a\" && $c <= \"z\") {\n              \
    \  $c = $c.lc();\n            } else if ($c >= \"A\" && $c <= \"Z\") {\n     \
    \           $c = $c.uc();\n            } else {\n                $c = $c;\n  \
    \          }\n            $result .= $c;\n        }\n    }\n    return $result;\n\
    }\n", "    my $result;\n    my $i;\n    my $c;\n    my $c1;\n    my $c2;\n   \
    \ my $c3;\n    my $c4;\n    my $c5;\n    my $c6;\n    my $c7;\n    my $c8;\n \
    \   my $c9;\n    my $c10;\n    my $c11;\n    my $c12;\n    my $c13;\n    my $c14;\n\
    \    my $c15;\n    my $c16;\n    my $c17;\n    my $c18;\n    my $c19;\n    my\
    \ $c20;\n    my $c21;\n    my $c22;\n    my $c23;\n    my $c24;\n    my $c25;\n\
    \    my $c26;\n    my $c27;\n    my $c28;\n    my $c29;\n    my $c30;\n    my\
    \ $c31;\n    my $c32;\n    my $c33;\n    my $c34;\n    my $c35;\n    my $c36;\n\
    \    my $c37;\n    my $c38;\n    my $c39;\n    my $c40;\n    my $c41;\n    my\
    \ $c42;\n    my $c43;\n    my $c44;\n    my $c45;\n    my $c46;\n    my $c47;\n\
    \    my $c48;\n    my $c49;\n    my $c50;\n    my $c51;\n    my $c52;\n    my\
    \ $c53;\n    my $c54;\n    my $c55;\n    my $c56;\n    my $c57;\n    my $c58;\n\
    \    my $c59;\n    my $c60;\n    my $c61;\n    my $c62;\n    my $c63;\n    my\
    \ $c64;\n    my $c65;\n    my $c66;\n    my $c67;\n    my $c68;\n    my $c69;\n\
    \    my $c70;\n    my $c", "    my $result;\n    my $i = 0;\n    while($s[$i])\
    \ {\n        if(isalpha($s[$i])) {\n            $result .= substr($s, $i, 1).uc;\n\
    \        } else {\n            $result .= substr($s, $i, 1);\n        }\n    \
    \    $i++;\n    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n\
    \    my $c = 0;\n    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-zA-Z]/)\
    \ {\n            $c++;\n            if ($c % 2) {\n                $result .=\
    \ $s[$i];\n            } else {\n                $result .= $s[$i].toupper();\n\
    \            }\n        } else {\n            $result .= $s[$i];\n        }\n\
    \        $i++;\n    }\n    return $result;\n}\n", "    my $result;\n    if ($s\
    \ =~ /[a-z]/i) {\n        $result =~ s/[a-z]/lc $s;\n    } else {\n        $result\
    \ =~ s/[A-Z]/lc $s;\n    }\n    return $result;\n}\n", "    my $result;\n    my\
    \ $i = 0;\n    while ($i < length($s)) {\n        if (isalpha($s[$i])) {\n   \
    \         $result .= $s[$i];\n            $result =~ s/([a-z])/ $1 /g;\n     \
    \       $result =~ s/([A-Z])/ $1 /g;\n        }\n        else {\n            $result\
    \ .= $s[$i];\n        }\n        $i++;\n    }\n    return $result;\n}\n", "  \
    \  my $result = $s;\n    my $i = 0;\n    while($i < length($s)) {\n        if($s[$i]\
    \ =~ /[a-zA-Z]/) {\n            $result =~ s/[a-z]/lc $s[$i]/g;\n        } else\
    \ {\n            $result =~ s/[A-Z]/lc $s[$i]/g;\n        }\n        $i++;\n \
    \   }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n    my $len\
    \ = length($s);\n    while($i < $len) {\n        if($s[$i] =~ /[a-zA-Z]/) {\n\
    \            $result .= $s[$i];\n            $i++;\n        } else {\n       \
    \     $result .= $s[$i];\n            $i++;\n        }\n    }\n    return $result;\n\
    }\n", "    my $result = $s;\n    for (my $i = 0; $i < length($s); $i++) {\n  \
    \      if ($s[$i] =~ /[a-z]/i) {\n            $result[$i] =~ s/[a-z]/[A-Z]/i;\n\
    \        } else {\n            $result[$i] =~ s/[A-Z]/[a-z]/i;\n        }\n  \
    \  }\n    return $result;\n}\n", "    my $result;\n    if (length($s) == 0) {\n\
    \        $result = $s;\n    } else {\n        $result = \"\";\n        for my\
    \ $i (0..length($s)-1) {\n            $result .= substr($s, $i, 1) . substr($s,\
    \ $i, 1).uc;\n        }\n    }\n    return $result;\n}\n", "    my $result = $s;\n\
    \    my $i = 0;\n    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-zA-Z]/\
    \ && $s[$i] != ' ') {\n            $result =~ s/[a-z]/lc $s[$i]/g;\n        }\
    \ else {\n            $result =~ s/[A-Z]/lc $s[$i]/g;\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/){\n            $s[$i] =~ s/[a-z]/lc($s[$i]);\n\
    \        }\n        else {\n            $s[$i] =~ s/[A-Z]/uc($s[$i]);\n      \
    \  }\n        $i++;\n    }\n    $result = $s;\n    return $result;\n}\n", "  \
    \  my $result;\n    my $i = 0;\n    while ($i < length($s)) {\n        if (isalpha($s[$i]))\
    \ {\n            $result .= $s[$i];\n            $s[$i] = $s[$i] . toupper();\n\
    \        } else {\n            $s[$i] = $s[$i] . tolower();\n        }\n     \
    \   $i++;\n    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n\
    \    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-zA-Z]/i) {\n       \
    \     $result .= $s[$i];\n            $s[$i] =~ s/^./ /i;\n            $s[$i]\
    \ =~ s/./ /i;\n        }\n        else {\n            $result .= $s[$i];\n   \
    \     }\n        $i++;\n    }\n    return $result;\n}\n", "    my $result = $s;\n\
    \    my $i = 0;\n    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-zA-Z]/)\
    \ {\n            $result =~ s/[a-z]/lc $s[$i]/g;\n        } else {\n         \
    \   $result =~ s/[A-Z]/lc $s[$i]/g;\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n", "    my $result = $s;\n    my $i = 0;\n    while ($i < length($s))\
    \ {\n        if (isalpha($s[$i])) {\n            $result[$i] = islower($s[$i])\
    \ ? toupper($s[$i]) : tolower($s[$i]);\n        } else {\n            $result[$i]\
    \ = $s[$i];\n        }\n        $i++;\n    }\n    return $result;\n}\n", "   \
    \ my $result;\n    my $i = 0;\n    while($s[$i]) {\n        if($s[$i] =~ /[a-zA-Z]/){\n\
    \            $result .= $s[$i];\n            $s[$i] =~ /[a-z]/ ? \"A\" : \"a\"\
    ;\n        }\n        else {\n            $result .= $s[$i];\n        }\n    \
    \    $i++;\n    }\n    $result;\n}\n", "    my $result;\n    if ($s =~ /[a-zA-Z]/)\
    \ {\n        $result =~ s/[a-z]/lc $s;\n    } else {\n        $result =~ s/[A-Z]/uc\
    \ $s;\n    }\n    return $result;\n}\n", "    my $result = $s;\n    for $i (0..strlen($s)-1)\
    \ {\n        $c = $s[$i];\n        if ($c >= 'a' && $c <= 'z') {\n           \
    \ $result[$i] = $c.lc();\n        } else {\n            $result[$i] = $c;\n  \
    \      }\n    }\n    return $result;\n}\n", "    my $result;\n    if (not $s)\
    \ {\n        $result = $s;\n    } else {\n        my $c = 0;\n        my $l =\
    \ length($s);\n        while ($c < $l) {\n            my $i = $c;\n          \
    \  my $c = $c + 1;\n            my $c1 = $c;\n            my $c2 = $c + 1;\n \
    \           if ($s[$i] =~ /[a-z]/i) {\n                $c1 = $c2;\n          \
    \      $c2 = $c;\n            }\n            $s[$i] =~ s/[a-z]/lc($s[$i]);\n \
    \           if ($c1 < $c2) {\n                $c = $c2;\n            }\n     \
    \   }\n        $result = $s;\n    }\n    return $result;\n}\n", "    my $result\
    \ = $s;\n    for $i (0..strlen($s)-1) {\n        if ($s[$i] =~ /[a-zA-Z]/) {\n\
    \            $result[$i] =~ s/[a-z]/lc $s[$i];\n        } else {\n           \
    \ $result[$i] =~ s/[A-Z]/uc $s[$i];\n        }\n    }\n    return $result;\n}\n",
  "    my $result;\n    my $i = 0;\n    while($s[$i]) {\n        if($s[$i] >= 'a'\
    \ && $s[$i] <= 'z') {\n            $result .= $s[$i];\n            $s[$i] = $s[$i]\
    \ - 'a' + 'A';\n        } else if($s[$i] >= 'A' && $s[$i] <= 'Z') {\n        \
    \    $result .= $s[$i];\n            $s[$i] = $s[$i] - 'A' + 'a';\n        } else\
    \ {\n            $result .= $s[$i];\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n", "    my $result = $s;\n    my $i = 0;\n    while($i < length($s))\
    \ {\n        if($s[$i] =~ /[a-zA-Z]/) {\n            $result =~ s/[a-z]/lc($s[$i]),/g;\n\
    \        } else {\n            $result =~ s/[A-Z]/lc($s[$i]),/g;\n        }\n\
    \        $i++;\n    }\n    return $result;\n}\n", "    my $result = $s;\n    my\
    \ $i = 0;\n    while($i < length($s)) {\n        if(isalpha($s[$i])) {\n     \
    \       $result[$i] = $s[$i];\n            $result[$i] = toupper($s[$i]);\n  \
    \      } else {\n            $result[$i] = $s[$i];\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    my $result = $s;\n    my $i = 0;\n   \
    \ while ($i < length($s)) {\n        if (isalpha($s[$i])) {\n            $result[$i]\
    \ = islower($s[$i]) ? toupper($s[$i]) : tolower($s[$i]);\n        } else {\n \
    \           $result[$i] = $s[$i];\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n", "    my $result = $s;\n    for (my $i = 0; $i < length($s);\
    \ $i++) {\n        if (isalpha($s[$i])) {\n            $result[$i] = islower($s[$i])\
    \ ? toupper($s[$i]) : tolower($s[$i]);\n        } else {\n            $result[$i]\
    \ = $s[$i];\n        }\n    }\n    return $result;\n}\n", "    my $s =~ s/[a-zA-Z]/lc($s);\n\
    \    return $s;\n}\n", "    my $result = $s;\n    for my $i (0..strlen($s)-1)\
    \ {\n        if ($s[$i] =~ /[a-z]/i) {\n            $result[$i] =~ s/[a-z]/toupper($s[$i]);\n\
    \        } else {\n            $result[$i] =~ s/[A-Z]/tolower($s[$i]);\n     \
    \   }\n    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n  \
    \  while($s[$i]) {\n        if($s[$i] == ' ') {\n            $i++;\n         \
    \   continue;\n        }\n        if($s[$i] >= 'a' && $s[$i] <= 'z') {\n     \
    \       $result .= $s[$i];\n        } else {\n            $result .= $s[$i];\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    my $result;\n\
    \    my $i = 0;\n    my $c;\n    my $c_lower;\n    my $c_upper;\n    my $c_lower_upper;\n\
    \    my $c_upper_lower;\n    my $c_lower_upper_lower;\n    my $c_upper_lower_upper;\n\
    \    my $c_lower_upper_lower_upper;\n    my $c_upper_lower_upper_lower;\n    my\
    \ $c_lower_upper_lower_upper_lower;\n    my $c_lower_upper_lower_upper_lower_upper;\n\
    \    my $c_lower_upper_lower_upper_lower_upper_lower;\n    my $c_lower_upper_lower_upper_lower_upper_lower_upper;\n\
    \    my $c_lower_upper_lower_upper_lower_upper_lower_upper_lower;\n    my $c_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper;\n\
    \    my $c_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower;\n\
    \    my $c_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper;\n\
    \    my $c_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower;\n\
    \    my $c_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper;\n\
    \    my $c_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower;\n\
    \    my $c_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper;\n\
    \    my $c_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower;\n\
    \    my $c_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper",
  "    my $s =~ s/[a-zA-Z]/lc($s);\n    return $s;\n}\n", "    my $result;\n    my\
    \ $i = 0;\n    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-z]/i) {\n\
    \            $result .= $s[$i];\n            $s[$i] =~ s/^./ /;\n        }\n \
    \       else {\n            $result .= $s[$i];\n        }\n        $i++;\n   \
    \ }\n    return $result;\n}\n", "    my $result;\n    my $i;\n    my $c;", " \
    \   my $result = $s;\n    my $i = 0;\n    while($i < length($s)) {\n        if($s[$i]\
    \ =~ /[a-zA-Z]/){\n            $result =~ s/[a-z]/lc($s[$i]),/g;\n        } else\
    \ {\n            $result =~ s/[A-Z]/uc($s[$i]),/g;\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    my $s =~ s/[a-zA-Z]/lc $s;\n    return\
    \ $s;\n}\n", "    my $result;\n    my $i = 0;\n    while($i < length($s)) {\n\
    \        if($s[$i] =~ /[a-zA-Z]/) {\n            $result .= $s[$i];\n        \
    \    $result .= $1 if $s[$i] =~ /[a-z]/;\n            $result .= $2 if $s[$i]\
    \ =~ /[A-Z]/;\n        }\n        else {\n            $result .= $s[$i];\n   \
    \     }\n        $i++;\n    }\n    return $result;\n}\n", "    my $result;\n \
    \   if ($s =~ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc $s;\n    } else {\n\
    \        $result =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n}\n", "    my\
    \ $result;\n    my $i;\n    my $j;", "    my $result;\n    my $i = 0;\n    while($s[$i])\
    \ {\n        if(isalpha($s[$i])) {\n            $result .= $s[$i];\n         \
    \   $result .= $s[$i] = toupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n        $i++;\n    }\n    return $result;\n}\n", "  \
    \  my $result;\n    if ($s =~ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc $s;\n\
    \    } else {\n        $result =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n\
    }\n", "    my $result;\n    if ($s =~ /[a-z]/i) {\n        $result =~ s/[a-z]/lc($s);\n\
    \    } else {\n        $result =~ s/[A-Z]/uc($s);\n    }\n    return $result;\n\
    }\n", "    my $result = $s;\n    my $i = 0;\n    while ($i < length($s)) {\n \
    \       if ($s[$i] =~ /[a-zA-Z]/) {\n            $result =~ s/[a-z]/lc $s[$i]/g;\n\
    \        } else {\n            $result =~ s/[A-Z]/lc $s[$i]/g;\n        }\n  \
    \      $i++;\n    }\n    return $result;\n}\n", "    my $result;\n    my $i =\
    \ 0;\n    while($i < length($s)) {\n        if(isalpha($s[$i])) {\n          \
    \  $result .= substr($s, $i, 1).uc;\n        } else {\n            $result .=\
    \ substr($s, $i, 1);\n        }\n        $i++;\n    }\n    return $result;\n}\n",
  "    my $result;\n    my $i = 0;\n    my $c;\n    while($i < length($s)) {\n   \
    \     $c = $s[$i];\n        if ($c =~ /[a-zA-Z]/) {\n            $s[$i] = $s[$i]\
    \ =~ /[a-z]/ ? $s[$i] =~ /[A-Z]/ ? $s[$i] =~ /[a-z]/ ? $s[$i] =~ /[A-Z]/ ? $s[$i]\
    \ =~ /[a-z]/ ? $s[$i] =~ /[A-Z]/ ? $s[$i] =~ /[a-z]/ ? $s[$i] =~ /[A-Z]/ ? $s[$i]\
    \ =~ /[a-z]/ ? $s[$i] =~ /[A-Z]/ ? $s[$i] =~ /[a-z]/ ? $s[$i] =~ /[A-Z]/ ? $s[$i]\
    \ =~ /[a-z]/ ? $s[$i] =~ /[A-Z]/ ? $s[$i] =~ /[a-z]/ ? $s[$i] =~ /[A-Z]/ ? $s[$i]\
    \ =~ /[a-z]/ ? $s[$i] =~ /[A-Z]/ ? $s[$i] =~ /[a-z]/ ? $s[$i] =~ /[A-Z]/ ? $s[$i]\
    \ =~ /[a-z]/ ? $s[$i] =~ /[A-Z]/ ? $s[$i] =~ /[a-z]/ ? $s[$i] =~ /[A-Z]/ ? $s[$i]\
    \ =~ /[a-z]/ ? $s[$i] =~ /[A-Z]/ ? $s[$i] =~ /[a-z]/ ? $s[$i] =~ /[A-", "    my\
    \ $result;\n    my $i = 0;\n    while($i < length($s)) {\n        if(isalpha($s[$i]))\
    \ {\n            $result .= $s[$i];\n            $s[$i] = $s[$i] . toupper();\n\
    \        } else {\n            $s[$i] = $s[$i] . tolower();\n        }\n     \
    \   $i++;\n    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n\
    \    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-z]/i) {\n          \
    \  $s[$i] =~ s/^./ /;\n        } else {\n            $s[$i] =~ s/^./ /;\n    \
    \    }\n        $i++;\n    }\n    $result = $s;\n    return $result;\n}\n", " \
    \   my $result;\n    if ($s =~ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc $s;\n\
    \    } else {\n        $result =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n\
    }\n", "    my $result = $s;\n    my $i = 0;\n    while($i < length($s)) {\n  \
    \      if(isalpha($s[$i])) {\n            $result = substr($result, 0, $i) . chr(toupper($s[$i]));\n\
    \            $i += 1;\n        } else {\n            $result = substr($result,\
    \ 0, $i) . substr($s, $i, 1);\n            $i += 1;\n        }\n    }\n    return\
    \ $result;\n}\n", "    my $result;\n    if (length($s) == 0) {\n        $result\
    \ = $s;\n    }\n    else {\n        my $i = 0;\n        while ($i < length($s))\
    \ {\n            if ($s[$i] =~ /[a-zA-Z]/) {\n                $s[$i] =~ s/([a-z])/lc($1),/;\n\
    \            }\n            else {\n                $s[$i] =~ s/([A-Z])/lc($1),/;\n\
    \            }\n            $i++;\n        }\n        $result = $s;\n    }\n \
    \   return $result;\n}\n", "    my $result;\n    my $i = 0;\n    while($i < length($s))\
    \ {\n        if($s[$i] =~ /[a-z]/i) {\n            $result .= $s[$i];\n      \
    \      $s[$i] =~ /[a-z]/i && $s[$i] == $s[$i] || $s[$i] == $s[$i].toUpper();\n\
    \        }\n        else {\n            $result .= $s[$i];\n        }\n      \
    \  $i++;\n    }\n    return $result;\n}\n", "    my $result = $s;\n    my $i =\
    \ 0;\n    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-zA-Z]/) {\n   \
    \         $result =~ s/[a-z]/lc $s[$i]/g;\n        } else {\n            $result\
    \ =~ s/[A-Z]/lc $s[$i]/g;\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    my $result;\n    my $i = 0;\n    while($s[$i]) {\n        if($s[$i]\
    \ >= 'a' && $s[$i] <= 'z') {\n            $result .= $s[$i] . chr(($s[$i] - 'a'\
    \ + 'A'));\n        } else {\n            $result .= $s[$i];\n        }\n    \
    \    $i++;\n    }\n    return $result;\n}\n", "    my $result;\n    if (not $s)\
    \ {\n        $result = $s;\n    }\n    else {\n        my $i = 0;\n        while\
    \ ($i < length($s)) {\n            if ($s[$i] =~ /[a-zA-Z]/) {\n             \
    \   $s[$i] =~ s/[a-z]/lc($s[$i]);\n            }\n            else {\n       \
    \         $s[$i] =~ s/[A-Z]/uc($s[$i]);\n            }\n            $i++;\n  \
    \      }\n        $result = $s;\n    }\n    return $result;\n}\n", "    my $result\
    \ = $s;\n    my $i = 0;\n    while($i < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/)\
    \ {\n            $result =~ s/[a-z]/lc $s[$i]/g;\n        } else {\n         \
    \   $result =~ s/[A-Z]/lc $s[$i]/g;\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n", "    my $result = $s;\n    my $i = 0;\n    while($i < length($s))\
    \ {\n        if($s[$i] =~ /[a-zA-Z]/) {\n            $result =~ s/[a-z]/lc($s[$i]),/g;\n\
    \        } else {\n            $result =~ s/[A-Z]/uc($s[$i]),/g;\n        }\n\
    \        $i++;\n    }\n    return $result;\n}\n", "    my $result;\n    my $i\
    \ = 0;\n    while($i < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/){\n    \
    \        $result .= $s[$i];\n            $s[$i] =~ /[a-z]/ ? \"A\" : \"a\";\n\
    \        }\n        else {\n            $result .= $s[$i];\n        }\n      \
    \  $i++;\n    }\n    return $result;\n}\n", "    my $result = $s;\n    for $i\
    \ (0..strlen($s)-1) {\n        $ch = $s[$i];\n        if ($ch =~ /[a-zA-Z]/) {\n\
    \            $ch = $ch =~ /^./;\n            $ch = $ch =~ s/^./ /i;\n        \
    \    $ch = $ch =~ s/^./ /i;\n            $ch = $ch =~ s/^./ /i;\n            $ch\
    \ = $ch =~ s/^./ /i;\n            $ch = $ch =~ s/^./ /i;\n            $ch = $ch\
    \ =~ s/^./ /i;\n            $ch = $ch =~ s/^./ /i;\n            $ch = $ch =~ s/^./\
    \ /i;\n            $ch = $ch =~ s/^./ /i;\n            $ch = $ch =~ s/^./ /i;\n\
    \            $ch = $ch =~ s/^./ /i;\n            $ch = $ch =~ s/^./ /i;\n    \
    \        $ch = $ch =~ s/^./ /i;\n            $ch = $ch =~ s/^./ /i;\n        \
    \    $ch = $ch =~ s/^./ /i;\n            $ch = $ch =~ s/^./ /i;\n            $ch\
    \ = $ch =~ s/^./ /i;\n            $ch = $ch =~ s/^./ /i;\n            $ch = $ch\
    \ =~ s/^./ /i;\n            $ch = $ch =~ s/^./ /i;\n            $ch = $ch =~ s/^./\
    \ /i;\n            $ch = $ch =~ s/^./ /i;\n            $ch = $ch =~ s/^./ /i;\n\
    \            $ch = $ch =~ s/^./ /i;\n            $ch = $ch =~ s/^./ /i;\n    \
    \        $ch = $ch =~ s/^./ /i;\n            $ch = $ch =~ s/^./ /i;\n        \
    \    $ch = $ch =~ s/^./ /", "    my $result;\n    my $i = 0;\n    while ($i <\
    \ length($s)) {\n        if ($s[$i] =~ /[a-zA-Z]/i) {\n            $result .=\
    \ substr($s, $i, 1).uc;\n        } else {\n            $result .= substr($s, $i,\
    \ 1);\n        }\n        $i += 1;\n    }\n    return $result;\n}\n", "    my\
    \ $result;\n    if ($s =~ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc $s;\n \
    \   } else {\n        $result =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n\
    }\n", "    my $result;\n    if ($s =~ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc\
    \ $s;\n    } else {\n        $result =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n\
    }\n", "    my $result = $s;\n    my $i = 0;\n    while($i < length($s)) {\n  \
    \      if($s[$i] =~ /[a-zA-Z]/) {\n            $result =~ s/[a-z]/lc $s[$i]/g;\n\
    \        } else {\n            $result =~ s/[A-Z]/lc $s[$i]/g;\n        }\n  \
    \      $i++;\n    }\n    return $result;\n}\n", "    my $result;\n    my $i =\
    \ 0;\n    while($s[$i]) {\n        if($s[$i] =~ /[a-zA-Z]/){\n            $s[$i]\
    \ =~ s/[a-z]/lc($s[$i]);\n        } else {\n            $s[$i] =~ s/[A-Z]/uc($s[$i]);\n\
    \        }\n        $i++;\n    }\n    $result = $s;\n    return $result;\n}\n",
  "    my $result;\n    my $i = 0;\n    while ($i < length($s)) {\n        if ($s[$i]\
    \ =~ /[a-zA-Z]/i) {\n            $result .= $s[$i];\n            $i++;\n     \
    \   } else {\n            $result .= $s[$i];\n            $i++;\n        }\n \
    \   }\n    return $result;\n}\n", "    my $result;\n    if ($s =~ /[a-z]/i) {\n\
    \        $result =~ s/[a-z]/lc $s;\n    } else {\n        $result =~ s/[A-Z]/uc\
    \ $s;\n    }\n    return $result;\n}\n", "    my $result;\n    if ($s =~ /[a-zA-Z]/)\
    \ {\n        $result = $s;\n        $s =~ s/[a-z]/lc($s);\n        $s =~ s/[A-Z]/uc($s);\n\
    \        $result = $s;\n    } else {\n        $result = $s;\n    }\n    return\
    \ $result;\n}\n", "    my $result;\n    my $i = 0;\n    while ($i < length($s))\
    \ {\n        if ($s[$i] =~ /[a-zA-Z]/ && $s[$i] =~ /[a-zA-Z]/){\n            $result\
    \ .= $s[$i];\n        } else {\n            $result .= $s[$i];\n        }\n  \
    \      $i++;\n    }\n    return $result;\n}\n", "    my $result = $s;\n    for\
    \ $i (0..strlen($s)-1) {\n        if ($s[$i] =~ /[a-zA-Z]/) {\n            $result[$i]\
    \ =~ s/[a-z]/lc($s[$i]);\n        } else {\n            $result[$i] =~ s/[A-Z]/uc($s[$i]);\n\
    \        }\n    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n\
    \    while($s[$i]) {\n        if(isalpha($s[$i])) {\n            $result .= substr($s,\
    \ $i, 1).uc;\n        } else {\n            $result .= substr($s, $i, 1);\n  \
    \      }\n        $i++;\n    }\n    return $result;\n}\n", "    my $result;\n\
    \    if ($s =~ /[a-zA-Z]/) {\n        $result =~ s/[a-z]/lc $s;\n    } else {\n\
    \        $result =~ s/[A-Z]/uc $s;\n    }\n    return $result;\n}\n", "    my\
    \ $result;\n    my $i = 0;\n    my $c = 0;\n    my $l = length($s);\n    while\
    \ ($i < $l) {\n        if ($s[$i] =~ /[a-zA-Z]/) {\n            $c = 1;\n    \
    \        $result .= $s[$i];\n            $i++;\n        } else {\n           \
    \ if ($c) {\n                $result .= $s[$i];\n                $i++;\n     \
    \           $c = 0;\n            } else {\n                $i++;\n           \
    \ }\n        }\n    }\n    return $result;\n}\n", "    my $result;\n    my $i\
    \ = 0;\n    my $c = 0;\n    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-zA-Z]/)\
    \ {\n            $c = 1;\n            $result .= $s[$i];\n            $s[$i] =~\
    \ /[a-z]/ ? \"A\" : \"a\";\n        }\n        else {\n            $c = 0;\n \
    \           $result .= $s[$i];\n        }\n        $i++;\n    }\n    if ($c) {\n\
    \        $result =~ /[a-z]/ ? \"A\" : \"a\";\n    }\n    return $result;\n}\n",
  "    my $result;\n    if (length($s) == 0) {\n        $result = $s;\n    } else\
    \ {\n        my $i = 0;\n        while ($i < length($s)) {\n            if ($s[$i]\
    \ =~ /[a-zA-Z]/) {\n                $s[$i] =~ s/([a-z])/lc($1),/;\n          \
    \  } else {\n                $s[$i] =~ s/([A-Z])/lc($1),/;\n            }\n  \
    \          $i++;\n        }\n        $result = $s;\n    }\n    return $result;\n\
    }\n", "    my $result;\n    my $i = 0;\n    while ($i < length($s)) {\n      \
    \  if (isalpha($s[$i])) {\n            $result .= substr($s, $i, 1).uc;\n    \
    \        $i += 1;\n        } else {\n            $result .= substr($s, $i, 1);\n\
    \            $i += 1;\n        }\n    }\n    return $result;\n}\n", "    my $result;\n\
    \    my $i = 0;\n    my $c = 0;\n    while($i < length($s)) {\n        if($s[$i]\
    \ =~ /[a-zA-Z]/) {\n            $c = 1;\n            $result .= $s[$i];\n    \
    \        $s[$i] =~ s/[a-z]/lc/;\n            $s[$i] =~ s/[A-Z]/uc/;\n        }\n\
    \        else {\n            $c = 0;\n            $result .= $s[$i];\n       \
    \ }\n        $i++;\n    }\n    if($c) {\n        $result =~ s/[a-z]/lc/;\n   \
    \     $result =~ s/[A-Z]/uc/;\n    }\n    return $result;\n}\n", "    my $s =~\
    \ s/[a-z]/lc($s);\n    my $s =~ s/[A-Z]/uc($s);\n    return $s;\n}\n", "    my\
    \ $s =~ s/[a-zA-Z]/lc $s;\n    my $s =~ s/[A-Z]/uc $s;\n    my $s =~ s/[#]/lc\
    \ $s;\n    my $s =~ s/[@]/uc $s;\n    return $s;\n}\n", "    my $result = $s;\n\
    \    for (my $i = 0; $i < length($s); $i++) {\n        if (isalpha($s[$i])) {\n\
    \            $result[$i] = islower($s[$i]) ? toupper($s[$i]) : tolower($s[$i]);\n\
    \        }\n    }\n    return $result;\n}\n", "    my $result = $s;\n    my $i\
    \ = 0;\n    while($i < length($s)) {\n        if($s[$i] =~ /[a-z]/i) {\n     \
    \       $result =~ s/[a-z]/lc($s[$i]);\n        } else {\n            $result\
    \ =~ s/[A-Z]/uc($s[$i]);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    my $s2 = $s;\n    my $s3 = '';\n    my $i = 0;\n    while($s2) {\n\
    \        if($s2 =~ /[a-zA-Z]/){\n            $s3 .= $s2;\n            $s2 =~ s/[a-z]/lc($s2);\n\
    \        }\n        else {\n            $s3 .= $s2;\n        }\n        $s2 =~\
    \ /[^a-zA-Z]/;\n    }\n    return $s3;\n}\n", "    my $result = $s;\n    my $i\
    \ = 0;\n    while($i < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/) {\n   \
    \         $result =~ s/[a-z]/lc($s[$i]),/g;\n        } else {\n            $result\
    \ =~ s/[A-Z]/lc($s[$i]),/g;\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    my $result;\n    my $i;", "    my $result;\n    my $i = 0;\n    while($s[$i])\
    \ {\n        if($s[$i] =~ /[a-z]/i) {\n            $s[$i] =~ s/([a-z])/lc($1),/i;\n\
    \        } else {\n            $s[$i] =~ s/([A-Z])/lc($1),/i;\n        }\n   \
    \     $i++;\n    }\n    $result = $s;\n    return $result;\n}\n", "    my $result\
    \ = $s;\n    my $i = 0;\n    while ($i < length($s)) {\n        if ($s[$i] =~\
    \ /[a-zA-Z]/) {\n            $result =~ s/[a-z]/lc $s[$i]/g;\n        } else {\n\
    \            $result =~ s/[A-Z]/lc $s[$i]/g;\n        }\n        $i++;\n    }\n\
    \    return $result;\n}\n", "    my $result = $s;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        if($s[$i] =~ /[a-z]/i) {\n            $result =~ s/[a-z]/lc($s[$i]);\n\
    \        } else {\n            $result =~ s/[A-Z]/uc($s[$i]);\n        }\n   \
    \     $i++;\n    }\n    return $result;\n}\n", "    my $result = $s;\n    my $i\
    \ = 0;\n    while($i < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/) {\n   \
    \         $result[$i] =~ /[a-z]/ ? \"A\" : \"a\";\n        }\n        else {\n\
    \            $result[$i] =~ /[A-Z]/ ? \"a\" : \"A\";\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        if(isalpha($s[$i])) {\n            $result .= substr($s,\
    \ $i, 1).uc;\n        } else {\n            $result .= substr($s, $i, 1);\n  \
    \      }\n        $i += 1;\n    }\n    return $result;\n}\n", "    my $s =~ s/[a-z]/lc($s);\n\
    \    my $s =~ s/[A-Z]/uc($s);\n    return $s;\n}\n", "    my $result = $s;\n \
    \   my $i = 0;\n    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-zA-Z]/i)\
    \ {\n            $result =~ s/[a-z]/lc $s[$i]/g;\n        } else {\n         \
    \   $result =~ s/[A-Z]/lc $s[$i]/g;\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n", "    my $result;\n    my $i;", "    my $result = $s;\n    my\
    \ $i = 0;\n    while($i < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/){\n \
    \           $result =~ s/[a-z]/lc($s[$i]),/g;\n        }\n        else {\n   \
    \         $result =~ s/[A-Z]/lc($s[$i]),/g;\n        }\n        $i++;\n    }\n\
    \    return $result;\n}\n", "    my $result = $s;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/) {\n            $result =~\
    \ s/[a-z]/lc($s[$i]),/g;\n        } else {\n            $result =~ s/[A-Z]/lc($s[$i]),/g;\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    my $result;\n\
    \    my $i = 0;\n    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-z]/i)\
    \ {\n            $result .= $s[$i];\n            $s[$i] =~ /[a-z]/i { $s[$i] =~\
    \ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i]\
    \ =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i {\
    \ $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i\
    \ { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i\
    \ { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i\
    \ { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a-z]/i\
    \ { $s[$i] =~ /[a-z]/i { $s[$i] =~ /[a", "    my $s =~ s/[a-zA-Z]/lc($s)/g;\n\
    \    return $s;\n}\n", "    my $result;\n    my $i = 0;\n    while ($i < length($s))\
    \ {\n        if ($s[$i] =~ /[a-z]/i) {\n            $s[$i] =~ s/[a-z]/toupper/i;\n\
    \        } else {\n            $s[$i] =~ s/[A-Z]/tolower/i;\n        }\n     \
    \   $i++;\n    }\n    $result = $s;\n    return $result;\n}\n", "    my $result;\n\
    \    if ($s =~ /[a-z]/) {\n        $result =~ s/[a-z]/tolower/g;\n    } else if\
    \ ($s =~ /[A-Z]/) {\n        $result =~ s/[A-Z]/toupper/g;\n    } else {\n   \
    \     $result =~ s/[^a-zA-Z]/s/g;\n    }\n    return $result;\n}\n", "    my $result;\n\
    \    if (not $s) {\n        $result = $s;\n    } else {\n        my $i = 0;\n\
    \        while ($i < length($s)) {\n            if ($s[$i] =~ /[a-zA-Z]/) {\n\
    \                $s[$i] =~ s/([a-z])/lc($1),/;\n            } else {\n       \
    \         $s[$i] =~ s/([A-Z])/lc($1),/;\n            }\n            $i += 1;\n\
    \        }\n        $result = $s;\n    }\n    return $result;\n}\n", "    my $s\
    \ =~ s/[a-zA-Z]/lc $s;\n    return $s;\n}", "    my $result;\n    my $i = 0;\n\
    \    while($s[$i]) {\n        if($s[$i] =~ /[a-z]/i) {\n            $s[$i] =~\
    \ s/[a-z]/toupper/i;\n        } else {\n            $s[$i] =~ s/[A-Z]/tolower/i;\n\
    \        }\n        $i++;\n    }\n    $result = $s;\n    return $result;\n}\n",
  "    my $result;\n    my $i = 0;\n    while($s[$i]) {\n        if($s[$i] >= 'a'\
    \ && $s[$i] <= 'z') {\n            $result .= $s[$i];\n            $s[$i] = $s[$i]\
    \ - 'a' + 'A';\n        } else if($s[$i] >= 'A' && $s[$i] <= 'Z') {\n        \
    \    $result .= $s[$i];\n            $s[$i] = $s[$i] - 'A' + 'a';\n        } else\
    \ {\n            $result .= $s[$i];\n        }\n        $i++;\n    }\n    $result\
    \ .= $s;\n    return $result;\n}\n", "    my $result = $s;\n    my $i = 0;\n \
    \   while($i < length($s)) {\n        if($s[$i] =~ /[a-z]/i) {\n            $result\
    \ =~ s/[a-z]/lc($s[$i]);\n        } else {\n            $result =~ s/[A-Z]/uc($s[$i]);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    my $result =\
    \ $s;\n    for (my $i = 0; $i < length($s); $i++) {\n        if ($s[$i] =~ /[a-z]/i)\
    \ {\n            $result[$i] =~ s/[a-z]/[A-Z]/i;\n        } else {\n         \
    \   $result[$i] =~ s/[A-Z]/[a-z]/i;\n        }\n    }\n    return $result;\n}\n",
  "    my $result;\n    my $i = 0;\n    while($i < length($s)) {\n        if($s[$i]\
    \ =~ /[a-zA-Z]/) {\n            $result .= $s[$i];\n            $s[$i] =~ /[a-z]/\
    \ ? $1 . $1 : $1 . $1;\n        }\n        else {\n            $result .= $s[$i];\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    my $result =\
    \ $s;\n    for $i (0..strlen($s)-1) {\n        if ($s[$i] =~ /[a-z]/i) {\n   \
    \         $result[$i] =~ s/[a-z]/toupper($s[$i]);\n        } else {\n        \
    \    $result[$i] =~ s/[A-Z]/tolower($s[$i]);\n        }\n    }\n    return $result;\n\
    }\n", "    my $result = $s;\n    for $i (0..strlen($s)-1) {\n        if ($s[$i]\
    \ =~ /[a-z]/i) {\n            $result[$i] =~ s/[a-z]/toupper($s[$i]);\n      \
    \  } else {\n            $result[$i] =~ s/[A-Z]/tolower($s[$i]);\n        }\n\
    \    }\n    return $result;\n}\n", "    my $s =~ s/[a-zA-Z]/lc $s;\n    return\
    \ $s;\n}\n", "    my $s =~ s/[a-zA-Z]/lc($s);\n    return $s;\n}\n", "    my $result;\n\
    \    my $i = 0;\n    while($s[$i]) {\n        if ($s[$i] =~ /[a-zA-Z]/){\n   \
    \         $result .= $s[$i];\n            $result .= $s[$i] =~ /[a-z]/ ? \"A\"\
    \ : \"a\";\n        }\n        else {\n            $result .= $s[$i];\n      \
    \  }\n        $i++;\n    }\n    return $result;\n}\n", "    my $result = $s;\n\
    \    my $i = 0;\n    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-zA-Z]/)\
    \ {\n            $result =~ s/[a-z]/lc $s[$i]/g;\n        } else {\n         \
    \   $result =~ s/[A-Z]/lc $s[$i]/g;\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n", "    my $result;\n    if ($s =~ /[a-z]/i) {\n        $result\
    \ =~ s/[a-z]/lc($s);\n    } else {\n        $result =~ s/[A-Z]/uc($s);\n    }\n\
    \    return $result;\n}\n", "    my $result;\n    if ($s =~ /[a-z]/i) {\n    \
    \    $result =~ s/[a-z]/lc $s;\n    } else {\n        $result =~ s/[A-Z]/uc $s;\n\
    \    }\n    return $result;\n}\n", "    my $result = $s;\n    my $i = 0;\n   \
    \ while ($i < length($s)) {\n        if ($s[$i] =~ /[a-zA-Z]/) {\n           \
    \ $result =~ s/[a-z]/lc $s[$i]/g;\n        } else {\n            $result =~ s/[A-Z]/lc\
    \ $s[$i]/g;\n        }\n        $i++;\n    }\n    return $result;\n}\n", "   \
    \ my $s =~ s/[a-zA-Z]/lc $s;\n    return $s;\n}\n", "    my $result = $s;\n  \
    \  my $i = 0;\n    while($i < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/)\
    \ {\n            $result =~ s/[a-z]/lc($s[$i]),/g;\n        } else {\n       \
    \     $result =~ s/[A-Z]/uc($s[$i]),/g;\n        }\n        $i++;\n    }\n   \
    \ return $result;\n}\n", "    my $result = $s;\n    for my $i (0..strlen($s)-1)\
    \ {\n        if ($s[$i] =~ /[a-z]/i) {\n            $result[$i] =~ s/[a-z]/toupper/i;\n\
    \        } else {\n            $result[$i] =~ s/[A-Z]/tolower/i;\n        }\n\
    \    }\n    return $result;\n}\n", "    my $result;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/i) {\n            $result .=\
    \ substr($s, $i, 1). uc;\n        } else {\n            $result .= substr($s,\
    \ $i, 1);\n        }\n        $i++;\n    }\n    return $result;\n}\n", "    my\
    \ $result;\n    if ($s =~ /[a-zA-Z]/) {\n        $result = $s;\n        $s =~\
    \ s/[a-z]/lc($s);\n        $s =~ s/[A-Z]/uc($s);\n        $s =~ s/[0-9]/lc($s);\n\
    \        $s =~ s/[^a-zA-Z0-9]/lc($s);\n    }\n    else {\n        $result = $s;\n\
    \        $s =~ s/[^a-zA-Z]/lc($s);\n        $s =~ s/[0-9]/lc($s);\n        $s\
    \ =~ s/[^a-zA-Z0-9]/lc($s);\n    }\n    return $result;\n}\n", "    my $s_len\
    \ = length($s);\n    my $result;\n    if ($s_len == 0) {\n        $result = $s;\n\
    \    } else {\n        my $i;\n        for ($i = 0; $i < $s_len; $i++) {\n   \
    \         if ($s[$i] =~ /[a-zA-Z]/ || $s[$i] =~ /[0-9]/) {\n                $s[$i]\
    \ =~ s/[a-z]/lc($s[$i]);\n                $s[$i] =~ s/[A-Z]/uc($s[$i]);\n    \
    \        } else {\n                $s[$i] =~ s/[a-z]/lc($s[$i]);\n           \
    \     $s[$i] =~ s/[A-Z]/uc($s[$i]);\n            }\n        }\n        $result\
    \ = $s;\n    }\n    return $result;\n}\n", "    my $result = $s;\n    my $i =\
    \ 0;\n    while($i < length($s)) {\n        if($s[$i] =~ /[a-zA-Z]/) {\n     \
    \       $result =~ s/[a-z]/lc($s[$i]),/g;\n        } else {\n            $result\
    \ =~ s/[A-Z]/uc($s[$i]),/g;\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    my $result = $s;\n    my $i = 0;\n    while($i < length($s)) {\n  \
    \      if($s[$i] =~ /[a-zA-Z]/) {\n            $result =~ s/[a-z]/lc $s[$i]/g;\n\
    \        } else {\n            $result =~ s/[A-Z]/lc $s[$i]/g;\n        }\n  \
    \      $i++;\n    }\n    return $result;\n}\n", "    my $result;\n    my $i =\
    \ 0;\n    while ($i < length($s)) {\n        if ($s[$i] =~ /[a-zA-Z]/i) {\n  \
    \          $result .= $s[$i];\n            $i++;\n        } else {\n         \
    \   $result .= $s[$i];\n            $i++;\n        }\n    }\n    return $result;\n\
    }\n"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

{
  "name": "HumanEval_151_double_the_difference",
  "language": "pl",
  "prompt": "# Given an array of numbers, return the sum of squares of the numbers\n# in the array that are odd. Ignore numbers that are negative or not integers.\n# >>> double_the_difference([1, 3, 2, 0])\n# 10\n# >>> double_the_difference([-1, -2, 0])\n# 0\n# >>> double_the_difference([9, -2])\n# 81\n# >>> double_the_difference([0])\n# 0\n# If the input array is empty, return 0.\nsub double_the_difference {\n    my($lst) = @_;\n",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&double_the_difference;\n        if(eq_deeply($candidate->([]),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5.0, 4.0]),25)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([0.1, 0.2, 0.3]),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-10.0, -20.0, -30.0]),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1.0, -2.0, 8.0]),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([0.2, 3.0, 5.0]),34)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "completions": [
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            continue;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ( $i < 0 ) {\n            $sum += 0;\n        } else if ( $i % 2 ) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (is_int($i)) {\n            $sum += abs($i) ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (is_int($i)) {\n            $sum += abs($i) ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if ($n % 2) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n % 2) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if ($num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        $sum += $n ** 2;\n        if ($n % 2) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $n (@$lst) {\n        if ($n < 0) {\n            $sum += 0;\n        } else if ($n % 2) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i * $i;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (!is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ( $i < 0 ) {\n            continue;\n        }\n        if ( $i % 2 ) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if ($num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if (not $i) {\n            continue;\n        }\n        if ($i < 0) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num % 2) {\n            $sum += $num ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my @odds = grep { !( $lst[$_] < 0 || !int($lst[$_]) ) } @$lst;\n    my @odds_sq = map { $lst[$_] ** 2 } @odds;\n    return sum @odds_sq;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my @odds = grep { $lst[$_] % 2 } @$lst;\n    my @odds_sq = map { $lst[$_] ** 2 } @odds;\n    return sum @odds_sq;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if ($n % 2) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (abs($i) % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my @odds = grep { $lst[$_] % 2 } @$lst;\n    my @nums = grep { $lst[$_] >= 0 } @$lst;\n    my @nums_sq = map { $lst[$_] ** 2 } @nums;\n    return sum @nums_sq;\n}",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if ($n % 2) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my @nums = @$lst;\n    my @odds = ();\n    my @squares = ();\n    foreach my $num (@nums) {\n        if ($num < 0) {\n            return 0;\n        }\n        if ($num % 2) {\n            push @odds, $num ** 2;\n        } else {\n            push @squares, $num ** 2;\n        }\n    }\n    return sum @odds + sum @squares;\n}\n",
    "    return sum(map {\n        my($n) = $_;\n        return $n * $n if $n % 2 == 1;\n    }, $lst);\n}",
    "    return sum(map {\n        my($n) = $_;\n        return $n if $n % 2 == 1;\n    }, $lst) * $lst[0];\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            return 0;\n        }\n        if ($n % 2) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            return 0;\n        }\n        if ($num % 2) {\n            $sum += $num ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $num (@$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (abs($num) % 2) {\n            $sum += $num ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num) {\n            continue;\n        }\n        $sum += $num ** 2;\n    }\n    return $sum;\n}\n",
    "    return sum(map {\n        my($n) = $_;\n        return $n if $n % 2 == 1;\n    }, $lst);\n}",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (abs($i) % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (!is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            $sum += 0;\n        } else if ($i % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i * $i;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i * $i;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (!is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (abs($i) % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            return 0;\n        }\n        if ($num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ( $i < 0 ) {\n            $sum += 0;\n        } else {\n            $sum += $i ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ( $i < 0 ) {\n            continue;\n        }\n        if ( $i % 2 ) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    return sum $lst if $lst;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if ($n % 2) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $num (@$lst) {\n        if ($num < 0) {\n            return 0;\n        }\n        if (abs($num) % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if ($n % 2) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if ($n % 2) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if ($num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (@$lst) {\n        if (not $num) {\n            continue;\n        }\n        if ($num < 0) {\n            return 0;\n        }\n        if ($num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (!is_int($i)) {\n            continue;\n        }\n        $sum += $i * $i;\n    }\n    return $sum;\n}",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (abs($i) % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        if (not $n->is_integer()) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if (abs($num) % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    return sum $lst if $lst;\n}",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n % 2) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (abs($i) % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $num (@$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (abs($num) % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i * $i;\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if (abs($i) > 0 && $i % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    return sum(map {\n        my($n) = $_[0];\n        return $n if $n % 2 == 1;\n    }, $lst);\n}",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            continue;\n        }\n        if ( $n % 2 ) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (@$lst) {\n        if (not $num) {\n            continue;\n        }\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num % 2) {\n            $sum += $num ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if ($n % 2) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num) {\n            continue;\n        }\n        $sum += $num ** 2;\n    }\n    return $sum;\n}\n",
    "    return sum $lst if $lst;\n}\n",
    "    return 0 unless $lst;\n    my @odds = grep { $lst[$_] % 2 } @$lst;\n    return sum { $lst[$_] ** 2 } @odds;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            continue;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ( $i < 0 ) {\n            $sum += 0;\n        } else {\n            $sum += $i ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if (abs($i) > 0 && $i % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if (not $i) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        if ($i < 0) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (!is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if (abs($i) > 0 && $i % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if (not $i) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        if ($i < 0) {\n            continue;\n        }\n        $sum += $i * $i;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (!is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num ( @$lst ) {\n        if ( $num < 0 ) {\n            continue;\n        }\n        if ( $num % 2 ) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += abs($i) ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my @odds = grep { $lst[$_] % 2 } @$lst;\n    my @nums = grep { $lst[$_] > 0 } @$lst;\n    my @nums_sq = map { $lst[$_] ** 2 } @nums;\n    my @odds_sq = map { $lst[$_] ** 2 } @odds;\n    my @sum = map { $odds_sq[$_] + $nums_sq[$_] } @odds;\n    return sum @sum;\n}",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if (not $i) {\n            continue;\n        }\n        if ($i < 0) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (@$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num) {\n            continue;\n        }\n        $sum += $num ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (!is_int($i)) {\n            continue;\n        }\n        $sum += $i * $i;\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ( $i < 0 ) {\n            $sum += 0;\n        } else if ( $i % 2 ) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ( $i < 0 ) {\n            continue;\n        }\n        if ( $i % 2 ) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my @nums = @$lst;\n    my @sqs = @nums;\n    my @odds = @nums;\n    my @evens = @nums;\n    my @odd_sqs = @sqs;\n    my @even_sqs = @sqs;\n    my @odd_sqs_sum = 0;\n    my @odd_sqs_sum_sq = 0;\n    my @odd_sqs_sum_sq_sum = 0;\n    foreach my $n (@odds) {\n        my $n = abs($n);\n        my $sq = $n * $n;\n        my $odd_sqs_sum_sq = $odd_sqs_sum_sq + $sq;\n        my $odd_sqs_sum = $odd_sqs_sum + $sq;\n        my $odd_sqs_sum_sq_sum = $odd_sqs_sum_sq_sum + $sq;\n        if ($n % 2) {\n            my $odd_sqs_sum_sq = $odd_sqs_sum_sq + $sq;\n            my $odd_sqs_sum = $odd_sqs_sum + $sq;\n            my $odd_sqs_sum_sq_sum = $odd_sqs_sum_sq_sum + $sq;\n        }\n    }\n    my $odd_sqs_sum_sq_sum_sq = $odd_sqs_sum_sq_sum * $odd_sqs_sum_sq_sum;\n    my $odd_sqs_sum_sq_sum_sq_sum = $odd_sqs_sum_sq_sum_sq + $odd_sqs_sum_sq_sum;\n    my $odd_sqs_sum_sq_sum_sq_sum_sq = $odd_sqs_sum_sq_sum_sq_sum * $odd_sqs_sum_sq_sum_sq;\n    my $odd_sqs_sum_sq_sum_sq_sum_sq_sum = $odd_sqs_sum_sq_sum_sq_sum_sq + $odd_sqs",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (!is_int($i)) {\n            continue;\n        }\n        $sum += abs($i) * abs($i);\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            return 0;\n        }\n        if ($num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            continue;\n        }\n        if ( $n % 2 ) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $num ( @$lst ) {\n        if ( $num < 0 ) {\n            return 0;\n        }\n        if ( $num % 2 ) {\n            $sum += $num ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    return sum(map {\n        my $n = $_[0];\n        return $n if $n % 2 == 1;\n    }, $lst) * $lst[0];\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (@$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num) {\n            continue;\n        }\n        if (not $num->is_integer()) {\n            continue;\n        }\n        $sum += $num->**2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            return 0;\n        }\n        if ($num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (abs($i) % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        if (not $i->is_integer) {\n            continue;\n        }\n        $sum += $i->square;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        if (not int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (@$lst) {\n        if (not $num) {\n            continue;\n        }\n        if ($num < 0) {\n            return 0;\n        }\n        if ($num % 2) {\n            $sum += $num ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my @odds = @$lst;\n    my @nums = @odds;\n    my @sqs = @odds;\n    foreach my $num (@odds) {\n        if ( $num < 0 ) {\n            return 0;\n        }\n        if ( $num < 0 || $num != int($num) ) {\n            return 0;\n        }\n        $sqs{$num} = $num ** 2;\n    }\n    my $sum = 0;\n    foreach my $num (@nums) {\n        $sum += $sqs{$num};\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if (not $i) {\n            continue;\n        }\n        if ($i < 0) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num) {\n            continue;\n        }\n        $sum += $num ** 2;\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if (abs($i) > 0 && $i % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    return sum $lst if $lst;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num % 2) {\n            $sum += $num ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (is_int($i)) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (@$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (!is_int($num)) {\n            continue;\n        }\n        $sum += $num ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            continue;\n        }\n        if ( $n % 2 ) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if (not $i) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        if ($i < 0) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (@$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num) {\n            continue;\n        }\n        $sum += $num ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            return 0;\n        }\n        if ($num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ( $i < 0 ) {\n            continue;\n        }\n        if ( $i % 2 ) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if (abs($i) > 0 && $i % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ( $i < 0 ) {\n            $sum += 0;\n        } else if ( $i < 0 || $i % 2 == 0 ) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (!is_int($i)) {\n            continue;\n        }\n        $sum += abs($i) ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n % 2) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            continue;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n % 2) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if (not $num) {\n            continue;\n        }\n        if ($num < 0) {\n            continue;\n        }\n        $sum += $num ** 2;\n    }\n    return $sum;\n}\n",
    "    return sum(map {\n        my($x) = $lst[0];\n        return $x * $x if $x % 2 == 1;\n    }, @_);\n}",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ( $i < 0 ) {\n            continue;\n        }\n        if ( $i % 2 ) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (@$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num) {\n            continue;\n        }\n        if (not is_int($num)) {\n            continue;\n        }\n        $sum += $num ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my @odds = grep { $lst[$_] % 2 } @$lst;\n    my @nums = grep { $lst[$_] >= 0 } @$lst;\n    my @nums_sq = map { $lst[$_] ** 2 } @nums;\n    my @odds_sq = map { $lst[$_] ** 2 } @odds;\n    my @sum_sq = map { $lst[$_] ** 2 } @nums_sq + @odds_sq;\n    return sum @sum_sq;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            $sum += 0;\n        } else {\n            $sum += $i ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my @nums = @$lst;\n    my $sum = 0;\n    foreach my $num (@nums) {\n        if ($num < 0) {\n            continue;\n        }\n        if (abs($num) % 2) {\n            $sum += $num ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if (not $i) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        if ($i < 0) {\n            continue;\n        }\n        $sum += $i * $i;\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my @odds = grep { $lst[$_] % 2 } @$lst;\n    return sum { $lst[$_] ** 2 } @odds;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            continue;\n        }\n        if ( $n % 2 ) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            return 0;\n        }\n        if ($num % 2) {\n            $sum += $num ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    return sum(map {\n        my($n) = $_;\n        return $n if $n % 2 == 1;\n    }, $lst) * $lst[0];\n}\n",
    "    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            $sum += 0;\n        } else if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            $sum += 0;\n        } else if ($i % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my @nums = @$lst;\n    my @odds = ();\n    my @squares = ();\n    foreach my $num (@nums) {\n        if ($num < 0) {\n            return 0;\n        }\n        if ($num % 2) {\n            push @odds, $num ** 2;\n        }\n        push @squares, $num ** 2;\n    }\n    my $sum = 0;\n    foreach my $odd (@odds) {\n        $sum += $odd;\n    }\n    my $sqsum = 0;\n    foreach my $square (@squares) {\n        $sqsum += $square;\n    }\n    return $sqsum - $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            continue;\n        }\n        if ( $n % 2 ) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if ($num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (is_int($i)) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    return sum $lst if $lst;\n}",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        $sum += $i * $i;\n    }\n    return $sum;\n}\n",
    "    my $sum = 0;\n    foreach my $num (@$lst) {\n        if (abs($num) > 0 && $num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if ($n % 2) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if ($num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n % 2) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            continue;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (sort { abs($a) } @$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if ($num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            $sum += 0;\n        } else if ($i % 2) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if (not $n) {\n            continue;\n        }\n        $sum += $n ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (@$lst) {\n        if ($num < 0) {\n            continue;\n        }\n        if (not $num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (!is_int($i)) {\n            continue;\n        }\n        $sum += $i * $i;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not is_int($i)) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        if (not $i->is_integer()) {\n            continue;\n        }\n        $sum += $i->square();\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i < 0) {\n            continue;\n        }\n        if (not $i) {\n            continue;\n        }\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $num (@$lst) {\n        if (not $num) {\n            continue;\n        }\n        if ($num < 0) {\n            return 0;\n        }\n        if (not $num % 2) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n",
    "    return 0 unless $lst;\n    my $sum = 0;\n    foreach my $n ( @$lst ) {\n        if ( $n < 0 ) {\n            return 0;\n        }\n        if ( $n % 2 ) {\n            $sum += $n ** 2;\n        }\n    }\n    return $sum;\n}\n",
    "    if (not $lst) {\n        return 0;\n    }\n    my $sum = 0;\n    foreach my $n (sort { abs($a) } @$lst) {\n        if ($n < 0) {\n            continue;\n        }\n        if ($n % 2) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n"
  ],
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ]
}
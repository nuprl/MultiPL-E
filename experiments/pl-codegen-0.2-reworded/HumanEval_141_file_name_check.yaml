name: HumanEval_141_file_name_check
language: pl
prompt: "# Create a function which takes a string representing a file's name, and\
  \ returns\n# 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  # A file's name is considered to be valid if and only if all the following conditions\
  \ \n# are met:\n# - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n# - The file's name contains exactly one dot '.'\n# - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n# the latin\
  \ alphapet ('a'-'z' and 'A'-'Z').\n# - The substring after the dot should be one\
  \ of these: ['txt', 'exe', 'dll']\n# Examples:\n# >>> file_name_check(\"example.txt\"\
  )\n# \"Yes\"\n# >>> file_name_check(\"1example.dll\")\n# \"No\"\nsub file_name_check\
  \ {\n    my($file_name) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&file_name_check;\n\
  \        if(eq_deeply($candidate->(\"example.txt\"),\"Yes\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1example.dll\"\
  ),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(\"s1sdf3.asd\"),\"No\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"K.dll\"),\"Yes\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  MY16FILE3.exe\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->(\"His12FILE94.exe\"),\"No\")) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  _Y.txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"?aREYA.exe\"),\"No\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"/this_is_valid.dll\"\
  ),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(\"this_is_valid.wow\"),\"No\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"this_is_valid.txt\"\
  ),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(\"this_is_valid.txtexe\"),\"No\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  #this2_i4s_5valid.ten\"),\"No\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(\"@this1_is6_valid.exe\"),\"\
  No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  this_is_12valid.6exe4.txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(\"all.exe.txt\"),\"No\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  I563_No.exe\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n    \
  \    }\n        if(eq_deeply($candidate->(\"Is3youfault.txt\"),\"Yes\")) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  no_one#knows.dll\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"1I563_Yes3.exe\"),\"No\")) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  I563_Yes3.txtt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->(\"final..txt\"),\"No\")) {\n       \
  \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  final132\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"_f4indsartal132.\"),\"No\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  .txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->(\"s.\"),\"No\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    return $file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,2}\\.\\.(txt|exe|dll)$/i\
    \ ? \"Yes\" : \"No\";\n}", "    my($dot_pos) = $file_name.rindex(\".\");\n   \
    \ my($sub_before_dot) = $file_name.substr(0, $dot_pos);\n    my($sub_after_dot)\
    \ = $file_name.substr($dot_pos + 1);\n    my($sub_before_dot_len) = $sub_before_dot.length;\n\
    \    my($sub_after_dot_len) = $sub_after_dot.length;\n    my($sub_before_dot_is_digit)\
    \ = $sub_before_dot =~ /^\\d+$/;\n    my($sub_after_dot_is_valid) = $sub_after_dot\
    \ =~ /^(txt|exe|dll)$/i;\n    my($sub_before_dot_is_letter) = $sub_before_dot\
    \ =~ /^[a-zA-Z]/;\n    my($sub_after_dot_is_letter) = $sub_after_dot =~ /^[a-zA-Z]/;\n\
    \    my($sub_before_dot_is_not_empty) = $sub_before_dot_len > 0;\n    my($sub_before_dot_is_not_digit)\
    \ = ! $sub_before_dot_is_digit;\n    my($sub_after_dot_is_valid) = $sub_after_dot_is_valid;\n\
    \    my($sub_before_dot_is_letter) = $sub_before_dot_is_letter;\n    my($sub_after_dot_is_letter)\
    \ = $sub_after_dot_is_letter;\n    my($sub_before_dot_is_not_empty) = $sub_before_dot_is_not_empty;\n\
    \    my($sub_before_dot_is_not_digit) = $sub_before_dot_is_not_digit;\n    my($sub_after_dot_is_letter)\
    \ = $sub_after_dot_is_letter;\n    my($sub_before_dot_is_letter_and_not_empty)\
    \ = $sub_before_dot_is_letter && $sub_before_dot_is_", "    if(($file_name =~\
    \ /^\\d{3}\\./i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /^\\w+\\.\\w+$/i) &&\n       ($file_name =~ /\\.\\w+\\.(txt|exe|dll)$/i))\
    \ {\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name\
    \ =~ /^\\d{3}[.](.*)$/) {\n        return \"No\";\n    }\n    if ($file_name =~\
    \ /^(.*[.])(txt|exe|dll)$/) {\n        return \"Yes\";\n    }\n    return \"No\"\
    ;\n}", "    my($dot_index) = $file_name->rindex('.');\n    my($substring_before_dot)\
    \ = $file_name->substr(0, $dot_index);\n    my($substring_after_dot) = $file_name->substr($dot_index\
    \ + 1);\n    my($substring_before_dot_length) = $substring_before_dot->length();\n\
    \    my($substring_after_dot_length) = $substring_after_dot->length();\n    my($substring_before_dot_is_empty)\
    \ = $substring_before_dot->eq(\"\");\n    my($substring_before_dot_is_letter)\
    \ = $substring_before_dot->isalpha();\n    my($substring_after_dot_is_valid) =\
    \ ($substring_after_dot eq \"txt\" or $substring_after_dot eq \"exe\" or $substring_after_dot\
    \ eq \"dll\");\n    my($valid) = ($substring_before_dot_is_empty && $substring_before_dot_is_letter\
    \ && $substring_after_dot_is_valid);\n    return $valid ? \"Yes\" : \"No\";\n}",
  "    if($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if($file_name\
    \ =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n    }\n    if($file_name =~\
    \ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n        return \"No\";\n    }\n    if($file_name\
    \ =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.]/){\n        return \"No\";\n  \
    \  }\n    if($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    my($dot_index) =\
    \ $file_name->rindex('.');\n    my($substr_before_dot) = $file_name->substr(0,\
    \ $dot_index);\n    my($substr_after_dot) = $file_name->substr($dot_index + 1);\n\
    \    my($substr_after_dot_lower) = $substr_after_dot->lc;\n    my($substr_after_dot_upper)\
    \ = $substr_after_dot->uc;\n    my($substr_after_dot_lower_digit) = $substr_after_dot_lower->grep(/\\\
    d/);\n    my($substr_after_dot_upper_digit) = $substr_after_dot_upper->grep(/\\\
    d/);\n    my($substr_after_dot_lower_letter) = $substr_after_dot_lower->grep(/[a-zA-Z]/);\n\
    \    my($substr_after_dot_upper_letter) = $substr_after_dot_upper->grep(/[a-zA-Z]/);\n\
    \    my($substr_after_dot_lower_letter_digit) = $substr_after_dot_lower_letter->grep(/\\\
    d/);\n    my($substr_after_dot_upper_letter_digit) = $substr_after_dot_upper_letter->grep(/\\\
    d/);\n    my($substr_after_dot_lower_letter_letter) = $substr_after_dot_lower_letter->grep(/[a-zA-Z]/);\n\
    \    my($substr_after_dot_upper_letter_letter) = $substr_after_dot_upper_letter->grep(/[a-zA-Z]/);\n\
    \    my($substr_after_dot_lower_letter_letter_digit) = $substr_after_dot_lower_letter_letter->grep(/\\\
    d/);\n    my($substr_after_dot_upper_letter_letter_digit) = $substr_after_dot_upper_letter_letter->grep(/\\",
  "    if ($file_name =~ /^\\d{3}\\./){\n        print \"No\\n\";\n    }\n    else\
    \ if ($file_name =~ /^\\w+\\.\\w+$/){\n        print \"Yes\\n\";\n    }\n    else\
    \ {\n        print \"No\\n\";\n    }\n}", "    if ($file_name =~ /^[0-9]{3}[.](.*)$/)\
    \ {\n        if ($1 =~ /^[a-zA-Z]/ && $2 =~ /^[a-zA-Z]/ && $3 =~ /^[a-zA-Z]/)\
    \ {\n            return \"Yes\";\n        }\n    }\n    return \"No\";\n}", " \
    \   my($dot_pos) = index($file_name, '.');\n    my($substr_before_dot) = substr($file_name,\
    \ 0, $dot_pos);\n    my($substr_after_dot) = substr($file_name, $dot_pos + 1);\n\
    \    my($substr_after_dot_lower) = $substr_after_dot;\n    my($substr_after_dot_upper)\
    \ = toupper($substr_after_dot_lower);\n    my($substr_after_dot_lower_len) = length($substr_after_dot_lower);\n\
    \    my($substr_after_dot_upper_len) = length($substr_after_dot_upper);\n    my($substr_after_dot_lower_is_alpha)\
    \ = $substr_after_dot_lower ne '' && $substr_after_dot_lower_len >= 1 && $substr_after_dot_lower_len\
    \ <= 3;\n    my($substr_after_dot_lower_is_digit) = $substr_after_dot_lower ne\
    \ '' && $substr_after_dot_lower_len >= 1 && $substr_after_dot_lower_len <= 3;\n\
    \    my($substr_after_dot_lower_is_alpha_digit) = $substr_after_dot_lower ne ''\
    \ && $substr_after_dot_lower_len >= 1 && $substr_after_dot_lower_len <= 3;\n \
    \   my($substr_after_dot_lower_is_alpha_digit_or_dot) = $substr_after_dot_lower\
    \ ne '' && $substr_after_dot_lower_len >= 1 && $substr_after_dot_lower_len <=\
    \ 3 || $substr_after_dot_lower eq '.';\n    my($substr_after_dot_lower_is_alpha_or_digit)\
    \ = $substr_after_dot_lower ne '' && $substr_after_dot_lower_len >= 1 && $substr_after_dot_lower_len\
    \ <= 3 || $substr_after_dot_lower_len >= 1 && $substr_after_dot_lower_len <= 3;",
  "    my $dot_index = $file_name->index('.');\n    my $dot_before_index = $file_name->substr(0,\
    \ $dot_index);\n    my $dot_after_index = $file_name->substr($dot_index + 1);\n\
    \    my $dot_before_char = $dot_before_index->substr(0, 1);\n    my $dot_after_char\
    \ = $dot_after_index->substr(0, 1);\n    my $dot_before_char_is_letter = $dot_before_char->isalpha();\n\
    \    my $dot_after_char_is_letter = $dot_after_char->isalpha();\n    my $dot_before_char_is_digit\
    \ = $dot_before_char->isdigit();\n    my $dot_after_char_is_digit = $dot_after_char->isdigit();\n\
    \    my $dot_before_char_is_letter_or_digit = $dot_before_char->isalpha() || $dot_before_char->isdigit();\n\
    \    my $dot_after_char_is_letter_or_digit = $dot_after_char->isalpha() || $dot_after_char->isdigit();\n\
    \    my $dot_before_char_is_letter_or_digit_or_dot = $dot_before_char->isalpha()\
    \ || $dot_before_char->isdigit() || $dot_before_char == '.';\n    my $dot_after_char_is_letter_or_digit_or_dot\
    \ = $dot_after_char->isalpha() || $dot_after_char->isdigit() || $dot_after_char\
    \ == '.';\n    my $dot_before_char_is_letter_or_digit_or_dot_or_dot = $dot_before_char->isalpha()\
    \ || $dot_before_char->isdigit() || $dot_before_char == '.' || $dot_before_char\
    \ == '.';\n    my $dot_after_char_is_letter_or_digit_or_dot_or_dot = $dot_after_char->isalpha()\
    \ || $dot_after_", "    if ($file_name =~ /^[0-9]{3}[.](.*[.]txt|exe|dll)$/) {\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/ ) {\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1}[.]/\
    \ ) {\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    if(($file_name\
    \ =~ /^\\d{3}[.]/i) && ($file_name =~ /^[a-zA-Z]/i) && ($file_name =~ /\\.\\w+$/i)\
    \ && ($file_name =~ /^[a-zA-Z]/i) && ($file_name =~ /\\.\\w+$/i)) {\n        return\
    \ \"Yes\";\n    }\n    return \"No\";\n}", "    if(($file_name =~ /^[0-9]{3}[.]/i)\
    \ && ($file_name =~ /^[a-zA-Z]/)) {\n        if($file_name =~ /\\.txt$/i) {\n\
    \            return \"Yes\";\n        }\n        else if($file_name =~ /\\.exe$/i)\
    \ {\n            return \"Yes\";\n        }\n        else if($file_name =~ /\\\
    .dll$/i) {\n            return \"Yes\";\n        }\n        else {\n         \
    \   return \"No\";\n        }\n    }\n    else {\n        return \"No\";\n   \
    \ }\n}", "    my($dot_index) = $file_name->rindex('.');\n    my($substr_before_dot)\
    \ = $file_name->substr(0, $dot_index);\n    my($substr_after_dot) = $file_name->substr($dot_index\
    \ + 1);\n    my($substr_before_dot_length) = $substr_before_dot->length();\n \
    \   my($substr_after_dot_length) = $substr_after_dot->length();\n    my($substr_before_dot_is_digit)\
    \ = $substr_before_dot =~ /^\\d+$/;\n    my($substr_after_dot_is_valid) = $substr_after_dot\
    \ =~ /^[tx]{1}$/;\n    my($substr_before_dot_is_letter) = $substr_before_dot =~\
    \ /^[a-zA-Z]/;\n    my($substr_after_dot_is_letter) = $substr_after_dot =~ /^[a-zA-Z]/;\n\
    \    return ($substr_before_dot_is_digit && $substr_before_dot_length == 3 &&\n\
    \            $substr_after_dot_is_valid && $substr_after_dot_length == 3 &&\n\
    \            $substr_before_dot_is_letter && $substr_before_dot_length == 1 &&\n\
    \            $substr_after_dot_is_letter && $substr_after_dot_length == 1) ? \"\
    Yes\" : \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"\
    No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\"\
    ;\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    my($dot_pos) = $file_name.rindex('.');\n\
    \    my($file_name_before_dot) = $file_name;\n    my($file_name_after_dot) = substr($file_name,\
    \ $dot_pos + 1);\n    my($file_name_before_dot_length) = length($file_name_before_dot);\n\
    \    my($file_name_after_dot_length) = length($file_name_after_dot);\n    my($file_name_before_dot_is_letter)\
    \ = $file_name_before_dot =~ /^[a-zA-Z]/;\n    my($file_name_after_dot_is_valid)\
    \ = $file_name_after_dot =~ /^(txt|exe|dll)/;\n    my($file_name_is_valid) = $file_name_before_dot_is_letter\
    \ && $file_name_before_dot_length > 0 && $file_name_after_dot_is_valid && $file_name_after_dot_length\
    \ == 3;\n    return $file_name_is_valid ? \"Yes\" : \"No\";\n}", "    if ($file_name\
    \ =~ /^\\d{3}[.](.*)$/) {\n        return \"No\";\n    }\n    if ($file_name =~\
    \ /^[a-zA-Z]\\w{1}[.](.*)$/) {\n        return \"Yes\";\n    }\n    return \"\
    No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n \
    \   }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n   \
    \ }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][txt|exe|dll]$/){\n        return \"\
    Yes\";\n    }\n    return \"No\";\n}", "    return $file_name =~ /^[a-zA-Z]\\\
    w{0,2}\\.\\w{1,3}$/ and\n        $file_name =~ /\\.\\w{1,3}$/ and\n        $file_name\
    \ =~ /^\\w{1,3}\\.\\w{1,3}$/ and\n        $file_name =~ /\\.\\w{1,3}$/ and\n \
    \       $file_name =~ /^\\w{1,3}\\.\\w{1,3}$/ and\n        $file_name =~ /\\.\\\
    w{1,3}$/ and\n        $file_name =~ /^\\w{1,3}\\.\\w{1,3}$/ and\n        $file_name\
    \ =~ /\\.\\w{1,3}$/ and\n        $file_name =~ /^\\w{1,3}\\.\\w{1,3}$/ and\n \
    \       $file_name =~ /\\.\\w{1,3}$/ and\n        $file_name =~ /^\\w{1,3}\\.\\\
    w{1,3}$/ and\n        $file_name =~ /\\.\\w{1,3}$/ and\n        $file_name =~\
    \ /^\\w{1,3}\\.\\w{1,3}$/ and\n        $file_name =~ /\\.\\w{1,3}$/ and\n    \
    \    $file_name =~ /^\\w{1,3}\\.\\w{1,3}$/ and\n        $file_name =~ /\\.\\w{1,3}$/\
    \ and\n        $file_name =~ /^\\w{1,3}\\.\\w{1,3}$/ and\n        $file_name =~\
    \ /\\.\\w{1,3}$/ and\n        $file_name =~ /^\\w{1,3}\\.\\w{1,3}$/ and\n    \
    \    $file_name =~ /\\.\\w{1,3}$/ and\n        $file_name =~ /^\\w{1,3}\\.\\w{1,3",
  "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~\
    \ /^[a-zA-Z]{1}[0-9]{1}[.]/){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[0-9]{1}[0-9]{1}[.]/){\n        return \"No\";\n    }\n    if\
    \ ($file_name =~ /^[a-zA-Z]{1}[0-9]{1}[0-9]{1}[0-9]{1}[.]/){\n        return \"\
    No\";\n    }\n    return \"Yes\";\n}", "    my($dot_pos) = $file_name.rindex('.');\n\
    \    my($substr_before_dot) = $file_name.substr(0, $dot_pos);\n    my($substr_after_dot)\
    \ = $file_name.substr($dot_pos + 1);\n    if(($substr_before_dot eq \"\") || !($substr_before_dot\
    \ =~ /^[a-zA-Z]/)) {\n        return \"No\";\n    }\n    if(($substr_after_dot\
    \ eq \"txt\") || ($substr_after_dot eq \"exe\") || ($substr_after_dot eq \"dll\"\
    )) {\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    my($dot_index)\
    \ = $file_name->rindex('.');\n    my($substr_before_dot) = $file_name->substr(0,\
    \ $dot_index);\n    my($substr_after_dot) = $file_name->substr($dot_index + 1);\n\
    \    my($substr_before_dot_length) = $substr_before_dot->length();\n    my($substr_after_dot_length)\
    \ = $substr_after_dot->length();\n    my($substr_before_dot_is_empty) = $substr_before_dot->eq(\"\
    \");\n    my($substr_before_dot_is_letter) = $substr_before_dot->isalpha();\n\
    \    my($substr_after_dot_is_valid) = ($substr_after_dot eq \"txt\" or $substr_after_dot\
    \ eq \"exe\" or $substr_after_dot eq \"dll\");\n    my($valid) = ($substr_before_dot_is_empty\
    \ && $substr_before_dot_is_letter && $substr_after_dot_is_valid);\n    return\
    \ $valid ? \"Yes\" : \"No\";\n}", "    if ($file_name =~ /^\\d{3}\\./){\n    \
    \    return \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n        return \"No\"\
    ;\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n\
    \    if ($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if ($file_name =~ /^\\\
    d{3}\\./){\n        return \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n       \
    \ return \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n        return \"No\"\
    ;\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n\
    \    if ($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if ($file_name =~ /^\\\
    d{3}\\./){\n        return \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n       \
    \ return \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~", "    return $file_name =~ /^([a-zA-Z][a-zA-Z0-9]{0,2})\\\
    .([a-zA-Z][a-zA-Z0-9]{0,2})\\.([a-zA-Z][a-zA-Z0-9]{0,2})\\.([a-zA-Z][a-zA-Z0-9]{0,2})/;\n\
    }", "    if ($file_name =~ /^\\d{3}\\./){\n        print \"No\";\n    }\n    if\
    \ ($file_name =~ /^\\d{3}\\./){\n        print \"No\";\n    }\n    if ($file_name\
    \ =~ /^\\d{3}\\./){\n        print \"No\";\n    }\n    if ($file_name =~ /^\\\
    d{3}\\./){\n        print \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n\
    \        print \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n        print\
    \ \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n        print \"No\";\n\
    \    }\n    if ($file_name =~ /^\\d{3}\\./){\n        print \"No\";\n    }\n \
    \   if ($file_name =~ /^\\d{3}\\./){\n        print \"No\";\n    }\n    if ($file_name\
    \ =~ /^\\d{3}\\./){\n        print \"No\";\n    }\n    if ($file_name =~ /^\\\
    d{3}\\./){\n        print \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n\
    \        print \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n        print\
    \ \"No\";\n    }\n    if ($file_name =~ /^\\d{3}\\./){\n        print \"No\";\n\
    \    }\n    if ($file_name =~ /^\\d{3}\\./){\n        print \"No\";\n    }\n \
    \   if ($file_name =~ /^\\d{3}\\./){\n        print \"No\";\n    }\n    if ($file_name\
    \ =~ /^\\d{3}\\./){\n        print \"No\";\n    }\n    if ($file_name =~ /^\\\
    d{3}\\./){\n        print \"No\";\n    }\n    if ($file_name =~", "    if ($file_name\
    \ =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    return $file_name\
    \ =~ /^[a-zA-Z0-9]\\.\\w+\\.(txt|exe|dll)$/;\n}", "    my($dot_index) = $file_name->rindex('.');\n\
    \    my($substring_before_dot) = $file_name->substr(0, $dot_index);\n    my($substring_after_dot)\
    \ = $file_name->substr($dot_index + 1);\n    my($substring_before_dot_length)\
    \ = $substring_before_dot->length();\n    my($substring_after_dot_length) = $substring_after_dot->length();\n\
    \    my($substring_before_dot_is_empty) = $substring_before_dot->eq(\"\");\n \
    \   my($substring_before_dot_is_not_empty) = $substring_before_dot->ne(\"\");\n\
    \    my($substring_before_dot_is_letter) = $substring_before_dot->isalpha();\n\
    \    my($substring_after_dot_is_txt) = $substring_after_dot->eq(\"txt\");\n  \
    \  my($substring_after_dot_is_exe) = $substring_after_dot->eq(\"exe\");\n    my($substring_after_dot_is_dll)\
    \ = $substring_after_dot->eq(\"dll\");\n    return ($substring_before_dot_is_empty\
    \ && $substring_before_dot_is_not_empty &&\n            $substring_before_dot_is_letter\
    \ && $substring_after_dot_is_txt ||\n            $substring_before_dot_is_empty\
    \ && $substring_before_dot_is_not_empty &&\n            $substring_before_dot_is_letter\
    \ && $substring_after_dot_is_exe ||\n            $substring_before_dot_is_empty\
    \ && $substring_before_dot_is_not_empty &&\n            $substring_before_dot_is_letter\
    \ && $substring_after_dot_is_dll) ? \"Yes\" : \"No\";\n}", "    if ($file_name\
    \ =~ /^\\d{3}\\./){\n        print \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]\\\
    w+\\./){\n        print \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z]\\w+\\\
    .\\w+$/){\n        print \"Yes\";\n    }\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n  \
    \      return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    if(($file_name =~\
    \ /^[0-9]{3}[.]/i) && ($file_name =~ /^[a-zA-Z]/)) {\n        if($file_name =~\
    \ /\\.txt$/i) {\n            return \"Yes\";\n        }\n        else if($file_name\
    \ =~ /\\.exe$/i) {\n            return \"Yes\";\n        }\n        else if($file_name\
    \ =~ /\\.dll$/i) {\n            return \"Yes\";\n        }\n        else {\n \
    \           return \"No\";\n        }\n    }\n    else {\n        return \"No\"\
    ;\n    }\n}", "    return $file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,2}\\.\\.(txt|exe|dll)$/\
    \ ? \"Yes\" : \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n        return \"\
    No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{1}[.]/){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{2}[.]/){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{3}[.]/){\n        return\
    \ \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/\
    \ ) {\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1}[.]/\
    \ ) {\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    return $file_name\
    \ =~ /^(?=.{1,3}[0-9])(?=.{1}[a-zA-Z])(?=.{1}[a-zA-Z0-9]\\.)(.{1,3}[a-zA-Z0-9])(\\\
    .(txt|exe|dll))$/;\n}", "    if ($file_name =~ /^[0-9]{3}[.](.*)$/) {\n      \
    \  if ($1 =~ /^[a-zA-Z]/ && $2 =~ /^[a-zA-Z]/ && $3 =~ /^[a-zA-Z]/) {\n      \
    \      return \"Yes\";\n        }\n    }\n    return \"No\";\n}", "    my($dot_pos)\
    \ = $file_name.rindex('.');\n    my($substring_before_dot) = $file_name.substr(0,\
    \ $dot_pos);\n    my($substring_after_dot) = $file_name.substr($dot_pos + 1);\n\
    \    if ($substring_before_dot =~ /^[0-9]{3}$/) {\n        return \"No\";\n  \
    \  }\n    if ($dot_pos == -1) {\n        return \"No\";\n    }\n    if ($substring_after_dot\
    \ =~ /^[a-zA-Z]{1}$/) {\n        return \"No\";\n    }\n    if ($substring_after_dot\
    \ =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}$/) {\n        return \"No\";\n    }\n    if ($substring_after_dot\
    \ =~ /^[a-zA-Z]{1}[0-9]{1}[a-zA-Z0-9]{1}$/) {\n        return \"No\";\n    }\n\
    \    if ($substring_after_dot =~ /^[a-zA-Z]{1}[0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$/)\
    \ {\n        return \"No\";\n    }\n    if ($substring_after_dot =~ /^[a-zA-Z]{1}[0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}$/)\
    \ {\n        return \"No\";\n    }\n    if ($substring_after_dot =~ /^[a-zA-Z]{1}[0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-zA-Z0-9]{1}[a-z",
  "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~\
    \ /^[a-zA-Z]{1}[.][txt|exe|dll]$/){\n        return \"Yes\";\n    }\n    return\
    \ \"No\";\n}", "    if($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n\
    \    }\n    if($file_name =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n   \
    \ }\n    if($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n        return \"No\"\
    ;\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n   \
    \     return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    if ($file_name =~\
    \ /^\\d{3}[.](.*)$/) {\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]\\\
    w+[.](txt|exe|dll)$/) {\n        return \"Yes\";\n    }\n    return \"No\";\n}",
  "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~\
    \ /^[a-zA-Z]{1}[0-9]{2}[.]/){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[0-9]{3}[.]/){\n        return \"Yes\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[0-9]{4}[.]/){\n        return \"Yes\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[0-9]{5}[.]/){\n        return \"Yes\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[0-9]{6}[.]/){\n        return \"Yes\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[0-9]{7}[.]/){\n        return \"Yes\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[0-9]{8}[.]/){\n        return \"Yes\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[0-9]{9}[.]/){\n        return \"Yes\";\n    }\n    return \"\
    No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.](.*)$/) {\n        if ($1 =~ /^[a-zA-Z]{1}/\
    \ && $2 =~ /^[a-zA-Z]{1}/ && $3 =~ /^[a-zA-Z]{1}/ && $4 =~ /^[a-zA-Z]{1}/ && $5\
    \ =~ /^[a-zA-Z]{1}/ && $6 =~ /^[a-zA-Z]{1}/ && $7 =~ /^[a-zA-Z]{1}/ && $8 =~ /^[a-zA-Z]{1}/\
    \ && $9 =~ /^[a-zA-Z]{1}/ && $10 =~ /^[a-zA-Z]{1}/ && $11 =~ /^[a-zA-Z]{1}/ &&\
    \ $12 =~ /^[a-zA-Z]{1}/ && $13 =~ /^[a-zA-Z]{1}/ && $14 =~ /^[a-zA-Z]{1}/ && $15\
    \ =~ /^[a-zA-Z]{1}/ && $16 =~ /^[a-zA-Z]{1}/ && $17 =~ /^[a-zA-Z]{1}/ && $18 =~\
    \ /^[a-zA-Z]{1}/ && $19 =~ /^[a-zA-Z]{1}/ && $20 =~ /^[a-zA-Z]{1}/ && $21 =~ /^[a-zA-Z]{1}/\
    \ && $22 =~ /^[a-zA-Z]{1}/ && $23 =~ /^[a-zA-Z]{1}/ && $24 =~ /^[a-zA-Z]{1}/ &&\
    \ $25 =~ /^[a-zA-Z]{1}/ && $26 =~ /^[a", "    return $file_name =~ /^\\d{3}\\\
    .\\w+\\.(txt|exe|dll)$/i ? \"Yes\" : \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1,2}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1,2}[.][0-9]{1,3}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1,2}[.][0-9]{1,3}[.][a-zA-Z0-9]{1,3}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1,2}[.][0-9]{1,3}[.][a-zA-Z0-9]{1,3}[.][a-zA-Z0-9]{1,3}[.]/){\n\
    \        return \"No\";\n    }\n    return \"No\";\n}", "    return $file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]{0,2}\\.\\.(txt|exe|dll)$/ ? \"Yes\" : \"No\";\n}",
  "    my($dot_pos) = index($file_name, '.');\n    my($sub_before_dot) = substr($file_name,\
    \ 0, $dot_pos);\n    my($sub_after_dot) = substr($file_name, $dot_pos + 1);\n\
    \    my($sub_before_dot_len) = length($sub_before_dot);\n    my($sub_after_dot_len)\
    \ = length($sub_after_dot);\n    my($sub_before_dot_is_digit) = $sub_before_dot\
    \ =~ /\\d/;\n    my($sub_before_dot_is_letter) = $sub_before_dot =~ /[a-zA-Z]/;\n\
    \    my($sub_after_dot_is_valid) = $sub_after_dot =~ /^(txt|exe|dll)$/i;\n   \
    \ return ($sub_before_dot_len > 3 || $sub_before_dot_is_digit || $sub_before_dot_is_letter)\n\
    \        && $dot_pos > 0 && $sub_after_dot_len == 3 && $sub_after_dot_is_valid\
    \ ? \"Yes\" : \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n        return \"\
    No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    my $dot_index =\
    \ $file_name.rindex('.');\n    my $dot_before_index = $file_name.rindex('.', 0,\
    \ $dot_index - 1);\n    my $dot_after_index = $file_name.rindex('.', $dot_index\
    \ + 1);\n    my $dot_before_substr = $file_name.substr($dot_before_index + 1,\
    \ $dot_index - $dot_before_index - 1);\n    my $dot_after_substr = $file_name.substr($dot_after_index\
    \ + 1, $file_name.length - $dot_after_index - 1);\n    if ($dot_before_substr\
    \ eq '') {\n        return \"No\";\n    }\n    if ($dot_before_substr.isalpha())\
    \ {\n        return \"No\";\n    }\n    if ($dot_after_substr eq 'txt' || $dot_after_substr\
    \ eq 'exe' || $dot_after_substr eq 'dll') {\n        return \"Yes\";\n    }\n\
    \    return \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n        return \"\
    No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{3}[.]/){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{3}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{3}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{3}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z][.][txt|exe|dll]$/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    my $dot_index =\
    \ $file_name->index('.');\n    my $substr_before_dot = $file_name->substr(0, $dot_index);\n\
    \    my $substr_after_dot = $file_name->substr($dot_index + 1);\n    my $substr_before_dot_len\
    \ = $substr_before_dot->length();\n    my $substr_after_dot_len = $substr_after_dot->length();\n\
    \    my $substr_before_dot_is_empty = $substr_before_dot->eq(\"\");\n    my $substr_before_dot_is_letter\
    \ = $substr_before_dot->isalpha();\n    my $substr_after_dot_is_valid = ($substr_after_dot\
    \ eq \"txt\" or $substr_after_dot eq \"exe\" or $substr_after_dot eq \"dll\");\n\
    \    my $result = \"Yes\";\n    if ($substr_before_dot_is_empty || !$substr_before_dot_is_letter)\
    \ {\n        $result = \"No\";\n    }\n    if ($substr_before_dot_len > 3) {\n\
    \        $result = \"No\";\n    }\n    if (!$substr_after_dot_is_valid) {\n  \
    \      $result = \"No\";\n    }\n    return $result;\n}", "    my($dot_index)\
    \ = $file_name->rindex('.');\n    my($substring) = $file_name->substr(0, $dot_index);\n\
    \    my($substring_length) = $dot_index - $substring->length + 1;\n    my($substring_first_letter)\
    \ = $substring->substr(0, 1);\n    my($substring_last_letter) = $substring->substr(-1);\n\
    \    my($substring_rest) = $file_name->substr($dot_index + 1);\n    my($substring_rest_length)\
    \ = $file_name->length - $dot_index - 1;\n    my($substring_rest_first_letter)\
    \ = $substring_rest->substr(0, 1);\n    my($substring_rest_last_letter) = $substring_rest->substr(-1);\n\
    \    my($substring_rest_rest) = $substring_rest->substr(1);\n    my($substring_rest_rest_length)\
    \ = $substring_rest_length - 1;\n    my($substring_rest_rest_first_letter) = $substring_rest_rest->substr(0,\
    \ 1);\n    my($substring_rest_rest_last_letter) = $substring_rest_rest->substr(-1);\n\
    \    my($substring_rest_rest_rest) = $substring_rest_rest->substr(1);\n    my($substring_rest_rest_rest_length)\
    \ = $substring_rest_rest_length - 1;\n    my($substring_rest_rest_rest_first_letter)\
    \ = $substring_rest_rest_rest->substr(0, 1);\n    my($substring_rest_rest_rest_last_letter)\
    \ = $substring_rest_rest_rest->substr(-1);\n    my($substring_rest_rest_rest_rest)\
    \ = $substring_rest_rest_rest->substr(1);\n    my($substring_rest_rest_rest_rest_length)\
    \ = $substring_rest_rest_rest_length - 1;\n    my($substring_rest_", "    return\
    \ $file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,2}\\.\\.(txt|exe|dll)$/i ? \"Yes\" : \"\
    No\";\n}", "    if ($file_name =~ /^\\d{3}\\./){\n        print \"No\\n\";\n \
    \   }\n    else if ($file_name =~ /^\\w+\\.\\w+$/){\n        print \"Yes\\n\"\
    ;\n    }\n    else {\n        print \"No\\n\";\n    }\n}", "    if ($file_name\
    \ =~ /^[0-9]{3}[.](.*)$/) {\n        if ($1 =~ /^[a-zA-Z]/ && $2 =~ /^[a-zA-Z]/\
    \ && $3 =~ /^[a-zA-Z]/ && $4 =~ /^[a-zA-Z]/ && $5 =~ /^[a-zA-Z]/ && $6 =~ /^[a-zA-Z]/\
    \ && $7 =~ /^[a-zA-Z]/ && $8 =~ /^[a-zA-Z]/ && $9 =~ /^[a-zA-Z]/ && $10 =~ /^[a-zA-Z]/\
    \ && $11 =~ /^[a-zA-Z]/ && $12 =~ /^[a-zA-Z]/ && $13 =~ /^[a-zA-Z]/ && $14 =~\
    \ /^[a-zA-Z]/ && $15 =~ /^[a-zA-Z]/ && $16 =~ /^[a-zA-Z]/ && $17 =~ /^[a-zA-Z]/\
    \ && $18 =~ /^[a-zA-Z]/ && $19 =~ /^[a-zA-Z]/ && $20 =~ /^[a-zA-Z]/ && $21 =~\
    \ /^[a-zA-Z]/ && $22 =~ /^[a-zA-Z]/ && $23 =~ /^[a-zA-Z]/ && $24 =~ /^[a-zA-Z]/\
    \ && $25 =~ /^[a-zA-Z]/ && $26 =~ /^[a-zA-Z]/ && $27 =~ /^[a-zA-Z]/ && $28 =~\
    \ /^[a-zA-Z]/ && $29 =~ /^[a-zA-Z]/ && $30 =~ /^[a-zA-Z]/ && $31 =", "    if ($file_name\
    \ =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.][a-zA-Z]{1}[a-zA-Z0-9]{1}[.]/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][txt|exe|dll]$/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    if ($file_name =~\
    \ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if ($file_name =~ /^\\w+\\\
    .\\w+$/){\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name\
    \ =~ /^\\d{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]\\\
    d{1,3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]\\\
    d{1,3}[.]\\d{1,3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~\
    \ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]\\d{1,3}[.]\\d{1,3}[.]\\d{1,3}[.]/){\n       \
    \ return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]\\\
    d{1,3}[.]\\d{1,3}[.]\\d{1,3}[.]\\d{1,3}[.]/){\n        return \"No\";\n    }\n\
    \    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]\\d{1,3}[.]\\d{1,3}[.]\\\
    d{1,3}[.]\\d{1,3}[.]\\d{1,3}[.]/){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]\\d{1,3}[.]\\d{1,3}[", "    if($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[0-9]{2}[.]/){\n\
    \        return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[0-9]{3}[.]/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~\
    \ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if ($file_name =~ /^\\w+\\\
    .\\w+$/){\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    my($dot_index)\
    \ = $file_name->rindex('.');\n    my($substring) = $file_name->substr(0, $dot_index);\n\
    \    my($substring_length) = $dot_index - $substring->length;\n    my($substring_first_letter)\
    \ = $substring->substr(0, 1);\n    my($substring_last_letter) = $substring->substr(-1);\n\
    \    my($substring_after_dot) = $file_name->substr($dot_index + 1);\n    my($substring_after_dot_length)\
    \ = $file_name->length - $dot_index - 1;\n    my($substring_after_dot_is_valid)\
    \ = ($substring_after_dot eq 'txt' or\n                                      \
    \   $substring_after_dot eq 'exe' or\n                                       \
    \  $substring_after_dot eq 'dll');\n    my($substring_before_dot_is_valid) = ($substring->length\
    \ > 0 and\n                                          $substring_first_letter->isalpha());\n\
    \    my($substring_after_dot_is_valid) = ($substring_after_dot_is_valid and\n\
    \                                         $substring_after_dot_length > 0);\n\
    \    return ($substring_before_dot_is_valid and $substring_after_dot_is_valid\
    \ and\n            $substring_after_dot_is_valid);\n}", "    my($dot_pos) = index($file_name,\
    \ '.');\n    my($before_dot) = substr($file_name, 0, $dot_pos);\n    my($after_dot)\
    \ = substr($file_name, $dot_pos + 1);\n    my($before_dot_len) = length($before_dot);\n\
    \    my($after_dot_len) = length($after_dot);\n    my($dot_pos_valid) = $dot_pos\
    \ > 0 && $before_dot_len > 0 && $before_dot[0] >= 'a' && $before_dot[0] <= 'z'\
    \ && $after_dot_len == 1 && $after_dot eq 'txt' || $after_dot eq 'exe' || $after_dot\
    \ eq 'dll';\n    return $dot_pos_valid ? \"Yes\" : \"No\";\n}", "    my($sub_before_dot)\
    \ = $file_name;\n    my($sub_after_dot) = substr($file_name, strrpos($file_name,\
    \ \".\"));\n    my($sub_before_dot_length) = length($sub_before_dot);\n    my($sub_after_dot_length)\
    \ = length($sub_after_dot);\n    my($sub_before_dot_is_empty) = $sub_before_dot\
    \ eq \"\";\n    my($sub_before_dot_is_not_empty) = $sub_before_dot ne \"\";\n\
    \    my($sub_before_dot_is_letter) = $sub_before_dot =~ /^[a-zA-Z]/;\n    my($sub_after_dot_is_valid)\
    \ = ($sub_after_dot eq \"txt\" or $sub_after_dot eq \"exe\" or $sub_after_dot\
    \ eq \"dll\");\n    my($is_valid) = $sub_before_dot_is_not_empty && $sub_before_dot_is_letter\
    \ && $sub_after_dot_is_valid;\n    return $is_valid ? \"Yes\" : \"No\";\n}", " \
    \   my($substring_before_dot) = $file_name->{0..-2};\n    my($substring_after_dot)\
    \ = $file_name->{-1..};\n    my($substring_before_dot_length) = length $substring_before_dot;\n\
    \    my($substring_after_dot_length) = length $substring_after_dot;\n    my($substring_before_dot_is_empty)\
    \ = $substring_before_dot =~ /^$/;\n    my($substring_before_dot_starts_with_letter)\
    \ = $substring_before_dot =~ /^[a-zA-Z]/;\n    my($substring_after_dot_is_valid)\
    \ = ($substring_after_dot =~ /\\.txt|\\.exe|\\.dll/) ? \"Yes\" : \"No\";\n   \
    \ return $substring_before_dot_is_empty && $substring_before_dot_starts_with_letter\
    \ && $substring_after_dot_is_valid;\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n  \
    \      return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    my($dot_pos) = $file_name->rindex(\"\
    .\");\n    my($substr_before_dot) = $file_name->substr(0, $dot_pos);\n    my($substr_after_dot)\
    \ = $file_name->substr($dot_pos + 1);\n    if (length($substr_before_dot) == 0\
    \ || !isalpha($substr_before_dot->chr(0))) {\n        return \"No\";\n    }\n\
    \    if (length($substr_after_dot) == 0 ||\n        ($substr_after_dot eq \"txt\"\
    \ || $substr_after_dot eq \"exe\" || $substr_after_dot eq \"dll\")) {\n      \
    \  return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1,2}[.]/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    my($dot_pos) = index($file_name,\
    \ '.');\n    my($dot_before_pos) = index($file_name, '.', $dot_pos - 1);\n   \
    \ my($sub_before_pos) = substr($file_name, 0, $dot_before_pos);\n    my($sub_after_pos)\
    \ = substr($file_name, $dot_pos + 1);\n    my($sub_after_pos_len) = length($sub_after_pos);\n\
    \    my($sub_before_pos_len) = length($sub_before_pos);\n    my($sub_before_pos_is_letter)\
    \ = ($sub_before_pos =~ /[a-zA-Z]/);\n    my($sub_after_pos_is_valid) = ($sub_after_pos\
    \ =~ /[txt|exe|dll]/);\n    my($sub_after_pos_is_valid_and_not_too_long) = ($sub_after_pos_is_valid\
    \ && $sub_after_pos_len <= 3);\n    my($sub_before_pos_is_not_empty) = ($sub_before_pos_is_letter\
    \ && $sub_before_pos_len > 0);\n    my($sub_before_pos_is_valid_and_not_too_long)\
    \ = ($sub_before_pos_is_letter && $sub_before_pos_len > 0 && $sub_before_pos_is_not_empty\
    \ && $sub_before_pos_len <= 3);\n    return ($sub_before_pos_is_valid_and_not_too_long\
    \ && $sub_after_pos_is_valid_and_not_too_long) ? \"Yes\" : \"No\";\n}", "    if\
    \ ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~\
    \ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.]/){\n        return \"No\";\n  \
    \  }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    my($dot_pos) = index($file_name,\
    \ '.');\n    my($before_dot) = substr($file_name, 0, $dot_pos);\n    my($after_dot)\
    \ = substr($file_name, $dot_pos + 1);\n    my($file_type) = $after_dot;\n    if\
    \ ($dot_pos > 3) {\n        return \"No\";\n    }\n    if ($dot_pos == 0) {\n\
    \        return \"No\";\n    }\n    if ($before_dot == \"\") {\n        return\
    \ \"No\";\n    }\n    if ($before_dot[0] != \"a\"..\"z\" && $before_dot[0] !=\
    \ \"A\"..\"Z\") {\n        return \"No\";\n    }\n    if ($file_type != \"txt\"\
    \ && $file_type != \"exe\" && $file_type != \"dll\") {\n        return \"No\"\
    ;\n    }\n    return \"Yes\";\n}", "    my $dot_pos = $file_name.rindex('.');\n\
    \    my $dot_before_pos = $file_name.rindex('.', 0, $dot_pos - 1);\n    my $dot_after_pos\
    \ = $file_name.rindex('.', $dot_pos + 1);\n    my $dot_before = $file_name.substr($dot_before_pos\
    \ + 1, $dot_pos - $dot_before_pos - 1);\n    my $dot_after = $file_name.substr($dot_pos\
    \ + 1, $dot_after_pos - $dot_pos - 1);\n    if ($dot_before eq \"\") {\n     \
    \   return \"No\";\n    }\n    if ($dot_before.length() > 3) {\n        return\
    \ \"No\";\n    }\n    if ($dot_before[0] ne \"a\" && $dot_before[0] ne \"A\")\
    \ {\n        return \"No\";\n    }\n    if ($dot_after eq \"txt\" || $dot_after\
    \ eq \"exe\" || $dot_after eq \"dll\") {\n        return \"Yes\";\n    }\n   \
    \ return \"No\";\n}", "    my($dot_pos) = $file_name->rfind('.');\n    my($dot_before_pos)\
    \ = $file_name->rfind('.', 0, $dot_pos - 1);\n    my($dot_after_pos) = $file_name->rfind('.',\
    \ $dot_pos + 1);\n    my($dot_before_char) = $file_name->substr($dot_before_pos,\
    \ 1);\n    my($dot_after_char) = $file_name->substr($dot_after_pos, 1);\n    my($dot_before_char_is_letter)\
    \ = $dot_before_char =~ /[a-zA-Z]/;\n    my($dot_after_char_is_letter) = $dot_after_char\
    \ =~ /[a-zA-Z]/;\n    my($dot_before_char_is_digit) = $dot_before_char =~ /[0-9]/;\n\
    \    my($dot_after_char_is_digit) = $dot_after_char =~ /[0-9]/;\n    my($dot_before_char_is_not_empty)\
    \ = $dot_before_char =~ /[^\\s]/;\n    my($dot_after_char_is_one_of_three) = $dot_after_char\
    \ =~ /\\.txt|\\.exe|\\.dll/;\n    my($dot_before_char_is_not_empty_and_starts_with_letter)\
    \ = $dot_before_char =~ /^[a-zA-Z]/;\n    my($dot_after_char_is_not_empty_and_starts_with_letter)\
    \ = $dot_after_char =~ /^[a-zA-Z]/;\n    my($dot_before_char_is_not_empty_and_starts_with_digit)\
    \ = $dot_before_char =~ /^[0-9]/;\n    my($dot_after_char_is_not_empty_and_starts_with_digit)\
    \ = $dot_after_char =~ /^[0-9]/;\n    my", "    return $file_name =~ /^(?=.{1,3}[0-9])(?=.{1}[a-zA-Z])(?=.{1}[a-zA-Z0-9]\\\
    .)(.{1,3}[a-zA-Z0-9])([.txt|.exe|.dll]{1,3}$)/;\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1}[.][txt|exe|dll]$/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~\
    \ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if ($file_name =~ /^\\w+\\\
    .\\w+$/){\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    my($dot_index)\
    \ = $file_name->rindex(\".\");\n    my($substring_before_dot) = $file_name->substr(0,\
    \ $dot_index);\n    my($substring_after_dot) = $file_name->substr($dot_index +\
    \ 1);\n    my($substring_before_dot_length) = $substring_before_dot->length();\n\
    \    my($substring_after_dot_length) = $substring_after_dot->length();\n    my($substring_before_dot_is_empty)\
    \ = $substring_before_dot->eq(\"\");\n    my($substring_before_dot_is_letter)\
    \ = $substring_before_dot->isalpha();\n    my($substring_after_dot_is_valid) =\
    \ ($substring_after_dot eq \"txt\" or $substring_after_dot eq \"exe\" or $substring_after_dot\
    \ eq \"dll\");\n    my($valid) = ($substring_before_dot_is_empty && $substring_before_dot_is_letter\
    \ && $substring_after_dot_is_valid);\n    return $valid ? \"Yes\" : \"No\";\n}",
  "    if ($file_name =~ /^[0-9]{3}[.]/ ) {\n        return \"No\";\n    }\n    if\
    \ ($file_name =~ /^[a-zA-Z]{1}[.]/ ) {\n        return \"No\";\n    }\n    if\
    \ ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/ ) {\n        return \"No\";\n  \
    \  }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.]/ ) {\n \
    \       return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/\
    \ ) {\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/\
    \ ) {\n        return \"No\";\n    }\n    return \"Yes\";\n}", "    if ($file_name\
    \ =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if ($file_name =~ /^\\\
    w+\\.\\w+$/){\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    return\
    \ $file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.\\.(txt|exe|dll)$/i ? \"Yes\" : \"No\"\
    ;\n}", "    my($dot_index) = $file_name->rindex('.');\n    my($substr_before_dot)\
    \ = $file_name->substr(0, $dot_index);\n    my($substr_after_dot) = $file_name->substr($dot_index\
    \ + 1);\n    my($substr_after_dot_length) = length($substr_after_dot);\n    my($substr_after_dot_is_valid)\
    \ = ($substr_after_dot eq 'txt' or $substr_after_dot eq 'exe' or $substr_after_dot\
    \ eq 'dll');\n    my($substr_before_dot_is_valid) = ($substr_before_dot ne ''\
    \ and $substr_before_dot->isalpha());\n    my($substr_before_dot_is_valid_and_length_is_less_than_three)\
    \ = ($substr_before_dot_is_valid and $substr_before_dot_length < 3);\n    return\
    \ ($substr_before_dot_is_valid_and_length_is_less_than_three ? \"Yes\" : \"No\"\
    );\n}", "    return $file_name =~ s/^[0-9]{3}//;\n    return $file_name =~ s/\\\
    ./ /;\n    return $file_name =~ s/^[a-zA-Z]/ /;\n    return $file_name =~ s/[a-zA-Z]\\\
    $//;\n    return $file_name =~ s/\\.\\.\\//;\n    return $file_name =~ s/\\.$//;\n\
    \    return $file_name =~ s/\\.\\./ /;\n    return $file_name =~ s/\\.\\.\\./\
    \ /;\n    return $file_name =~ s/\\.\\.\\.\\./ /;\n    return $file_name =~ s/\\\
    .\\.\\.\\.\\./ /;\n    return $file_name =~ s/\\.\\.\\.\\.\\.\\./ /;\n    return\
    \ $file_name =~ s/\\.\\.\\.\\.\\.\\.\\./ /;\n    return $file_name =~ s/\\.\\\
    .\\.\\.\\.\\.\\.\\./ /;\n    return $file_name =~ s/\\.\\.\\.\\.\\.\\.\\.\\.\\\
    ./ /;\n    return $file_name =~ s/\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./ /;\n    return\
    \ $file_name =~ s/\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./ /;\n    return $file_name\
    \ =~ s/\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./ /;\n    return $file_name =~ s/\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./ /;\n    return $file_name =~ s/\\.\\.\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./ /;\n    return $file_name =~ s/\\.\\.\\.\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./ /;\n    return $file_name =~ s/\\.\\.\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./ /;\n    return $file_name =~ s/\\\
    .\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\./ /;\n    return $file_name =~\
    \ s/\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.", "    my($dot_pos) = $file_name.rindex('.');\n\
    \    my($sub_before_dot) = $file_name.substr(0, $dot_pos);\n    my($sub_after_dot)\
    \ = $file_name.substr($dot_pos + 1);\n    if ($sub_before_dot =~ /^[a-zA-Z]/ &&\
    \ $sub_after_dot =~ /^[txt|exe|dll]$/i) {\n        return \"Yes\";\n    }\n  \
    \  return \"No\";\n}", "    if(length($file_name) < 3 || length($file_name) >\
    \ 10) {\n        return \"No\";\n    }\n    my($dot_pos) = index($file_name, \"\
    .\");\n    if($dot_pos == -1) {\n        return \"No\";\n    }\n    my($before_dot)\
    \ = substr($file_name, 0, $dot_pos);\n    if(length($before_dot) == 0 || !isalpha($before_dot))\
    \ {\n        return \"No\";\n    }\n    my($after_dot) = substr($file_name, $dot_pos\
    \ + 1);\n    if($after_dot eq \"txt\" || $after_dot eq \"exe\" || $after_dot eq\
    \ \"dll\") {\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    if\
    \ ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~\
    \ /^[a-zA-Z]{1}[.][txt|exe|dll]$/){\n        return \"Yes\";\n    }\n    return\
    \ \"No\";\n}", "    return $file_name =~ /^\\d{3}\\.\\w{1}[^\\.]{1}\\.\\w{1}$/\
    \ ? \"Yes\" : \"No\";\n}", "    my $dot_index = $file_name->index('.');\n    my\
    \ $substr_before_dot = $file_name->substr(0, $dot_index);\n    my $substr_after_dot\
    \ = $file_name->substr($dot_index + 1);\n    my $substr_before_dot_length = $substr_before_dot->length();\n\
    \    my $substr_after_dot_length = $substr_after_dot->length();\n    my $substr_before_dot_is_empty\
    \ = $substr_before_dot->eq(\"\");\n    my $substr_before_dot_is_letter = $substr_before_dot->isalpha();\n\
    \    my $substr_after_dot_is_valid = ($substr_after_dot eq \"txt\" or $substr_after_dot\
    \ eq \"exe\" or $substr_after_dot eq \"dll\");\n    my $result = ($substr_before_dot_length\
    \ == 0 or $substr_before_dot_is_empty or $substr_before_dot_is_letter) and $substr_after_dot_is_valid\
    \ ? \"Yes\" : \"No\";\n    return $result;\n}", "    my($substring_before_dot)\
    \ = $file_name->{0..-2};\n    my($substring_after_dot) = $file_name->{-1..};\n\
    \    my($substring_before_dot_length) = length $substring_before_dot;\n    my($substring_after_dot_length)\
    \ = length $substring_after_dot;\n    my($substring_before_dot_is_empty) = $substring_before_dot\
    \ =~ /^$/;\n    my($substring_before_dot_starts_with_letter) = $substring_before_dot\
    \ =~ /^[a-zA-Z]/;\n    my($substring_after_dot_is_valid) = ($substring_after_dot\
    \ =~ /\\.txt|\\.exe|\\.dll/) ? \"Yes\" : \"No\";\n    return $substring_before_dot_is_empty\
    \ && $substring_before_dot_starts_with_letter && $substring_after_dot_is_valid;\n\
    }", "    my($dot_index) = $file_name->rindex('.');\n    my($substr_before_dot)\
    \ = $file_name->substr(0, $dot_index);\n    my($substr_after_dot) = $file_name->substr($dot_index\
    \ + 1);\n    my($substr_after_dot_length) = length $substr_after_dot;\n    my($substr_after_dot_lower)\
    \ = $substr_after_dot;\n    my($substr_after_dot_lower_length) = length $substr_after_dot_lower;\n\
    \    my($substr_after_dot_lower_first_letter) = $substr_after_dot_lower->substr(0,\
    \ 1);\n    my($substr_after_dot_lower_first_letter_length) = length $substr_after_dot_lower_first_letter;\n\
    \    my($substr_after_dot_lower_first_letter_is_letter) = $substr_after_dot_lower_first_letter->isalpha();\n\
    \    my($substr_after_dot_lower_first_letter_is_letter_length) = length $substr_after_dot_lower_first_letter_is_letter;\n\
    \    my($substr_after_dot_lower_first_letter_is_letter_is_lower) = $substr_after_dot_lower_first_letter_is_letter->isalpha();\n\
    \    my($substr_after_dot_lower_first_letter_is_letter_is_lower_length) = length\
    \ $substr_after_dot_lower_first_letter_is_letter_is_lower;\n    my($substr_after_dot_lower_first_letter_is_letter_is_lower_is_lower)\
    \ = $substr_after_dot_lower_first_letter_is_letter_is_lower->isalpha();\n    my($substr_after_dot_lower_first_letter_is_letter_is_lower_is_lower_length)\
    \ = length $substr_after_dot_lower_first_letter_is_letter_is_lower_is_lower;\n\
    \    my($sub", "    if ($file_name =~ /^[0-9]{3}[.](.*)$/) {\n        if ($1 =~\
    \ /^[a-zA-Z]/ && $2 =~ /^[a-zA-Z]/ && $3 =~ /^[a-zA-Z]/) {\n            return\
    \ \"Yes\";\n        }\n    }\n    return \"No\";\n}", "    my($dot_pos) = $file_name->rindex('.');\n\
    \    my($sub_before_dot) = $file_name->substr(0, $dot_pos);\n    my($sub_after_dot)\
    \ = $file_name->substr($dot_pos + 1);\n    my($sub_before_dot_length) = $sub_before_dot->length();\n\
    \    my($sub_after_dot_length) = $sub_after_dot->length();\n    my($sub_before_dot_is_letter)\
    \ = $sub_before_dot =~ /^[a-zA-Z]/;\n    my($sub_after_dot_is_valid) = $sub_after_dot\
    \ =~ /^(txt|exe|dll)/;\n    my($sub_before_dot_is_not_empty) = $sub_before_dot_length\
    \ > 0;\n    my($sub_before_dot_is_not_3_digits) = $sub_before_dot_length < 3;\n\
    \    my($sub_after_dot_is_valid) = $sub_after_dot_length == 3;\n    my($is_valid)\
    \ = $sub_before_dot_is_letter && $sub_before_dot_is_not_empty &&\n        $sub_before_dot_is_not_3_digits\
    \ && $sub_after_dot_is_valid &&\n        $sub_after_dot_is_valid;\n    return\
    \ $is_valid ? \"Yes\" : \"No\";\n}", "    if(($file_name =~ /^\\d{3}\\./)) {\n\
    \        return \"No\";\n    }\n    if(($file_name =~ /^[a-zA-Z]\\w+\\./)) {\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,1}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,1}[.]([txt|exe|dll])$/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if($file_name =~\
    \ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]\\\
    ./){\n        return \"No\";\n    }\n    if($file_name =~ /^\\d{3}[a-zA-Z]\\./){\n\
    \        return \"No\";\n    }\n    if($file_name =~ /\\.txt$/){\n        return\
    \ \"Yes\";\n    }\n    if($file_name =~ /\\.exe$/){\n        return \"Yes\";\n\
    \    }\n    if($file_name =~ /\\.dll$/){\n        return \"Yes\";\n    }\n   \
    \ return \"No\";\n}", "    if(($file_name =~ /^[0-9]{3}[.]/i) &&\n       ($file_name\
    \ =~ /^[a-zA-Z]/i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /^[a-zA-Z]/i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /\\.\\w+$/i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /\\.\\w+$/i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /\\.\\w+$/i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /\\.\\w+$/i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /\\.\\w+$/i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /\\.\\w+$/i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /\\.\\w+$/i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /\\.\\w+$/i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /\\.\\w+$/i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /\\.\\w+$/i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /\\.\\w+$/i) &&\n       ($file_name =~ /\\.\\w+$/i) &&\n       ($file_name\
    \ =~ /\\.\\", "    my $dot_index = $file_name->rindex('.');\n    my $substr_before_dot\
    \ = $file_name->substr(0, $dot_index);\n    my $substr_after_dot = $file_name->substr($dot_index\
    \ + 1);\n    my $substr_before_dot_length = $substr_before_dot->length();\n  \
    \  my $substr_after_dot_length = $substr_after_dot->length();\n    my $substr_before_dot_is_number\
    \ = 0;\n    my $substr_after_dot_is_number = 0;\n    my $substr_before_dot_is_letter\
    \ = 0;\n    my $substr_after_dot_is_letter = 0;\n    foreach my $char (split /\\\
    s/, $substr_before_dot) {\n        if ($char < '0' || $char > '9') {\n       \
    \     $substr_before_dot_is_number = 1;\n        }\n        if ($char < 'a' ||\
    \ $char > 'z') {\n            $substr_before_dot_is_letter = 1;\n        }\n \
    \   }\n    foreach my $char (split /\\s/, $substr_after_dot) {\n        if ($char\
    \ < '0' || $char > '9') {\n            $substr_after_dot_is_number = 1;\n    \
    \    }\n        if ($char < 'a' || $char > 'z') {\n            $substr_after_dot_is_letter\
    \ = 1;\n        }\n    }\n    if ($substr_before_dot_is_number == 0 && $substr_before_dot_is_letter\
    \ == 0) {\n        return \"No\";\n    }\n    if ($substr_after_dot_is_number\
    \ == 0 && $substr_after_dot_is_letter == 0) {\n        return \"No\";\n    }\n\
    \    if ($substr_before_dot_length == 0 || $substr_before_dot_is_letter == 0)\
    \ {\n        return \"No\";\n    }\n    if ($substr_after_dot_length == 0 ||",
  "    my($substring_before_dot) = $file_name->{0..-2};\n    my($substring_after_dot)\
    \ = $file_name->{-1};\n    my($substring_before_dot_length) = length $substring_before_dot;\n\
    \    my($substring_after_dot_length) = length $substring_after_dot;\n    my($substring_before_dot_is_empty)\
    \ = $substring_before_dot =~ /^$/;\n    my($substring_before_dot_is_not_empty)\
    \ = ! $substring_before_dot_is_empty;\n    my($substring_before_dot_is_letter)\
    \ = $substring_before_dot_is_empty || $substring_before_dot =~ /^[a-zA-Z]/;\n\
    \    my($substring_after_dot_is_valid) = $substring_after_dot =~ /^[txt|exe|dll]$/;\n\
    \    my($substring_after_dot_is_not_valid) = ! $substring_after_dot_is_valid;\n\
    \    my($file_name_is_valid) =\n        $substring_before_dot_is_not_empty &&\n\
    \        $substring_before_dot_is_letter &&\n        $substring_after_dot_is_valid;\n\
    \    return $file_name_is_valid ? \"Yes\" : \"No\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1}[.][txt|exe|dll]$/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z][.][txt|exe|dll]$/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    return $file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]{0,2}\\.\\.(txt|exe|dll)$/i ? \"Yes\" : \"No\";\n}",
  "    if ($file_name =~ /^\\d{3}[.](.*)$/) {\n        return \"No\";\n    }\n   \
    \ if ($file_name =~ /^[a-zA-Z]\\w+[.](txt|exe|dll)$/) {\n        return \"Yes\"\
    ;\n    }\n    return \"No\";\n}", "    my($dot_pos) = index($file_name, '.');\n\
    \    my($substr_before_dot) = substr($file_name, 0, $dot_pos);\n    my($substr_after_dot)\
    \ = substr($file_name, $dot_pos + 1);\n    my($substr_before_dot_length) = length($substr_before_dot);\n\
    \    my($substr_after_dot_length) = length($substr_after_dot);\n    my($substr_before_dot_is_empty)\
    \ = $substr_before_dot eq \"\";\n    my($substr_before_dot_is_not_empty) = $substr_before_dot\
    \ ne \"\";\n    my($substr_before_dot_is_letter) = $substr_before_dot_is_not_empty\
    \ && $substr_before_dot_is_empty != 1 &&\n        (($substr_before_dot_is_empty\
    \ || $substr_before_dot_is_not_empty) &&\n        ($substr_before_dot_is_letter\
    \ || $substr_before_dot_is_not_empty));\n    my($substr_after_dot_is_valid) =\
    \ $substr_after_dot eq \"txt\" || $substr_after_dot eq \"exe\" || $substr_after_dot\
    \ eq \"dll\";\n    my($file_name_is_valid) = $substr_before_dot_is_letter && $substr_before_dot_is_not_empty\
    \ &&\n        $substr_after_dot_is_valid && $substr_before_dot_length == 1 &&\
    \ $dot_pos != -1;\n    return $file_name_is_valid ? \"Yes\" : \"No\";\n}", " \
    \   if(length($file_name) > 3) {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 0, 2) eq \"0-9\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 0, 1) ne \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 1, 1) ne \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,",
  "    if ($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^\\w+\\.\\w+$/){\n        return \"Yes\";\n    }\n    return \"No\";\n}",
  "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~\
    \ /^[a-zA-Z]{1}[.][txt|exe|dll]$/){\n        return \"Yes\";\n    }\n    return\
    \ \"No\";\n}", "    my($dot_index) = $file_name->rindex('.');\n    my($file_name_before_dot)\
    \ = $file_name->substr(0, $dot_index);\n    my($file_name_after_dot) = $file_name->substr($dot_index\
    \ + 1);\n    my($file_name_before_dot_length) = $file_name_before_dot->length();\n\
    \    my($file_name_after_dot_length) = $file_name_after_dot->length();\n    my($file_name_before_dot_is_letter)\
    \ = $file_name_before_dot->isalpha();\n    my($file_name_after_dot_is_letter)\
    \ = $file_name_after_dot->isalpha();\n    my($file_name_before_dot_is_digit) =\
    \ $file_name_before_dot->isdigit();\n    my($file_name_after_dot_is_digit) = $file_name_after_dot->isdigit();\n\
    \    my($file_name_before_dot_is_not_empty) = $file_name_before_dot->length();\n\
    \    my($file_name_after_dot_is_not_empty) = $file_name_after_dot->length();\n\
    \    my($file_name_before_dot_is_not_empty_and_starts_with_letter) = $file_name_before_dot->length();\n\
    \    my($file_name_after_dot_is_not_empty_and_starts_with_letter) = $file_name_after_dot->length();\n\
    \    my($file_name_before_dot_is_not_empty_and_starts_with_letter_and_is_not_digit)\
    \ = $file_name_before_dot->length();\n    my($file_name_after_dot_is_not_empty_and_starts_with_letter_and_is_not_digit)\
    \ = $file_name_after_dot->length();\n    my($file_name_before_dot_is_not_empty_and_starts_with_letter_and_is_not_digit_and_",
  "    if ($file_name =~ /^\\d{3}\\./){\n        print \"No\\n\";\n    }\n    else\
    \ if ($file_name =~ /^[a-zA-Z]\\./){\n        print \"Yes\\n\";\n    }\n    else\
    \ {\n        print \"No\\n\";\n    }\n}", "    my($dot_pos) = $file_name->rfind('.');\n\
    \    my($before_dot) = $file_name->substr(0, $dot_pos);\n    my($after_dot) =\
    \ $file_name->substr($dot_pos + 1);\n    my($is_valid) = ($before_dot->length()\
    \ > 0 && $before_dot =~ /^[a-zA-Z]/ &&\n        $after_dot =~ /^(txt|exe|dll)$/);\n\
    \    return $is_valid ? \"Yes\" : \"No\";\n}", "    my($dot_pos) = $file_name->rindex('.');\n\
    \    my($dot_before_pos) = $file_name->substr(0, $dot_pos);\n    my($dot_after_pos)\
    \ = $file_name->substr($dot_pos + 1);\n    my($dot_before_char) = $dot_before_pos->substr(0,\
    \ 1);\n    my($dot_after_char) = $dot_after_pos->substr(0, 1);\n    my($dot_before_char_is_letter)\
    \ = $dot_before_char->isalpha();\n    my($dot_after_char_is_letter) = $dot_after_char->isalpha();\n\
    \    my($dot_before_char_is_digit) = $dot_before_char->isdigit();\n    my($dot_after_char_is_digit)\
    \ = $dot_after_char->isdigit();\n    my($dot_before_char_is_digit_or_letter) =\
    \ ($dot_before_char_is_letter || $dot_before_char_is_digit);\n    my($dot_after_char_is_digit_or_letter)\
    \ = ($dot_after_char_is_letter || $dot_after_char_is_digit);\n    my($dot_before_char_is_not_digit_or_letter)\
    \ = ($dot_before_char_is_letter != $dot_before_char_is_digit);\n    my($dot_after_char_is_not_digit_or_letter)\
    \ = ($dot_after_char_is_letter != $dot_after_char_is_digit);\n    my($dot_before_char_is_not_digit_or_letter_or_dot)\
    \ = ($dot_before_char_is_letter != $dot_before_char_is_digit || $dot_before_char_is_dot);\n\
    \    my($dot_after_char_is_not_digit_or_letter_or_dot) = ($dot_after_char_is_letter\
    \ != $dot_after_char_is_digit || $dot_after_char_is_dot);\n    my($dot_before",
  "    if ($file_name =~ /^\\d{3}[.](.*)$/) {\n        return \"No\";\n    }\n   \
    \ if ($file_name =~ /^[a-zA-Z]\\w+\\.\\w+$/) {\n        return \"Yes\";\n    }\n\
    \    return \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.](.*)$/) {\n     \
    \   if ($1 =~ /^[a-zA-Z]{1}/ && $2 =~ /^[a-zA-Z]{1}/ && $3 =~ /^[a-zA-Z]{1}/ &&\
    \ $4 =~ /^[a-zA-Z]{1}/ && $5 =~ /^[a-zA-Z]{1}/ && $6 =~ /^[a-zA-Z]{1}/ && $7 =~\
    \ /^[a-zA-Z]{1}/ && $8 =~ /^[a-zA-Z]{1}/ && $9 =~ /^[a-zA-Z]{1}/ && $10 =~ /^[a-zA-Z]{1}/\
    \ && $11 =~ /^[a-zA-Z]{1}/ && $12 =~ /^[a-zA-Z]{1}/ && $13 =~ /^[a-zA-Z]{1}/ &&\
    \ $14 =~ /^[a-zA-Z]{1}/ && $15 =~ /^[a-zA-Z]{1}/ && $16 =~ /^[a-zA-Z]{1}/ && $17\
    \ =~ /^[a-zA-Z]{1}/ && $18 =~ /^[a-zA-Z]{1}/ && $19 =~ /^[a-zA-Z]{1}/ && $20 =~\
    \ /^[a-zA-Z]{1}/ && $21 =~ /^[a-zA-Z]{1}/ && $22 =~ /^[a-zA-Z]{1}/ && $23 =~ /^[a-zA-Z]{1}/\
    \ && $24 =~ /^[a-zA-Z]{1}/ && $25 =~ /^[a-zA-Z]{1}/ && $26 =~ /^[a", "    my($dot_pos)\
    \ = $file_name.rindex('.');\n    my($before_dot) = $file_name.substr(0, $dot_pos);\n\
    \    my($after_dot) = $file_name.substr($dot_pos + 1);\n    my($before_dot_length)\
    \ = $before_dot.length();\n    my($after_dot_length) = $after_dot.length();\n\
    \    my($before_dot_is_letter) = $before_dot =~ /^[a-zA-Z]/;\n    my($after_dot_is_valid)\
    \ = $after_dot =~ /^(txt|exe|dll)$/;\n    if ($before_dot_length > 3) {\n    \
    \    return \"No\";\n    }\n    if (!$before_dot_is_letter) {\n        return\
    \ \"No\";\n    }\n    if ($dot_pos == 0) {\n        return \"No\";\n    }\n  \
    \  if ($after_dot_length != 3) {\n        return \"No\";\n    }\n    if (!$after_dot_is_valid)\
    \ {\n        return \"No\";\n    }\n    return \"Yes\";\n}", "    if(length($file_name)\
    \ > 3) {\n        return \"No\";\n    }\n    if(substr($file_name, 0, 3) eq \"\
    0-9\") {\n        return \"No\";\n    }\n    if(substr($file_name, 0, 1) ne \"\
    .\") {\n        return \"No\";\n    }\n    if(substr($file_name, 1, 1) ne \".\"\
    ) {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name,", "    if($file_name\
    \ =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[.][0-9]{3}[.]/){\n\
    \        return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[.][0-9]{3}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[.][0-9]{3}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if($file_name =~ /^[a-zA-Z]{1}[.][0-9]{3}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    my($dot_pos) = index($file_name,\
    \ \".\");\n    my($sub_before_dot) = substr($file_name, 0, $dot_pos);\n    my($sub_after_dot)\
    \ = substr($file_name, $dot_pos + 1);\n    my($sub_before_dot_len) = length($sub_before_dot);\n\
    \    my($sub_after_dot_len) = length($sub_after_dot);\n    my($sub_before_dot_is_digit)\
    \ = $sub_before_dot =~ /^\\d+$/;\n    my($sub_after_dot_is_valid) = $sub_after_dot\
    \ =~ /^(txt|exe|dll)$/;\n    my($sub_before_dot_is_letter) = $sub_before_dot =~\
    \ /^[a-zA-Z]/;\n    my($sub_after_dot_is_letter) = $sub_after_dot =~ /^[a-zA-Z]/;\n\
    \    my($sub_before_dot_is_valid) = $sub_before_dot_is_digit && $sub_before_dot_is_letter\
    \ && ! $sub_before_dot_is_digit && $sub_before_dot_is_letter;\n    my($sub_after_dot_is_valid)\
    \ = $sub_after_dot_is_valid && $sub_after_dot_is_letter && ! $sub_after_dot_is_letter;\n\
    \    return $sub_before_dot_is_valid && $sub_after_dot_is_valid ? \"Yes\" : \"\
    No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n \
    \   }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]/){\n        return\
    \ \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.][0-9]{1}[a-zA-Z0-9]{1}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.][0-9]{1}[a-zA-Z0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1}[.][txt|exe|dll]$/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if($file_name =~\
    \ /^[0-9]{3}[.](.*)$/) {\n        if($1 =~ /^[a-zA-Z]/ && $2 =~ /^[a-zA-Z]/ &&\
    \ $3 =~ /^[a-zA-Z]/) {\n            return \"Yes\";\n        }\n    }\n    return\
    \ \"No\";\n}", "    my($substring_before_dot) = $file_name->{0..-2};\n    my($substring_after_dot)\
    \ = $file_name->{-1..};\n    my($substring_before_dot_length) = $substring_before_dot->length();\n\
    \    my($substring_after_dot_length) = $substring_after_dot->length();\n    my($substring_before_dot_is_empty)\
    \ = $substring_before_dot->{0} eq \"\";\n    my($substring_before_dot_is_letter)\
    \ = $substring_before_dot->{0} =~ /[a-zA-Z]/;\n    my($substring_after_dot_is_valid)\
    \ = $substring_after_dot =~ /^[a-zA-Z0-9_.]+$/;\n    my($substring_after_dot_is_txt)\
    \ = $substring_after_dot =~ /\\.txt$/i;\n    my($substring_after_dot_is_exe) =\
    \ $substring_after_dot =~ /\\.exe$/i;\n    my($substring_after_dot_is_dll) = $substring_after_dot\
    \ =~ /\\.dll$/i;\n    my($file_name_is_valid) =\n        $substring_before_dot_is_empty\
    \ && $substring_before_dot_is_letter &&\n        $substring_after_dot_is_valid\
    \ &&\n        $substring_after_dot_is_txt ||\n        $substring_after_dot_is_exe\
    \ ||\n        $substring_after_dot_is_dll;\n    return $file_name_is_valid ? \"\
    Yes\" : \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"\
    No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\"\
    ;\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][txt|exe|dll]$/){\n        return\
    \ \"Yes\";\n    }\n    return \"No\";\n}", "    my($dot_index) = $file_name->rindex('.');\n\
    \    my($substring) = $file_name->substr(0, $dot_index);\n    my($substring_length)\
    \ = $dot_index - $substring->length;\n    my($substring_char) = $substring->chr(0);\n\
    \    my($substring_char_ascii) = ord($substring_char);\n    my($substring_char_is_letter)\
    \ = $substring_char_ascii >= 65 && $substring_char_ascii <= 90;\n    my($substring_char_is_digit)\
    \ = $substring_char_ascii >= 48 && $substring_char_ascii <= 57;\n    my($substring_is_empty)\
    \ = $substring->length == 0;\n    my($substring_starts_with_letter) = $substring_char_is_letter;\n\
    \    my($substring_ends_with_valid_extension) = $substring->length == $substring_length\
    \ + 3 &&\n        $substring_starts_with_letter &&\n        $substring_char_is_digit\
    \ &&\n        $substring->substr($substring_length + 1) =~ /^(txt|exe|dll)$/i;\n\
    \    return $substring_is_empty || $substring_starts_with_letter || $substring_ends_with_valid_extension\
    \ ? \"Yes\" : \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][.]/){\n        return \"No\"\
    ;\n    }\n    if ($file_name =~ /^[a-zA-Z][.][a-zA-Z][.]/){\n        return \"\
    No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][.][a-zA-Z][.][a-zA-Z][.]/){\n \
    \       return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][.][a-zA-Z][.][a-zA-Z][.][a-zA-Z][.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][.][a-zA-Z][.][a-zA-Z][.][a-zA-Z][.][a-zA-Z][.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][.][a-zA-Z][.][a-zA-Z][.][a-zA-Z][.][a-zA-Z][.][a-zA-Z][.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.](.*)$/) {\n        if ($1 =~ /^[a-zA-Z]{1}/ && $2 =~ /^[a-zA-Z]{1}/\
    \ && $3 =~ /^[a-zA-Z]{1}/ && $4 =~ /^[a-zA-Z]{1}/ && $5 =~ /^[a-zA-Z]{1}/ && $6\
    \ =~ /^[a-zA-Z]{1}/ && $7 =~ /^[a-zA-Z]{1}/ && $8 =~ /^[a-zA-Z]{1}/ && $9 =~ /^[a-zA-Z]{1}/\
    \ && $10 =~ /^[a-zA-Z]{1}/ && $11 =~ /^[a-zA-Z]{1}/ && $12 =~ /^[a-zA-Z]{1}/ &&\
    \ $13 =~ /^[a-zA-Z]{1}/ && $14 =~ /^[a-zA-Z]{1}/ && $15 =~ /^[a-zA-Z]{1}/ && $16\
    \ =~ /^[a-zA-Z]{1}/ && $17 =~ /^[a-zA-Z]{1}/ && $18 =~ /^[a-zA-Z]{1}/ && $19 =~\
    \ /^[a-zA-Z]{1}/ && $20 =~ /^[a-zA-Z]{1}/ && $21 =~ /^[a-zA-Z]{1}/ && $22 =~ /^[a-zA-Z]{1}/\
    \ && $23 =~ /^[a-zA-Z]{1}/ && $24 =~ /^[a-zA-Z]{1}/ && $25 =~ /^[a-zA-Z]{1}/ &&\
    \ $26 =~ /^[a", "    if($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n\
    \    }\n    if($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n \
    \   if($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if($file_name\
    \ =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if($file_name =~ /^\\\
    d{3}\\./){\n        return \"No\";\n    }\n    if($file_name =~ /^\\d{3}\\./){\n\
    \        return \"No\";\n    }\n    if($file_name =~ /^\\d{3}\\./){\n        return\
    \ \"No\";\n    }\n    if($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n\
    \    }\n    if($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n \
    \   if($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if($file_name\
    \ =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if($file_name =~ /^\\\
    d{3}\\./){\n        return \"No\";\n    }\n    if($file_name =~ /^\\d{3}\\./){\n\
    \        return \"No\";\n    }\n    if($file_name =~ /^\\d{3}\\./){\n        return\
    \ \"No\";\n    }\n    if($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n\
    \    }\n    if($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n \
    \   if($file_name =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if($file_name\
    \ =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if($file_name =~", " \
    \   if(($file_name =~ /^[0-9]{3}[.]/)) {\n        return \"No\";\n    }\n    if(($file_name\
    \ =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]/)) {\n        return \"No\";\n    }\n    if(($file_name\
    \ =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.](txt|exe|dll)/)) {\n        return \"Yes\"\
    ;\n    }\n    return \"No\";\n}", "    if(($file_name =~ /^[0-9]{3}[.]/)) {\n\
    \        return \"No\";\n    }\n    if(($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,1}[.]/))\
    \ {\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name\
    \ =~ /^[0-9]{3}[.](.*)$/) {\n        if ($1 =~ /^[a-zA-Z]/ && $2 =~ /^[a-zA-Z]/\
    \ && $3 =~ /^[a-zA-Z]/) {\n            return \"Yes\";\n        }\n    }\n   \
    \ return \"No\";\n}", "    my($dot_index) = $file_name->rindex(\".\");\n    my($before_dot)\
    \ = $file_name->substr(0, $dot_index);\n    my($after_dot) = $file_name->substr($dot_index\
    \ + 1);\n    my($is_valid) = $before_dot->length() > 0 && $before_dot->isalpha()\
    \ &&\n        $after_dot->length() == 1 && $after_dot->match(\"[txe]{1}\");\n\
    \    return $is_valid ? \"Yes\" : \"No\";\n}", "    my($dot_pos) = $file_name->rfind('.');\n\
    \    my($before_dot) = $file_name->substr(0, $dot_pos);\n    my($after_dot) =\
    \ $file_name->substr($dot_pos + 1);\n    my($before_dot_len) = $before_dot->length();\n\
    \    my($after_dot_len) = $after_dot->length();\n    my($is_valid) = $before_dot_len\
    \ == 1 && $before_dot->isalpha() &&\n        $after_dot_len == 3 && $after_dot->match(\"\
    [0-9]{3}\");\n    return $is_valid ? \"Yes\" : \"No\";\n}", "    if ($file_name\
    \ =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.][a-zA-Z]{1}[a-zA-Z0-9]{1}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.][a-zA-Z]{1}[a-zA-Z0-9]{1}[.][a-zA-Z]{1}[a-zA-Z0-9]{1}[.]/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][txt|exe|dll]$/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    return $file_name\
    \ =~ /^\\d{3}\\.\\w+\\.(txt|exe|dll)$/i ? \"Yes\" : \"No\";\n}", "    if ($file_name\
    \ =~ /^[0-9]{3}[.](.*)$/) {\n        if ($1 =~ /^[a-zA-Z]/ && $2 =~ /^[a-zA-Z]/\
    \ && $3 =~ /^[a-zA-Z]/) {\n            return \"Yes\";\n        }\n    }\n   \
    \ return \"No\";\n}", "    return $file_name =~ /^([a-zA-Z][a-zA-Z0-9]{0,2})\\\
    .([txt|exe|dll])$/;\n}", "    if ($file_name =~ /^[0-9]{3}[.](.+)\\.([txt|exe|dll]{1})$/)\
    \ {\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name\
    \ =~ /^[0-9]{3}[.](.*)$/) {\n        if ($1 =~ /^[a-zA-Z]/ && $2 =~ /^[a-zA-Z]/\
    \ && $2 !~ /^[a-zA-Z]/) {\n            if ($2 =~ /\\.txt$/ || $2 =~ /\\.exe$/\
    \ || $2 =~ /\\.dll$/) {\n                return \"Yes\";\n            }\n    \
    \    }\n    }\n    return \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1,2}[.]/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if(($file_name =~\
    \ /^[0-9]{3}[.]/i) && ($file_name =~ /^[a-zA-Z]/)) {\n        if($file_name =~\
    \ /\\.txt$/i) {\n            return \"Yes\";\n        }\n        else if($file_name\
    \ =~ /\\.exe$/i) {\n            return \"Yes\";\n        }\n        else if($file_name\
    \ =~ /\\.dll$/i) {\n            return \"Yes\";\n        }\n        else {\n \
    \           return \"No\";\n        }\n    }\n    else {\n        return \"No\"\
    ;\n    }\n}", "    my($sub_before_dot) = $file_name;\n    my($sub_after_dot) =\
    \ substr($file_name, strrpos($file_name, '.') + 1);\n    my($sub_before_dot_length)\
    \ = length($sub_before_dot);\n    my($sub_after_dot_length) = length($sub_after_dot);\n\
    \    my($sub_before_dot_is_letter) = $sub_before_dot =~ /^[a-zA-Z]/;\n    my($sub_after_dot_is_valid)\
    \ = $sub_after_dot =~ /^(txt|exe|dll)$/;\n    my($sub_before_dot_is_not_empty)\
    \ = $sub_before_dot_length > 0;\n    my($sub_before_dot_is_not_too_long) = $sub_before_dot_length\
    \ <= 3;\n    my($sub_after_dot_is_valid) = $sub_after_dot_is_valid;\n    return\
    \ ($sub_before_dot_is_letter && $sub_before_dot_is_not_empty &&\n            $sub_before_dot_is_not_too_long\
    \ && $sub_after_dot_is_valid) ? \"Yes\" : \"No\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{2}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{3}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{4}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{5}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{6}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{7}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{8}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{9}[.]/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    return $file_name\
    \ =~ /^\\d{3}\\.\\w{1}(\\.\\w{1}|\\.\\w{2}|\\.\\w{3})?$/ ? \"Yes\" : \"No\";\n\
    }", "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n \
    \   if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n    }\n   \
    \ if ($file_name =~ /^[a-zA-Z]{1}[.][txt|exe|dll]$/){\n        return \"Yes\"\
    ;\n    }\n    return \"No\";\n}", "    my($dot_pos) = $file_name->rfind('.');\n\
    \    my($before_dot) = $file_name->substr(0, $dot_pos);\n    my($after_dot) =\
    \ $file_name->substr($dot_pos + 1);\n    my($is_valid) = $before_dot->length()\
    \ > 0 && $before_dot->isalpha() &&\n        $after_dot->length() > 0 && $after_dot->in('txt',\
    \ 'exe', 'dll');\n    return $is_valid ? \"Yes\" : \"No\";\n}", "    my($dot_pos)\
    \ = $file_name.rindex('.');\n    my($substr_before_dot) = $file_name.substr(0,\
    \ $dot_pos);\n    my($substr_after_dot) = $file_name.substr($dot_pos + 1);\n \
    \   my($substr_after_dot_lower) = $substr_after_dot.lc;\n    my($substr_after_dot_upper)\
    \ = $substr_after_dot.uc;\n    my($substr_after_dot_lower_digit) = $substr_after_dot_lower.match(\"\
    ^\\d+$\");\n    my($substr_after_dot_upper_digit) = $substr_after_dot_upper.match(\"\
    ^\\d+$\");\n    my($substr_after_dot_lower_letter) = $substr_after_dot_lower.match(\"\
    ^[a-zA-Z]+$\");\n    my($substr_after_dot_upper_letter) = $substr_after_dot_upper.match(\"\
    ^[a-zA-Z]+$\");\n    my($substr_after_dot_lower_letter_digit) = $substr_after_dot_lower.match(\"\
    ^[a-zA-Z\\d]+$\");\n    my($substr_after_dot_upper_letter_digit) = $substr_after_dot_upper.match(\"\
    ^[a-zA-Z\\d]+$\");\n    my($substr_after_dot_lower_letter_digit_digit) = $substr_after_dot_lower.match(\"\
    ^[a-zA-Z\\d\\d]+$\");\n    my($substr_after_dot_upper_letter_digit_digit) = $substr_after_dot_upper.match(\"\
    ^[a-zA-Z\\d\\d]+$\");\n    my($substr_after_dot_lower_letter_letter) = $substr_after_dot_lower.match(\"\
    ^[a-zA-Z][a-zA-Z]+$\");\n    my($substr_after_dot_upper_letter_letter) = $", " \
    \   return $file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,2}\\.\\.(txt|exe|dll)$/i ? \"\
    Yes\" : \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.](.*)$/) {\n        if\
    \ ($1 =~ /^[a-zA-Z]/ && $2 =~ /^[a-zA-Z]/ && $3 =~ /^[a-zA-Z]/) {\n          \
    \  return \"Yes\";\n        }\n    }\n    return \"No\";\n}", "    if ($file_name\
    \ =~ /^\\d{3}\\./){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]\\\
    ./){\n        return \"No\";\n    }\n    if ($file_name =~ /^\\d{3}[a-zA-Z]\\\
    ./){\n        return \"No\";\n    }\n    if ($file_name =~ /\\.txt$/){\n     \
    \   return \"Yes\";\n    }\n    if ($file_name =~ /\\.exe$/){\n        return\
    \ \"Yes\";\n    }\n    if ($file_name =~ /\\.dll$/){\n        return \"Yes\";\n\
    \    }\n    return \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n    \
    \    return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n      \
    \  return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{3}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{3}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{3}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{3}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    return $file_name\
    \ =~ /^[a-zA-Z0-9]\\.\\w+\\.(txt|exe|dll)$/;\n}", "    my($dot_pos) = $file_name.rindex('.');\n\
    \    my($sub_before_dot) = $file_name.substr(0, $dot_pos);\n    my($sub_after_dot)\
    \ = $file_name.substr($dot_pos + 1);\n    if ($sub_before_dot =~ /^\\d{3}$/) {\n\
    \        print \"No\\n\";\n    } else if ($sub_before_dot =~ /^[a-zA-Z]$/) {\n\
    \        print \"Yes\\n\";\n    } else {\n        print \"No\\n\";\n    }\n  \
    \  if ($sub_after_dot =~ /^(txt|exe|dll)$/) {\n        print \"Yes\\n\";\n   \
    \ } else {\n        print \"No\\n\";\n    }\n}", "    return $file_name =~ /^[a-zA-Z]\\\
    w{0,2}\\.\\w{1,3}(\\.\\w{1,3})?$/;\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n  \
    \      return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{2}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[0-9]{3}[.]/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if(($file_name =~\
    \ /^[0-9]{3}[.]/i) &&\n       ($file_name =~ /^[a-zA-Z]/i) &&\n       ($file_name\
    \ =~ /\\.txt|\\.exe|\\.dll/i) &&\n       ($file_name =~ /^[a-zA-Z]/i) &&\n   \
    \    ($file_name =~ /^[a-zA-Z]/i) &&\n       ($file_name =~ /^[a-zA-Z]/i) &&\n\
    \       ($file_name =~ /^[a-zA-Z]/i) &&\n       ($file_name =~ /^[a-zA-Z]/i) &&\n\
    \       ($file_name =~ /^[a-zA-Z]/i) &&\n       ($file_name =~ /^[a-zA-Z]/i) &&\n\
    \       ($file_name =~ /^[a-zA-Z]/i) &&\n       ($file_name =~ /^[a-zA-Z]/i) &&\n\
    \       ($file_name =~ /^[a-zA-Z]/i) &&\n       ($file_name =~ /^[a-zA-Z]/i) &&\n\
    \       ($file_name =~ /^[a-zA-Z]/i) &&\n       ($file_name =~ /^[a-zA-Z]/i) &&\n\
    \       ($file_name =~ /^[a-zA-Z]/i) &&\n       ($file_name =~ /^[a-zA-Z]/i) &&\n\
    \       ($file_name =~ /^[a-zA-Z]/i) &&\n       ($file_name =~ /^[a-zA-Z]/i) &&\n\
    \       ($file_name =~ /^[a-zA-Z]/i) &&\n       ($file_name =~ /^[a-zA-Z]/i) &&\n\
    \       ($file_name =~ /^[a-zA-Z]/i) &&\n       ($file", "    return $file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]{0,2}\\.\\.(txt|exe|dll)$/i ? \"Yes\" : \"No\";\n}",
  "    my $dot_pos = $file_name.rindex('.');\n    my $substr_before_dot = $file_name.substr(0,\
    \ $dot_pos);\n    my $substr_after_dot = $file_name.substr($dot_pos + 1);\n  \
    \  my $substr_before_dot_length = $substr_before_dot.length();\n    my $substr_after_dot_length\
    \ = $substr_after_dot.length();\n    my $substr_before_dot_is_empty = $substr_before_dot\
    \ eq \"\";\n    my $substr_before_dot_is_not_empty = $substr_before_dot ne \"\"\
    ;\n    my $substr_before_dot_is_letter = $substr_before_dot eq \"\";\n    my $substr_before_dot_is_not_letter\
    \ = $substr_before_dot ne \"\";\n    my $substr_after_dot_is_valid = ($substr_after_dot\
    \ eq \"txt\" or $substr_after_dot eq \"exe\" or $substr_after_dot eq \"dll\");\n\
    \    my $substr_before_dot_is_valid = ($substr_before_dot_length >= 1 and $substr_before_dot_is_not_empty\
    \ and $substr_before_dot_is_letter and $substr_before_dot_is_not_letter and $substr_after_dot_is_valid);\n\
    \    return $substr_before_dot_is_valid ? \"Yes\" : \"No\";\n}", "    my($substring_before_dot)\
    \ = $file_name;\n    my($substring_after_dot) = $file_name;\n    my($substring_before_dot_length)\
    \ = length($substring_before_dot);\n    my($substring_after_dot_length) = length($substring_after_dot);\n\
    \    my($dot_position) = index($file_name, '.');\n    my($substring_before_dot_is_empty)\
    \ = $substring_before_dot =~ /^$/;\n    my($substring_before_dot_is_not_empty)\
    \ = $substring_before_dot_length > 0;\n    my($substring_before_dot_is_letter)\
    \ = $substring_before_dot_is_empty || $substring_before_dot_is_not_empty && $substring_before_dot\
    \ =~ /^[a-zA-Z]/;\n    my($substring_after_dot_is_valid) = $substring_after_dot\
    \ =~ /^[a-zA-Z0-9]{1,3}$/;\n    my($substring_after_dot_is_not_valid) = ! $substring_after_dot_is_valid;\n\
    \    my($substring_after_dot_is_txt) = $substring_after_dot =~ /\\.txt$/i;\n \
    \   my($substring_after_dot_is_exe) = $substring_after_dot =~ /\\.exe$/i;\n  \
    \  my($substring_after_dot_is_dll) = $substring_after_dot =~ /\\.dll$/i;\n   \
    \ return\n        $substring_before_dot_is_letter && $substring_after_dot_is_valid\
    \ &&\n        ! $substring_after_dot_is_txt && ! $substring_after_dot_is_exe &&\
    \ ! $substring_after_dot_is_dll ? \"Yes\" : \"No\";\n}", "    my($dot_index) =\
    \ $file_name->rindex('.');\n    my($file_name_before_dot) = $file_name->substr(0,\
    \ $dot_index);\n    my($file_name_after_dot) = $file_name->substr($dot_index +\
    \ 1);\n    my($file_name_before_dot_is_empty) = $file_name_before_dot->isEmpty();\n\
    \    my($file_name_before_dot_is_letter) = $file_name_before_dot->isLetter();\n\
    \    my($file_name_after_dot_is_valid) = ($file_name_after_dot == 'txt' ||\n \
    \                                        $file_name_after_dot == 'exe' ||\n  \
    \                                       $file_name_after_dot == 'dll');\n    if\
    \ ($file_name_before_dot_is_empty && $file_name_after_dot_is_valid) {\n      \
    \  return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    if ($file_name\
    \ =~ /^\\d{3}[.]/ ) {\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]\\\
    w{1,}[.]\\w{1,3}$/ ) {\n        return \"Yes\";\n    }\n    return \"No\";\n}",
  "    if ($file_name =~ /^[0-9]{3}[.](.*)$/) {\n        if ($1 =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1,}$/)\
    \ {\n            if ($2 =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1,}$/) {\n               \
    \ if ($2 =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1,}$/) {\n                    if ($2 =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1,}$/)\
    \ {\n                        if ($2 =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1,}$/) {\n   \
    \                         if ($2 =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1,}$/) {\n      \
    \                          return \"Yes\";\n                            }\n  \
    \                      }\n                    }\n                }\n         \
    \   }\n        }\n    }\n    return \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][.]/){\n     \
    \   return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][.]\\.(txt|exe|dll)/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    my($dot_index) =\
    \ $file_name->rindex(\".\");\n    my($sub_before_dot) = $file_name->substr(0,\
    \ $dot_index);\n    my($sub_after_dot) = $file_name->substr($dot_index + 1);\n\
    \    my($sub_before_dot_length) = length($sub_before_dot);\n    my($sub_after_dot_length)\
    \ = length($sub_after_dot);\n    my($sub_before_dot_is_empty) = $sub_before_dot\
    \ eq \"\";\n    my($sub_before_dot_is_letter) = $sub_before_dot =~ /^[a-zA-Z]/;\n\
    \    my($sub_after_dot_is_valid) = $sub_after_dot =~ /^(txt|exe|dll)$/;\n    my($sub_before_dot_is_valid)\
    \ = $sub_before_dot_is_letter && $sub_before_dot_is_empty && $sub_before_dot_is_valid;\n\
    \    my($sub_after_dot_is_valid) = $sub_after_dot_is_valid;\n    return $sub_before_dot_is_valid\
    \ && $sub_after_dot_is_valid ? \"Yes\" : \"No\";\n}", "    my($dot_pos) = $file_name.rindex('.');\n\
    \    my($sub_before_dot) = $file_name.substr(0, $dot_pos);\n    my($sub_after_dot)\
    \ = $file_name.substr($dot_pos + 1);\n    my($sub_before_dot_length) = length($sub_before_dot);\n\
    \    my($sub_after_dot_length) = length($sub_after_dot);\n    my($sub_before_dot_is_empty)\
    \ = $sub_before_dot =~ /^\\s*$/;\n    my($sub_before_dot_is_letter) = $sub_before_dot\
    \ =~ /^[a-zA-Z]/;\n    my($sub_after_dot_is_valid) = $sub_after_dot =~ /^(txt|exe|dll)$/;\n\
    \    return ($sub_before_dot_is_empty && $sub_before_dot_is_letter && $sub_after_dot_is_valid)\
    \ ? \"Yes\" : \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n        return \"\
    No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n        return\
    \ \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    my($dot_pos) = $file_name.rindex('.');\n\
    \    my($sub_before_dot) = $file_name.substr(0, $dot_pos);\n    my($sub_after_dot)\
    \ = $file_name.substr($dot_pos + 1);\n    my($sub_before_dot_len) = length($sub_before_dot);\n\
    \    my($sub_after_dot_len) = length($sub_after_dot);\n    my($sub_before_dot_is_digit)\
    \ = $sub_before_dot =~ /^\\d+$/;\n    my($sub_before_dot_is_alpha) = $sub_before_dot\
    \ =~ /^[a-zA-Z]/;\n    my($sub_after_dot_is_valid) = ($sub_after_dot =~ /^(txt|exe|dll)$/);\n\
    \    my($sub_before_dot_is_valid) = ($sub_before_dot_is_digit && $sub_before_dot_is_alpha);\n\
    \    my($file_name_is_valid) = ($sub_before_dot_len > 0 && $sub_before_dot_is_valid\
    \ && $sub_after_dot_is_valid);\n    return $file_name_is_valid ? \"Yes\" : \"\
    No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n \
    \   }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1}[.]/){\n        return \"\
    Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"Yes\";\n    }\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~\
    \ /^\\d{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]\\\
    d{1}[a-zA-Z0-9]{1}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~\
    \ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]\\d{1}[a-zA-Z0-9]{1}[.]\\d{1}[a-zA-Z0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[a-zA-Z0-9]{1}[.]\\\
    d{1}[a-zA-Z0-9]{1}[.]\\d{1}[a-zA-Z0-9]{1}[.]\\d{1}[a-zA-Z0-9]{1}[.]/){\n     \
    \   return \"No\";\n    }\n    return \"Yes\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n  \
    \      return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    return $file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]{0,2}\\.\\.(txt|exe|dll)$/i ? \"Yes\" : \"No\";\n}",
  "    if($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if($file_name\
    \ =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n    }\n    if($file_name =~\
    \ /^[a-zA-Z]{1}[.][txt|exe|dll]$/){\n        return \"Yes\";\n    }\n    return\
    \ \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\"\
    ;\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n\
    \    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n        return \"\
    No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][txt|exe|dll]$/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.][0-9]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", '    return $file_name
    =~ /^(.+?)(\.\w+?)$/ and $1 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/
    and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/
    and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/
    and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/
    and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/
    and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/
    and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/
    and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-zA-Z]/ and $2 =~ /^[a-',
  "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z][.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z][.][txt|exe|dll]$/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][txt|exe|dll]$/){\n\
    \        return \"Yes\";\n    }\n    return \"No\";\n}", "    if(length($file_name)\
    \ > 3) {\n        return \"No\";\n    }\n    if(substr($file_name, 0, 3) eq \"\
    0-9\") {\n        return \"No\";\n    }\n    if(substr($file_name, 0, 1) ne \"\
    .\") {\n        return \"No\";\n    }\n    if(substr($file_name, 1, 1) ne \".\"\
    ) {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name, 2, 1) eq \".\")\
    \ {\n        return \"No\";\n    }\n    if(substr($file_name,", "    my($substring_before_dot)\
    \ = $file_name;\n    my($substring_after_dot) = substr($file_name, strrpos($file_name,\
    \ '.') + 1);\n    my($substring_before_dot_length) = length($substring_before_dot);\n\
    \    my($substring_after_dot_length) = length($substring_after_dot);\n    my($substring_before_dot_is_empty)\
    \ = $substring_before_dot eq \"\";\n    my($substring_before_dot_starts_with_letter)\
    \ = $substring_before_dot =~ /^[a-zA-Z]/;\n    my($substring_after_dot_is_valid)\
    \ = ($substring_after_dot eq \"txt\" or $substring_after_dot eq \"exe\" or $substring_after_dot\
    \ eq \"dll\");\n    my($file_name_is_valid) = ($substring_before_dot_length >\
    \ 0 and $substring_before_dot_starts_with_letter and $substring_after_dot_is_valid);\n\
    \    return $file_name_is_valid ? \"Yes\" : \"No\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.](.+)\\.([txt|exe|dll]{1})$/) {\n        return \"Yes\";\n    }\n\
    \    return \"No\";\n}", "    return $file_name =~ /^\\d{3}\\.\\w+\\.(txt|exe|dll)$/i\
    \ ? \"Yes\" : \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.](.+?)[.](txt|exe|dll)$/)\
    \ {\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    return $file_name\
    \ =~ /^[a-zA-Z0-9]\\.\\S+\\.(txt|exe|dll)$/ ? \"Yes\" : \"No\";\n}", "    my $dot_index\
    \ = $file_name->index('.');\n    my $dot_substr = $file_name->substr($dot_index,\
    \ 1);\n    my $dot_substr_before_dot = $file_name->substr(0, $dot_index);\n  \
    \  my $dot_substr_after_dot = $file_name->substr($dot_index + 1);\n    my $dot_substr_after_dot_is_valid\
    \ = $dot_substr eq 'txt' or $dot_substr eq 'exe' or $dot_substr eq 'dll';\n  \
    \  my $dot_substr_before_dot_is_valid = $dot_substr_before_dot ne '' and $dot_substr_before_dot->isalpha();\n\
    \    my $dot_substr_after_dot_is_valid = $dot_substr_after_dot_is_valid;\n   \
    \ return $dot_substr_before_dot_is_valid && $dot_substr_after_dot_is_valid;\n}",
  "    if(length($file_name) > 3) {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 0, 3) eq \"0-9\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 0, 1) ne \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 1, 1) ne \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,\
    \ 2, 1) eq \".\") {\n        return \"No\";\n    }\n    if(substr($file_name,",
  "    if ($file_name =~ /^[0-9]{3}[.](.*)$/) {\n        if ($1 =~ /^[a-zA-Z]/ &&\
    \ $2 =~ /^[a-zA-Z]/ && $3 =~ /^[a-zA-Z]/) {\n            return \"Yes\";\n   \
    \     }\n    }\n    return \"No\";\n}", "    if ($file_name =~ /^[0-9]{3}[.](.*)$/)\
    \ {\n        if ($1 =~ /^[a-zA-Z]{1}/ && $2 =~ /^[a-zA-Z]{1}/ && $3 =~ /^[a-zA-Z]{1}/)\
    \ {\n            return \"Yes\";\n        }\n    }\n    return \"No\";\n}", " \
    \   my($dot_pos) = index($file_name, '.');\n    my($sub_before_dot) = substr($file_name,\
    \ 0, $dot_pos);\n    my($sub_after_dot) = substr($file_name, $dot_pos + 1);\n\
    \    my($sub_before_dot_len) = length($sub_before_dot);\n    my($sub_after_dot_len)\
    \ = length($sub_after_dot);\n    my($sub_before_dot_is_letter) = $sub_before_dot\
    \ =~ /^[a-zA-Z]/;\n    my($sub_after_dot_is_valid) = $sub_after_dot =~ /^(txt|exe|dll)$/;\n\
    \    return\n        ($sub_before_dot_len == 0 || $sub_before_dot_is_letter) &&\n\
    \        ($sub_after_dot_len == 1 && $sub_after_dot_is_valid) ? \"Yes\" : \"No\"\
    ;\n}", "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n\
    \    if ($file_name =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n    }\n  \
    \  if ($file_name =~ /^[a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n        return \"No\"\
    ;\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    if ($file_name =~ /^[a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.][a-zA-Z]{1}[.]/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    if ($file_name =~\
    \ /^[0-9]{3}[.](.*)$/) {\n        if ($1 =~ /^[a-zA-Z]/ && $2 =~ /^[a-zA-Z]/ &&\
    \ $3 =~ /^[a-zA-Z]/) {\n            return \"Yes\";\n        }\n    }\n    return\
    \ \"No\";\n}", "    my $dot_index = $file_name->index('.');\n    my $substr_before_dot\
    \ = $file_name->substr(0, $dot_index);\n    my $substr_after_dot = $file_name->substr($dot_index\
    \ + 1);\n    my $substr_before_dot_length = $substr_before_dot->length();\n  \
    \  my $substr_after_dot_length = $substr_after_dot->length();\n    my $substr_before_dot_is_numeric\
    \ = $substr_before_dot->is_numeric();\n    my $substr_after_dot_is_valid = $substr_after_dot->is_valid();\n\
    \    my $substr_before_dot_is_empty = $substr_before_dot->is_empty();\n    my\
    \ $substr_before_dot_is_letter = $substr_before_dot->is_letter();\n    my $substr_after_dot_is_valid\
    \ = $substr_after_dot->is_valid();\n    my $substr_after_dot_is_txt = $substr_after_dot->is_txt();\n\
    \    my $substr_after_dot_is_exe = $substr_after_dot->is_exe();\n    my $substr_after_dot_is_dll\
    \ = $substr_after_dot->is_dll();\n    my $is_valid = $substr_before_dot_is_numeric\
    \ && $substr_before_dot_is_letter &&\n        $substr_after_dot_is_valid && $substr_before_dot_is_empty\
    \ &&\n        $substr_after_dot_is_valid && $substr_before_dot_is_letter &&\n\
    \        $substr_after_dot_is_valid && $substr_after_dot_is_txt &&\n        $substr_after_dot_is_exe\
    \ && $substr_after_dot_is_dll;\n    return $is_valid ? \"Yes\" : \"No\";\n}",
  "    return $file_name =~ s/^[0-9]{3}//;\n    return $file_name =~ s/\\./ /;\n \
    \   return $file_name =~ s/^[a-zA-Z]/ /;\n    return $file_name =~ s/[a-zA-Z]/\
    \ /;\n    return $file_name =~ s/\\.$//;\n    return $file_name =~ s/\\.\\.$//;\n\
    \    return $file_name =~ s/\\.\\.\\.$//;\n    return $file_name =~ s/\\.\\.\\\
    .\\.$//;\n    return $file_name =~ s/\\.\\.\\.\\.\\.$//;\n    return $file_name\
    \ =~ s/\\.\\.\\.\\.\\.\\.$//;\n    return $file_name =~ s/\\.\\.\\.\\.\\.\\.\\\
    .$//;\n    return $file_name =~ s/\\.\\.\\.\\.\\.\\.\\.\\.$//;\n    return $file_name\
    \ =~ s/\\.\\.\\.\\.\\.\\.\\.\\.\\.$//;\n    return $file_name =~ s/\\.\\.\\.\\\
    .\\.\\.\\.\\.\\.\\.$//;\n    return $file_name =~ s/\\.\\.\\.\\.\\.\\.\\.\\.\\\
    .\\.\\.$//;\n    return $file_name =~ s/\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.$//;\n\
    \    return $file_name =~ s/\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.$//;\n    return\
    \ $file_name =~ s/\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.$//;\n    return $file_name\
    \ =~ s/\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.$//;\n    return $file_name\
    \ =~ s/\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.$//;\n    return\
    \ $file_name =~ s/\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\\
    .$//;\n    return $file_name =~ s/\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\\
    .\\.\\.\\.\\.\\.\\.", '    return $file_name =~ /^(?<=\d{3})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<=\.\w{1})(?<',
  "    if ($file_name =~ /^[0-9]{3}[.]/){\n        return \"No\";\n    }\n    if ($file_name\
    \ =~ /^[a-zA-Z]{1}[.]/){\n        return \"No\";\n    }\n    if ($file_name =~\
    \ /^[a-zA-Z]{1}[.][txt|exe|dll]$/){\n        return \"Yes\";\n    }\n    return\
    \ \"No\";\n}", "    my $dot_index = $file_name->index('.');\n    my $dot_before_index\
    \ = $file_name->substr(0, $dot_index);\n    my $dot_after_index = $file_name->substr($dot_index\
    \ + 1);\n    my $dot_before_char = $dot_before_index->substr(0, 1);\n    my $dot_after_char\
    \ = $dot_after_index->substr(0, 1);\n    my $dot_before_char_is_letter = $dot_before_char->isalpha();\n\
    \    my $dot_after_char_is_letter = $dot_after_char->isalpha();\n    my $dot_before_char_is_digit\
    \ = $dot_before_char->isdigit();\n    my $dot_after_char_is_digit = $dot_after_char->isdigit();\n\
    \    my $dot_before_char_is_letter_or_digit = $dot_before_char->isalpha() || $dot_before_char->isdigit();\n\
    \    my $dot_after_char_is_letter_or_digit = $dot_after_char->isalpha() || $dot_after_char->isdigit();\n\
    \    my $dot_before_char_is_letter_or_digit_or_dot = $dot_before_char->isalpha()\
    \ || $dot_before_char->isdigit() || $dot_before_char == '.';\n    my $dot_after_char_is_letter_or_digit_or_dot\
    \ = $dot_after_char->isalpha() || $dot_after_char->isdigit() || $dot_after_char\
    \ == '.';\n    my $dot_before_char_is_letter_or_digit_or_dot_or_space = $dot_before_char->isalpha()\
    \ || $dot_before_char->isdigit() || $dot_before_char == '.' || $dot_before_char\
    \ == ' ';\n    my $dot_after_char_is_letter_or_digit_or_dot_or_space = $dot_after_char->isalpha()\
    \ || $dot_after_"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

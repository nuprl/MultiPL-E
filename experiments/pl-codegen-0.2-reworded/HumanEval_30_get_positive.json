{
  "name": "HumanEval_30_get_positive",
  "language": "pl",
  "prompt": "# Return only positive numbers in the array.\n# >>> get_positive([-1, 2, -4, 5, 6])\n# [2, 5, 6]\n# >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n# [5, 3, 2, 3, 9, 123, 1]\nsub get_positive {\n    my($l) = @_;\n",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&get_positive;\n        if(eq_deeply($candidate->([-1, -2, 4, 5, 6]),[4, 5, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]),[5, 3, 2, 3, 3, 9, 123, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1, -2]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "completions": [
    "    return grep { $l < 0 } @$l;\n}",
    "    my $result;\n    foreach my $i (@$l) {\n        if ($i >= 0) {\n            $result = push @$result, $i;\n        }\n    }\n    return $result;\n}",
    "    my $result;\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result = $result + $i;\n        }\n    }\n    return $result;\n}",
    "    return unless $l;\n    my @positive = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @positive, $i;\n        }\n    }\n    return @positive;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    my $result = [];\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l[$i] > 0) {\n            $result += $l[$i];\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my @positive = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @positive, $i;\n        }\n    }\n    return @positive;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $pos = [];\n    foreach $l (@_) {\n        if ($l > 0) {\n            $pos += [$l];\n        }\n    }\n    return $pos;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my @r = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @r, $i;\n        }\n    }\n    return @r;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    my $result;\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result = push($result, $i);\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my @r = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @r, $i;\n        }\n    }\n    return @r;\n}",
    "    my $result;\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result = push @$result, $i;\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $result;\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result = push($result, $i);\n        }\n    }\n    return $result;\n}",
    "    my $pos = [];\n    foreach $l (@_) {\n        if ($l > 0) {\n            $pos += [$l];\n        }\n    }\n    return $pos;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $result = [];\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l[$i] >= 0) {\n            $result += $l[$i];\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my @r = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @r, $i;\n        }\n    }\n    return @r;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $pos = [];\n    foreach $l (@_) {\n        if ($l > 0) {\n            $pos += [$l];\n        }\n    }\n    return $pos;\n}",
    "    my $result;\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result = $result + $i;\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $result;\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result = push @{$result}, $i;\n        }\n    }\n    return $result;\n}",
    "    my $result = [];\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result += [$i];\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my @r = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @r, $i;\n        }\n    }\n    return @r;\n}",
    "    my $pos = [];\n    foreach $l (@_) {\n        if ($l > 0) {\n            $pos += [$l];\n        }\n    }\n    return $pos;\n}",
    "    my $ret;\n    foreach my $i (@$l) {\n        if ($i < 0) {\n            continue;\n        }\n        $ret = $i;\n        break;\n    }\n    return $ret;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my @positive;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l[$i] > 0) {\n            push @positive, $l[$i];\n        }\n    }\n    return @positive;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $pos = [];\n    foreach $l (@_) {\n        if ($l > 0) {\n            $pos += [$l];\n        }\n    }\n    return $pos;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $r = [];\n    foreach $l (@_) {\n        if ($l >= 0) {\n            $r = @_;\n            break;\n        }\n    }\n    return $r;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $r = [];\n    foreach $l (@_) {\n        if ($l > 0) {\n            $r += [$l];\n        }\n    }\n    return $r;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    my @positive = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @positive, $i;\n        }\n    }\n    return @positive;\n}",
    "    my $pos = [];\n    foreach $l (@_) {\n        if ($l >= 0) {\n            $pos += [$l];\n        }\n    }\n    return $pos;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $pos = [];\n    foreach $l (@_) {\n        if ($l >= 0) {\n            $pos += [$l];\n        }\n    }\n    return $pos;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    my $pos = [];\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l[$i] > 0) {\n            $pos .= $l[$i];\n        }\n    }\n    return $pos;\n}",
    "    my @positive = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @positive, $i;\n        }\n    }\n    return @positive;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    my $pos = [];\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l[$i] > 0) {\n            $pos = $pos + [$l[$i]];\n        }\n    }\n    return $pos;\n}",
    "    my $ret;\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $ret = $ret + $i;\n        }\n    }\n    return $ret;\n}",
    "    my @pos = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @pos, $i;\n        }\n    }\n    return @pos;\n}",
    "    my $i = 0;\n    while ($i < @$l) {\n        if ($l[$i] < 0) {\n            $l[$i] = 0;\n        }\n        $i++;\n    }\n    return $l;\n}",
    "    my @r = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @r, $i;\n        }\n    }\n    return @r;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    my @positive = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @positive, $i;\n        }\n    }\n    return @positive;\n}",
    "    my $result = [];\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result += [$i];\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $result = [];\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result += [$i];\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $result;\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result = push @{$result}, $i;\n        }\n    }\n    return $result;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    my @positive = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @positive, $i;\n        }\n    }\n    return @positive;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $pos = [];\n    foreach $l (@_) {\n        if ($l > 0) {\n            $pos += [$l];\n        }\n    }\n    return $pos;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    my @r = ();\n    foreach my $i (@$l) {\n        if ($i >= 0) {\n            push @r, $i;\n        }\n    }\n    return @r;\n}",
    "    my $result;\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @{$result}, $i;\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return unless $l;\n    my @positive = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @positive, $i;\n        }\n    }\n    return @positive;\n}",
    "    my @positive;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l[$i] >= 0) {\n            push @positive, $l[$i];\n        }\n    }\n    return @positive;\n}",
    "    my @r = ();\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l[$i] > 0) {\n            push @r, $l[$i];\n        }\n    }\n    return @r;\n}",
    "    my $result;\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result = push @{$result}, $i;\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $pos = [];\n    for $i (@$l) {\n        if ($i >= 0) {\n            $pos = push @$pos, $i;\n        }\n    }\n    return $pos;\n}",
    "    my $ret = [];\n    foreach my $i (@$l) {\n        if ($i >= 0) {\n            $ret += [$i];\n        }\n    }\n    return $ret;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $result = [];\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l[$i] > 0) {\n            $result .= $l[$i];\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my @positive = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @positive, $i;\n        }\n    }\n    return @positive;\n}",
    "    my $result;\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result = push($result, $i);\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $pos = [];\n    for $i (@$l) {\n        if ($i > 0) {\n            $pos = $pos + [$i];\n        }\n    }\n    return $pos;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    my $result;\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result = $result + $i;\n        }\n    }\n    return $result;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $pos = [];\n    foreach $l (@_) {\n        if ($l > 0) {\n            $pos += [$l];\n        }\n    }\n    return $pos;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    my $result;\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            $result = push($result, $i);\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $pos = [];\n    foreach $l (@_) {\n        if ($l > 0) {\n            $pos += [$l];\n        }\n    }\n    return $pos;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my @r = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @r, $i;\n        }\n    }\n    return @r;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my @r = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @r, $i;\n        }\n    }\n    return @r;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $ret;\n    foreach my $i (@$l) {\n        if ($i < 0) {\n            continue;\n        }\n        $ret = $i;\n        break;\n    }\n    return $ret;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my @r = ();\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l[$i] >= 0) {\n            push @r, $l[$i];\n        }\n    }\n    return @r;\n}",
    "    my @r = ();\n    foreach my $i (@$l) {\n        if ($i >= 0) {\n            push @r, $i;\n        }\n    }\n    return @r;\n}",
    "    my @positive = ();\n    for (@$l) {\n        if (0 < $1) {\n            push @positive, $1;\n        }\n    }\n    return @positive;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $result = [];\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l[$i] > 0) {\n            $result = $result + [$l[$i]];\n        }\n    }\n    return $result;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $pos = [];\n    foreach $l (@_) {\n        if ($l > 0) {\n            $pos += [$l];\n        }\n    }\n    return $pos;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    my @r = ();\n    foreach my $i (@$l) {\n        if ($i >= 0) {\n            push @r, $i;\n        }\n    }\n    return @r;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    my $pos = [];\n    foreach $l (@_) {\n        if ($l > 0) {\n            $pos += [$l];\n        }\n    }\n    return $pos;\n}",
    "    my $i = 0;\n    while ($i < @$l) {\n        if ($l[$i] < 0) {\n            $l[$i] = 0;\n        }\n        $i++;\n    }\n    return $l;\n}",
    "    return grep { $l <= 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}",
    "    return grep { $l < 0 } @$l;\n}"
  ],
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ]
}
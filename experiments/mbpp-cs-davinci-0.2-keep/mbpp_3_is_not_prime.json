{
  "name": "mbpp_3_is_not_prime",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to identify non-prime numbers.\n    public static bool IsNotPrime(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_3_is_not_prime.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsNotPrime((2L)) == (false));\n    Debug.Assert(IsNotPrime((10L)) == (true));\n    Debug.Assert(IsNotPrime((35L)) == (true));\n    Debug.Assert(IsNotPrime((37L)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (n < 2) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n < 2) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n == 1) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n < 2) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n <= 1) {\n            return true;\n        }\n        if (n <= 3) {\n            return false;\n        }\n        if (n % 2 == 0 || n % 3 == 0) {\n            return true;\n        }\n        for (long i = 5; i * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n                return true;\n            }\n        }\n        return false;",
    "        if (n < 2) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n == 1) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n == 1) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n == 1) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n < 2) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n < 2) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n < 2) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n <= 1) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n <= 1) return true;\n        if (n <= 3) return false;\n        if (n % 2 == 0 || n % 3 == 0) return true;\n        for (long i = 5; i * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) return true;\n        }\n        return false;",
    "        if (n < 2) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n < 2) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n < 2) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;",
    "        if (n == 1) return true;\n        if (n == 2) return false;\n        if (n % 2 == 0) return true;\n        for (long i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i == 0) return true;\n        }\n        return false;"
  ]
}
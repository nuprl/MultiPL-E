{
  "name": "mbpp_97_frequency_lists",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    public static Dictionary<long,long> FrequencyLists(List<List<long>> list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_97_frequency_lists.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)2L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L, (long)5L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 3L}, {3L, 1L}, {4L, 1L}, {5L, 2L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L})}))).Equals((new Dictionary<long,long>(){{1L, 1L}, {2L, 1L}, {3L, 1L}, {4L, 1L}, {5L, 1L}, {6L, 1L}, {7L, 1L}, {8L, 1L}, {9L, 1L}, {10L, 1L}, {11L, 1L}, {12L, 1L}})));\n    Debug.Assert(FrequencyLists((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)20L, (long)30L, (long)40L, (long)17L}), (List<long>)new List<long>(new long[]{(long)18L, (long)16L, (long)14L, (long)13L}), (List<long>)new List<long>(new long[]{(long)10L, (long)20L, (long)30L, (long)40L})}))).Equals((new Dictionary<long,long>(){{20L, 2L}, {30L, 2L}, {40L, 2L}, {17L, 1L}, {18L, 1L}, {16L, 1L}, {14L, 1L}, {13L, 1L}, {10L, 1L}})));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;",
    "        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach(List<long> list in list1) {\n            foreach(long element in list) {\n                if(result.ContainsKey(element)) {\n                    result[element] += 1;\n                } else {\n                    result[element] = 1;\n                }\n            }\n        }\n        return result;",
    "        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num] += 1;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;",
    "        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;",
    "        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;",
    "        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long element in list) {\n                if (freq.ContainsKey(element)) {\n                    freq[element]++;\n                } else {\n                    freq[element] = 1;\n                }\n            }\n        }\n        return freq;",
    "        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num] += 1;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;",
    "        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;",
    "        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long i in list) {\n                if (freq.ContainsKey(i)) {\n                    freq[i] += 1;\n                } else {\n                    freq[i] = 1;\n                }\n            }\n        }\n        return freq;",
    "        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (dict.ContainsKey(item)) {\n                    dict[item]++;\n                } else {\n                    dict[item] = 1;\n                }\n            }\n        }\n        return dict;",
    "        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;",
    "        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list2 in list1) {\n            foreach (long item in list2) {\n                if (freq.ContainsKey(item)) {\n                    freq[item] += 1;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;",
    "        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (freq.ContainsKey(num)) {\n                    freq[num]++;\n                } else {\n                    freq[num] = 1;\n                }\n            }\n        }\n        return freq;",
    "        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;",
    "        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num] += 1;\n                } else {\n                    dict[num] = 1;\n                }\n            }\n        }\n        return dict;",
    "        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item]++;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;",
    "        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (List<long> list2 in list1) {\n            foreach (long x in list2) {\n                if (freq.ContainsKey(x)) {\n                    freq[x]++;\n                } else {\n                    freq[x] = 1;\n                }\n            }\n        }\n        return freq;",
    "        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long num in list) {\n                if (dict.ContainsKey(num)) {\n                    dict[num]++;\n                } else {\n                    dict.Add(num,1);\n                }\n            }\n        }\n        return dict;",
    "        Dictionary<long,long> result = new Dictionary<long,long>();\n        foreach (List<long> list in list1) {\n            foreach (long item in list) {\n                if (result.ContainsKey(item)) {\n                    result[item] += 1;\n                } else {\n                    result[item] = 1;\n                }\n            }\n        }\n        return result;",
    "        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (var list in list1) {\n            foreach (var item in list) {\n                if (freq.ContainsKey(item)) {\n                    freq[item] += 1;\n                } else {\n                    freq[item] = 1;\n                }\n            }\n        }\n        return freq;"
  ]
}
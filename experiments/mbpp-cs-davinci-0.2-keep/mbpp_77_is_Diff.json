{
  "name": "mbpp_77_is_Diff",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find whether a number is divisible by 11.\n    public static bool IsDiff(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsDiff((12345L)) == (false));\n    Debug.Assert(IsDiff((1212112L)) == (true));\n    Debug.Assert(IsDiff((1212L)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum -= n % 10;\n            n /= 10;\n        }\n        return sum % 11 == 0;",
    "        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum -= n % 10;\n            n /= 10;\n        }\n        return sum % 11 == 0;",
    "        long sum = 0;\n        long diff = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            diff += n % 10;\n            n /= 10;\n        }\n        return sum == diff;",
    "        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum -= n % 10;\n            n /= 10;\n        }\n        return sum % 11 == 0;",
    "        var s = n.ToString();\n        var sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n            sum += (i % 2 == 0) ? s[i] - '0' : -(s[i] - '0');\n        }\n        return sum % 11 == 0;",
    "        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum % 11 == 0;",
    "        if (n < 0) {\n            n = -n;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            odd += n % 10;\n            n /= 10;\n            even += n % 10;\n            n /= 10;\n        }\n        return (odd - even) % 11 == 0;",
    "        long sum = 0;\n        long diff = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            diff += n % 10;\n            n /= 10;\n        }\n        return sum == diff;",
    "        long sum = 0;\n        long diff = 0;\n        while (n > 0) {\n            sum += n % 10;\n            diff += n % 10;\n            n /= 10;\n            sum += n % 10;\n            diff -= n % 10;\n            n /= 10;\n        }\n        return diff == 0;",
    "        var s = n.ToString();\n        var diff = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n                diff += s[i] - '0';\n            } else {\n                diff -= s[i] - '0';\n            }\n        }\n        return diff % 11 == 0;",
    "        if (n < 0) n = -n;\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum -= n % 10;\n            n /= 10;\n        }\n        return sum % 11 == 0;",
    "        long sum = 0;\n        long diff = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            diff += n % 10;\n            n /= 10;\n        }\n        return sum == diff;",
    "        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum -= n % 10;\n            n /= 10;\n        }\n        return sum % 11 == 0;",
    "        long sum = 0;\n        long diff = 0;\n        long digit = 0;\n        while (n > 0) {\n            digit = n % 10;\n            if (sum > diff) {\n                diff += digit;\n            } else {\n                sum += digit;\n            }\n            n /= 10;\n        }\n        return sum == diff;",
    "        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum -= n % 10;\n            n /= 10;\n        }\n        return sum % 11 == 0;",
    "        var s = n.ToString();\n        var sum = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n                sum += s[i] - '0';\n            } else {\n                sum -= s[i] - '0';\n            }\n        }\n        return sum % 11 == 0;",
    "        if (n < 0) {\n            n = -n;\n        }\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum -= n % 10;\n            n /= 10;\n        }\n        return sum % 11 == 0;",
    "        long sum = 0;\n        long diff = 0;\n        long x = n;\n        while (x > 0) {\n            sum += x % 10;\n            x /= 10;\n            diff += x % 10;\n            x /= 10;\n        }\n        return sum == diff;",
    "        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            odd += n % 10;\n            n /= 10;\n            even += n % 10;\n            n /= 10;\n        }\n        return Math.Abs(odd - even) % 11 == 0;",
    "        long sum = 0;\n        long diff = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            diff += n % 10;\n            n /= 10;\n        }\n        return (sum - diff) % 11 == 0;"
  ]
}
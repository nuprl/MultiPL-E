{
  "name": "mbpp_629_Split",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find even numbers from a list of numbers.\n    public static List<long> Split(List<long> list) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_629_Split.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Split((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L}))));\n    Debug.Assert(Split((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)0L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L, (long)6L, (long)8L, (long)0L}))));\n    Debug.Assert(Split((new List<long>(new long[]{(long)8L, (long)12L, (long)15L, (long)19L}))).Equals((new List<long>(new long[]{(long)8L, (long)12L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        List<long> evens = new List<long>();\n        foreach (long num in list) {\n            if (num % 2 == 0) {\n                evens.Add(num);\n            }\n        }\n        return evens;",
    "        List<long> even = new List<long>();\n        foreach (long num in list) {\n            if (num % 2 == 0) {\n                even.Add(num);\n            }\n        }\n        return even;",
    "        List<long> evens = new List<long>();\n        foreach (long num in list) {\n            if (num % 2 == 0) {\n                evens.Add(num);\n            }\n        }\n        return evens;",
    "        List<long> evens = new List<long>();\n        foreach (long i in list) {\n            if (i % 2 == 0) {\n                evens.Add(i);\n            }\n        }\n        return evens;",
    "        List<long> evens = new List<long>();\n        foreach (long num in list) {\n            if (num % 2 == 0) {\n                evens.Add(num);\n            }\n        }\n        return evens;",
    "        List<long> evens = new List<long>();\n        foreach (long i in list) {\n            if (i % 2 == 0) {\n                evens.Add(i);\n            }\n        }\n        return evens;",
    "        List<long> even = new List<long>();\n        foreach (long i in list) {\n            if (i % 2 == 0) {\n                even.Add(i);\n            }\n        }\n        return even;",
    "        List<long> evens = new List<long>();\n        for (int i = 0; i < list.Count; i++) {\n            if (list[i] % 2 == 0) {\n                evens.Add(list[i]);\n            }\n        }\n        return evens;",
    "        List<long> evens = new List<long>();\n        foreach (long num in list) {\n            if (num % 2 == 0) {\n                evens.Add(num);\n            }\n        }\n        return evens;",
    "        List<long> even = new List<long>();\n        foreach (long num in list) {\n            if (num % 2 == 0) {\n                even.Add(num);\n            }\n        }\n        return even;",
    "        List<long> evens = new List<long>();\n        foreach (long i in list) {\n            if (i % 2 == 0) {\n                evens.Add(i);\n            }\n        }\n        return evens;",
    "        List<long> even = new List<long>();\n        foreach (long num in list) {\n            if (num % 2 == 0) {\n                even.Add(num);\n            }\n        }\n        return even;",
    "        List<long> evens = new List<long>();\n        foreach (long i in list) {\n            if (i % 2 == 0) {\n                evens.Add(i);\n            }\n        }\n        return evens;",
    "        List<long> even = new List<long>();\n        foreach (long i in list) {\n            if (i % 2 == 0) {\n                even.Add(i);\n            }\n        }\n        return even;",
    "        List<long> even = new List<long>();\n        foreach (long num in list) {\n            if (num % 2 == 0) {\n                even.Add(num);\n            }\n        }\n        return even;",
    "        List<long> even = new List<long>();\n        foreach (long i in list) {\n            if (i % 2 == 0) {\n                even.Add(i);\n            }\n        }\n        return even;",
    "        List<long> evens = new List<long>();\n        foreach (long num in list) {\n            if (num % 2 == 0) {\n                evens.Add(num);\n            }\n        }\n        return evens;",
    "        List<long> even = new List<long>();\n        foreach (long num in list) {\n            if (num % 2 == 0) {\n                even.Add(num);\n            }\n        }\n        return even;",
    "        return list.Where(x => x % 2 == 0).ToList();",
    "        List<long> evens = new List<long>();\n        foreach (long num in list) {\n            if (num % 2 == 0) {\n                evens.Add(num);\n            }\n        }\n        return evens;"
  ]
}
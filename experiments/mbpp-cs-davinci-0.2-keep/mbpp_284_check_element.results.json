{
  "name": "mbpp_284_check_element",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_284_check_element.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzc16__i_.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpzc16__i_.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpzc16__i_.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list.GetType() == typeof(List<int>)) {\n            List<int> listInt = (List<int>)list;\n            int elementInt = (int)element;\n            for (int i = 0; i < listInt.Count; i++) {\n                if (listInt[i] != elementInt) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<double>)) {\n            List<double> listDouble = (List<double>)list;\n            double elementDouble = (double)element;\n            for (int i = 0; i < listDouble.Count; i++) {\n                if (listDouble[i] != elementDouble) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<string>)) {\n            List<string> listString = (List<string>)list;\n            string elementString = (string)element;\n            for (int i = 0; i < listString.Count; i++) {\n                if (listString[i] != elementString) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<char>)) {\n            List<char> listChar = (List<char>)list;\n            char elementChar = (char)element;\n            for (int i = 0; i < listChar.Count; i++) {\n                if (listChar[i] != elementChar) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<bool>)) {\n            List<bool> listBool = (List<bool>)list;\n            bool elementBool = (bool)element;\n            for (int i = 0; i < listBool.Count; i++) {\n                if (listBool[i] != elementBool) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsqwkpgs2.cs(67,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpsqwkpgs2.cs(68,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpsqwkpgs2.cs(69,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> list1 = (List<int>)list;\n            int element1 = (int)element;\n            foreach (int item in list1) {\n                if (item != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> list1 = (List<string>)list;\n            string element1 = (string)element;\n            foreach (string item in list1) {\n                if (item != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> list1 = (List<float>)list;\n            float element1 = (float)element;\n            foreach (float item in list1) {\n                if (item != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> list1 = (List<double>)list;\n            double element1 = (double)element;\n            foreach (double item in list1) {\n                if (item != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> list1 = (List<char>)list;\n            char element1 = (char)element;\n            foreach (char item in list1) {\n                if (item != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> list1 = (List<bool>)list;\n            bool element1 = (bool)element;\n            foreach (bool item in list1) {\n                if (item != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmh62cfw8.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpmh62cfw8.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpmh62cfw8.cs(78,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_f2_4o12.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string s in l) {\n                if (s != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double d in l) {\n                if (d != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float f in l) {\n                if (f != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char c in l) {\n                if (c != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool b in l) {\n                if (b != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<object>) {\n            List<object> l = (List<object>)list;\n            foreach (object o in l) {\n                if (o != element) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbjp9wz74.cs(76,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpbjp9wz74.cs(77,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpbjp9wz74.cs(78,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpbjp9wz74.cs(79,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpbjp9wz74.cs(82,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list.GetType() == typeof(List<int>)) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<string>)) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<double>)) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<float>)) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<char>)) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            for (int i = 0; i < l.Count; i++) {\n                if (l[i] != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<bool>)) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            for (int i = 0\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkr22dq2j.cs(59,27): error CS1002: ; expected\n/tmp/tmpkr22dq2j.cs(59,27): error CS1525: Invalid expression term '}'\n/tmp/tmpkr22dq2j.cs(59,27): error CS1026: ) expected\n/tmp/tmpkr22dq2j.cs(61,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpkr22dq2j.cs(62,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkr22dq2j.cs(63,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkr22dq2j.cs(64,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpkr22dq2j.cs(67,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl8xp738t.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsr8u1v3i.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpsr8u1v3i.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpsr8u1v3i.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is int[]) {\n            int[] l = (int[])list;\n            for (int i = 0; i < l.Length; i++) {\n                if (l[i] != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is string[]) {\n            string[] l = (string[])list;\n            for (int i = 0; i < l.Length; i++) {\n                if (l[i] != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is char[]) {\n            char[] l = (char[])list;\n            for (int i = 0; i < l.Length; i++) {\n                if (l[i] != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is bool[]) {\n            bool[] l = (bool[])list;\n            for (int i = 0; i < l.Length; i++) {\n                if (l[i] != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is float[]) {\n            float[] l = (float[])list;\n            for (int i = 0; i < l.Length; i++) {\n                if (l[i] != (float)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is double[]) {\n            double[] l = (double[])list;\n            for (int i = 0; i < l.Length; i++) {\n                if (l[i] != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is decimal[]) {\n            decimal[] l = (decimal[])list;\n            for (int i = 0; i < l.Length; i++) {\n                if (l[i] != (decimal)element) {\n                    return false;\n                }\n            }\n            return true;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1ep5a0zs.cs(69,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp1ep5a0zs.cs(70,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp1ep5a0zs.cs(71,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp1ep5a0zs.cs(72,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp1ep5a0zs.cs(75,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<short>) {\n            List<short> l = (List<short>)list;\n            short e = (short)element;\n            foreach (short i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<byte>) {\n            List<byte> l = (List<byte>)list;\n            byte e = (byte)element;\n            foreach (byte i in l) {\n                if (i != e) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx2ncv46k.cs(77,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpx2ncv46k.cs(78,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpx2ncv46k.cs(79,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpx2ncv46k.cs(80,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpx2ncv46k.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> list2 = (List<int>)list;\n            foreach (int i in list2) {\n                if (i != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> list2 = (List<string>)list;\n            foreach (string i in list2) {\n                if (i != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> list2 = (List<double>)list;\n            foreach (double i in list2) {\n                if (i != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> list2 = (List<char>)list;\n            foreach (char i in list2) {\n                if (i != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> list2 = (List<bool>)list;\n            foreach (bool i in list2) {\n                if (i != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<object>) {\n            List<object> list2 = (List<object>)list;\n            foreach (object i in list2) {\n                if (i != element) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpn5h4plkp.cs(64,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpn5h4plkp.cs(65,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpn5h4plkp.cs(66,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptxdm03uf.cs(21,129): error CS1525: Invalid expression term 'object'\n/tmp/tmptxdm03uf.cs(22,98): error CS1525: Invalid expression term 'object'\n/tmp/tmptxdm03uf.cs(23,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            foreach (int i in l) {\n                if (i != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            foreach (string i in l) {\n                if (i != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            foreach (double i in l) {\n                if (i != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            foreach (float i in l) {\n                if (i != (float)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            foreach (char i in l) {\n                if (i != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            foreach (bool i in l) {\n                if (i != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpuc1j_w6z.cs(70,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpuc1j_w6z.cs(71,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpuc1j_w6z.cs(72,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<byte>) {\n            List<byte> l = (List<byte>)list;\n            byte e = (byte)element;\n            foreach (byte i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_was1olr.cs(75,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp_was1olr.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_was1olr.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_was1olr.cs(78,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp_was1olr.cs(81,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object> && element is object) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb2xrcy_f.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpb2xrcy_f.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpb2xrcy_f.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            var list_ = (List<int>)list;\n            var element_ = (int)element;\n            for (int i = 0; i < list_.Count; i++) {\n                if (list_[i] != element_) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            var list_ = (List<string>)list;\n            var element_ = (string)element;\n            for (int i = 0; i < list_.Count; i++) {\n                if (list_[i] != element_) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            var list_ = (List<double>)list;\n            var element_ = (double)element;\n            for (int i = 0; i < list_.Count; i++) {\n                if (list_[i] != element_) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            var list_ = (List<bool>)list;\n            var element_ = (bool)element;\n            for (int i = 0; i < list_.Count; i++) {\n                if (list_[i] != element_) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            var list_ = (List<char>)list;\n            var element_ = (char)element;\n            for (int i = 0; i < list_.Count; i++) {\n                if (list_[i] != element_) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<object>) {\n            var list_ = (List<object>)list;\n            for (int i = 0; i < list_.Count; i++) {\n                if (list_[i] != element) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            throw new Exception(\"Invalid list type\");\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2cf112c8.cs(68,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp2cf112c8.cs(69,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp2cf112c8.cs(70,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp2cf112c8.cs(71,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp2cf112c8.cs(74,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in list as IEnumerable<object>) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj2973ruo.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj2973ruo.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj2973ruo.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object o in (IEnumerable<object>)list) {\n                if (!o.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp48cnu7_6.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp48cnu7_6.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp48cnu7_6.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_f2_4o12.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp51a38rfr.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp51a38rfr.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp51a38rfr.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<byte>) {\n            List<byte> l = (List<byte>)list;\n            byte e = (byte)element;\n            foreach (byte i in l) {\n                if (i != e) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp2ru40_b.cs(77,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpp2ru40_b.cs(78,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpp2ru40_b.cs(79,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpp2ru40_b.cs(80,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpp2ru40_b.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfz5fxvq9.cs(75,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpfz5fxvq9.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpfz5fxvq9.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpfz5fxvq9.cs(78,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpfz5fxvq9.cs(81,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<object>) {\n            List<object> l = (List<object>)list;\n            object e = (object)element;\n            foreach (object i in l) {\n                if (i != e) {\n                    return false;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8xq8zsjw.cs(79,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp8xq8zsjw.cs(80,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8xq8zsjw.cs(81,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8xq8zsjw.cs(82,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp8xq8zsjw.cs(85,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_f2_4o12.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl8xp738t.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp26g0361g.cs(77,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp26g0361g.cs(78,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp26g0361g.cs(79,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp26g0361g.cs(80,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp26g0361g.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list.GetType() == typeof(List<int>)) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<string>)) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<double>)) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<float>)) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<char>)) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<bool>)) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<byte>)) {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdt5_h26o.cs(68,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpdt5_h26o.cs(69,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpdt5_h26o.cs(70,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpdt5_h26o.cs(71,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpdt5_h26o.cs(74,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf7wfgr5z.cs(21,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpf7wfgr5z.cs(22,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpf7wfgr5z.cs(23,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptvzxq3ob.cs(66,129): error CS1525: Invalid expression term 'object'\n/tmp/tmptvzxq3ob.cs(67,98): error CS1525: Invalid expression term 'object'\n/tmp/tmptvzxq3ob.cs(68,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            throw new Exception(\"List is not a list\");\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9bdfmsks.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp9bdfmsks.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp9bdfmsks.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnlprmnnk.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpnlprmnnk.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpnlprmnnk.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4stjc93y.cs(24,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp4stjc93y.cs(25,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp4stjc93y.cs(26,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp75ochjn6.cs(77,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp75ochjn6.cs(78,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp75ochjn6.cs(79,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp75ochjn6.cs(80,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp75ochjn6.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps8smym3f.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            var l = (List<int>)list;\n            var e = (int)element;\n            return l.All(x => x == e);\n        } else if (list is List<string>) {\n            var l = (List<string>)list;\n            var e = (string)element;\n            return l.All(x => x == e);\n        } else if (list is List<char>) {\n            var l = (List<char>)list;\n            var e = (char)element;\n            return l.All(x => x == e);\n        } else if (list is List<bool>) {\n            var l = (List<bool>)list;\n            var e = (bool)element;\n            return l.All(x => x == e);\n        } else if (list is List<double>) {\n            var l = (List<double>)list;\n            var e = (double)element;\n            return l.All(x => x == e);\n        } else if (list is List<float>) {\n            var l = (List<float>)list;\n            var e = (float)element;\n            return l.All(x => x == e);\n        } else if (list is List<long>) {\n            var l = (List<long>)list;\n            var e = (long)element;\n            return l.All(x => x == e);\n        } else if (list is List<byte>) {\n            var l = (List<byte>)list;\n            var e = (byte)element;\n            return l.All(x => x == e);\n        } else if (list is List<short>) {\n            var l = (List<short>)list;\n            var e = (short)element;\n            return l.All(x => x == e);\n        } else if (list is List<uint>) {\n            var l = (List<uint>)list;\n            var e = (uint)element;\n            return l.All(x => x == e);\n        } else if (list is List<ulong>) {\n            var l = (List<ulong>)list;\n            var e = (ul\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvc8674ov.cs(53,24): error CS1026: ) expected\n/tmp/tmpvc8674ov.cs(53,24): error CS1002: ; expected\n/tmp/tmpvc8674ov.cs(55,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpvc8674ov.cs(56,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpvc8674ov.cs(57,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpvc8674ov.cs(58,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpvc8674ov.cs(61,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsr8u1v3i.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpsr8u1v3i.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpsr8u1v3i.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object> list1) {\n            foreach (var item in list1) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyd97azqx.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpyd97azqx.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpyd97azqx.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> list1 = (List<int>)list;\n            int element1 = (int)element;\n            for (int i = 0; i < list1.Count; i++) {\n                if (list1[i] != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> list1 = (List<string>)list;\n            string element1 = (string)element;\n            for (int i = 0; i < list1.Count; i++) {\n                if (list1[i] != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> list1 = (List<double>)list;\n            double element1 = (double)element;\n            for (int i = 0; i < list1.Count; i++) {\n                if (list1[i] != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<float>) {\n            List<float> list1 = (List<float>)list;\n            float element1 = (float)element;\n            for (int i = 0; i < list1.Count; i++) {\n                if (list1[i] != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> list1 = (List<char>)list;\n            char element1 = (char)element;\n            for (int i = 0; i < list1.Count; i++) {\n                if (list1[i] != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> list1 = (List<bool>)list;\n            bool element1 = (bool)element;\n            for (int i = 0; i < list1.Count; i++) {\n                if (list\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp95dhbx1l.cs(65,25): error CS1026: ) expected\n/tmp/tmp95dhbx1l.cs(65,25): error CS1525: Invalid expression term '}'\n/tmp/tmp95dhbx1l.cs(65,25): error CS1002: ; expected\n/tmp/tmp95dhbx1l.cs(67,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp95dhbx1l.cs(68,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp95dhbx1l.cs(69,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp95dhbx1l.cs(70,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp95dhbx1l.cs(73,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2faftl2n.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp2faftl2n.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp2faftl2n.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl8xp738t.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object o in (List<object>)list) {\n                if (o != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgn84n06t.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpgn84n06t.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpgn84n06t.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzc16__i_.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpzc16__i_.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpzc16__i_.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            foreach (int i in (List<int>)list) {\n                if (i != (int)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<string>) {\n            foreach (string i in (List<string>)list) {\n                if (i != (string)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<char>) {\n            foreach (char i in (List<char>)list) {\n                if (i != (char)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<double>) {\n            foreach (double i in (List<double>)list) {\n                if (i != (double)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<float>) {\n            foreach (float i in (List<float>)list) {\n                if (i != (float)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<long>) {\n            foreach (long i in (List<long>)list) {\n                if (i != (long)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<bool>) {\n            foreach (bool i in (List<bool>)list) {\n                if (i != (bool)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<byte>) {\n            foreach (byte i in (List<byte>)list) {\n                if (i != (byte)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<sbyte>) {\n            foreach (sbyte i in (List<sbyte>)list) {\n                if (i != (sbyte)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<short>) {\n            foreach (short i in (List<short>)list) {\n                if (i != (short)element) {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_yyfh16k.cs(70,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp_yyfh16k.cs(71,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_yyfh16k.cs(72,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_yyfh16k.cs(73,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp_yyfh16k.cs(76,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1q0y3vwf.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<byte>) {\n            List<byte> l = (List<byte>)list;\n            byte e = (byte)element;\n            foreach (byte i in l) {\n                if (i != e) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp2ru40_b.cs(77,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpp2ru40_b.cs(78,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpp2ru40_b.cs(79,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpp2ru40_b.cs(80,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpp2ru40_b.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrkr2lvi.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            foreach (int i in (List<int>)list) {\n                if (i != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            foreach (string i in (List<string>)list) {\n                if (i != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            foreach (double i in (List<double>)list) {\n                if (i != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<float>) {\n            foreach (float i in (List<float>)list) {\n                if (i != (float)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            foreach (char i in (List<char>)list) {\n                if (i != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            foreach (bool i in (List<bool>)list) {\n                if (i != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<object>) {\n            foreach (object i in (List<object>)list) {\n                if (i != (object)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppw2hlrcv.cs(70,129): error CS1525: Invalid expression term 'object'\n/tmp/tmppw2hlrcv.cs(71,98): error CS1525: Invalid expression term 'object'\n/tmp/tmppw2hlrcv.cs(72,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_f2_4o12.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptvzxq3ob.cs(66,129): error CS1525: Invalid expression term 'object'\n/tmp/tmptvzxq3ob.cs(67,98): error CS1525: Invalid expression term 'object'\n/tmp/tmptvzxq3ob.cs(68,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzc16__i_.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpzc16__i_.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpzc16__i_.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprts02_lv.cs(77,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmprts02_lv.cs(78,129): error CS1525: Invalid expression term 'object'\n/tmp/tmprts02_lv.cs(79,98): error CS1525: Invalid expression term 'object'\n/tmp/tmprts02_lv.cs(80,128): error CS1525: Invalid expression term 'object'\n/tmp/tmprts02_lv.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphfilzaw7.cs(75,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmphfilzaw7.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmphfilzaw7.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmphfilzaw7.cs(78,128): error CS1525: Invalid expression term 'object'\n/tmp/tmphfilzaw7.cs(81,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1q0y3vwf.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8ealjyd8.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrkr2lvi.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_f2_4o12.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is int[]) {\n            int[] arr = (int[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is string[]) {\n            string[] arr = (string[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is char[]) {\n            char[] arr = (char[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is double[]) {\n            double[] arr = (double[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is float[]) {\n            float[] arr = (float[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (float)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is long[]) {\n            long[] arr = (long[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (long)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is short[]) {\n            short[] arr = (short[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (short)element) {\n                    return false;\n                }\n            }\n           \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6jkl2ejs.cs(74,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp6jkl2ejs.cs(75,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp6jkl2ejs.cs(76,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp6jkl2ejs.cs(77,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp6jkl2ejs.cs(80,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_f2_4o12.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<int>) {\n            foreach (int item in (List<int>)list) {\n                if (item != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            foreach (double item in (List<double>)list) {\n                if (item != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            foreach (float item in (List<float>)list) {\n                if (item != (float)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            foreach (string item in (List<string>)list) {\n                if (item != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            foreach (char item in (List<char>)list) {\n                if (item != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            foreach (bool item in (List<bool>)list) {\n                if (item != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxm58126u.cs(72,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpxm58126u.cs(73,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpxm58126u.cs(74,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!CheckElement(item, element)) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return list.Equals(element);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp24cwek40.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp24cwek40.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp24cwek40.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is int[]) {\n            int[] arr = (int[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is string[]) {\n            string[] arr = (string[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is char[]) {\n            char[] arr = (char[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is double[]) {\n            double[] arr = (double[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is float[]) {\n            float[] arr = (float[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (float)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is long[]) {\n            long[] arr = (long[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (long)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is short[]) {\n            short[] arr = (short[])list;\n            for (int i = 0; i < arr.Length; i++) {\n                if (arr[i] != (short)element) {\n                    return false;\n               \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph43fayub.cs(72,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmph43fayub.cs(73,129): error CS1525: Invalid expression term 'object'\n/tmp/tmph43fayub.cs(74,98): error CS1525: Invalid expression term 'object'\n/tmp/tmph43fayub.cs(75,128): error CS1525: Invalid expression term 'object'\n/tmp/tmph43fayub.cs(78,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_f2_4o12.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list.GetType() == typeof(List<int>)) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<string>)) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<double>)) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<float>)) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<char>)) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<bool>)) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmn0ers_z.cs(70,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpmn0ers_z.cs(71,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpmn0ers_z.cs(72,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list.GetType() == typeof(List<int>)) {\n            List<int> list1 = (List<int>)list;\n            int element1 = (int)element;\n            foreach (int i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list.GetType() == typeof(List<string>)) {\n            List<string> list1 = (List<string>)list;\n            string element1 = (string)element;\n            foreach (string i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list.GetType() == typeof(List<double>)) {\n            List<double> list1 = (List<double>)list;\n            double element1 = (double)element;\n            foreach (double i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list.GetType() == typeof(List<float>)) {\n            List<float> list1 = (List<float>)list;\n            float element1 = (float)element;\n            foreach (float i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list.GetType() == typeof(List<char>)) {\n            List<char> list1 = (List<char>)list;\n            char element1 = (char)element;\n            foreach (char i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list.GetType() == typeof(List<bool>)) {\n            List<bool> list1 = (List<bool>)list;\n            bool element1 = (bool)element;\n            foreach (bool i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpszuf70e2.cs(70,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpszuf70e2.cs(71,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpszuf70e2.cs(72,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpszuf70e2.cs(73,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpszuf70e2.cs(76,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps8smym3f.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list.GetType() == typeof(List<int>)) {\n            foreach (int i in (List<int>)list) {\n                if (i != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<string>)) {\n            foreach (string s in (List<string>)list) {\n                if (s != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<double>)) {\n            foreach (double d in (List<double>)list) {\n                if (d != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<char>)) {\n            foreach (char c in (List<char>)list) {\n                if (c != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<bool>)) {\n            foreach (bool b in (List<bool>)list) {\n                if (b != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpye2n4pfd.cs(56,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpye2n4pfd.cs(57,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpye2n4pfd.cs(58,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<byte>) {\n            List<byte> l = (List<byte>)list;\n            byte e = (byte)element;\n            foreach (byte i in l) {\n                if (i != e) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp2ru40_b.cs(77,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpp2ru40_b.cs(78,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpp2ru40_b.cs(79,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpp2ru40_b.cs(80,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpp2ru40_b.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_f2_4o12.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrkr2lvi.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list.GetType() == typeof(List<int>)) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<double>)) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<string>)) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<char>)) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list.GetType() == typeof(List<bool>)) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy5h4ukkf.cs(66,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpy5h4ukkf.cs(67,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpy5h4ukkf.cs(68,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_f2_4o12.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!CheckElement(item, element)) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return list.Equals(element);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp24cwek40.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp24cwek40.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp24cwek40.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_f2_4o12.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpolraga_9.cs(79,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpolraga_9.cs(80,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpolraga_9.cs(81,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpolraga_9.cs(82,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpolraga_9.cs(85,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsjfu4s7t.cs(61,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpsjfu4s7t.cs(62,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpsjfu4s7t.cs(63,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!CheckElement(item, element)) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return list.Equals(element);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp24cwek40.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp24cwek40.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp24cwek40.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> list1 = (List<int>)list;\n            int element1 = (int)element;\n            foreach (int i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> list1 = (List<double>)list;\n            double element1 = (double)element;\n            foreach (double i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> list1 = (List<string>)list;\n            string element1 = (string)element;\n            foreach (string i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> list1 = (List<char>)list;\n            char element1 = (char)element;\n            foreach (char i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> list1 = (List<bool>)list;\n            bool element1 = (bool)element;\n            foreach (bool i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<object>) {\n            List<object> list1 = (List<object>)list;\n            object element1 = element;\n            foreach (object i in list1) {\n                if (i != element1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptsh6n8m0.cs(74,129): error CS1525: Invalid expression term 'object'\n/tmp/tmptsh6n8m0.cs(75,98): error CS1525: Invalid expression term 'object'\n/tmp/tmptsh6n8m0.cs(76,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl8xp738t.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            foreach (int item in (List<int>)list) {\n                if (item != (int)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<string>) {\n            foreach (string item in (List<string>)list) {\n                if (item != (string)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<char>) {\n            foreach (char item in (List<char>)list) {\n                if (item != (char)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<double>) {\n            foreach (double item in (List<double>)list) {\n                if (item != (double)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<float>) {\n            foreach (float item in (List<float>)list) {\n                if (item != (float)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<long>) {\n            foreach (long item in (List<long>)list) {\n                if (item != (long)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<bool>) {\n            foreach (bool item in (List<bool>)list) {\n                if (item != (bool)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<byte>) {\n            foreach (byte item in (List<byte>)list) {\n                if (item != (byte)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<sbyte>) {\n            foreach (sbyte item in (List<sbyte>)list) {\n                if (item != (sbyte)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<short>) {\n            foreach (short item in (List<short>)list) {\n                if (item != (short)element) {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpashu8c0d.cs(70,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpashu8c0d.cs(71,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpashu8c0d.cs(72,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpashu8c0d.cs(73,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpashu8c0d.cs(76,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object> && element is object) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp64v2z6t3.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp64v2z6t3.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp64v2z6t3.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object> list1) {\n            foreach (var item in list1) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyd97azqx.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpyd97azqx.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpyd97azqx.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object> listEnum) {\n            foreach (var item in listEnum) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxpk0vfb_.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpxpk0vfb_.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpxpk0vfb_.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list.GetType() == typeof(List<int>)) {\n            List<int> intList = (List<int>)list;\n            int intElement = (int)element;\n            foreach (int i in intList) {\n                if (i != intElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list.GetType() == typeof(List<string>)) {\n            List<string> stringList = (List<string>)list;\n            string stringElement = (string)element;\n            foreach (string s in stringList) {\n                if (s != stringElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list.GetType() == typeof(List<bool>)) {\n            List<bool> boolList = (List<bool>)list;\n            bool boolElement = (bool)element;\n            foreach (bool b in boolList) {\n                if (b != boolElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt0di2_rv.cs(44,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpt0di2_rv.cs(45,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpt0di2_rv.cs(46,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpufr5r7bm.cs(64,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpufr5r7bm.cs(65,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpufr5r7bm.cs(66,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>) list;\n            int e = (int) element;\n            return l.All(x => x == e);\n        } else if (list is List<string>) {\n            List<string> l = (List<string>) list;\n            string e = (string) element;\n            return l.All(x => x == e);\n        } else if (list is List<double>) {\n            List<double> l = (List<double>) list;\n            double e = (double) element;\n            return l.All(x => x == e);\n        } else if (list is List<float>) {\n            List<float> l = (List<float>) list;\n            float e = (float) element;\n            return l.All(x => x == e);\n        } else if (list is List<char>) {\n            List<char> l = (List<char>) list;\n            char e = (char) element;\n            return l.All(x => x == e);\n        } else if (list is List<bool>) {\n            List<bool> l = (List<bool>) list;\n            bool e = (bool) element;\n            return l.All(x => x == e);\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcxd02_z9.cs(40,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpcxd02_z9.cs(41,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpcxd02_z9.cs(42,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<byte>) {\n            List<byte> l = (List<byte>)list;\n            byte e = (byte)element;\n            foreach (byte i in l) {\n                if (i != e) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptjfunpwj.cs(77,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmptjfunpwj.cs(78,129): error CS1525: Invalid expression term 'object'\n/tmp/tmptjfunpwj.cs(79,98): error CS1525: Invalid expression term 'object'\n/tmp/tmptjfunpwj.cs(80,128): error CS1525: Invalid expression term 'object'\n/tmp/tmptjfunpwj.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in list as IEnumerable<object>) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphg7_0blz.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmphg7_0blz.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmphg7_0blz.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrkr2lvi.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpkrkr2lvi.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<byte>) {\n            List<byte> l = (List<byte>)list;\n            byte e = (byte)element;\n            foreach (byte i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzr99s1_g.cs(75,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpzr99s1_g.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpzr99s1_g.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpzr99s1_g.cs(78,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpzr99s1_g.cs(81,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_f2_4o12.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            return ((List<int>)list).All(x => x == (int)element);\n        } else if (list is List<string>) {\n            return ((List<string>)list).All(x => x == (string)element);\n        } else if (list is List<double>) {\n            return ((List<double>)list).All(x => x == (double)element);\n        } else if (list is List<float>) {\n            return ((List<float>)list).All(x => x == (float)element);\n        } else if (list is List<char>) {\n            return ((List<char>)list).All(x => x == (char)element);\n        } else if (list is List<bool>) {\n            return ((List<bool>)list).All(x => x == (bool)element);\n        } else if (list is List<object>) {\n            return ((List<object>)list).All(x => x == (object)element);\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwfj51ha8.cs(30,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpwfj51ha8.cs(31,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpwfj51ha8.cs(32,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> intList = (List<int>)list;\n            int intElement = (int)element;\n            foreach (int i in intList) {\n                if (i != intElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> doubleList = (List<double>)list;\n            double doubleElement = (double)element;\n            foreach (double i in doubleList) {\n                if (i != doubleElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> stringList = (List<string>)list;\n            string stringElement = (string)element;\n            foreach (string i in stringList) {\n                if (i != stringElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> charList = (List<char>)list;\n            char charElement = (char)element;\n            foreach (char i in charList) {\n                if (i != charElement) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpztog37mi.cs(56,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpztog37mi.cs(57,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpztog37mi.cs(58,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps8smym3f.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmps8smym3f.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            List<object> l = (List<object>)list;\n            foreach (object o in l) {\n                if (o != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnb0eg84p.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpnb0eg84p.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpnb0eg84p.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl8xp738t.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_f2_4o12.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnlprmnnk.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpnlprmnnk.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpnlprmnnk.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8ealjyd8.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8ealjyd8.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            foreach (int i in (List<int>)list) {\n                if (i != (int)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<string>) {\n            foreach (string i in (List<string>)list) {\n                if (i != (string)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<double>) {\n            foreach (double i in (List<double>)list) {\n                if (i != (double)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<float>) {\n            foreach (float i in (List<float>)list) {\n                if (i != (float)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<long>) {\n            foreach (long i in (List<long>)list) {\n                if (i != (long)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<bool>) {\n            foreach (bool i in (List<bool>)list) {\n                if (i != (bool)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<char>) {\n            foreach (char i in (List<char>)list) {\n                if (i != (char)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<byte>) {\n            foreach (byte i in (List<byte>)list) {\n                if (i != (byte)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<sbyte>) {\n            foreach (sbyte i in (List<sbyte>)list) {\n                if (i != (sbyte)element) {\n                    return false;\n                }\n            }\n        } else if (list is List<short>) {\n            foreach (short i in (List<short>)list) {\n                if (i != (short)element) {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpphp_tjyf.cs(70,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpphp_tjyf.cs(71,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpphp_tjyf.cs(72,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpphp_tjyf.cs(73,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpphp_tjyf.cs(76,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            List<object> l = (List<object>)list;\n            foreach (object o in l) {\n                if (!o.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7z1627kd.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp7z1627kd.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp7z1627kd.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            foreach (int i in (List<int>)list) {\n                if (i != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<double>) {\n            foreach (double i in (List<double>)list) {\n                if (i != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<char>) {\n            foreach (char i in (List<char>)list) {\n                if (i != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list is List<string>) {\n            foreach (string i in (List<string>)list) {\n                if (i != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfu9fr2ug.cs(44,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpfu9fr2ug.cs(45,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpfu9fr2ug.cs(46,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            List<object> l = (List<object>)list;\n            foreach (object o in l) {\n                if (!o.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            foreach (int o in l) {\n                if (o != (int)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            foreach (double o in l) {\n                if (o != (double)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            foreach (string o in l) {\n                if (o != (string)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            foreach (bool o in l) {\n                if (o != (bool)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            foreach (char o in l) {\n                if (o != (char)element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_j9hgqkg.cs(70,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_j9hgqkg.cs(71,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_j9hgqkg.cs(72,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl8xp738t.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsr8u1v3i.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpsr8u1v3i.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpsr8u1v3i.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list.GetType() == typeof(List<int>)) {\n            List<int> intList = (List<int>)list;\n            int intElement = (int)element;\n            foreach (int item in intList) {\n                if (item != intElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<string>)) {\n            List<string> stringList = (List<string>)list;\n            string stringElement = (string)element;\n            foreach (string item in stringList) {\n                if (item != stringElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<double>)) {\n            List<double> doubleList = (List<double>)list;\n            double doubleElement = (double)element;\n            foreach (double item in doubleList) {\n                if (item != doubleElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<float>)) {\n            List<float> floatList = (List<float>)list;\n            float floatElement = (float)element;\n            foreach (float item in floatList) {\n                if (item != floatElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<char>)) {\n            List<char> charList = (List<char>)list;\n            char charElement = (char)element;\n            foreach (char item in charList) {\n                if (item != charElement) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (list.GetType() == typeof(List<bool>)) {\n            List<bool> boolList = (List<bool>)list;\n            bool boolElement = (bool)element;\n            foreach (bool item in boolList) {\n                if (item != boolElement) {\n                    return false;\n                }\n            }\n            return\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3y744p69.cs(64,19): error CS1525: Invalid expression term '}'\n/tmp/tmp3y744p69.cs(64,19): error CS1002: ; expected\n/tmp/tmp3y744p69.cs(66,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp3y744p69.cs(67,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp3y744p69.cs(68,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp3y744p69.cs(69,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp3y744p69.cs(72,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            var l = (List<int>)list;\n            var e = (int)element;\n            return l.All(x => x == e);\n        }\n        if (list is List<string>) {\n            var l = (List<string>)list;\n            var e = (string)element;\n            return l.All(x => x == e);\n        }\n        if (list is List<double>) {\n            var l = (List<double>)list;\n            var e = (double)element;\n            return l.All(x => x == e);\n        }\n        if (list is List<object>) {\n            var l = (List<object>)list;\n            var e = (object)element;\n            return l.All(x => x == e);\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpaoc21_sf.cs(34,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpaoc21_sf.cs(35,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpaoc21_sf.cs(36,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object> && element is object) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpuhcxgmh5.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpuhcxgmh5.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpuhcxgmh5.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            return ((List<int>)list).All(x => x == (int)element);\n        }\n        else if (list is List<string>) {\n            return ((List<string>)list).All(x => x == (string)element);\n        }\n        else if (list is List<char>) {\n            return ((List<char>)list).All(x => x == (char)element);\n        }\n        else if (list is List<bool>) {\n            return ((List<bool>)list).All(x => x == (bool)element);\n        }\n        else if (list is List<double>) {\n            return ((List<double>)list).All(x => x == (double)element);\n        }\n        else if (list is List<float>) {\n            return ((List<float>)list).All(x => x == (float)element);\n        }\n        else if (list is List<long>) {\n            return ((List<long>)list).All(x => x == (long)element);\n        }\n        else if (list is List<BigInteger>) {\n            return ((List<BigInteger>)list).All(x => x == (BigInteger)element);\n        }\n        else if (list is List<byte>) {\n            return ((List<byte>)list).All(x => x == (byte)element);\n        }\n        else if (list is List<sbyte>) {\n            return ((List<sbyte>)list).All(x => x == (sbyte)element);\n        }\n        else if (list is List<short>) {\n            return ((List<short>)list).All(x => x == (short)element);\n        }\n        else if (list is List<ushort>) {\n            return ((List<ushort>)list).All(x => x == (ushort)element);\n        }\n        else if (list is List<uint>) {\n            return ((List<uint>)list).All(x => x == (uint)element);\n        }\n        else if (list is List<ulong>) {\n            return ((List<ulong>)list).All(x => x == (ulong)element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgpcceujq.cs(53,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpgpcceujq.cs(54,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpgpcceujq.cs(55,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpgpcceujq.cs(56,128): error CS1525: Invalid expression term 'object'\n/tmp/tmpgpcceujq.cs(59,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_f2_4o12.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp_f2_4o12.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl8xp738t.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpl8xp738t.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm71ej1_6.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpm71ej1_6.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpm71ej1_6.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list.GetType().IsArray) {\n            Array arr = (Array)list;\n            foreach (object o in arr) {\n                if (!o.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpn30ik8dh.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpn30ik8dh.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpn30ik8dh.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm71ej1_6.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpm71ej1_6.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpm71ej1_6.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            List<object> l = (List<object>)list;\n            foreach (object o in l) {\n                if (o != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            throw new Exception(\"List is not a list\");\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpenyv4b41.cs(25,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpenyv4b41.cs(26,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpenyv4b41.cs(27,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement me!\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpei8xuwnf.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpei8xuwnf.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpei8xuwnf.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // TODO: Implement this function.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp51a38rfr.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp51a38rfr.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp51a38rfr.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1q0y3vwf.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (var item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj8ufrljg.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpj8ufrljg.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            List<object> l = (List<object>)list;\n            foreach (object o in l) {\n                if (o != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnb0eg84p.cs(23,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpnb0eg84p.cs(24,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpnb0eg84p.cs(25,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9mscup5o.cs(76,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp9mscup5o.cs(77,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp9mscup5o.cs(78,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjlxtp9cu.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpjlxtp9cu.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            List<object> l = (List<object>)list;\n            foreach (object o in l) {\n                if (o != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            throw new Exception(\"List is not a list\");\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpenyv4b41.cs(25,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpenyv4b41.cs(26,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpenyv4b41.cs(27,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        return list.Equals(element);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bljm1vt.cs(14,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(15,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp8bljm1vt.cs(16,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        List<object> l = (List<object>)list;\n        foreach (object o in l) {\n            if (o != element) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfl69taad.cs(20,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpfl69taad.cs(21,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpfl69taad.cs(22,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<object>) {\n            foreach (object item in (List<object>)list) {\n                if (item != element) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1q0y3vwf.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp1q0y3vwf.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            return ((List<int>)list).All(x => x == (int)element);\n        }\n        if (list is List<string>) {\n            return ((List<string>)list).All(x => x == (string)element);\n        }\n        if (list is List<char>) {\n            return ((List<char>)list).All(x => x == (char)element);\n        }\n        if (list is List<double>) {\n            return ((List<double>)list).All(x => x == (double)element);\n        }\n        if (list is List<bool>) {\n            return ((List<bool>)list).All(x => x == (bool)element);\n        }\n        if (list is List<object>) {\n            return ((List<object>)list).All(x => x == element);\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4gqolmqt.cs(32,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp4gqolmqt.cs(33,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp4gqolmqt.cs(34,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is IEnumerable<object>) {\n            foreach (object item in (IEnumerable<object>)list) {\n                if (!item.Equals(element)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123735,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil_hwfjv.cs(22,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(23,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpil_hwfjv.cs(24,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        // Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1665509673,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsr8u1v3i.cs(15,129): error CS1525: Invalid expression term 'object'\n/tmp/tmpsr8u1v3i.cs(16,98): error CS1525: Invalid expression term 'object'\n/tmp/tmpsr8u1v3i.cs(17,128): error CS1525: Invalid expression term 'object'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    public static bool CheckElement(object list, object element) {\n        if (list is List<int>) {\n            List<int> l = (List<int>)list;\n            int e = (int)element;\n            foreach (int i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<string>) {\n            List<string> l = (List<string>)list;\n            string e = (string)element;\n            foreach (string i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<char>) {\n            List<char> l = (List<char>)list;\n            char e = (char)element;\n            foreach (char i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<bool>) {\n            List<bool> l = (List<bool>)list;\n            bool e = (bool)element;\n            foreach (bool i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<double>) {\n            List<double> l = (List<double>)list;\n            double e = (double)element;\n            foreach (double i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<float>) {\n            List<float> l = (List<float>)list;\n            float e = (float)element;\n            foreach (float i in l) {\n                if (i != e) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (list is List<long>) {\n            List<long> l = (List<long>)list;\n            long e = (long)element;\n            foreach (long i in l) {\n                if (i != e) {\n                    return false;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"orange\", (string)\"black\", (string)\"white\"})), (object(\"blue\"))) == (false));\n    Debug.Assert(CheckElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L})), (object(7L))) == (false));\n    Debug.Assert(CheckElement((new object(new string[]{(string)\"green\", (string)\"green\", (string)\"green\", (string)\"green\"})), (object(\"green\"))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0ui0_39b.cs(79,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp0ui0_39b.cs(80,129): error CS1525: Invalid expression term 'object'\n/tmp/tmp0ui0_39b.cs(81,98): error CS1525: Invalid expression term 'object'\n/tmp/tmp0ui0_39b.cs(82,128): error CS1525: Invalid expression term 'object'\n/tmp/tmp0ui0_39b.cs(85,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
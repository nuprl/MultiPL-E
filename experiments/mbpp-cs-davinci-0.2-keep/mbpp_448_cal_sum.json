{
  "name": "mbpp_448_cal_sum",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum of perrin numbers.\n    public static long CalSum(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_448_cal_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CalSum((9L)) == (49L));\n    Debug.Assert(CalSum((10L)) == (66L));\n    Debug.Assert(CalSum((11L)) == (88L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 + 2;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 3;\n        for (int i = 0; i < n; i++) {\n            sum += r;\n            p = q;\n            q = r;\n            r = p + q;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3, b = 0, c = 2;\n        for (long i = 0; i < n; i++) {\n            sum += a;\n            long tmp = a;\n            a = c;\n            c = b + c;\n            b = tmp;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long a = 3;\n        long b = 0;\n        long c = 2;\n        long sum = 2;\n        for (long i = 3; i <= n; i++) {\n            long d = a + b;\n            sum += d;\n            a = c;\n            b = d;\n            c = a + b;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        return perrin.Sum();",
    "        long a = 3, b = 0, c = 2, sum = 2;\n        while (c <= n) {\n            sum += c;\n            long t = a;\n            a = c;\n            c = b + c;\n            b = t;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 0; i < n; i++) {\n            sum += a;\n            c = a;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 3;\n        for (long i = 0; i < n; i++) {\n            sum += a;\n            long temp = a;\n            a = b;\n            b = c;\n            c = temp + b;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 3;\n        for (long i = 3; i <= n; i++) {\n            sum += c;\n            a = b;\n            b = c;\n            c = a + b;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            a = b;\n            b = c;\n            sum += c;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        // TODO: Implement this function.\n        return 0;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            sum += c;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (int i = 0; i < n; i++) {\n            sum += a;\n            c = a + b;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        // TODO: Write your code here.\n        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            a = b;\n            b = c;\n            sum += c;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long perrin = 3;\n        long p1 = 0;\n        long p2 = 2;\n        while (perrin <= n) {\n            sum += perrin;\n            long temp = perrin;\n            perrin = perrin + p1;\n            p1 = p2;\n            p2 = temp;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 0; i < n; i++) {\n            sum += perrin[2];\n            long temp = perrin[2];\n            perrin[2] = perrin[2] + perrin[1];\n            perrin[1] = perrin[0];\n            perrin[0] = temp;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            sum += c;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        long p3 = 1;\n        for (long i = 1; i <= n; i++) {\n            p = p1 + p2;\n            p3 = p2;\n            p2 = p1;\n            p1 = p;\n            sum += p;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            sum += c;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            a = b;\n            b = c;\n            sum += c;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        long p3 = 3;\n        for (long i = 0; i < n; i++) {\n            p = p1 + p2;\n            sum += p;\n            p1 = p2;\n            p2 = p3;\n            p3 = p;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 1;\n        for (long i = 0; i < n; i++) {\n            sum += a;\n            long temp = a;\n            a = b;\n            b = c;\n            c = temp;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 0; i < n; i++) {\n            sum += perrin[0];\n            long temp = perrin[0];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = temp + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        var p = new Perrin();\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += p.Next();\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n+1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i-2] + perrin[i-3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 1;\n        for (long i = 0; i < n; i++) {\n            sum += a;\n            long temp = a;\n            a = b;\n            b = c;\n            c = temp;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n                q = 0;\n                r = 2;\n            } else if (i == 1) {\n                p = 0;\n                q = 2;\n                r = 3;\n            } else if (i == 2) {\n                p = 2;\n                q = 3;\n                r = 5;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 3; i <= n; i++) {\n            long temp = perrin[0];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = temp + perrin[0];\n            sum += perrin[2];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 + 2;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[2];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        for (long i = 3; i <= n; i++) {\n            p = p1 + p2;\n            p2 = p1;\n            p1 = p;\n            sum += p;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 2;\n        while (p <= n) {\n            sum += Perrin(p);\n            p++;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[2];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 + 2;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 2;\n        for (long i = 0; i < n; i++) {\n            sum += r;\n            p = q;\n            q = r;\n            r = p + q;\n        }\n        return sum;",
    "        long sum = 0;\n        long p0 = 3;\n        long p1 = 0;\n        long p2 = 2;\n        for (long i = 0; i < n; i++) {\n            sum += p2;\n            long p3 = p2;\n            p2 = p1 + p2;\n            p1 = p0;\n            p0 = p3;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        // Write your code here\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        // Your code here\n        return 0;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        long p3 = 1;\n        for (int i = 0; i < n; i++) {\n            p = p1 + p2 - p3;\n            sum += p;\n            p3 = p2;\n            p2 = p1;\n            p1 = p;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            sum += c;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        long p3 = 1;\n        for (int i = 1; i < n; i++) {\n            p = p1 + p2 - p3;\n            sum += p;\n            p3 = p2;\n            p2 = p1;\n            p1 = p;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 0;\n        long b = 0;\n        long c = 3;\n        for (long i = 0; i < n; i++) {\n            sum += c;\n            a = b;\n            b = c;\n            c = a + b;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long pn = 3;\n        long pn1 = 2;\n        long pn2 = 3;\n        while (p < n) {\n            p = pn;\n            pn = pn1;\n            pn1 = pn2;\n            pn2 = p + pn + pn1;\n            sum += p;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[0];\n            long temp = perrin[0];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = temp + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long p0 = 3;\n        long p1 = 0;\n        long p2 = 2;\n        for (long i = 0; i < n; i++) {\n            sum += p0;\n            long p3 = p2;\n            p2 = p1;\n            p1 = p0;\n            p0 = p2 + p3;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 3; i <= n; i++) {\n            long temp = perrin[0];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = temp + perrin[0];\n            sum += perrin[2];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 1;\n        while (n > 0) {\n            sum += a;\n            long a1 = a + b;\n            long b1 = a;\n            long c1 = b;\n            a = a1;\n            b = b1;\n            c = c1;\n            n--;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            sum += c;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 2;\n        while (p <= n) {\n            sum += p;\n            p = 3 * p - 1;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[2];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        long p1 = 0;\n        long p2 = 2;\n        long p3 = 3;\n        for (long i = 0; i < n; i++) {\n            sum += p;\n            p1 = p2;\n            p2 = p3;\n            p3 = p;\n            p = p1 + p2;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n            } else if (i == 1) {\n                q = 0;\n            } else if (i == 2) {\n                r = 2;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            a = b;\n            b = c;\n            sum += c;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 1;\n        for (long i = 0; i < n; i++) {\n            sum += a;\n            long temp = a + b;\n            a = b;\n            b = c;\n            c = temp;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        // TODO: Implement this function.\n        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++)\n        {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++)\n        {\n            sum += perrin[i];\n        }\n        return sum;",
    "        // Write your code here\n        return 0;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 2;\n        for (long i = 3; i <= n; i++) {\n            p = q;\n            q = r;\n            r = p + q;\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        return perrin.Sum();",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrins = new long[3];\n        perrins[0] = 3;\n        perrins[1] = 0;\n        perrins[2] = 2;\n        for (long i = 3; i <= n; i++) {\n            long temp = perrins[0];\n            perrins[0] = perrins[1];\n            perrins[1] = perrins[2];\n            perrins[2] = temp + perrins[1];\n            sum += perrins[2];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 - 1;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 0;\n        long p2 = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n            } else if (i == 1) {\n                p = 0;\n            } else {\n                p = p1 + p2;\n            }\n            sum += p;\n            p2 = p1;\n            p1 = p;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 + 2;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 + 2;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += a;\n            c = a;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[0];\n            long temp = perrin[0] + perrin[1];\n            perrin[1] = perrin[0];\n            perrin[0] = perrin[2];\n            perrin[2] = temp;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n                q = 0;\n                r = 2;\n            } else if (i == 1) {\n                p = 2;\n                q = 3;\n                r = 3;\n            } else if (i == 2) {\n                p = 3;\n                q = 2;\n                r = 3;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        long p3 = 1;\n        while (p < n) {\n            sum += p;\n            p = p1;\n            p1 = p2;\n            p2 = p3;\n            p3 = p + p1;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            sum += c;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 2;\n        long r = 3;\n        while (n > 0) {\n            sum += p;\n            p = q;\n            q = r;\n            r = p + q;\n            n--;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        return perrin.Sum();",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        // TODO: Implement your solution here.\n        return 0;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrins = new long[3];\n        perrins[0] = 3;\n        perrins[1] = 0;\n        perrins[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrins[2];\n            perrins[0] = perrins[1];\n            perrins[1] = perrins[2];\n            perrins[2] = perrins[0] + perrins[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = Perrin(p);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 1;\n        for (long i = 4; i <= n; i++) {\n            long d = a + b;\n            sum += d;\n            c = b;\n            b = a;\n            a = d;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 0; i < n; i++) {\n            sum += a;\n            c = a;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3, b = 0, c = 2;\n        for (int i = 3; i <= n; i++) {\n            sum += a;\n            long t = a;\n            a = c;\n            c = b + c;\n            b = t;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 3; i <= n; i++) {\n            long temp = perrin[0];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = temp + perrin[0];\n            sum += perrin[2];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0 || i == 1) {\n                p = 0;\n            }\n            else if (i == 2) {\n                p = 2;\n            }\n            else {\n                p = q + r;\n            }\n            sum += p;\n            r = q;\n            q = p;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[2];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long p0 = 3;\n        long p1 = 0;\n        long p2 = 2;\n        for (long i = 0; i < n; i++) {\n            sum += p0;\n            long p3 = p2;\n            p2 = p1;\n            p1 = p0;\n            p0 = p2 + p3;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 + 2;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (long i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;"
  ]
}
{
  "name": "mbpp_725_extract_quotation",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    public static object ExtractQuotation(string text1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_725_extract_quotation.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).Equals((new object(new string[]{(string)\"A53\", (string)\"multi\", (string)\"Processor\"}))));\n    Debug.Assert(ExtractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).Equals((new object(new string[]{(string)\"favorite\", (string)\"apps\"}))));\n    Debug.Assert(ExtractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).Equals((new object(new string[]{(string)\"4k Ultra HD\", (string)\"HDR 10\"}))));\n    Debug.Assert(ExtractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).Equals((new object())));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        string text = text1;\n        string[] words = text.Split('\"');\n        List<string> list = new List<string>();\n        for (int i = 1; i < words.Length; i += 2) {\n            list.Add(words[i]);\n        }\n        return list;",
    "        string[] words = text1.Split(' ');\n        List<string> result = new List<string>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].Contains('\"')) {\n                result.Add(words[i].Replace(\"\\\"\", \"\"));\n            }\n        }\n        return result;",
    "        // Your code goes here\n        return null;",
    "        string[] words = text1.Split(' ');\n        string[] result = new string[words.Length];\n        int count = 0;\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].StartsWith(\"\\\"\") && words[i].EndsWith(\"\\\"\")) {\n                result[count] = words[i].Substring(1, words[i].Length - 2);\n                count++;\n            }\n        }\n        return result;",
    "        string[] text2 = text1.Split('\"');\n        List<string> text3 = new List<string>();\n        for (int i = 1; i < text2.Length; i += 2) {\n            text3.Add(text2[i]);\n        }\n        return text3;",
    "        var text = text1.Split('\"');\n        var result = new List<string>();\n        for (int i = 1; i < text.Length; i += 2) {\n            result.Add(text[i]);\n        }\n        return result;",
    "        string[] text2 = text1.Split('\"');\n        List<string> text3 = new List<string>();\n        for (int i = 1; i < text2.Length; i += 2) {\n            text3.Add(text2[i]);\n        }\n        return text3;",
    "        string[] text = text1.Split('\"');\n        List<string> result = new List<string>();\n        for (int i = 1; i < text.Length; i += 2) {\n            result.Add(text[i]);\n        }\n        return result;",
    "        // your code here\n        return null;",
    "        var result = new List<string>();\n        var start = 0;\n        var end = 0;\n        for (int i = 0; i < text1.Length; i++) {\n            if (text1[i] == '\"') {\n                if (start == 0) {\n                    start = i;\n                } else {\n                    end = i;\n                    result.Add(text1.Substring(start + 1, end - start - 1));\n                    start = 0;\n                }\n            }\n        }\n        return result;",
    "        string[] text = text1.Split('\"');\n        List<string> result = new List<string>();\n        for (int i = 1; i < text.Length; i += 2) {\n            result.Add(text[i]);\n        }\n        return result;",
    "        // Write your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        var result = new List<string>();\n        var sb = new StringBuilder();\n        var inQuotes = false;\n        foreach (var c in text1) {\n            if (c == '\"') {\n                if (inQuotes) {\n                    result.Add(sb.ToString());\n                    sb.Clear();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.Append(c);\n            }\n        }\n        return result;",
    "        string text = text1;\n        string[] words = text.Split(' ');\n        string[] result = new string[words.Length];\n        int i = 0;\n        foreach (string word in words) {\n            if (word.StartsWith(\"\\\"\") && word.EndsWith(\"\\\"\")) {\n                result[i] = word.Substring(1, word.Length - 2);\n                i++;\n            }\n        }\n        return result;",
    "        string[] text = text1.Split('\"');\n        List<string> result = new List<string>();\n        for (int i = 1; i < text.Length; i += 2) {\n            result.Add(text[i]);\n        }\n        return result;",
    "        // Your code here\n        return null;",
    "        // Your code here\n        return null;",
    "        // your code here\n        return null;",
    "        // Your code goes here\n        return null;"
  ]
}
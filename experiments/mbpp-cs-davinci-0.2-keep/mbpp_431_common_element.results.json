{
  "name": "mbpp_431_common_element",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_431_common_element.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        var l1 = (List<int>)list1;\n        var l2 = (List<int>)list2;\n        var set = new HashSet<int>();\n        foreach (var i in l1) {\n            set.Add(i);\n        }\n        foreach (var i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpks5uhrwu.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpks5uhrwu.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpks5uhrwu.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpks5uhrwu.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpks5uhrwu.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpks5uhrwu.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        var l1 = (List<int>)list1;\n        var l2 = (List<int>)list2;\n        var l1Hash = new HashSet<int>(l1);\n        var l2Hash = new HashSet<int>(l2);\n        return l1Hash.Intersect(l2Hash).Any();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdj4l9pt2.cs(24,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdj4l9pt2.cs(24,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdj4l9pt2.cs(25,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdj4l9pt2.cs(25,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdj4l9pt2.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdj4l9pt2.cs(26,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            foreach (int i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            foreach (string s in l1) {\n                if (l2.Contains(s)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmv78c5rp.cs(40,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmv78c5rp.cs(40,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmv78c5rp.cs(41,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmv78c5rp.cs(41,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmv78c5rp.cs(42,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmv78c5rp.cs(42,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi_6wwxus.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1 is IEnumerable<object> && list2 is IEnumerable<object>) {\n            var list1Enum = (IEnumerable<object>)list1;\n            var list2Enum = (IEnumerable<object>)list2;\n            foreach (var item1 in list1Enum) {\n                foreach (var item2 in list2Enum) {\n                    if (item1 == item2) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6h_0pz3f.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6h_0pz3f.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6h_0pz3f.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6h_0pz3f.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6h_0pz3f.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6h_0pz3f.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // If either list is null, return null.\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        // If either list is empty, return false.\n        if (list1.Count() == 0 || list2.Count() == 0) {\n            return false;\n        }\n        // If the lists are the same, return true.\n        if (list1 == list2) {\n            return true;\n        }\n        // If the lists are not the same, return true if they have a common element.\n        foreach (object element1 in list1) {\n            foreach (object element2 in list2) {\n                if (element1 == element2) {\n                    return true;\n                }\n            }\n        }\n        // If the lists have no common elements, return false.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5b2bctno.cs(16,19): error CS1061: 'object' does not contain a definition for 'Count' and no accessible extension method 'Count' accepting a first argument of type 'object' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp5b2bctno.cs(16,41): error CS1061: 'object' does not contain a definition for 'Count' and no accessible extension method 'Count' accepting a first argument of type 'object' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp5b2bctno.cs(24,37): error CS1579: foreach statement cannot operate on variables of type 'object' because 'object' does not contain a public instance definition for 'GetEnumerator'\n/tmp/tmp5b2bctno.cs(25,41): error CS1579: foreach statement cannot operate on variables of type 'object' because 'object' does not contain a public instance definition for 'GetEnumerator'\n/tmp/tmp5b2bctno.cs(35,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5b2bctno.cs(35,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5b2bctno.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5b2bctno.cs(36,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5b2bctno.cs(37,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5b2bctno.cs(37,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi_6wwxus.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp35hw3sop.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] l1 = (int[])list1;\n            int[] l2 = (int[])list2;\n            foreach (int i in l1) {\n                foreach (int j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] l1 = (string[])list1;\n            string[] l2 = (string[])list2;\n            foreach (string i in l1) {\n                foreach (string j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(char[])) {\n            char[] l1 = (char[])list1;\n            char[] l2 = (char[])list2;\n            foreach (char i in l1) {\n                foreach (char j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdkhpfkz5.cs(56,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdkhpfkz5.cs(56,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdkhpfkz5.cs(57,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdkhpfkz5.cs(57,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdkhpfkz5.cs(58,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdkhpfkz5.cs(58,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> list1_int = (List<int>)list1;\n        List<int> list2_int = (List<int>)list2;\n        if (list1_int.Count == 0 || list2_int.Count == 0) {\n            return false;\n        }\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in list1_int) {\n            set.Add(i);\n        }\n        foreach (int i in list2_int) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1cgl7kqo.cs(34,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1cgl7kqo.cs(34,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1cgl7kqo.cs(35,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1cgl7kqo.cs(35,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1cgl7kqo.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1cgl7kqo.cs(36,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        var list1Enum = list1 as System.Collections.IEnumerable;\n        var list2Enum = list2 as System.Collections.IEnumerable;\n        if (list1Enum == null || list2Enum == null) {\n            return null;\n        }\n        var list1Hash = new HashSet<object>();\n        foreach (var item in list1Enum) {\n            list1Hash.Add(item);\n        }\n        foreach (var item in list2Enum) {\n            if (list1Hash.Contains(item)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0lax42mz.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0lax42mz.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0lax42mz.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0lax42mz.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0lax42mz.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0lax42mz.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            foreach (int i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            foreach (string i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnnl573gm.cs(38,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnnl573gm.cs(38,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnnl573gm.cs(39,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnnl573gm.cs(39,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnnl573gm.cs(40,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnnl573gm.cs(40,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in l1) {\n            set.Add(i);\n        }\n        foreach (int i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xqmg0jf.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp35hw3sop.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n\n        var l1 = (List<int>)list1;\n        var l2 = (List<int>)list2;\n\n        return l1.Intersect(l2).Any();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpaapd138d.cs(25,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpaapd138d.cs(25,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpaapd138d.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpaapd138d.cs(26,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpaapd138d.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpaapd138d.cs(27,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        var list1_enumerator = list1.GetEnumerator();\n        var list2_enumerator = list2.GetEnumerator();\n        while (list1_enumerator.MoveNext()) {\n            while (list2_enumerator.MoveNext()) {\n                if (list1_enumerator.Current == list2_enumerator.Current) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps2fko8jg.cs(14,38): error CS1061: 'object' does not contain a definition for 'GetEnumerator' and no accessible extension method 'GetEnumerator' accepting a first argument of type 'object' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmps2fko8jg.cs(15,38): error CS1061: 'object' does not contain a definition for 'GetEnumerator' and no accessible extension method 'GetEnumerator' accepting a first argument of type 'object' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmps2fko8jg.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmps2fko8jg.cs(26,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmps2fko8jg.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmps2fko8jg.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmps2fko8jg.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmps2fko8jg.cs(28,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp35hw3sop.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n\n        if (list1.GetType() == typeof(List<int>)) {\n            return CommonElement((List<int>)list1, (List<int>)list2);\n        } else if (list1.GetType() == typeof(List<string>)) {\n            return CommonElement((List<string>)list1, (List<string>)list2);\n        } else if (list1.GetType() == typeof(List<double>)) {\n            return CommonElement((List<double>)list1, (List<double>)list2);\n        } else if (list1.GetType() == typeof(List<char>)) {\n            return CommonElement((List<char>)list1, (List<char>)list2);\n        } else if (list1.GetType() == typeof(List<bool>)) {\n            return CommonElement((List<bool>)list1, (List<bool>)list2);\n        } else if (list1.GetType() == typeof(List<object>)) {\n            return CommonElement((List<object>)list1, (List<object>)list2);\n        } else {\n            return null;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcxs7uizv.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcxs7uizv.cs(36,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcxs7uizv.cs(37,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcxs7uizv.cs(37,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcxs7uizv.cs(38,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcxs7uizv.cs(38,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 is List<int> && list2 is List<int>) {\n            var l1 = list1 as List<int>;\n            var l2 = list2 as List<int>;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpoa8xs3w9.cs(19,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpoa8xs3w9.cs(19,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpoa8xs3w9.cs(20,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpoa8xs3w9.cs(20,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpoa8xs3w9.cs(21,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpoa8xs3w9.cs(21,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1 is IEnumerable<object> && list2 is IEnumerable<object>) {\n            var list1Enum = (IEnumerable<object>)list1;\n            var list2Enum = (IEnumerable<object>)list2;\n            foreach (var item1 in list1Enum) {\n                foreach (var item2 in list2Enum) {\n                    if (item1 == item2) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6h_0pz3f.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6h_0pz3f.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6h_0pz3f.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6h_0pz3f.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6h_0pz3f.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6h_0pz3f.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in l1) {\n            set.Add(i);\n        }\n        foreach (int i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xqmg0jf.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0o0sib_9.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 is IEnumerable<object> && list2 is IEnumerable<object>) {\n            var set1 = new HashSet<object>((IEnumerable<object>)list1);\n            var set2 = new HashSet<object>((IEnumerable<object>)list2);\n            return set1.Overlaps(set2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpppodm9fk.cs(19,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpppodm9fk.cs(19,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpppodm9fk.cs(20,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpppodm9fk.cs(20,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpppodm9fk.cs(21,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpppodm9fk.cs(21,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        var list1_ = (List<int>)list1;\n        var list2_ = (List<int>)list2;\n        var set = new HashSet<int>();\n        foreach (var item in list1_) {\n            set.Add(item);\n        }\n        foreach (var item in list2_) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3d96fda4.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3d96fda4.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3d96fda4.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3d96fda4.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3d96fda4.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3d96fda4.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] arr1 = (int[])list1;\n            int[] arr2 = (int[])list2;\n            foreach (int i in arr1) {\n                foreach (int j in arr2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] arr1 = (string[])list1;\n            string[] arr2 = (string[])list2;\n            foreach (string i in arr1) {\n                foreach (string j in arr2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8wgs37zj.cs(44,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8wgs37zj.cs(44,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8wgs37zj.cs(45,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8wgs37zj.cs(45,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8wgs37zj.cs(46,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8wgs37zj.cs(46,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            return CommonElement((List<int>)list1, (List<int>)list2);\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            return CommonElement((List<string>)list1, (List<string>)list2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3b9dx01m.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3b9dx01m.cs(26,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3b9dx01m.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3b9dx01m.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3b9dx01m.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3b9dx01m.cs(28,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0o0sib_9.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] l1 = (int[])list1;\n            int[] l2 = (int[])list2;\n            foreach (int i in l1) {\n                foreach (int j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] l1 = (string[])list1;\n            string[] l2 = (string[])list2;\n            foreach (string i in l1) {\n                foreach (string j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpigk8jiiu.cs(44,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpigk8jiiu.cs(44,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpigk8jiiu.cs(45,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpigk8jiiu.cs(45,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpigk8jiiu.cs(46,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpigk8jiiu.cs(46,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        var l1 = (List<int>)list1;\n        var l2 = (List<int>)list2;\n        var set = new HashSet<int>();\n        foreach (var i in l1) {\n            set.Add(i);\n        }\n        foreach (var i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpks5uhrwu.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpks5uhrwu.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpks5uhrwu.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpks5uhrwu.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpks5uhrwu.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpks5uhrwu.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] array1 = (int[])list1;\n            int[] array2 = (int[])list2;\n            foreach (int i in array1) {\n                foreach (int j in array2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] array1 = (string[])list1;\n            string[] array2 = (string[])list2;\n            foreach (string i in array1) {\n                foreach (string j in array2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(char[])) {\n            char[] array1 = (char[])list1;\n            char[] array2 = (char[])list2;\n            foreach (char i in array1) {\n                foreach (char j in array2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> array1 = (List<int>)list1;\n            List<int> array2 = (List<int>)list2;\n            foreach (int i in array1) {\n                foreach (int j in array2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> array1 = (List<string>)list1;\n            List<string> array2 = (List<string>)\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphm04b_rm.cs(67,49): error CS1002: ; expected\n/tmp/tmphm04b_rm.cs(69,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmphm04b_rm.cs(75,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] l1 = (int[])list1;\n            int[] l2 = (int[])list2;\n            foreach (int i in l1) {\n                foreach (int j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] l1 = (string[])list1;\n            string[] l2 = (string[])list2;\n            foreach (string i in l1) {\n                foreach (string j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpigk8jiiu.cs(44,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpigk8jiiu.cs(44,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpigk8jiiu.cs(45,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpigk8jiiu.cs(45,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpigk8jiiu.cs(46,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpigk8jiiu.cs(46,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1 is IEnumerable<object> && list2 is IEnumerable<object>) {\n            var list1Enum = (IEnumerable<object>)list1;\n            var list2Enum = (IEnumerable<object>)list2;\n            foreach (var item1 in list1Enum) {\n                foreach (var item2 in list2Enum) {\n                    if (item1.Equals(item2)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi5jasep8.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi5jasep8.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi5jasep8.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi5jasep8.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi5jasep8.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi5jasep8.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> hs = new HashSet<int>();\n        foreach (int i in l1) {\n            hs.Add(i);\n        }\n        foreach (int i in l2) {\n            if (hs.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7v28e3ue.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            var list1Int = (List<int>)list1;\n            var list2Int = (List<int>)list2;\n            return list1Int.Intersect(list2Int).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            var list1String = (List<string>)list1;\n            var list2String = (List<string>)list2;\n            return list1String.Intersect(list2String).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw2n17ft_.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw2n17ft_.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw2n17ft_.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw2n17ft_.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw2n17ft_.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw2n17ft_.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        var list1Enumerator = ((IEnumerable<object>)list1).GetEnumerator();\n        var list2Enumerator = ((IEnumerable<object>)list2).GetEnumerator();\n        while (list1Enumerator.MoveNext() && list2Enumerator.MoveNext()) {\n            if (list1Enumerator.Current == list2Enumerator.Current) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpefky3kg5.cs(24,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefky3kg5.cs(24,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefky3kg5.cs(25,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefky3kg5.cs(25,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefky3kg5.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefky3kg5.cs(26,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] list1Arr = (int[])list1;\n            int[] list2Arr = (int[])list2;\n            foreach (int i in list1Arr) {\n                foreach (int j in list2Arr) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] list1Arr = (string[])list1;\n            string[] list2Arr = (string[])list2;\n            foreach (string i in list1Arr) {\n                foreach (string j in list2Arr) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(char[])) {\n            char[] list1Arr = (char[])list1;\n            char[] list2Arr = (char[])list2;\n            foreach (char i in list1Arr) {\n                foreach (char j in list2Arr) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(float[])) {\n            float[] list1Arr = (float[])list1;\n            float[] list2Arr = (float[])list2;\n            foreach (float i in list1Arr) {\n                foreach (float j in list2Arr) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(double[])) {\n            double[] list1Arr =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp06clyxd6.cs(66,32): error CS1525: Invalid expression term '}'\n/tmp/tmp06clyxd6.cs(66,32): error CS1002: ; expected\n/tmp/tmp06clyxd6.cs(68,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp06clyxd6.cs(74,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0o0sib_9.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprf9g4gg5.cs(14,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(14,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(16,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> list1_int = (List<int>)list1;\n            List<int> list2_int = (List<int>)list2;\n            foreach (int item1 in list1_int) {\n                foreach (int item2 in list2_int) {\n                    if (item1 == item2) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> list1_string = (List<string>)list1;\n            List<string> list2_string = (List<string>)list2;\n            foreach (string item1 in list1_string) {\n                foreach (string item2 in list2_string) {\n                    if (item1 == item2) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwp3c_7a1.cs(44,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpwp3c_7a1.cs(44,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpwp3c_7a1.cs(45,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpwp3c_7a1.cs(45,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpwp3c_7a1.cs(46,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpwp3c_7a1.cs(46,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            foreach (int j in l2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptw3wghol.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] arr1 = (int[])list1;\n            int[] arr2 = (int[])list2;\n            for (int i = 0; i < arr1.Length; i++) {\n                for (int j = 0; j < arr2.Length; j++) {\n                    if (arr1[i] == arr2[j]) {\n                        return true;\n                    }\n                }\n            }\n        } else if (list1.GetType() == typeof(string[])) {\n            string[] arr1 = (string[])list1;\n            string[] arr2 = (string[])list2;\n            for (int i = 0; i < arr1.Length; i++) {\n                for (int j = 0; j < arr2.Length; j++) {\n                    if (arr1[i] == arr2[j]) {\n                        return true;\n                    }\n                }\n            }\n        } else if (list1.GetType() == typeof(char[])) {\n            char[] arr1 = (char[])list1;\n            char[] arr2 = (char[])list2;\n            for (int i = 0; i < arr1.Length; i++) {\n                for (int j = 0; j < arr2.Length; j++) {\n                    if (arr1[i] == arr2[j]) {\n                        return true;\n                    }\n                }\n            }\n        } else if (list1.GetType() == typeof(double[])) {\n            double[] arr1 = (double[])list1;\n            double[] arr2 = (double[])list2;\n            for (int i = 0; i < arr1.Length; i++) {\n                for (int j = 0; j < arr2.Length; j++) {\n                    if (arr1[i] == arr2[j]) {\n                        return true;\n                    }\n                }\n            }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_on0h2f3.cs(59,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp_on0h2f3.cs(65,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1 is IEnumerable<object> && list2 is IEnumerable<object>) {\n            var l1 = (IEnumerable<object>)list1;\n            var l2 = (IEnumerable<object>)list2;\n            return l1.Any(x => l2.Contains(x));\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_8az770j.cs(22,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_8az770j.cs(22,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_8az770j.cs(23,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_8az770j.cs(23,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_8az770j.cs(24,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_8az770j.cs(24,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] list1Int = (int[])list1;\n            int[] list2Int = (int[])list2;\n            return list1Int.Intersect(list2Int).Any();\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] list1String = (string[])list1;\n            string[] list2String = (string[])list2;\n            return list1String.Intersect(list2String).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpega68l06.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpega68l06.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpega68l06.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpega68l06.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpega68l06.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpega68l06.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1 is IEnumerable<object> && list2 is IEnumerable<object>) {\n            var set1 = new HashSet<object>((IEnumerable<object>)list1);\n            var set2 = new HashSet<object>((IEnumerable<object>)list2);\n            return set1.Overlaps(set2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8_p4fb7w.cs(22,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8_p4fb7w.cs(22,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8_p4fb7w.cs(23,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8_p4fb7w.cs(23,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8_p4fb7w.cs(24,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8_p4fb7w.cs(24,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> list1_ = (List<int>)list1;\n        List<int> list2_ = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in list1_) {\n            set.Add(i);\n        }\n        foreach (int i in list2_) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprkmxvdvm.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprkmxvdvm.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprkmxvdvm.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprkmxvdvm.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprkmxvdvm.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprkmxvdvm.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi_6wwxus.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // TODO: Implement this function\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphb9ds878.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] listA = (int[])list1;\n            int[] listB = (int[])list2;\n            foreach (int a in listA) {\n                foreach (int b in listB) {\n                    if (a == b) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] listA = (string[])list1;\n            string[] listB = (string[])list2;\n            foreach (string a in listA) {\n                foreach (string b in listB) {\n                    if (a == b) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(char[])) {\n            char[] listA = (char[])list1;\n            char[] listB = (char[])list2;\n            foreach (char a in listA) {\n                foreach (char b in listB) {\n                    if (a == b) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxdz6dx8s.cs(56,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpxdz6dx8s.cs(56,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpxdz6dx8s.cs(57,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpxdz6dx8s.cs(57,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpxdz6dx8s.cs(58,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpxdz6dx8s.cs(58,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            foreach (int i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            foreach (string s in l1) {\n                if (l2.Contains(s)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmv78c5rp.cs(40,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmv78c5rp.cs(40,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmv78c5rp.cs(41,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmv78c5rp.cs(41,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmv78c5rp.cs(42,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmv78c5rp.cs(42,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            return CommonElement((List<int>)list1, (List<int>)list2);\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            return CommonElement((List<string>)list1, (List<string>)list2);\n        }\n        if (list1.GetType() == typeof(List<double>)) {\n            return CommonElement((List<double>)list1, (List<double>)list2);\n        }\n        if (list1.GetType() == typeof(List<char>)) {\n            return CommonElement((List<char>)list1, (List<char>)list2);\n        }\n        if (list1.GetType() == typeof(List<bool>)) {\n            return CommonElement((List<bool>)list1, (List<bool>)list2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7qjsis0g.cs(35,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7qjsis0g.cs(35,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7qjsis0g.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7qjsis0g.cs(36,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7qjsis0g.cs(37,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7qjsis0g.cs(37,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1 is IEnumerable<object> && list2 is IEnumerable<object>) {\n            var set1 = new HashSet<object>((IEnumerable<object>)list1);\n            var set2 = new HashSet<object>((IEnumerable<object>)list2);\n            return set1.Overlaps(set2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8_p4fb7w.cs(22,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8_p4fb7w.cs(22,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8_p4fb7w.cs(23,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8_p4fb7w.cs(23,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8_p4fb7w.cs(24,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8_p4fb7w.cs(24,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) return null;\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) return null;\n        var l1 = (List<int>)list1;\n        var l2 = (List<int>)list2;\n        return l1.Intersect(l2).Any();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplmvt1y7k.cs(18,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmplmvt1y7k.cs(18,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmplmvt1y7k.cs(19,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmplmvt1y7k.cs(19,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmplmvt1y7k.cs(20,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmplmvt1y7k.cs(20,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // TODO: Implement this function\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphb9ds878.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] a = (int[])list1;\n            int[] b = (int[])list2;\n            for (int i = 0; i < a.Length; i++) {\n                for (int j = 0; j < b.Length; j++) {\n                    if (a[i] == b[j]) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] a = (string[])list1;\n            string[] b = (string[])list2;\n            for (int i = 0; i < a.Length; i++) {\n                for (int j = 0; j < b.Length; j++) {\n                    if (a[i] == b[j]) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvd_ys6lh.cs(44,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvd_ys6lh.cs(44,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvd_ys6lh.cs(45,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvd_ys6lh.cs(45,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvd_ys6lh.cs(46,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvd_ys6lh.cs(46,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1 is List<int>) {\n            return CommonElement((List<int>)list1, (List<int>)list2);\n        }\n        if (list1 is List<string>) {\n            return CommonElement((List<string>)list1, (List<string>)list2);\n        }\n        if (list1 is List<char>) {\n            return CommonElement((List<char>)list1, (List<char>)list2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjzvfrolm.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpjzvfrolm.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpjzvfrolm.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpjzvfrolm.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpjzvfrolm.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpjzvfrolm.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1 is IEnumerable<object> && list2 is IEnumerable<object>) {\n            var list1Enumerable = (IEnumerable<object>)list1;\n            var list2Enumerable = (IEnumerable<object>)list2;\n            var list1HashSet = new HashSet<object>(list1Enumerable);\n            var list2HashSet = new HashSet<object>(list2Enumerable);\n            return list1HashSet.Overlaps(list2HashSet);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2carf6bn.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2carf6bn.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2carf6bn.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2carf6bn.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2carf6bn.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2carf6bn.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Your code here.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf68s5qp0.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpf68s5qp0.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpf68s5qp0.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpf68s5qp0.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpf68s5qp0.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpf68s5qp0.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] a = (int[])list1;\n            int[] b = (int[])list2;\n            return a.Intersect(b).Any();\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] a = (string[])list1;\n            string[] b = (string[])list2;\n            return a.Intersect(b).Any();\n        }\n        if (list1.GetType() == typeof(char[])) {\n            char[] a = (char[])list1;\n            char[] b = (char[])list2;\n            return a.Intersect(b).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw3rituiz.cs(35,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3rituiz.cs(35,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3rituiz.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3rituiz.cs(36,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3rituiz.cs(37,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3rituiz.cs(37,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        var l1 = (List<int>)list1;\n        var l2 = (List<int>)list2;\n        return l1.Any(x => l2.Contains(x));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp197xlj1.cs(22,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp197xlj1.cs(22,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp197xlj1.cs(23,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp197xlj1.cs(23,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp197xlj1.cs(24,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpp197xlj1.cs(24,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> hs = new HashSet<int>();\n        foreach (int i in l1) {\n            hs.Add(i);\n        }\n        foreach (int i in l2) {\n            if (hs.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7v28e3ue.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            foreach (int i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            foreach (string i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpq766eubk.cs(40,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(40,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(41,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(41,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(42,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(42,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        var list1_ = (List<int>)list1;\n        var list2_ = (List<int>)list2;\n        return list1_.Any(x => list2_.Contains(x));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp92wabfbs.cs(22,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92wabfbs.cs(22,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92wabfbs.cs(23,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92wabfbs.cs(23,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92wabfbs.cs(24,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92wabfbs.cs(24,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] arr1 = (int[])list1;\n            int[] arr2 = (int[])list2;\n            return arr1.Intersect(arr2).Count() > 0;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] arr1 = (string[])list1;\n            string[] arr2 = (string[])list2;\n            return arr1.Intersect(arr2).Count() > 0;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp92wf9dds.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92wf9dds.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92wf9dds.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92wf9dds.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92wf9dds.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92wf9dds.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            return CommonElement((int[])list1, (int[])list2);\n        }\n        if (list1.GetType() == typeof(string[])) {\n            return CommonElement((string[])list1, (string[])list2);\n        }\n        if (list1.GetType() == typeof(char[])) {\n            return CommonElement((char[])list1, (char[])list2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpu2jiqa_g.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpu2jiqa_g.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpu2jiqa_g.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpu2jiqa_g.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpu2jiqa_g.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpu2jiqa_g.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // TODO: Implement\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9szz1uiy.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp9szz1uiy.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp9szz1uiy.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp9szz1uiy.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp9szz1uiy.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp9szz1uiy.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            return CommonElement((List<int>)list1, (List<int>)list2);\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            return CommonElement((List<string>)list1, (List<string>)list2);\n        }\n        if (list1.GetType() == typeof(List<double>)) {\n            return CommonElement((List<double>)list1, (List<double>)list2);\n        }\n        if (list1.GetType() == typeof(List<char>)) {\n            return CommonElement((List<char>)list1, (List<char>)list2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpejncypzz.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpejncypzz.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpejncypzz.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpejncypzz.cs(33,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpejncypzz.cs(34,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpejncypzz.cs(34,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            foreach (int i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            foreach (string i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(List<char>)) {\n            List<char> l1 = (List<char>)list1;\n            List<char> l2 = (List<char>)list2;\n            foreach (char i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8pyyrj0g.cs(50,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8pyyrj0g.cs(50,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8pyyrj0g.cs(51,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8pyyrj0g.cs(51,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8pyyrj0g.cs(52,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8pyyrj0g.cs(52,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] array1 = (int[])list1;\n            int[] array2 = (int[])list2;\n            return array1.Intersect(array2).Any();\n        } else if (list1.GetType() == typeof(string[])) {\n            string[] array1 = (string[])list1;\n            string[] array2 = (string[])list2;\n            return array1.Intersect(array2).Any();\n        } else if (list1.GetType() == typeof(char[])) {\n            char[] array1 = (char[])list1;\n            char[] array2 = (char[])list2;\n            return array1.Intersect(array2).Any();\n        } else if (list1.GetType() == typeof(double[])) {\n            double[] array1 = (double[])list1;\n            double[] array2 = (double[])list2;\n            return array1.Intersect(array2).Any();\n        } else if (list1.GetType() == typeof(float[])) {\n            float[] array1 = (float[])list1;\n            float[] array2 = (float[])list2;\n            return array1.Intersect(array2).Any();\n        } else if (list1.GetType() == typeof(long[])) {\n            long[] array1 = (long[])list1;\n            long[] array2 = (long[])list2;\n            return array1.Intersect(array2).Any();\n        } else if (list1.GetType() == typeof(short[])) {\n            short[] array1 = (short[])list1;\n            short[] array2 = (short[])list2;\n            return array1.Intersect(array2).Any();\n        } else if (list1.GetType() == typeof(byte[])) {\n            byte[] array1 = (byte[])\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5634bvmc.cs(46,37): error CS1525: Invalid expression term '}'\n/tmp/tmp5634bvmc.cs(46,37): error CS1002: ; expected\n/tmp/tmp5634bvmc.cs(48,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp5634bvmc.cs(54,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 is List<int> && list2 is List<int>) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            foreach (int i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else if (list1 is List<string> && list2 is List<string>) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            foreach (string i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else if (list1 is List<double> && list2 is List<double>) {\n            List<double> l1 = (List<double>)list1;\n            List<double> l2 = (List<double>)list2;\n            foreach (double i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else if (list1 is List<float> && list2 is List<float>) {\n            List<float> l1 = (List<float>)list1;\n            List<float> l2 = (List<float>)list2;\n            foreach (float i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else if (list1 is List<char> && list2 is List<char>) {\n            List<char> l1 = (List<char>)list1;\n            List<char> l2 = (List<char>)list2;\n            foreach (char i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else if (list1 is List<bool> && list2 is List<\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdqitos3d.cs(61,55): error CS1525: Invalid expression term '}'\n/tmp/tmpdqitos3d.cs(61,55): error CS1026: ) expected\n/tmp/tmpdqitos3d.cs(61,55): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            foreach (int i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            foreach (string i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpq766eubk.cs(40,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(40,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(41,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(41,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(42,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(42,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Check if the lists are null\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        // Check if the lists are empty\n        if (list1.GetType() == typeof(List<int>) && ((List<int>)list1).Count == 0) {\n            return false;\n        }\n        if (list2.GetType() == typeof(List<int>) && ((List<int>)list2).Count == 0) {\n            return false;\n        }\n        // Check if the lists are of the same type\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        // Check if the lists are of the same length\n        if (list1.GetType() == typeof(List<int>) && ((List<int>)list1).Count != ((List<int>)list2).Count) {\n            return null;\n        }\n        // Check if the lists are of the same length\n        if (list1.GetType() == typeof(List<string>) && ((List<string>)list1).Count != ((List<string>)list2).Count) {\n            return null;\n        }\n        // Check if the lists are of the same length\n        if (list1.GetType() == typeof(List<double>) && ((List<double>)list1).Count != ((List<double>)list2).Count) {\n            return null;\n        }\n        // Check if the lists are of the same length\n        if (list1.GetType() == typeof(List<float>) && ((List<float>)list1).Count != ((List<float>)list2).Count) {\n            return null;\n        }\n        // Check if the lists are of the same length\n        if (list1.GetType() == typeof(List<bool>) && ((List<bool>)list1).Count != ((List<bool>)list2).Count) {\n            return null;\n        }\n        // Check if the lists are of the same length\n        if (list1.GetType() == typeof(List<char>) && ((List<char>)list1).Count != ((List<char>)list2).Count) {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbh3xh_zn.cs(50,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpbh3xh_zn.cs(56,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            var list1Int = (List<int>)list1;\n            var list2Int = (List<int>)list2;\n            return list1Int.Any(x => list2Int.Contains(x));\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            var list1String = (List<string>)list1;\n            var list2String = (List<string>)list2;\n            return list1String.Any(x => list2String.Contains(x));\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3dr_qk6n.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3dr_qk6n.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3dr_qk6n.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3dr_qk6n.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3dr_qk6n.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp3dr_qk6n.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            foreach (int j in l2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptw3wghol.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] array1 = (int[])list1;\n            int[] array2 = (int[])list2;\n            for (int i = 0; i < array1.Length; i++) {\n                for (int j = 0; j < array2.Length; j++) {\n                    if (array1[i] == array2[j]) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] array1 = (string[])list1;\n            string[] array2 = (string[])list2;\n            for (int i = 0; i < array1.Length; i++) {\n                for (int j = 0; j < array2.Length; j++) {\n                    if (array1[i] == array2[j]) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpif6v9462.cs(44,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpif6v9462.cs(44,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpif6v9462.cs(45,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpif6v9462.cs(45,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpif6v9462.cs(46,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpif6v9462.cs(46,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            foreach (int i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            foreach (string i in l1) {\n                if (l2.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpq766eubk.cs(40,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(40,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(41,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(41,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(42,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpq766eubk.cs(42,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp35hw3sop.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        HashSet<object> set = new HashSet<object>();\n        foreach (object item in (IEnumerable<object>)list1) {\n            set.Add(item);\n        }\n        foreach (object item in (IEnumerable<object>)list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpprc5b4bt.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpprc5b4bt.cs(26,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpprc5b4bt.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpprc5b4bt.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpprc5b4bt.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpprc5b4bt.cs(28,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        var list1Type = list1.GetType();\n        var list2Type = list2.GetType();\n        if (list1Type != list2Type) {\n            return null;\n        }\n        if (list1Type == typeof(List<int>)) {\n            var list1Int = (List<int>)list1;\n            var list2Int = (List<int>)list2;\n            return list1Int.Any(x => list2Int.Contains(x));\n        }\n        if (list1Type == typeof(List<string>)) {\n            var list1String = (List<string>)list1;\n            var list2String = (List<string>)list2;\n            return list1String.Any(x => list2String.Contains(x));\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbuwwv00c.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbuwwv00c.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbuwwv00c.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbuwwv00c.cs(33,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbuwwv00c.cs(34,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpbuwwv00c.cs(34,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] list1_int = (int[])list1;\n            int[] list2_int = (int[])list2;\n            foreach (int i in list1_int) {\n                foreach (int j in list2_int) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] list1_string = (string[])list1;\n            string[] list2_string = (string[])list2;\n            foreach (string i in list1_string) {\n                foreach (string j in list2_string) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2sy6psm_.cs(42,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2sy6psm_.cs(42,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2sy6psm_.cs(43,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2sy6psm_.cs(43,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2sy6psm_.cs(44,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2sy6psm_.cs(44,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi_6wwxus.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] arr1 = (int[])list1;\n            int[] arr2 = (int[])list2;\n            foreach (int i in arr1) {\n                foreach (int j in arr2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] arr1 = (string[])list1;\n            string[] arr2 = (string[])list2;\n            foreach (string i in arr1) {\n                foreach (string j in arr2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkzrifk7b.cs(42,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpkzrifk7b.cs(42,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpkzrifk7b.cs(43,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpkzrifk7b.cs(43,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpkzrifk7b.cs(44,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpkzrifk7b.cs(44,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in l1) {\n            set.Add(i);\n        }\n        foreach (int i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xqmg0jf.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // TODO: Implement this function.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcc1vfrnr.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcc1vfrnr.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcc1vfrnr.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcc1vfrnr.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcc1vfrnr.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcc1vfrnr.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<char>)) {\n            List<char> l1 = (List<char>)list1;\n            List<char> l2 = (List<char>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6nvvhodg.cs(35,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(35,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(36,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(37,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(37,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<char>)) {\n            List<char> l1 = (List<char>)list1;\n            List<char> l2 = (List<char>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6nvvhodg.cs(35,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(35,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(36,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(37,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(37,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> hs = new HashSet<int>();\n        foreach (int i in l1) {\n            hs.Add(i);\n        }\n        foreach (int i in l2) {\n            if (hs.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7v28e3ue.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // TODO: Implement this function.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcc1vfrnr.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcc1vfrnr.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcc1vfrnr.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcc1vfrnr.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcc1vfrnr.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpcc1vfrnr.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in l1) {\n            set.Add(i);\n        }\n        foreach (int i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xqmg0jf.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi_6wwxus.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> list1_ = (List<int>)list1;\n        List<int> list2_ = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in list1_) {\n            set.Add(i);\n        }\n        foreach (int i in list2_) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprkmxvdvm.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprkmxvdvm.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprkmxvdvm.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprkmxvdvm.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprkmxvdvm.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprkmxvdvm.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] l1 = (int[])list1;\n            int[] l2 = (int[])list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] l1 = (string[])list1;\n            string[] l2 = (string[])list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpuj4iwrca.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpuj4iwrca.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpuj4iwrca.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpuj4iwrca.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpuj4iwrca.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpuj4iwrca.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1 is IEnumerable<object> && list2 is IEnumerable<object>) {\n            var list1Enum = (IEnumerable<object>)list1;\n            var list2Enum = (IEnumerable<object>)list2;\n            foreach (var item1 in list1Enum) {\n                foreach (var item2 in list2Enum) {\n                    if (item1.Equals(item2)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi5jasep8.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi5jasep8.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi5jasep8.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi5jasep8.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi5jasep8.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi5jasep8.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n\n        var set = new HashSet<object>();\n        foreach (var item in (IEnumerable<object>)list1) {\n            set.Add(item);\n        }\n\n        foreach (var item in (IEnumerable<object>)list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpv9qc8d7d.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpv9qc8d7d.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpv9qc8d7d.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpv9qc8d7d.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpv9qc8d7d.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpv9qc8d7d.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in l1) {\n            set.Add(i);\n        }\n        foreach (int i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xqmg0jf.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1 is IEnumerable<object> && list2 is IEnumerable<object>) {\n            var l1 = (IEnumerable<object>)list1;\n            var l2 = (IEnumerable<object>)list2;\n            return l1.Any(x => l2.Contains(x));\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_8az770j.cs(22,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_8az770j.cs(22,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_8az770j.cs(23,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_8az770j.cs(23,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_8az770j.cs(24,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_8az770j.cs(24,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] l1 = (int[])list1;\n            int[] l2 = (int[])list2;\n            foreach (int i in l1) {\n                foreach (int j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] l1 = (string[])list1;\n            string[] l2 = (string[])list2;\n            foreach (string i in l1) {\n                foreach (string j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(char[])) {\n            char[] l1 = (char[])list1;\n            char[] l2 = (char[])list2;\n            foreach (char i in l1) {\n                foreach (char j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdkhpfkz5.cs(56,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdkhpfkz5.cs(56,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdkhpfkz5.cs(57,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdkhpfkz5.cs(57,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdkhpfkz5.cs(58,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdkhpfkz5.cs(58,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> list1_ = (List<int>)list1;\n        List<int> list2_ = (List<int>)list2;\n        if (list1_.Count == 0 || list2_.Count == 0) {\n            return false;\n        }\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in list1_) {\n            set.Add(i);\n        }\n        foreach (int i in list2_) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwf4a8rf8.cs(34,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpwf4a8rf8.cs(34,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpwf4a8rf8.cs(35,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpwf4a8rf8.cs(35,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpwf4a8rf8.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpwf4a8rf8.cs(36,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Check if the lists are null\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        // Check if the lists are empty\n        if (list1.GetType() == typeof(List<object>) && list2.GetType() == typeof(List<object>)) {\n            if (((List<object>)list1).Count == 0 || ((List<object>)list2).Count == 0) {\n                return false;\n            }\n        }\n        // Check if the lists are of the same type\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        // Check if the lists are of type List<object>\n        if (list1.GetType() == typeof(List<object>)) {\n            // Check if the lists have a common element\n            foreach (object element1 in (List<object>)list1) {\n                foreach (object element2 in (List<object>)list2) {\n                    if (element1 == element2) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        // Check if the lists are of type List<int>\n        if (list1.GetType() == typeof(List<int>)) {\n            // Check if the lists have a common element\n            foreach (int element1 in (List<int>)list1) {\n                foreach (int element2 in (List<int>)list2) {\n                    if (element1 == element2) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        // Check if the lists are of type List<string>\n        if (list1.GetType() == typeof(List<string>)) {\n            // Check if the lists have a common element\n            foreach (string element1 in (List<string>)list1) {\n                foreach (string element2 in (List<string>)list2) {\n                    if (element1 == element2) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        // Check if the lists are of type List<char>\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnkcndl6w.cs(10,34): error CS0161: 'Problem.CommonElement(object, object)': not all code paths return a value\n/tmp/tmpnkcndl6w.cs(65,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnkcndl6w.cs(65,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnkcndl6w.cs(66,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnkcndl6w.cs(66,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnkcndl6w.cs(67,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnkcndl6w.cs(67,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> list1Int = (List<int>)list1;\n        List<int> list2Int = (List<int>)list2;\n        if (list1Int.Count == 0 || list2Int.Count == 0) {\n            return false;\n        }\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in list1Int) {\n            set.Add(i);\n        }\n        foreach (int i in list2Int) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnu0i_843.cs(34,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnu0i_843.cs(34,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnu0i_843.cs(35,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnu0i_843.cs(35,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnu0i_843.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpnu0i_843.cs(36,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprf9g4gg5.cs(14,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(14,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(16,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> hs = new HashSet<int>();\n        foreach (int i in l1) {\n            hs.Add(i);\n        }\n        foreach (int i in l2) {\n            if (hs.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7v28e3ue.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0o0sib_9.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in l1) {\n            set.Add(i);\n        }\n        foreach (int i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xqmg0jf.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 is List<int> && list2 is List<int>) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            foreach (int i in l1) {\n                foreach (int j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8uzuni66.cs(25,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8uzuni66.cs(25,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8uzuni66.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8uzuni66.cs(26,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8uzuni66.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8uzuni66.cs(27,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> list1_int = (List<int>)list1;\n        List<int> list2_int = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in list1_int) {\n            set.Add(i);\n        }\n        foreach (int i in list2_int) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpscv4zqg5.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpscv4zqg5.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpscv4zqg5.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpscv4zqg5.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpscv4zqg5.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpscv4zqg5.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] list1_int = (int[])list1;\n            int[] list2_int = (int[])list2;\n            foreach (int i in list1_int) {\n                foreach (int j in list2_int) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] list1_string = (string[])list1;\n            string[] list2_string = (string[])list2;\n            foreach (string i in list1_string) {\n                foreach (string j in list2_string) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpde9h052a.cs(44,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpde9h052a.cs(44,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpde9h052a.cs(45,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpde9h052a.cs(45,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpde9h052a.cs(46,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpde9h052a.cs(46,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) return null;\n        if (list1.GetType() != list2.GetType()) return null;\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp15u0qx04.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp15u0qx04.cs(26,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp15u0qx04.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp15u0qx04.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp15u0qx04.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp15u0qx04.cs(28,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0o0sib_9.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi_6wwxus.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Your code here.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf68s5qp0.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpf68s5qp0.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpf68s5qp0.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpf68s5qp0.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpf68s5qp0.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpf68s5qp0.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in l1) {\n            set.Add(i);\n        }\n        foreach (int i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xqmg0jf.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] list1_int = (int[])list1;\n            int[] list2_int = (int[])list2;\n            foreach (int i in list1_int) {\n                foreach (int j in list2_int) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] list1_string = (string[])list1;\n            string[] list2_string = (string[])list2;\n            foreach (string i in list1_string) {\n                foreach (string j in list2_string) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpde9h052a.cs(44,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpde9h052a.cs(44,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpde9h052a.cs(45,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpde9h052a.cs(45,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpde9h052a.cs(46,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpde9h052a.cs(46,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> list1_ = (List<int>)list1;\n        List<int> list2_ = (List<int>)list2;\n        if (list1_.Count == 0 || list2_.Count == 0) {\n            return false;\n        }\n        foreach (int i in list1_) {\n            if (list2_.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil84qtnm.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpil84qtnm.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpil84qtnm.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpil84qtnm.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpil84qtnm.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpil84qtnm.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 is List<int> && list2 is List<int>) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8y1rp309.cs(19,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8y1rp309.cs(19,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8y1rp309.cs(20,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8y1rp309.cs(20,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8y1rp309.cs(21,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8y1rp309.cs(21,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        var list1Enum = list1 as System.Collections.IEnumerable;\n        var list2Enum = list2 as System.Collections.IEnumerable;\n        if (list1Enum == null || list2Enum == null) {\n            return null;\n        }\n        foreach (var item1 in list1Enum) {\n            foreach (var item2 in list2Enum) {\n                if (item1.Equals(item2)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvnw2rrvj.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvnw2rrvj.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvnw2rrvj.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvnw2rrvj.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvnw2rrvj.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvnw2rrvj.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi_6wwxus.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> list1Int = (List<int>)list1;\n            List<int> list2Int = (List<int>)list2;\n            return list1Int.Intersect(list2Int).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> list1String = (List<string>)list1;\n            List<string> list2String = (List<string>)list2;\n            return list1String.Intersect(list2String).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi12ohwsd.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi12ohwsd.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi12ohwsd.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi12ohwsd.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi12ohwsd.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi12ohwsd.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // TODO: Implement this function\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphb9ds878.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> list1_ = (List<int>)list1;\n        List<int> list2_ = (List<int>)list2;\n        foreach (int i in list1_) {\n            foreach (int j in list2_) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvtomuwpk.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvtomuwpk.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvtomuwpk.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvtomuwpk.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvtomuwpk.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvtomuwpk.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0o0sib_9.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> hs = new HashSet<int>();\n        foreach (int i in l1) {\n            hs.Add(i);\n        }\n        foreach (int i in l2) {\n            if (hs.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7v28e3ue.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        var list1Type = list1.GetType();\n        var list2Type = list2.GetType();\n        if (list1Type != list2Type) {\n            return null;\n        }\n        if (list1Type == typeof(int[])) {\n            return CommonElement((int[])list1, (int[])list2);\n        }\n        if (list1Type == typeof(string[])) {\n            return CommonElement((string[])list1, (string[])list2);\n        }\n        if (list1Type == typeof(char[])) {\n            return CommonElement((char[])list1, (char[])list2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp68sfugsm.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp68sfugsm.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp68sfugsm.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp68sfugsm.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp68sfugsm.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp68sfugsm.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null)\n            return null;\n        if (list1.GetType() != list2.GetType())\n            return null;\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            foreach (int i in l1) {\n                if (l2.Contains(i))\n                    return true;\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            foreach (string i in l1) {\n                if (l2.Contains(i))\n                    return true;\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprby8w6vt.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprby8w6vt.cs(36,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprby8w6vt.cs(37,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprby8w6vt.cs(37,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprby8w6vt.cs(38,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprby8w6vt.cs(38,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi_6wwxus.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0o0sib_9.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        var set1 = new HashSet<object>();\n        var set2 = new HashSet<object>();\n        foreach (var item in (IEnumerable<object>)list1) {\n            set1.Add(item);\n        }\n        foreach (var item in (IEnumerable<object>)list2) {\n            set2.Add(item);\n        }\n        foreach (var item in set1) {\n            if (set2.Contains(item)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb1vqijzh.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpb1vqijzh.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpb1vqijzh.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpb1vqijzh.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpb1vqijzh.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpb1vqijzh.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in l1) {\n            set.Add(i);\n        }\n        foreach (int i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xqmg0jf.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> list1_int = (List<int>)list1;\n        List<int> list2_int = (List<int>)list2;\n        HashSet<int> hash_set = new HashSet<int>();\n        foreach (int item in list1_int) {\n            hash_set.Add(item);\n        }\n        foreach (int item in list2_int) {\n            if (hash_set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpff9j9mfv.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpff9j9mfv.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpff9j9mfv.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpff9j9mfv.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpff9j9mfv.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpff9j9mfv.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp35hw3sop.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            return CommonElement((List<int>)list1, (List<int>)list2);\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            return CommonElement((List<string>)list1, (List<string>)list2);\n        }\n        if (list1.GetType() == typeof(List<char>)) {\n            return CommonElement((List<char>)list1, (List<char>)list2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsiuaz6on.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpsiuaz6on.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpsiuaz6on.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpsiuaz6on.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpsiuaz6on.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpsiuaz6on.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // If either list is null, return null.\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        // If either list is not an array, return null.\n        if (!(list1 is Array) || !(list2 is Array)) {\n            return null;\n        }\n        // If either list is empty, return false.\n        if (((Array)list1).Length == 0 || ((Array)list2).Length == 0) {\n            return false;\n        }\n        // If either list is not of the same type, return null.\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        // If either list is not of type int, return null.\n        if (list1.GetType() != typeof(int[])) {\n            return null;\n        }\n        // If either list is not of type int[], return null.\n        if (!(list1 is int[]) || !(list2 is int[])) {\n            return null;\n        }\n        // If either list is not of type int[], return null.\n        if (!(list1 is int[]) || !(list2 is int[])) {\n            return null;\n        }\n        // If either list is not of type int[], return null.\n        if (!(list1 is int[]) || !(list2 is int[])) {\n            return null;\n        }\n        // If either list is not of type int[], return null.\n        if (!(list1 is int[]) || !(list2 is int[])) {\n            return null;\n        }\n        // If either list is not of type int[], return null.\n        if (!(list1 is int[]) || !(list2 is int[])) {\n            return null;\n        }\n        // If either list is not of type int[], return null.\n        if (!(list1 is int[]) || !(list2 is int[])) {\n            return null;\n        }\n        // If either list is not of type int[], return null.\n        if (!(list1 is int[]) || !(list2 is int[])) {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptxrnep_m.cs(59,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmptxrnep_m.cs(65,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp35hw3sop.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] list1Int = (int[])list1;\n            int[] list2Int = (int[])list2;\n            foreach (int i in list1Int) {\n                foreach (int j in list2Int) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] list1String = (string[])list1;\n            string[] list2String = (string[])list2;\n            foreach (string i in list1String) {\n                foreach (string j in list2String) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(char[])) {\n            char[] list1Char = (char[])list1;\n            char[] list2Char = (char[])list2;\n            foreach (char i in list1Char) {\n                foreach (char j in list2Char) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl26bfgke.cs(56,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpl26bfgke.cs(56,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpl26bfgke.cs(57,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpl26bfgke.cs(57,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpl26bfgke.cs(58,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpl26bfgke.cs(58,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1 is IEnumerable<object> && list2 is IEnumerable<object>) {\n            var l1 = (IEnumerable<object>)list1;\n            var l2 = (IEnumerable<object>)list2;\n            foreach (var e1 in l1) {\n                foreach (var e2 in l2) {\n                    if (e1.Equals(e2)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdph2r7ug.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdph2r7ug.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdph2r7ug.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdph2r7ug.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdph2r7ug.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdph2r7ug.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1 is List<int> && list2 is List<int>) {\n            return CommonElement((List<int>)list1, (List<int>)list2);\n        }\n        if (list1 is List<string> && list2 is List<string>) {\n            return CommonElement((List<string>)list1, (List<string>)list2);\n        }\n        if (list1 is List<double> && list2 is List<double>) {\n            return CommonElement((List<double>)list1, (List<double>)list2);\n        }\n        if (list1 is List<char> && list2 is List<char>) {\n            return CommonElement((List<char>)list1, (List<char>)list2);\n        }\n        if (list1 is List<bool> && list2 is List<bool>) {\n            return CommonElement((List<bool>)list1, (List<bool>)list2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_7hqs_uy.cs(35,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_7hqs_uy.cs(35,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_7hqs_uy.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_7hqs_uy.cs(36,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_7hqs_uy.cs(37,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_7hqs_uy.cs(37,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] intList1 = (int[])list1;\n            int[] intList2 = (int[])list2;\n            foreach (int i in intList1) {\n                foreach (int j in intList2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] stringList1 = (string[])list1;\n            string[] stringList2 = (string[])list2;\n            foreach (string i in stringList1) {\n                foreach (string j in stringList2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppoq3iyqx.cs(44,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppoq3iyqx.cs(44,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppoq3iyqx.cs(45,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppoq3iyqx.cs(45,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppoq3iyqx.cs(46,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppoq3iyqx.cs(46,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> hs = new HashSet<int>();\n        foreach (int i in l1) {\n            hs.Add(i);\n        }\n        foreach (int i in l2) {\n            if (hs.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7v28e3ue.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0o0sib_9.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp35hw3sop.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1 is List<int> && list2 is List<int>) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            foreach (int i in l1) {\n                foreach (int j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2jk9tkgt.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2jk9tkgt.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2jk9tkgt.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2jk9tkgt.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2jk9tkgt.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp2jk9tkgt.cs(30,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp35hw3sop.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Any(x => l2.Contains(x));\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Any(x => l2.Contains(x));\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppk96zak3.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppk96zak3.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppk96zak3.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppk96zak3.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppk96zak3.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppk96zak3.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in l1) {\n            set.Add(i);\n        }\n        foreach (int i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xqmg0jf.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            var l1 = (List<int>)list1;\n            var l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            var l1 = (List<string>)list1;\n            var l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpefmb53_3.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefmb53_3.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefmb53_3.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefmb53_3.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefmb53_3.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefmb53_3.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) return null;\n        if (list1.GetType() != list2.GetType()) return null;\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp15u0qx04.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp15u0qx04.cs(26,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp15u0qx04.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp15u0qx04.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp15u0qx04.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp15u0qx04.cs(28,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            foreach (int j in l2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptw3wghol.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi_6wwxus.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0o0sib_9.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in l1) {\n            set.Add(i);\n        }\n        foreach (int i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xqmg0jf.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        if (l1.Count == 0 || l2.Count == 0) {\n            return false;\n        }\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw3atgaz0.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3atgaz0.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3atgaz0.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3atgaz0.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3atgaz0.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3atgaz0.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprf9g4gg5.cs(14,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(14,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmprf9g4gg5.cs(16,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1 is List<int> && list2 is List<int>) {\n            List<int> list1Int = (List<int>)list1;\n            List<int> list2Int = (List<int>)list2;\n            foreach (int i in list1Int) {\n                if (list2Int.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (list1 is List<string> && list2 is List<string>) {\n            List<string> list1String = (List<string>)list1;\n            List<string> list2String = (List<string>)list2;\n            foreach (string s in list1String) {\n                if (list2String.Contains(s)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp92zs1xkr.cs(37,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92zs1xkr.cs(37,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92zs1xkr.cs(38,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92zs1xkr.cs(38,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92zs1xkr.cs(39,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp92zs1xkr.cs(39,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] l1 = (int[])list1;\n            int[] l2 = (int[])list2;\n            for (int i = 0; i < l1.Length; i++) {\n                for (int j = 0; j < l2.Length; j++) {\n                    if (l1[i] == l2[j]) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        } else if (list1.GetType() == typeof(string[])) {\n            string[] l1 = (string[])list1;\n            string[] l2 = (string[])list2;\n            for (int i = 0; i < l1.Length; i++) {\n                for (int j = 0; j < l2.Length; j++) {\n                    if (l1[i] == l2[j]) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        } else {\n            return null;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphil2phmc.cs(44,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphil2phmc.cs(44,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphil2phmc.cs(45,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphil2phmc.cs(45,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphil2phmc.cs(46,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphil2phmc.cs(46,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            var list1int = (List<int>)list1;\n            var list2int = (List<int>)list2;\n            return list1int.Intersect(list2int).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            var list1string = (List<string>)list1;\n            var list2string = (List<string>)list2;\n            return list1string.Intersect(list2string).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmix6s8y5.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmix6s8y5.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmix6s8y5.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmix6s8y5.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmix6s8y5.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpmix6s8y5.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<object>) || list2.GetType() != typeof(List<object>)) {\n            return null;\n        }\n        List<object> l1 = (List<object>)list1;\n        List<object> l2 = (List<object>)list2;\n        foreach (object o1 in l1) {\n            foreach (object o2 in l2) {\n                if (o1 == o2) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4u3p67or.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4u3p67or.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4u3p67or.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4u3p67or.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4u3p67or.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4u3p67or.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0o0sib_9.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        var list1_ = (List<int>)list1;\n        var list2_ = (List<int>)list2;\n        foreach (var item1 in list1_) {\n            foreach (var item2 in list2_) {\n                if (item1 == item2) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo7mkth8p.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpo7mkth8p.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpo7mkth8p.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpo7mkth8p.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpo7mkth8p.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpo7mkth8p.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> list1_ = (List<int>)list1;\n        List<int> list2_ = (List<int>)list2;\n        if (list1_.Count == 0 || list2_.Count == 0) {\n            return false;\n        }\n        foreach (int i in list1_) {\n            if (list2_.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpil84qtnm.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpil84qtnm.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpil84qtnm.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpil84qtnm.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpil84qtnm.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpil84qtnm.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0o0sib_9.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 is List<int> && list2 is List<int>) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            foreach (int i in l1) {\n                foreach (int j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        else if (list1 is List<string> && list2 is List<string>) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            foreach (string i in l1) {\n                foreach (string j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        else {\n            return null;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpizvub8xf.cs(40,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpizvub8xf.cs(40,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpizvub8xf.cs(41,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpizvub8xf.cs(41,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpizvub8xf.cs(42,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpizvub8xf.cs(42,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // If either list is null, return null\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        // If either list is empty, return false\n        if (list1.Count() == 0 || list2.Count() == 0) {\n            return false;\n        }\n        // If the lists are the same, return true\n        if (list1 == list2) {\n            return true;\n        }\n        // If the lists are not the same, check for common elements\n        foreach (var item1 in list1) {\n            foreach (var item2 in list2) {\n                if (item1 == item2) {\n                    return true;\n                }\n            }\n        }\n        // If no common elements are found, return false\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp90kufx4_.cs(16,19): error CS1061: 'object' does not contain a definition for 'Count' and no accessible extension method 'Count' accepting a first argument of type 'object' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp90kufx4_.cs(16,41): error CS1061: 'object' does not contain a definition for 'Count' and no accessible extension method 'Count' accepting a first argument of type 'object' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp90kufx4_.cs(24,31): error CS1579: foreach statement cannot operate on variables of type 'object' because 'object' does not contain a public instance definition for 'GetEnumerator'\n/tmp/tmp90kufx4_.cs(25,35): error CS1579: foreach statement cannot operate on variables of type 'object' because 'object' does not contain a public instance definition for 'GetEnumerator'\n/tmp/tmp90kufx4_.cs(35,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp90kufx4_.cs(35,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp90kufx4_.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp90kufx4_.cs(36,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp90kufx4_.cs(37,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp90kufx4_.cs(37,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in l1) {\n            set.Add(i);\n        }\n        foreach (int i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xqmg0jf.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> list1Int = (List<int>)list1;\n        List<int> list2Int = (List<int>)list2;\n        foreach (int i in list1Int) {\n            if (list2Int.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdryzfqer.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdryzfqer.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdryzfqer.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdryzfqer.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdryzfqer.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpdryzfqer.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // If the lists are null, return null.\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        // If the lists are empty, return false.\n        if (list1.Count() == 0 || list2.Count() == 0) {\n            return false;\n        }\n        // If the lists are not empty, check if they have a common element.\n        foreach (object element1 in list1) {\n            foreach (object element2 in list2) {\n                if (element1 == element2) {\n                    return true;\n                }\n            }\n        }\n        // If the lists do not have a common element, return false.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8myq4_u5.cs(16,19): error CS1061: 'object' does not contain a definition for 'Count' and no accessible extension method 'Count' accepting a first argument of type 'object' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp8myq4_u5.cs(16,41): error CS1061: 'object' does not contain a definition for 'Count' and no accessible extension method 'Count' accepting a first argument of type 'object' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp8myq4_u5.cs(20,37): error CS1579: foreach statement cannot operate on variables of type 'object' because 'object' does not contain a public instance definition for 'GetEnumerator'\n/tmp/tmp8myq4_u5.cs(21,41): error CS1579: foreach statement cannot operate on variables of type 'object' because 'object' does not contain a public instance definition for 'GetEnumerator'\n/tmp/tmp8myq4_u5.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8myq4_u5.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8myq4_u5.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8myq4_u5.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8myq4_u5.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp8myq4_u5.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp35hw3sop.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        var list1Enumerator = ((IEnumerable<object>)list1).GetEnumerator();\n        var list2Enumerator = ((IEnumerable<object>)list2).GetEnumerator();\n        while (list1Enumerator.MoveNext()) {\n            while (list2Enumerator.MoveNext()) {\n                if (list1Enumerator.Current == list2Enumerator.Current) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppaxd6let.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppaxd6let.cs(26,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppaxd6let.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppaxd6let.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppaxd6let.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppaxd6let.cs(28,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // TODO: Implement this function\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphb9ds878.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmphb9ds878.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> hs = new HashSet<int>();\n        foreach (int i in l1) {\n            hs.Add(i);\n        }\n        foreach (int i in l2) {\n            if (hs.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7v28e3ue.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        if (l1.Count == 0 || l2.Count == 0) {\n            return false;\n        }\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw3atgaz0.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3atgaz0.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3atgaz0.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3atgaz0.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3atgaz0.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpw3atgaz0.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            foreach (int j in l2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptw3wghol.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] arr1 = (int[])list1;\n            int[] arr2 = (int[])list2;\n            return arr1.Any(x => arr2.Contains(x));\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] arr1 = (string[])list1;\n            string[] arr2 = (string[])list2;\n            return arr1.Any(x => arr2.Contains(x));\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl7wrqbiy.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpl7wrqbiy.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpl7wrqbiy.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpl7wrqbiy.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpl7wrqbiy.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpl7wrqbiy.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in l1) {\n            set.Add(i);\n        }\n        foreach (int i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xqmg0jf.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<char>)) {\n            List<char> l1 = (List<char>)list1;\n            List<char> l2 = (List<char>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6nvvhodg.cs(35,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(35,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(36,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(37,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp6nvvhodg.cs(37,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> set = new HashSet<int>();\n        foreach (int i in l1) {\n            set.Add(i);\n        }\n        foreach (int i in l2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xqmg0jf.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0xqmg0jf.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        var list1Enumerator = ((IEnumerable<object>)list1).GetEnumerator();\n        var list2Enumerator = ((IEnumerable<object>)list2).GetEnumerator();\n        while (list1Enumerator.MoveNext()) {\n            while (list2Enumerator.MoveNext()) {\n                if (list1Enumerator.Current == list2Enumerator.Current) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppaxd6let.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppaxd6let.cs(26,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppaxd6let.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppaxd6let.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppaxd6let.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmppaxd6let.cs(28,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1 is int[] && list2 is int[]) {\n            int[] list1_int = (int[])list1;\n            int[] list2_int = (int[])list2;\n            foreach (int i in list1_int) {\n                foreach (int j in list2_int) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1 is string[] && list2 is string[]) {\n            string[] list1_string = (string[])list1;\n            string[] list2_string = (string[])list2;\n            foreach (string i in list1_string) {\n                foreach (string j in list2_string) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1 is char[] && list2 is char[]) {\n            char[] list1_char = (char[])list1;\n            char[] list2_char = (char[])list2;\n            foreach (char i in list1_char) {\n                foreach (char j in list2_char) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4_t5_g25.cs(53,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4_t5_g25.cs(53,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4_t5_g25.cs(54,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4_t5_g25.cs(54,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4_t5_g25.cs(55,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4_t5_g25.cs(55,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> l1 = (List<int>)list1;\n            List<int> l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> l1 = (List<string>)list1;\n            List<string> l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi_6wwxus.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpi_6wwxus.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) return null;\n        if (list1.GetType() != list2.GetType()) return null;\n        if (list1.GetType() == typeof(int[])) {\n            int[] arr1 = (int[])list1;\n            int[] arr2 = (int[])list2;\n            return arr1.Intersect(arr2).Any();\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] arr1 = (string[])list1;\n            string[] arr2 = (string[])list2;\n            return arr1.Intersect(arr2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm1gckq2k.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpm1gckq2k.cs(26,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpm1gckq2k.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpm1gckq2k.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpm1gckq2k.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpm1gckq2k.cs(28,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        var l1 = (List<int>)list1;\n        var l2 = (List<int>)list2;\n        if (l1.Count == 0 || l2.Count == 0) {\n            return false;\n        }\n        var set = new HashSet<int>();\n        foreach (var item in l1) {\n            set.Add(item);\n        }\n        foreach (var item in l2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5oi8xfjm.cs(34,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5oi8xfjm.cs(34,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5oi8xfjm.cs(35,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5oi8xfjm.cs(35,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5oi8xfjm.cs(36,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp5oi8xfjm.cs(36,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            if (l2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510567,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0o0sib_9.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp0o0sib_9.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp35hw3sop.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            List<int> list1Int = (List<int>)list1;\n            List<int> list2Int = (List<int>)list2;\n            foreach (int i in list1Int) {\n                if (list2Int.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            List<string> list1String = (List<string>)list1;\n            List<string> list2String = (List<string>)list2;\n            foreach (string i in list1String) {\n                if (list2String.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvmg2d2m9.cs(40,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvmg2d2m9.cs(40,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvmg2d2m9.cs(41,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvmg2d2m9.cs(41,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvmg2d2m9.cs(42,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvmg2d2m9.cs(42,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] array1 = (int[])list1;\n            int[] array2 = (int[])list2;\n            return CommonElement(array1, array2);\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] array1 = (string[])list1;\n            string[] array2 = (string[])list2;\n            return CommonElement(array1, array2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvg59dwfz.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvg59dwfz.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvg59dwfz.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvg59dwfz.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvg59dwfz.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpvg59dwfz.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        // Your code here\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1665510568,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp35hw3sop.cs(15,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(15,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(16,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp35hw3sop.cs(17,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1 is List<int> && list2 is List<int>) {\n            var list1Int = (List<int>)list1;\n            var list2Int = (List<int>)list2;\n            return list1Int.Any(x => list2Int.Contains(x));\n        }\n        if (list1 is List<string> && list2 is List<string>) {\n            var list1String = (List<string>)list1;\n            var list2String = (List<string>)list2;\n            return list1String.Any(x => list2String.Contains(x));\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzy9b2hak.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzy9b2hak.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzy9b2hak.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzy9b2hak.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzy9b2hak.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpzy9b2hak.cs(29,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] arr1 = (int[])list1;\n            int[] arr2 = (int[])list2;\n            HashSet<int> set = new HashSet<int>();\n            foreach (int i in arr1) {\n                set.Add(i);\n            }\n            foreach (int i in arr2) {\n                if (set.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] arr1 = (string[])list1;\n            string[] arr2 = (string[])list2;\n            HashSet<string> set = new HashSet<string>();\n            foreach (string i in arr1) {\n                set.Add(i);\n            }\n            foreach (string i in arr2) {\n                if (set.Contains(i)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpez528wja.cs(48,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpez528wja.cs(48,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpez528wja.cs(49,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpez528wja.cs(49,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpez528wja.cs(50,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpez528wja.cs(50,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] l1 = (int[])list1;\n            int[] l2 = (int[])list2;\n            foreach (int i in l1) {\n                foreach (int j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] l1 = (string[])list1;\n            string[] l2 = (string[])list2;\n            foreach (string i in l1) {\n                foreach (string j in l2) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_19c29hp.cs(42,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_19c29hp.cs(42,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_19c29hp.cs(43,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_19c29hp.cs(43,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_19c29hp.cs(44,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp_19c29hp.cs(44,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] a = (int[])list1;\n            int[] b = (int[])list2;\n            foreach (int i in a) {\n                foreach (int j in b) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] a = (string[])list1;\n            string[] b = (string[])list2;\n            foreach (string i in a) {\n                foreach (string j in b) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(char[])) {\n            char[] a = (char[])list1;\n            char[] b = (char[])list2;\n            foreach (char i in a) {\n                foreach (char j in b) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(double[])) {\n            double[] a = (double[])list1;\n            double[] b = (double[])list2;\n            foreach (double i in a) {\n                foreach (double j in b) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(float[])) {\n            float[] a = (float[])list1;\n            float[] b = (float[])list2;\n            foreach (float i in a) {\n                foreach (float j in b) {\n                    if (i == j) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps8xakzfl.cs(72,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmps8xakzfl.cs(78,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        var list1Type = list1.GetType();\n        var list2Type = list2.GetType();\n        if (list1Type != list2Type) {\n            return null;\n        }\n        if (list1Type == typeof(int[])) {\n            return CommonElement((int[])list1, (int[])list2);\n        }\n        if (list1Type == typeof(string[])) {\n            return CommonElement((string[])list1, (string[])list2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4g7n_0hz.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4g7n_0hz.cs(28,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4g7n_0hz.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4g7n_0hz.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4g7n_0hz.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp4g7n_0hz.cs(30,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) return null;\n        if (list1.GetType() != list2.GetType()) return null;\n        if (list1.GetType() != typeof(List<int>)) return null;\n        var l1 = (List<int>)list1;\n        var l2 = (List<int>)list2;\n        var hs = new HashSet<int>();\n        foreach (var item in l1) {\n            hs.Add(item);\n        }\n        foreach (var item in l2) {\n            if (hs.Contains(item)) return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkbca_rv9.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpkbca_rv9.cs(26,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpkbca_rv9.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpkbca_rv9.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpkbca_rv9.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpkbca_rv9.cs(28,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> list1Cast = (List<int>)list1;\n        List<int> list2Cast = (List<int>)list2;\n        HashSet<int> list1Set = new HashSet<int>(list1Cast);\n        HashSet<int> list2Set = new HashSet<int>(list2Cast);\n        return list1Set.Overlaps(list2Set);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp63qycnco.cs(24,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp63qycnco.cs(24,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp63qycnco.cs(25,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp63qycnco.cs(25,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp63qycnco.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp63qycnco.cs(26,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        HashSet<int> hs = new HashSet<int>();\n        foreach (int i in l1) {\n            hs.Add(i);\n        }\n        foreach (int i in l2) {\n            if (hs.Contains(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7v28e3ue.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp7v28e3ue.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            return CommonElement((List<int>)list1, (List<int>)list2);\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            return CommonElement((List<string>)list1, (List<string>)list2);\n        }\n        if (list1.GetType() == typeof(List<char>)) {\n            return CommonElement((List<char>)list1, (List<char>)list2);\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsiuaz6on.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpsiuaz6on.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpsiuaz6on.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpsiuaz6on.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpsiuaz6on.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpsiuaz6on.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            return ((List<int>)list1).Intersect((List<int>)list2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            return ((List<string>)list1).Intersect((List<string>)list2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpeot24my8.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpeot24my8.cs(26,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpeot24my8.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpeot24my8.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpeot24my8.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpeot24my8.cs(28,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        List<object> list1_ = (List<object>)list1;\n        List<object> list2_ = (List<object>)list2;\n        foreach (object item1 in list1_) {\n            foreach (object item2 in list2_) {\n                if (item1 == item2) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp45fx6kdi.cs(26,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp45fx6kdi.cs(26,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp45fx6kdi.cs(27,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp45fx6kdi.cs(27,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp45fx6kdi.cs(28,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp45fx6kdi.cs(28,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<int>) || list2.GetType() != typeof(List<int>)) {\n            return null;\n        }\n        List<int> l1 = (List<int>)list1;\n        List<int> l2 = (List<int>)list2;\n        foreach (int i in l1) {\n            foreach (int j in l2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptw3wghol.cs(29,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(29,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmptw3wghol.cs(31,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(List<int>)) {\n            var l1 = (List<int>)list1;\n            var l2 = (List<int>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        if (list1.GetType() == typeof(List<string>)) {\n            var l1 = (List<string>)list1;\n            var l2 = (List<string>)list2;\n            return l1.Intersect(l2).Any();\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpefmb53_3.cs(30,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefmb53_3.cs(30,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefmb53_3.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefmb53_3.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefmb53_3.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpefmb53_3.cs(32,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != list2.GetType()) {\n            return null;\n        }\n        if (list1.GetType() == typeof(int[])) {\n            int[] list1Int = (int[])list1;\n            int[] list2Int = (int[])list2;\n            foreach (int i in list1Int) {\n                foreach (int j in list2Int) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(string[])) {\n            string[] list1String = (string[])list1;\n            string[] list2String = (string[])list2;\n            foreach (string i in list1String) {\n                foreach (string j in list2String) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(double[])) {\n            double[] list1Double = (double[])list1;\n            double[] list2Double = (double[])list2;\n            foreach (double i in list1Double) {\n                foreach (double j in list2Double) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        if (list1.GetType() == typeof(char[])) {\n            char[] list1Char = (char[])list1;\n            char[] list2Char = (char[])list2;\n            foreach (char i in list1Char) {\n                foreach (char j in list2Char) {\n                    if (i == j) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1qhzk6xx.cs(68,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1qhzk6xx.cs(68,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1qhzk6xx.cs(69,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1qhzk6xx.cs(69,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1qhzk6xx.cs(70,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp1qhzk6xx.cs(70,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        if (list1.GetType() != typeof(List<object>) || list2.GetType() != typeof(List<object>)) {\n            return null;\n        }\n        List<object> l1 = (List<object>)list1;\n        List<object> l2 = (List<object>)list2;\n        HashSet<object> set = new HashSet<object>();\n        foreach (object o in l1) {\n            set.Add(o);\n        }\n        foreach (object o in l2) {\n            if (set.Contains(o)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123808,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp60feecvg.cs(31,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp60feecvg.cs(31,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp60feecvg.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp60feecvg.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp60feecvg.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmp60feecvg.cs(33,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes two lists and returns true if they have at least one common element.\n    public static Nullable<bool> CommonElement(object list1, object list2) {\n        if (list1 == null || list2 == null) {\n            return null;\n        }\n        var list1Type = list1.GetType();\n        var list2Type = list2.GetType();\n        if (list1Type != list2Type) {\n            return null;\n        }\n        if (list1Type == typeof(List<int>)) {\n            var list1Int = (List<int>)list1;\n            var list2Int = (List<int>)list2;\n            return list1Int.Intersect(list2Int).Any();\n        } else if (list1Type == typeof(List<string>)) {\n            var list1String = (List<string>)list1;\n            var list2String = (List<string>)list2;\n            return list1String.Intersect(list2String).Any();\n        } else {\n            return null;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))).Equals(true));\n    Debug.Assert(CommonElement((new object(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new object(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))).Equals(null));\n    Debug.Assert(CommonElement((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\"})), (new object(new string[]{(string)\"d\", (string)\"b\", (string)\"e\"}))).Equals(true));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpygcmasgq.cs(32,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpygcmasgq.cs(32,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpygcmasgq.cs(33,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpygcmasgq.cs(33,113): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpygcmasgq.cs(34,37): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n/tmp/tmpygcmasgq.cs(34,104): error CS1729: 'object' does not contain a constructor that takes 1 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
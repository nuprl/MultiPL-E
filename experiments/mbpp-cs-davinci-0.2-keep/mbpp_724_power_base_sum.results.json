{
  "name": "mbpp_724_power_base_sum",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_724_power_base_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += (long)Char.GetNumericValue(resultString[i]);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_kxtv_o1.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        long sum = 0;\n        BigInteger result = BigInteger.Pow(numBase, power);\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpml70krml.cs(12,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(c => long.Parse(c.ToString())).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbk157yxo.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(x => long.Parse(x.ToString())).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw41e_xy0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(c => c - '0').Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx6ywvrpw.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        foreach (char c in resultString) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp50b73x1j.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Sum(x => x - '0');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyfcqcfei.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += (long)Char.GetNumericValue(resultString[i]);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_kxtv_o1.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Sum(c => c - '0');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy3g2dqze.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Sum(c => c - '0');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy3g2dqze.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += c - '0';\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124168,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb5k7w09h.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Sum(c => c - '0');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy3g2dqze.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += result % 10;\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1axes3ji.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n/tmp/tmp1axes3ji.cs(14,13): error CS0266: Cannot implicitly convert type 'System.Numerics.BigInteger' to 'long'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += int.Parse(c.ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp43e3q43h.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += long.Parse(c.ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3ve_ipqj.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(c => long.Parse(c.ToString())).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbk157yxo.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger num = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (num > 0) {\n            sum += (long)(num % 10);\n            num /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp14_9npvl.cs(11,50): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger num = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (num > 0) {\n            sum += (long)(num % 10);\n            num /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp14_9npvl.cs(11,50): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(c => long.Parse(c.ToString())).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbk157yxo.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger num = BigInteger.Pow(numBase, power);\n        string numString = num.ToString();\n        long sum = 0;\n        for (int i = 0; i < numString.Length; i++) {\n            sum += numString[i] - '0';\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4jfz3css.cs(11,50): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().ToCharArray().Select(x => long.Parse(x.ToString())).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_dlcy4ob.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        // Write your code here\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        foreach (char c in resultString) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7rx3wjgr.cs(12,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger num = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (num > 0) {\n            sum += (long)(num % 10);\n            num /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp14_9npvl.cs(11,50): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += (long)Char.GetNumericValue(resultString[i]);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_kxtv_o1.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        // Calculate the base to the power\n        BigInteger result = BigInteger.Pow(numBase, power);\n        // Convert the result to a string\n        string resultString = result.ToString();\n        // Initialize the sum to 0\n        long sum = 0;\n        // Loop through each character in the string\n        for (int i = 0; i < resultString.Length; i++) {\n            // Convert the character to a long\n            long digit = long.Parse(resultString[i].ToString());\n            // Add the digit to the sum\n            sum += digit;\n        }\n        // Return the sum\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplhykpy5m.cs(12,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger num = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (num > 0) {\n            sum += (long)(num % 10);\n            num /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp14_9npvl.cs(11,50): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += (long)Char.GetNumericValue(resultString[i]);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_kxtv_o1.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char digit in result.ToString()) {\n            sum += (long)Char.GetNumericValue(digit);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo7cm38vu.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultStr = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultStr.Length; i++) {\n            sum += int.Parse(resultStr[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptbsn2y3r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        // Create a BigInteger to store the result of the power operation.\n        BigInteger result = BigInteger.Pow(numBase, power);\n        // Convert the result to a string.\n        string resultStr = result.ToString();\n        // Create a variable to store the sum of the digits.\n        long sum = 0;\n        // Loop through each character in the string.\n        for (int i = 0; i < resultStr.Length; i++) {\n            // Add the current digit to the sum.\n            sum += int.Parse(resultStr[i].ToString());\n        }\n        // Return the sum.\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdycmbb5o.cs(12,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9faboakx.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += result % 10;\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1axes3ji.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n/tmp/tmp1axes3ji.cs(14,13): error CS0266: Cannot implicitly convert type 'System.Numerics.BigInteger' to 'long'. An explicit conversion exists (are you missing a cast?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        // Calculate the base to the power\n        BigInteger result = BigInteger.Pow(numBase, power);\n        // Convert to string\n        string resultString = result.ToString();\n        // Convert string to array of chars\n        char[] resultChars = resultString.ToCharArray();\n        // Convert array of chars to array of ints\n        int[] resultInts = Array.ConvertAll(resultChars, c => (int)Char.GetNumericValue(c));\n        // Return sum of array of ints\n        return resultInts.Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptu7jyai4.cs(12,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        foreach (char c in resultString) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp50b73x1j.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        // Calculate the base to the power\n        BigInteger result = BigInteger.Pow(numBase, power);\n        // Convert the result to a string\n        string resultStr = result.ToString();\n        // Initialize the sum\n        long sum = 0;\n        // Loop through the string and add each digit to the sum\n        for (int i = 0; i < resultStr.Length; i++) {\n            sum += Convert.ToInt64(resultStr.Substring(i, 1));\n        }\n        // Return the sum\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp947q6vdi.cs(12,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(c => long.Parse(c.ToString())).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbk157yxo.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        // Calculate the power\n        BigInteger powerResult = BigInteger.Pow(numBase, power);\n        // Convert the power result to a string\n        string powerResultString = powerResult.ToString();\n        // Create a variable to hold the sum\n        long sum = 0;\n        // Loop through the string and add each digit to the sum\n        for (int i = 0; i < powerResultString.Length; i++) {\n            sum += long.Parse(powerResultString[i].ToString());\n        }\n        // Return the sum\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm9d2zrtk.cs(12,58): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        // Calculate the base to the power\n        BigInteger result = BigInteger.Pow(numBase, power);\n        // Convert the result to a string\n        string resultString = result.ToString();\n        // Initialize the sum\n        long sum = 0;\n        // Iterate through the string and add each digit to the sum\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        // Return the sum\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa1aact0e.cs(12,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        // Your code here\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp10lnd93i.cs(12,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += c - '0';\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124168,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb5k7w09h.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(c => c - '0').Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx6ywvrpw.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string strResult = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < strResult.Length; i++) {\n            sum += (long)Char.GetNumericValue(strResult[i]);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgahxvsuz.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach(char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_raf60lq.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(x => long.Parse(x.ToString())).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw41e_xy0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger num = BigInteger.Pow(numBase, power);\n        string numString = num.ToString();\n        long sum = 0;\n        for (int i = 0; i < numString.Length; i++) {\n            sum += numString[i] - '0';\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4jfz3css.cs(11,50): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(c => long.Parse(c.ToString())).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbk157yxo.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultStr = result.ToString();\n        long sum = 0;\n        foreach (char c in resultStr) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpivfatn9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += (long)Char.GetNumericValue(resultString[i]);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_kxtv_o1.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(c => c - '0').Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx6ywvrpw.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = 1;\n        for (int i = 0; i < power; i++) {\n            result *= numBase;\n        }\n        return result.ToString().Select(x => (long)Char.GetNumericValue(x)).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Sum(c => c - '0');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy3g2dqze.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Sum(x => x - '0');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyfcqcfei.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = 1;\n        for (int i = 0; i < power; i++) {\n            result *= numBase;\n        }\n        return result.ToString().Select(c => (long)Char.GetNumericValue(c)).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124171,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Sum(c => c - '0');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy3g2dqze.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(c => long.Parse(c.ToString())).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbk157yxo.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Sum(c => c - '0');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy3g2dqze.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultStr = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultStr.Length; i++) {\n            sum += int.Parse(resultStr[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptbsn2y3r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)result % 10;\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6pbenix1.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Sum(c => c - '0');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy3g2dqze.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultString = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg8nyqy9r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(c => long.Parse(c.ToString())).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbk157yxo.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger sum = 0;\n        BigInteger num = BigInteger.Pow(numBase, power);\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n        return (long)sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzfj29att.cs(12,50): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += c - '0';\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124168,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb5k7w09h.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(c => long.Parse(c.ToString())).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbk157yxo.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        // Calculate the base to the power\n        BigInteger result = BigInteger.Pow(numBase, power);\n        // Convert the result to a string\n        string resultString = result.ToString();\n        // Initialize the sum\n        long sum = 0;\n        // Iterate through the string and add each digit to the sum\n        for (int i = 0; i < resultString.Length; i++) {\n            sum += int.Parse(resultString[i].ToString());\n        }\n        // Return the sum\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa1aact0e.cs(12,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        return result.ToString().Select(x => long.Parse(x.ToString())).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw41e_xy0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        foreach (char c in result.ToString()) {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0cw1la0.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        long sum = 0;\n        while (result > 0) {\n            sum += (long)(result % 10);\n            result /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1665509798,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5jekj4ng.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    public static long PowerBaseSum(long numBase, long power) {\n        BigInteger result = BigInteger.Pow(numBase, power);\n        string resultStr = result.ToString();\n        long sum = 0;\n        for (int i = 0; i < resultStr.Length; i++) {\n            sum += int.Parse(resultStr[i].ToString());\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(PowerBaseSum((2L), (100L)) == (115L));\n    Debug.Assert(PowerBaseSum((8L), (10L)) == (37L));\n    Debug.Assert(PowerBaseSum((8L), (15L)) == (62L));\n    Debug.Assert(PowerBaseSum((3L), (3L)) == (9L));\n    }\n\n}\n",
      "timestamp": 1666124169,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptbsn2y3r.cs(11,53): error CS1503: Argument 2: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
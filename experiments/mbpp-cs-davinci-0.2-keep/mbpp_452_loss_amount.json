{
  "name": "mbpp_452_loss_amount",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that gives loss amount on a sale if the given amount has loss else return 0.\n    public static long LossAmount(long actual_cost, long sale_amount) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_452_loss_amount.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(LossAmount((1500L), (1200L)) == (0L));\n    Debug.Assert(LossAmount((100L), (200L)) == (100L));\n    Debug.Assert(LossAmount((2000L), (5000L)) == (3000L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        long loss = 0;\n        if (actual_cost > sale_amount) {\n            loss = actual_cost - sale_amount;\n        }\n        return loss;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        long loss = actual_cost - sale_amount;\n        if (loss > 0) {\n            return loss;\n        } else {\n            return 0;\n        }",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        // Write your code here\n        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        } else {\n            return 0;\n        }",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        } else {\n            return 0;\n        }",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        long loss = 0;\n        if (actual_cost > sale_amount) {\n            loss = actual_cost - sale_amount;\n        }\n        return loss;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        } else {\n            return 0;\n        }",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        } else {\n            return 0;\n        }",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        long loss = actual_cost - sale_amount;\n        if (loss > 0) {\n            return loss;\n        }\n        return 0;",
    "        long loss = actual_cost - sale_amount;\n        if (loss > 0) {\n            return loss;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        if (sale_amount < actual_cost) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        // Write your code here\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return (actual_cost - sale_amount) > 0 ? actual_cost - sale_amount : 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return Math.Max(0, actual_cost - sale_amount);",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        } else {\n            return 0;\n        }",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        long loss = actual_cost - sale_amount;\n        if (loss > 0) {\n            return loss;\n        }\n        return 0;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return Math.Max(0, actual_cost - sale_amount);",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return Math.Max(0, actual_cost - sale_amount);",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        } else {\n            return 0;\n        }",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        // Write your code here\n        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        long loss = actual_cost - sale_amount;\n        if (loss > 0) {\n            return loss;\n        }\n        return 0;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        } else {\n            return 0;\n        }",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        } else {\n            return 0;\n        }",
    "        return actual_cost - sale_amount;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        long loss = 0;\n        if (actual_cost > sale_amount) {\n            loss = actual_cost - sale_amount;\n        }\n        return loss;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost - sale_amount;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        if (actual_cost > sale_amount) {\n            return actual_cost - sale_amount;\n        }\n        return 0;",
    "        return actual_cost > sale_amount ? actual_cost - sale_amount : 0;",
    "        return actual_cost - sale_amount;"
  ]
}
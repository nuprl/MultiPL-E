{
  "name": "mbpp_751_check_min_heap",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_751_check_min_heap.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count / 2; i++) {\n            if (arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[left] < arr[i]) {\n                return false;\n            }\n            if (right < arr.Count && arr[right] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[left] < arr[i]) {\n                return false;\n            }\n            if (right < arr.Count && arr[right] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[left] < arr[i]) {\n                return false;\n            }\n            if (right < arr.Count && arr[right] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count / 2; i++) {\n            if (arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2*i + 1 < arr.Count && arr[i] > arr[2*i + 1]) {\n                return false;\n            }\n            if (2*i + 2 < arr.Count && arr[i] > arr[2*i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[left] < arr[i]) {\n                return false;\n            }\n            if (right < arr.Count && arr[right] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        int n = arr.Count;\n        for (int i = 0; i <= (n - 2) / 2; i++) {\n            if (arr[2 * i + 1] < arr[i])\n                return false;\n            if (2 * i + 2 < n && arr[2 * i + 2] < arr[i])\n                return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[left] < arr[i]) {\n                return false;\n            }\n            if (right < arr.Count && arr[right] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count / 2; i++) {\n            if (arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        int n = arr.Count;\n        for (int i = 0; i <= (n - 2) / 2; i++) {\n            if (arr[2 * i + 1] < arr[i]) {\n                return false;\n            }\n            if (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count / 2; i++) {\n            if (arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1])\n                return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2])\n                return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count) {\n                if (arr[i] > arr[2 * i + 1]) {\n                    return false;\n                }\n            }\n            if (2 * i + 2 < arr.Count) {\n                if (arr[i] > arr[2 * i + 2]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        if (arr.Count <= 1) return true;\n        var root = arr[0];\n        var left = arr.Count > 1 ? arr[1] : long.MinValue;\n        var right = arr.Count > 2 ? arr[2] : long.MinValue;\n        if (root > left || root > right) return false;\n        return CheckMinHeap(arr.Skip(1).ToList());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <02e119fae8c7450789d9d3b3aaec9899>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <02e119fae8c7450789d9d3b3aaec9899>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        // Check if the array is a min heap\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[left] < arr[i]) {\n                return false;\n            }\n            if (right < arr.Count && arr[right] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count / 2; i++) {\n            if (arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for(int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if(left < arr.Count && arr[left] < arr[i]) return false;\n            if(right < arr.Count && arr[right] < arr[i]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count / 2; i++) {\n            if (arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[left] < arr[i]) {\n                return false;\n            }\n            if (right < arr.Count && arr[right] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[left] < arr[i]) {\n                return false;\n            }\n            if (right < arr.Count && arr[right] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[2 * i + 1] < arr[i]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[2 * i + 2] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[left] < arr[i]) {\n                return false;\n            }\n            if (right < arr.Count && arr[right] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[2 * i + 1] < arr[i]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[2 * i + 2] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        int n = arr.Count;\n        for (int i = 0; i <= (n - 2) / 2; i++) {\n            if (arr[2 * i + 1] < arr[i]) {\n                return false;\n            }\n            if (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n\n            if (left < arr.Count && arr[i] > arr[left]) {\n                return false;\n            }\n\n            if (right < arr.Count && arr[i] > arr[right]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        // Write your code here\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        // Write your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <17f6e0b6c67c404abb2bd1dfe8ec2fad>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        int n = arr.Count;\n        for (int i = 0; i <= (n - 2) / 2; i++) {\n            if (arr[2 * i + 1] < arr[i]) {\n                return false;\n            }\n            if (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1])\n                return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2])\n                return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[i] > arr[left]) {\n                return false;\n            }\n            if (right < arr.Count && arr[i] > arr[right]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2*i + 1 < arr.Count && arr[i] > arr[2*i + 1]) {\n                return false;\n            }\n            if (2*i + 2 < arr.Count && arr[i] > arr[2*i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        int n = arr.Count;\n        for (int i = 0; i <= (n - 2) / 2; i++) {\n            if (arr[2 * i + 1] < arr[i]) {\n                return false;\n            }\n            if (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (i * 2 + 1 < arr.Count && arr[i] > arr[i * 2 + 1]) {\n                return false;\n            }\n            if (i * 2 + 2 < arr.Count && arr[i] > arr[i * 2 + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count / 2; i++) {\n            if (arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1])\n                return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2])\n                return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[left] < arr[i]) {\n                return false;\n            }\n            if (right < arr.Count && arr[right] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[left] < arr[i]) {\n                return false;\n            }\n            if (right < arr.Count && arr[right] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        // Write your code here\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <17f6e0b6c67c404abb2bd1dfe8ec2fad>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count / 2; i++) {\n            if (arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1])\n                return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2])\n                return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        if (arr.Count == 0) return true;\n        for (int i = 0; i < arr.Count; i++) {\n            if (2*i+1 < arr.Count && arr[i] > arr[2*i+1]) return false;\n            if (2*i+2 < arr.Count && arr[i] > arr[2*i+2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[i] > arr[left]) return false;\n            if (right < arr.Count && arr[i] > arr[right]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count / 2; i++) {\n            if (arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2*i + 1 < arr.Count && arr[i] > arr[2*i + 1]) {\n                return false;\n            }\n            if (2*i + 2 < arr.Count && arr[i] > arr[2*i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2*i+1 < arr.Count && arr[i] > arr[2*i+1]) return false;\n            if (2*i+2 < arr.Count && arr[i] > arr[2*i+2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            var left = 2 * i + 1;\n            var right = 2 * i + 2;\n            if (left < arr.Count && arr[i] > arr[left]) {\n                return false;\n            }\n            if (right < arr.Count && arr[i] > arr[right]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count / 2; i++) {\n            if (arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1])\n                return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2])\n                return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count / 2; i++) {\n            if (arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[2 * i + 1] < arr[i]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[2 * i + 2] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[left] < arr[i]) {\n                return false;\n            }\n            if (right < arr.Count && arr[right] < arr[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2*i + 1 < arr.Count && arr[i] > arr[2*i + 1]) {\n                return false;\n            }\n            if (2*i + 2 < arr.Count && arr[i] > arr[2*i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2*i+1 < arr.Count && arr[i] > arr[2*i+1]) {\n                return false;\n            }\n            if (2*i+2 < arr.Count && arr[i] > arr[2*i+2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (i * 2 + 1 < arr.Count && arr[i] > arr[i * 2 + 1]) {\n                return false;\n            }\n            if (i * 2 + 2 < arr.Count && arr[i] > arr[i * 2 + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510007,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
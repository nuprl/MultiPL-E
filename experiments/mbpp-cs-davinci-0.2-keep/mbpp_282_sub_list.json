{
  "name": "mbpp_282_sub_list",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to subtract two lists element-wise.\n    public static List<long> SubList(List<long> nums1, List<long> nums2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_282_sub_list.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SubList((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)4L, (long)5L, (long)6L}))).Equals((new List<long>(new long[]{(long)-3L, (long)-3L, (long)-3L}))));\n    Debug.Assert(SubList((new List<long>(new long[]{(long)1L, (long)2L})), (new List<long>(new long[]{(long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)-2L, (long)-2L}))));\n    Debug.Assert(SubList((new List<long>(new long[]{(long)90L, (long)120L})), (new List<long>(new long[]{(long)50L, (long)70L}))).Equals((new List<long>(new long[]{(long)40L, (long)50L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> res = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            res.Add(nums1[i] - nums2[i]);\n        }\n        return res;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var res = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            res.Add(nums1[i] - nums2[i]);\n        }\n        return res;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        return nums1.Zip(nums2, (a, b) => a - b).ToList();",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        int n = nums1.Count;\n        int m = nums2.Count;\n        List<long> res = new List<long>();\n        for (int i = 0; i < Math.Max(n, m); i++) {\n            long a = i < n ? nums1[i] : 0;\n            long b = i < m ? nums2[i] : 0;\n            res.Add(a - b);\n        }\n        return res;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> nums3 = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            nums3.Add(nums1[i] - nums2[i]);\n        }\n        return nums3;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var len = Math.Min(nums1.Count, nums2.Count);\n        var res = new List<long>();\n        for (int i = 0; i < len; i++) {\n            res.Add(nums1[i] - nums2[i]);\n        }\n        return res;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        // TODO: Implement this function.\n        return null;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = 0; i < nums1.Count; i++) {\n            result.Add(nums1[i] - nums2[i]);\n        }\n        return result;"
  ]
}
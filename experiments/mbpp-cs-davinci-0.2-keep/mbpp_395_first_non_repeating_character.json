{
  "name": "mbpp_395_first_non_repeating_character",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_395_first_non_repeating_character.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var charCount = new Dictionary<char, int>();\n        var charIndex = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            var c = str1[i];\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n                charIndex[c] = i;\n            }\n        }\n        var minIndex = str1.Length;\n        var minChar = '\\0';\n        foreach (var kvp in charCount) {\n            if (kvp.Value == 1 && charIndex[kvp.Key] < minIndex) {\n                minIndex = charIndex[kvp.Key];\n                minChar = kvp.Key;\n            }\n        }\n        return minChar.ToString();",
    "        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is in the dictionary, increment its count\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            } else {\n                // Otherwise, add it to the dictionary with a count of 1\n                charCount.Add(str1[i], 1);\n            }\n        }\n        // Loop through the string again\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is in the dictionary and its count is 1, return it\n            if (charCount.ContainsKey(str1[i]) && charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;",
    "        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";",
    "        // create a dictionary to store the character and the number of times it appears\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // iterate through the string\n        foreach (char c in str1) {\n            // if the character is not in the dictionary\n            if (!charCount.ContainsKey(c)) {\n                // add it to the dictionary\n                charCount.Add(c, 1);\n            } else {\n                // if it is in the dictionary, increment the count\n                charCount[c]++;\n            }\n        }\n        // iterate through the string again\n        foreach (char c in str1) {\n            // if the character appears only once\n            if (charCount[c] == 1) {\n                // return it\n                return c.ToString();\n            }\n        }\n        // if no character appears only once, return null\n        return null;",
    "        // Create a dictionary to store the count of each character\n        Dictionary<char, int> count = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (count.ContainsKey(c)) {\n                count[c]++;\n            } else {\n                count.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (count[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;",
    "        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";",
    "        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";",
    "        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;",
    "        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;",
    "        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;",
    "        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add the count of each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return an empty string\n        return \"\";",
    "        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add the character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";",
    "        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";",
    "        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;",
    "        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";",
    "        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add the character to the dictionary\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            } else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        // Loop through the string and return the first character that has a count of 1\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If there is no character that has a count of 1, return the empty string\n        return \"\";",
    "        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // Otherwise, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Iterate through the string again\n        foreach (char c in str1) {\n            // If the character count is 1, return it\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;",
    "        // convert string to char array\n        char[] chars = str1.ToCharArray();\n        // create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // iterate through the char array\n        foreach (char c in chars) {\n            // if the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // if the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // iterate through the char array again\n        foreach (char c in chars) {\n            // if the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // if no character has a count of 1, return null\n        return null;",
    "        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";",
    "        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is already in the dictionary, increment the count\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            }\n            // Otherwise, add the character to the dictionary with a count of 1\n            else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        // Iterate through the string again\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character has a count of 1, return it\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;"
  ]
}
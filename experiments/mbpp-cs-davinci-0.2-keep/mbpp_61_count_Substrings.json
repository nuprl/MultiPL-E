{
  "name": "mbpp_61_count_Substrings",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_61_count_Substrings.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += (int)s[k] - (int)'0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                if (sub.Sum(c => c - '0') == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        int n = s.Length;\n        long res = 0;\n        for (int i = 0; i < n; i++) {\n            int sum = 0;\n            for (int j = i; j < n; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    res++;\n                }\n            }\n        }\n        return res;",
    "        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                if (SumDigits(s.Substring(i, j - i + 1)) == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                if (s.Substring(i, j - i + 1).SumDigits() == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                int sum = 0;\n                foreach (char c in sub) {\n                    sum += (int)char.GetNumericValue(c);\n                }\n                if (sum == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;"
  ]
}
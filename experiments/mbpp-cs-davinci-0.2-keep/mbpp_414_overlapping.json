{
  "name": "mbpp_414_overlapping",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether any value in a sequence exists in a sequence or not.\n    public static bool Overlapping(List<long> list1, List<long> list2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_414_overlapping.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Overlapping((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L})), (new List<long>(new long[]{(long)6L, (long)7L, (long)8L, (long)9L}))) == (false));\n    Debug.Assert(Overlapping((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)4L, (long)5L, (long)6L}))) == (false));\n    Debug.Assert(Overlapping((new List<long>(new long[]{(long)1L, (long)4L, (long)5L})), (new List<long>(new long[]{(long)1L, (long)4L, (long)5L}))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here\n        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        foreach (long i in list1) {\n            if (list2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        return list1.Any(x => list2.Contains(x));",
    "        foreach(long item in list1) {\n            if(list2.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>(list1);\n        foreach (long item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        // Write your code here\n        HashSet<long> set = new HashSet<long>();\n        foreach(long i in list1) {\n            set.Add(i);\n        }\n        foreach(long i in list2) {\n            if(set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        return list1.Any(x => list2.Contains(x));",
    "        // Your code goes here\n        return list1.Any(x => list2.Contains(x));",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        foreach (long item in list1) {\n            if (list2.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long item in list1) {\n            set.Add(item);\n        }\n        foreach (long item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        foreach (long item in list1) {\n            if (list2.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        // Write your code here\n        return list1.Any(x => list2.Contains(x));",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        return list1.Any(x => list2.Contains(x));",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        foreach (long i in list1) {\n            if (list2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        foreach (long num in list1) {\n            if (list2.Contains(num)) {\n                return true;\n            }\n        }\n        return false;",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> hashset = new HashSet<long>();\n        foreach (long num in list1) {\n            hashset.Add(num);\n        }\n        foreach (long num in list2) {\n            if (hashset.Contains(num)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        return list1.Any(x => list2.Contains(x));",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        // Write your code here\n        return list1.Any(x => list2.Contains(x));",
    "        return list1.Any(x => list2.Contains(x));",
    "        return list1.Any(list2.Contains);",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        return list1.Any(x => list2.Contains(x));",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>(list1);\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        foreach (long item in list1) {\n            if (list2.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        return list1.Any(x => list2.Contains(x));",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        return list1.Any(list2.Contains);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        foreach (long item1 in list1) {\n            foreach (long item2 in list2) {\n                if (item1 == item2) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        foreach (long num in list1) {\n            if (list2.Contains(num)) {\n                return true;\n            }\n        }\n        return false;",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        // Your code goes here\n        HashSet<long> set = new HashSet<long>();\n        foreach (var item in list1) {\n            set.Add(item);\n        }\n        foreach (var item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (var item in list1) {\n            set.Add(item);\n        }\n        foreach (var item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        return list1.Any(x => list2.Contains(x));",
    "        foreach (var item in list1) {\n            if (list2.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in list1) {\n            set.Add(num);\n        }\n        foreach (long num in list2) {\n            if (set.Contains(num)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        // Your code goes here\n        return list1.Any(list2.Contains);",
    "        return list1.Any(x => list2.Contains(x));",
    "        // Convert the lists to sets\n        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        // Check if the intersection of the sets is empty\n        return set1.Intersect(set2).Any();",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>(list1);\n        foreach (long item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        return list1.Any(list2.Contains);",
    "        // Write your code here\n        return list1.Any(x => list2.Contains(x));",
    "        return list1.Any(list2.Contains);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Any(x => set2.Contains(x));",
    "        return list1.Any(list2.Contains);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in list1) {\n            set.Add(num);\n        }\n        foreach (long num in list2) {\n            if (set.Contains(num)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        return list1.Any(x => list2.Contains(x));",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        // return list1.Intersect(list2).Any();\n        return list1.Any(list2.Contains);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        // Write your code here\n        HashSet<long> hs = new HashSet<long>();\n        foreach (long l in list1) {\n            hs.Add(l);\n        }\n        foreach (long l in list2) {\n            if (hs.Contains(l)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        return list1.Any(x => list2.Contains(x));",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        // Write your code here\n        HashSet<long> set = new HashSet<long>();\n        foreach (long item in list1) {\n            set.Add(item);\n        }\n        foreach (long item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        HashSet<long> set = new HashSet<long>();\n        foreach (long l in list1) {\n            set.Add(l);\n        }\n        foreach (long l in list2) {\n            if (set.Contains(l)) {\n                return true;\n            }\n        }\n        return false;",
    "        // Write your code here\n        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            if (set.Contains(i)) {\n                return true;\n            }\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n            set.Add(i);\n        }\n        return false;",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        var set1 = new HashSet<long>(list1);\n        var set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long item in list1) {\n            set.Add(item);\n        }\n        foreach (long item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long item in list1) {\n            set.Add(item);\n        }\n        foreach (long item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach(long i in list1) {\n            set.Add(i);\n        }\n        foreach(long i in list2) {\n            if(set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        return list1.Any(x => list2.Contains(x));",
    "        foreach(long i in list1) {\n            foreach(long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        foreach (var item in list1) {\n            if (list2.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        foreach (long i in set1) {\n            if (set2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        // return true if any value in list1 is in list2\n        return list1.Any(x => list2.Contains(x));",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        return list1.Any(x => list2.Contains(x));",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Any(x => set2.Contains(x));",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        for (int i = 0; i < list1.Count; i++) {\n            for (int j = 0; j < list2.Count; j++) {\n                if (list1[i] == list2[j]) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        return list1.Any(x => list2.Contains(x));",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long item in list1) {\n            set.Add(item);\n        }\n        foreach (long item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long item in list1) {\n            set.Add(item);\n        }\n        foreach (long item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>(list1);\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        var set1 = new HashSet<long>(list1);\n        var set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        // Your code here\n        return list1.Any(list2.Contains);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        // return true if any value in list1 is in list2\n        foreach (long i in list1) {\n            if (list2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        // for each element in list1\n        foreach (long element in list1) {\n            // if element is in list2\n            if (list2.Contains(element)) {\n                // return true\n                return true;\n            }\n        }\n        // return false\n        return false;",
    "        return list1.Any(x => list2.Contains(x));",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        // return list1.Any(list2.Contains);\n        foreach (long i in list1) {\n            if (list2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        // if list1 is empty, return false\n        if (list1.Count == 0) {\n            return false;\n        }\n        // if list2 is empty, return false\n        if (list2.Count == 0) {\n            return false;\n        }\n        // if list1 is not empty, check if any value in list1 is in list2\n        foreach (long item in list1) {\n            if (list2.Contains(item)) {\n                return true;\n            }\n        }\n        // if no value in list1 is in list2, return false\n        return false;",
    "        foreach (long item in list1) {\n            if (list2.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        foreach (long item1 in list1) {\n            foreach (long item2 in list2) {\n                if (item1 == item2) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        foreach (long i in list1) {\n            foreach (long j in list2) {\n                if (i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        foreach (long num in list1) {\n            if (list2.Contains(num)) {\n                return true;\n            }\n        }\n        return false;",
    "        // Write your code here\n        return list1.Any(list2.Contains);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        foreach (long item in list1) {\n            if (list2.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>(list1);\n        foreach (long item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long l in list1) {\n            set.Add(l);\n        }\n        foreach (long l in list2) {\n            if (set.Contains(l)) {\n                return true;\n            }\n        }\n        return false;",
    "        foreach (long item in list1) {\n            if (list2.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        return list1.Any(x => list2.Contains(x));",
    "        HashSet<long> set = new HashSet<long>(list1);\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>(list1);\n        foreach (long item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        foreach(long i in list1) {\n            foreach(long j in list2) {\n                if(i == j) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (var item in list1) {\n            set.Add(item);\n        }\n        foreach (var item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>(list1);\n        foreach (long item in list2) {\n            if (set.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        foreach (long item1 in list1) {\n            foreach (long item2 in list2) {\n                if (item1 == item2) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in list1) {\n            set.Add(num);\n        }\n        foreach (long num in list2) {\n            if (set.Contains(num)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long num in list1) {\n            set.Add(num);\n        }\n        foreach (long num in list2) {\n            if (set.Contains(num)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        HashSet<long> set = new HashSet<long>(list1);\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        return list1.Any(x => list2.Contains(x));",
    "        // return true if any value in list1 is in list2\n        foreach (long i in list1) {\n            if (list2.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Any(x => set2.Contains(x));",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set1 = new HashSet<long>(list1);\n        HashSet<long> set2 = new HashSet<long>(list2);\n        return set1.Overlaps(set2);",
    "        // Write your code here\n        foreach (long item in list1) {\n            if (list2.Contains(item)) {\n                return true;\n            }\n        }\n        return false;",
    "        return list1.Any(x => list2.Contains(x));",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;",
    "        HashSet<long> set = new HashSet<long>();\n        foreach (long i in list1) {\n            set.Add(i);\n        }\n        foreach (long i in list2) {\n            if (set.Contains(i)) {\n                return true;\n            }\n        }\n        return false;"
  ]
}
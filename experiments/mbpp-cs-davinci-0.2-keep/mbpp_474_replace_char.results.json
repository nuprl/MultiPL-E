{
  "name": "mbpp_474_replace_char",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_474_replace_char.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            }\n            else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510045,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        if (str1 == null) {\n            return null;\n        }\n        if (ch == null) {\n            return str1;\n        }\n        if (newch == null) {\n            newch = \"\";\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510045,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder(str1);\n        for (int i = 0; i < sb.Length; i++) {\n            if (sb[i] == ch[0]) {\n                sb[i] = newch[0];\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        if (str1 == null)\n            return null;\n        if (ch == null || newch == null)\n            return str1;\n        if (ch.Length != 1 || newch.Length != 1)\n            return str1;\n        char[] str = str1.ToCharArray();\n        int len = str.Length;\n        for (int i = 0; i < len; i++) {\n            if (str[i] == ch[0])\n                str[i] = newch[0];\n        }\n        return new string(str);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510045,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Convert string to char array.\n        char[] str = str1.ToCharArray();\n        // Iterate through each character in the string.\n        for (int i = 0; i < str.Length; i++) {\n            // If the character is equal to ch, replace it with newch.\n            if (str[i] == ch[0]) {\n                str[i] = newch[0];\n            }\n        }\n        // Convert char array to string and return it.\n        return new string(str);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Replace all occurrences of ch with newch.\n        // For example, ReplaceChar(\"Hello\", \"e\", \"a\") returns \"Hallo\".\n        // If ch is not found in str1, return str1.\n        // If ch is empty, return str1.\n        // If str1 is empty, return str1.\n        // If ch is longer than 1 character, return str1.\n        // If newch is longer than 1 character, return str1.\n        // If ch is the same as newch, return str1.\n        // If ch is not a character, return str1.\n        // If newch is not a character, return str1.\n        // If str1 is not a string, return str1.\n        // If ch is not a string, return str1.\n        // If newch is not a string, return str1.\n        // If ch is null, return str1.\n        // If newch is null, return str1.\n        // If str1 is null, return str1.\n        // If ch is undefined, return str1.\n        // If newch is undefined, return str1.\n        // If str1 is undefined, return str1.\n        // If ch is NaN, return str1.\n        // If newch is NaN, return str1.\n        // If str1 is NaN, return str1.\n        // If ch is not a number, return str1.\n        // If newch is not a number, return str1.\n        // If str1 is not a number, return str1.\n        // If ch is not an integer, return str1.\n        // If newch is not an integer, return str1.\n        // If str1 is not an integer, return str1.\n        // If ch is not a finite number, return str1.\n        // If newch is not a finite number, return str1.\n        // If str1 is not a finite number, return str1.\n        // If ch is not a boolean, return str1.\n        // If newch is not a boolean, return str1.\n        // If str1 is not a boolean, return str1.\n        // If ch is not an array, return str1.\n        // If newch is\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122400,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwu_0yzv_.cs(10,26): error CS0161: 'Problem.ReplaceChar(string, string, string)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Write your code here.\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        var sb = new StringBuilder();\n        foreach (var c in str1) {\n            if (c == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Replace all occurrences of ch with newch.\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        foreach (char c in str1) {\n            if (c == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        char[] str = str1.ToCharArray();\n        for (int i = 0; i < str.Length; i++) {\n            if (str[i] == ch[0]) {\n                str[i] = newch[0];\n            }\n        }\n        return new string(str);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        char[] chars = str1.ToCharArray();\n        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i] == ch[0]) {\n                chars[i] = newch[0];\n            }\n        }\n        return new string(chars);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder str2 = new StringBuilder(str1);\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2[i] = newch[0];\n            }\n        }\n        return str2.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // TODO: Implement\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f87acd252a4349edbead80e64b1ebc15>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f87acd252a4349edbead80e64b1ebc15>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        if (str1.Length == 0) {\n            return \"\";\n        }\n        if (str1[0] == ch[0]) {\n            return newch + ReplaceChar(str1.Substring(1), ch, newch);\n        }\n        else {\n            return str1[0] + ReplaceChar(str1.Substring(1), ch, newch);\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Convert string to char array.\n        char[] charArray = str1.ToCharArray();\n        // Loop through each character in char array.\n        for (int i = 0; i < charArray.Length; i++) {\n            // If character is equal to ch, replace with newch.\n            if (charArray[i] == ch[0]) {\n                charArray[i] = newch[0];\n            }\n        }\n        // Return new string.\n        return new string(charArray);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Write your code here.\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Replace the character ch with newch in str1.\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Create a new stringbuilder object.\n        StringBuilder sb = new StringBuilder();\n        // Loop through each character in the string.\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is the character we want to replace.\n            if (str1[i] == ch[0]) {\n                // Add the new character to the stringbuilder.\n                sb.Append(newch);\n            } else {\n                // Add the character to the stringbuilder.\n                sb.Append(str1[i]);\n            }\n        }\n        // Return the stringbuilder as a string.\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Write your code here.\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Convert the string to a char array.\n        char[] arr = str1.ToCharArray();\n        // Loop through the array.\n        for (int i = 0; i < arr.Length; i++) {\n            // If the current character is the character to replace.\n            if (arr[i] == ch[0]) {\n                // Replace the character.\n                arr[i] = newch[0];\n            }\n        }\n        // Return the string.\n        return new string(arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Write your code here.\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        var sb = new StringBuilder();\n        foreach (var c in str1) {\n            if (c.ToString() == ch) {\n                sb.Append(newch);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Replace all instances of ch in str1 with newch.\n        // Assume that ch and newch are of the same length.\n        // Assume that ch is a single character.\n        // Assume that newch is a single character.\n        // Assume that str1 is not null.\n        // Assume that ch is not null.\n        // Assume that newch is not null.\n        // Assume that ch is not empty.\n        // Assume that newch is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n        // Assume that str1 is not empty.\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122400,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9dh7mnmx.cs(10,26): error CS0161: 'Problem.ReplaceChar(string, string, string)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        if (str1 == null)\n            return null;\n        if (str1.Length == 0)\n            return \"\";\n        if (ch == null || newch == null)\n            return str1;\n        if (ch.Length != 1 || newch.Length != 1)\n            return str1;\n        char[] str = str1.ToCharArray();\n        for (int i = 0; i < str.Length; i++) {\n            if (str[i] == ch[0])\n                str[i] = newch[0];\n        }\n        return new string(str);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder(str1);\n        for (int i = 0; i < sb.Length; i++) {\n            if (sb[i] == ch[0]) {\n                sb[i] = newch[0];\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        if (str1 == null) return null;\n        if (ch == null) return str1;\n        if (newch == null) newch = \"\";\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        var sb = new StringBuilder();\n        foreach (char c in str1) {\n            if (c.ToString() == ch) {\n                sb.Append(newch);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Convert string to char array.\n        char[] charArray = str1.ToCharArray();\n        // Loop through the array.\n        for (int i = 0; i < charArray.Length; i++) {\n            // If the character matches the one we want to replace.\n            if (charArray[i] == ch[0]) {\n                // Replace it.\n                charArray[i] = newch[0];\n            }\n        }\n        // Return the new string.\n        return new string(charArray);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Write your code here.\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Replace all occurrences of ch in str1 with newch.\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122400,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // TODO: Implement this function.\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122400,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0791de5276ba4e57a8864539279f773b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0791de5276ba4e57a8864539279f773b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Replace all characters in str1 that are the same as ch with newch.\n        // For example, if str1 = \"abcdefg\" and ch = \"c\" and newch = \"x\",\n        // then the result should be \"abxdxfg\".\n        //\n        // Hint: Use the Split() function.\n        //\n        // Your code here.\n        string[] str2 = str1.Split(ch.ToCharArray());\n        string result = \"\";\n        for (int i = 0; i < str2.Length; i++) {\n            result += str2[i];\n            if (i != str2.Length - 1) {\n                result += newch;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122400,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Convert the string to a char array.\n        char[] str = str1.ToCharArray();\n        // Loop through the string.\n        for (int i = 0; i < str.Length; i++) {\n            // If the character is the one we want to replace.\n            if (str[i].ToString() == ch) {\n                // Replace it.\n                str[i] = Convert.ToChar(newch);\n            }\n        }\n        // Return the new string.\n        return new string(str);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122400,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder(str1);\n        for (int i = 0; i < sb.Length; i++) {\n            if (sb[i] == ch[0]) {\n                sb[i] = newch[0];\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        foreach (char c in str1) {\n            if (c.ToString() == ch) {\n                str2 += newch;\n            } else {\n                str2 += c;\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122400,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        var sb = new StringBuilder();\n        foreach (var c in str1) {\n            if (c == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        var sb = new StringBuilder();\n        foreach (var c in str1) {\n            if (c == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        var sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // TODO: Implement this function.\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122400,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0791de5276ba4e57a8864539279f773b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0791de5276ba4e57a8864539279f773b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string newstr = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                newstr += newch;\n            } else {\n                newstr += str1[i];\n            }\n        }\n        return newstr;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            }\n            else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510045,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // TODO: Implement this function.\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder(str1);\n        for (int i = 0; i < sb.Length; i++) {\n            if (sb[i] == ch[0]) {\n                sb[i] = newch[0];\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Write your code here.\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // TODO: Implement this function.\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        foreach (char c in str1) {\n            if (c.ToString() == ch) {\n                sb.Append(newch);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder(str1);\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb[i] = newch[0];\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Write your code here.\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Convert the string to char array.\n        char[] arr = str1.ToCharArray();\n        // Convert the char to string.\n        string str2 = ch.ToString();\n        // Convert the char to string.\n        string str3 = newch.ToString();\n        // Replace the char.\n        string str4 = str1.Replace(str2, str3);\n        // Return the string.\n        return str4;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122401,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        foreach (char c in str1) {\n            if (c.ToString() == ch) {\n                result += newch;\n            } else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122400,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        var sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122398,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                result += newch;\n            } else {\n                result += str1[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        // Write your code here.\n        return str1.Replace(ch, newch);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                sb.Append(newch);\n            } else {\n                sb.Append(str1[i]);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1[i] == ch[0]) {\n                str2 += newch;\n            } else {\n                str2 += str1[i];\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace characters in a string.\n    public static string ReplaceChar(string str1, string ch, string newch) {\n        StringBuilder sb = new StringBuilder(str1);\n        for (int i = 0; i < sb.Length; i++) {\n            if (sb[i] == ch[0]) {\n                sb[i] = newch[0];\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceChar((\"polygon\"), (\"y\"), (\"l\")).Equals((\"pollgon\")));\n    Debug.Assert(ReplaceChar((\"character\"), (\"c\"), (\"a\")).Equals((\"aharaater\")));\n    Debug.Assert(ReplaceChar((\"python\"), (\"l\"), (\"a\")).Equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_566_sum_digits",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_566_sum_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c8664291058b40b0827d0c2ec45453bd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c8664291058b40b0827d0c2ec45453bd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    public static long SumDigits(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumDigits((345L)) == (12L));\n    Debug.Assert(SumDigits((12L)) == (3L));\n    Debug.Assert(SumDigits((97L)) == (16L));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_733_find_first_occurrence",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_733_find_first_occurrence.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (x == A[mid]) {\n                result = mid;\n                right = mid - 1;\n            } else if (x < A[mid]) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpphqak57w.cs(16,24): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpphqak57w.cs(19,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (x == A[(int)mid]) {\n                result = mid;\n                hi = mid - 1;\n            }\n            else if (x < A[(int)mid]) {\n                hi = mid - 1;\n            }\n            else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                high = mid - 1;\n            } else if (A[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0;\n        long r = A.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (A[m] < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (A[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpz2fs6h5x.cs(15,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpz2fs6h5x.cs(21,15): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this method\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <60cc3b78d5be43c19291ea2d03d5c1a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <60cc3b78d5be43c19291ea2d03d5c1a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddeca92114dd4eb39bc98ed3c8311141>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddeca92114dd4eb39bc98ed3c8311141>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (x == A[(int)mid]) {\n                result = mid;\n                high = mid - 1;\n            } else if (x < A[(int)mid]) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (x == A[(int)mid]) {\n                result = mid;\n                high = mid - 1;\n            } else if (x < A[(int)mid]) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0, r = A.Count - 1;\n        long result = -1;\n        while (l <= r) {\n            long m = l + (r - l) / 2;\n            if (A[m] >= x) {\n                result = m;\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5cvey3bz.cs(15,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <17fa16dfe930443ebc728fe0cd892fda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <17fa16dfe930443ebc728fe0cd892fda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO - you fill in here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28178b867088470a85f0bf4802b37dae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28178b867088470a85f0bf4802b37dae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (x == A[(int)mid]) {\n                result = mid;\n                high = mid - 1;\n            } else if (x < A[(int)mid]) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        int low = 0;\n        int high = A.Count - 1;\n        int result = -1;\n        while (low <= high) {\n            int mid = (low + high) / 2;\n            if (x == A[mid]) {\n                result = mid;\n                high = mid - 1;\n            } else if (x < A[mid]) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = low + (high - low) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                high = mid - 1;\n            } else if (A[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function.\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bde27368e3a84546ad2e43cf812ebbcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bde27368e3a84546ad2e43cf812ebbcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0, hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long mid = 0;\n        long result = -1;\n        while (low <= high) {\n            mid = (low + high) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                high = mid - 1;\n            } else if (A[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (x < A[(int)mid]) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        while (lo < hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[mid] < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid;\n            }\n        }\n        if (A[lo] == x) {\n            return lo;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg2v5gecj.cs(15,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpg2v5gecj.cs(21,15): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                high = mid - 1;\n            } else if (A[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (x == A[(int)mid]) {\n                result = mid;\n                high = mid - 1;\n            }\n            else if (x < A[(int)mid]) {\n                high = mid - 1;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0, r = A.Count - 1;\n        long result = -1;\n        while (l <= r) {\n            long m = l + (r - l) / 2;\n            if (A[m] >= x) {\n                result = m;\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5cvey3bz.cs(15,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (A[mid] == x) {\n                if (mid == 0 || A[mid - 1] != x) {\n                    return mid;\n                }\n                right = mid - 1;\n            } else if (A[mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnt6s3_xo.cs(15,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpnt6s3_xo.cs(16,35): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpnt6s3_xo.cs(20,26): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0, r = A.Count - 1;\n        while (l < r) {\n            long m = l + (r - l) / 2;\n            if (A[m] < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return A[l] == x ? l : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122527,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpta0qjf92.cs(14,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpta0qjf92.cs(20,18): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                hi = mid - 1;\n            } else if (A[(int)mid] > x) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                high = mid - 1;\n            } else if (A[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        while (lo < hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[mid] >= x) {\n                hi = mid;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return A[lo] == x ? lo : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplhu8xgmj.cs(15,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmplhu8xgmj.cs(21,18): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddeca92114dd4eb39bc98ed3c8311141>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddeca92114dd4eb39bc98ed3c8311141>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] < x) {\n                lo = mid + 1;\n            } else if (A[(int)mid] > x) {\n                hi = mid - 1;\n            } else {\n                if (mid == 0 || A[(int)mid - 1] < x) {\n                    return mid;\n                } else {\n                    hi = mid - 1;\n                }\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                high = mid - 1;\n            } else if (A[(int)mid] < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0, right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                high = mid - 1;\n            } else if (A[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                high = mid - 1;\n            } else if (A[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (x == A[(int)mid]) {\n                result = mid;\n                high = mid - 1;\n            } else if (x < A[(int)mid]) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0;\n        long r = A.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (A[m] < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return A[l] == x ? l : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122527,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt4p1lgx7.cs(15,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpt4p1lgx7.cs(21,18): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function.\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bde27368e3a84546ad2e43cf812ebbcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bde27368e3a84546ad2e43cf812ebbcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0, r = A.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (A[m] < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return A[l] == x ? l : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwdhe8xn0.cs(14,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpwdhe8xn0.cs(20,18): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                high = mid - 1;\n            } else if (A[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0, r = A.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (A[m] < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return A[l] == x ? l : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwdhe8xn0.cs(14,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpwdhe8xn0.cs(20,18): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0, hi = A.Count - 1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] == x) {\n                if (mid == 0 || A[(int)mid - 1] != x) {\n                    return mid;\n                } else {\n                    hi = mid - 1;\n                }\n            } else if (A[(int)mid] < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Binary search\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61ad52287d9345d5827917787f0c3951>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61ad52287d9345d5827917787f0c3951>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9a9a9cb4c3504ca48eb67dbde9084dee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9a9a9cb4c3504ca48eb67dbde9084dee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddeca92114dd4eb39bc98ed3c8311141>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddeca92114dd4eb39bc98ed3c8311141>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0, r = A.Count - 1;\n        while (l <= r) {\n            long m = l + (r - l) / 2;\n            if (A[m] >= x)\n                r = m - 1;\n            else\n                l = m + 1;\n        }\n        if (l < A.Count && A[l] == x)\n            return l;\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpq55v1mhm.cs(14,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpq55v1mhm.cs(19,30): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                high = mid - 1;\n            } else if (A[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0, r = A.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (A[m] == x) {\n                if (m == 0 || A[m - 1] != x)\n                    return m;\n                else\n                    r = m - 1;\n            } else if (A[m] > x)\n                r = m - 1;\n            else\n                l = m + 1;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw2t8vpc8.cs(14,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpw2t8vpc8.cs(15,33): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpw2t8vpc8.cs(19,26): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0, r = A.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (A[m] < x)\n                l = m + 1;\n            else\n                r = m;\n        }\n        return A[l] == x ? l : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqnmb5q7k.cs(14,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpqnmb5q7k.cs(19,18): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                high = mid - 1;\n            } else if (A[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddeca92114dd4eb39bc98ed3c8311141>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddeca92114dd4eb39bc98ed3c8311141>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (x == A[(int)mid]) {\n                result = mid;\n                high = mid - 1;\n            }\n            else if (x < A[(int)mid]) {\n                high = mid - 1;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0;\n        long r = A.Count - 1;\n        long m = 0;\n        while (l <= r) {\n            m = l + (r - l) / 2;\n            if (A[(int)m] == x) {\n                if (m == 0 || A[(int)m - 1] != x) {\n                    return m;\n                } else {\n                    r = m - 1;\n                }\n            } else if (A[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (x == A[(int)mid]) {\n                result = mid;\n                high = mid - 1;\n            } else if (x < A[(int)mid]) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5tf143n4.cs(16,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp5tf143n4.cs(19,26): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function.\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bde27368e3a84546ad2e43cf812ebbcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bde27368e3a84546ad2e43cf812ebbcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddeca92114dd4eb39bc98ed3c8311141>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddeca92114dd4eb39bc98ed3c8311141>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        int n = A.Count;\n        int low = 0;\n        int high = n - 1;\n        int result = -1;\n        while (low <= high) {\n            int mid = (low + high) / 2;\n            if (x == A[mid]) {\n                result = mid;\n                high = mid - 1;\n            } else if (x < A[mid]) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (x == A[(int)mid]) {\n                result = mid;\n                high = mid - 1;\n            } else if (x < A[(int)mid]) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[mid] == x) {\n                if (mid == 0 || A[mid - 1] != x) {\n                    return mid;\n                } else {\n                    right = mid - 1;\n                }\n            } else if (A[mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpth6ucar2.cs(15,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpth6ucar2.cs(16,35): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpth6ucar2.cs(21,26): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0, r = A.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (A[m] == x) {\n                ans = m;\n                r = m - 1;\n            } else if (A[m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb1jzh8sd.cs(15,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpb1jzh8sd.cs(18,26): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (x == A[(int)mid]) {\n                result = mid;\n                high = mid - 1;\n            } else if (x < A[(int)mid]) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO - you fill in here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28178b867088470a85f0bf4802b37dae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28178b867088470a85f0bf4802b37dae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0;\n        long r = A.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (A[m] < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (A[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpz2fs6h5x.cs(15,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpz2fs6h5x.cs(21,15): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9a9a9cb4c3504ca48eb67dbde9084dee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9a9a9cb4c3504ca48eb67dbde9084dee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long mid = -1;\n        while (left <= right) {\n            mid = (left + right) / 2;\n            if (A[(int)mid] == x) {\n                if (mid == 0 || A[(int)mid - 1] != x) {\n                    return mid;\n                }\n                else {\n                    right = mid - 1;\n                }\n            }\n            else if (A[(int)mid] > x) {\n                right = mid - 1;\n            }\n            else {\n                left = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement your solution here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e737caf7cca54e41b783b23b2fc15bda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e737caf7cca54e41b783b23b2fc15bda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9a9a9cb4c3504ca48eb67dbde9084dee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9a9a9cb4c3504ca48eb67dbde9084dee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        while (left < right) {\n            long mid = (left + right) / 2;\n            if (A[mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        return A[left] == x ? left : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps2lq5c3q.cs(15,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmps2lq5c3q.cs(21,18): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] == x) {\n                if (mid == 0 || A[(int)mid - 1] != x) {\n                    return mid;\n                }\n                hi = mid - 1;\n            } else if (A[(int)mid] > x) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        int n = A.Count;\n        int low = 0, high = n - 1;\n        int ans = -1;\n        while (low <= high) {\n            int mid = low + (high - low) / 2;\n            if (A[mid] >= x) {\n                ans = mid;\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0, right = A.Count - 1;\n        while (left < right) {\n            long mid = (left + right) / 2;\n            if (A[mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        return A[left] == x ? left : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5u1vjoz1.cs(14,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp5u1vjoz1.cs(20,18): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long l = 0, r = A.Count - 1;\n        long res = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (A[m] == x) {\n                res = m;\n                r = m - 1;\n            } else if (A[m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp23nfv8we.cs(15,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp23nfv8we.cs(18,26): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4929e009d7a14988a80969946211be45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        int lo = 0;\n        int hi = A.Count - 1;\n        while (lo <= hi) {\n            int mid = lo + (hi - lo) / 2;\n            if (A[mid] < x) {\n                lo = mid + 1;\n            } else if (A[mid] > x) {\n                hi = mid - 1;\n            } else {\n                if (mid == 0 || A[mid - 1] != x) {\n                    return mid;\n                } else {\n                    hi = mid - 1;\n                }\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long low = 0;\n        long high = A.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                high = mid - 1;\n            } else if (A[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <231c178a399649e19aeec51a7341a1d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <231c178a399649e19aeec51a7341a1d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long lo = 0;\n        long hi = A.Count - 1;\n        long result = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (A[(int)mid] >= x) {\n                result = mid;\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0, right = A.Count - 1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (A[mid] == x) {\n                if (mid == 0 || A[mid - 1] != x) {\n                    return mid;\n                }\n                right = mid - 1;\n            } else if (A[mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpajzys1jd.cs(14,19): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpajzys1jd.cs(15,35): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpajzys1jd.cs(19,26): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509924,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        long left = 0;\n        long right = A.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (A[(int)mid] == x) {\n                result = mid;\n                right = mid - 1;\n            } else if (A[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        return FindFirstOccurrence(A, x, 0, A.Count - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1666122528,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9r3d_552.cs(11,16): error CS1501: No overload for method 'FindFirstOccurrence' takes 4 arguments\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the index of the first occurrence of a given number in a sorted array.\n    public static long FindFirstOccurrence(List<long> A, long x) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)5L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (1L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)3L, (long)5L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (5L)) == (2L));\n    Debug.Assert(FindFirstOccurrence((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)5L, (long)6L, (long)6L, (long)8L, (long)9L, (long)9L, (long)9L})), (6L)) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509925,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <523b45d8a3954dbda1c65f8e1084aa82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
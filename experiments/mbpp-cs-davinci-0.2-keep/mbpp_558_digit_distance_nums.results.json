{
  "name": "mbpp_558_digit_distance_nums",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        var n1s = n1.ToString();\n        var n2s = n2.ToString();\n        var n1l = n1s.Length;\n        var n2l = n2s.Length;\n        var n1c = n1l - n2l;\n        var n2c = n2l - n1l;\n        var n1p = n1c > 0 ? n1c : 0;\n        var n2p = n2c > 0 ? n2c : 0;\n        var n1d = n1c > 0 ? n1s.Substring(n1p) : n1s;\n        var n2d = n2c > 0 ? n2s.Substring(n2p) : n2s;\n        var n1i = n1c > 0 ? n1s.Substring(0, n1p) : \"\";\n        var n2i = n2c > 0 ? n2s.Substring(0, n2p) : \"\";\n        var n1f = n1c > 0 ? n1s.Substring(0, n1p) : n1s;\n        var n2f = n2c > 0 ? n2s.Substring(0, n2p) : n2s;\n        var n1r = n1c > 0 ? n1s.Substring(n1p) : \"\";\n        var n2r = n2c > 0 ? n2s.Substring(n2p) : \"\";\n        var n1m = n1c > 0 ? n1s.Substring(n1p) : n1s;\n        var n2m = n2c > 0 ? n2s.Substring(n2p) : n2s;\n        var n1z = n1c > 0 ? n1s.Substring(n1p) : \"\";\n        var n2z = n2c > 0 ? n2s.Substring(n2p) : \"\";\n        var n1x = n1c > 0 ? n1s.Substring(n1p) : \"\";\n        var n2x = n2c > 0 ? n2s.Substring(n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510382,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpoq8bf2x9.cs(32,44): error CS1026: ) expected\n/tmp/tmpoq8bf2x9.cs(32,44): error CS1003: Syntax error, ':' expected\n/tmp/tmpoq8bf2x9.cs(32,44): error CS1525: Invalid expression term '}'\n/tmp/tmpoq8bf2x9.cs(32,44): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9a54c089afb4fe78066f6fbe377426e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9a54c089afb4fe78066f6fbe377426e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 != 0 || n2 != 0) {\n            sum += Math.Abs(n1 % 10 - n2 % 10);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Sum(c => Math.Abs(c - n2.ToString()[n1.ToString().IndexOf(c)]));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        long n = n1;\n        long m = n2;\n        while (n > 0 || m > 0) {\n            long d1 = n % 10;\n            long d2 = m % 10;\n            sum += Math.Abs(d1 - d2);\n            n /= 10;\n            m /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 != 0 || n2 != 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Your code goes here.\n        // You can add other functions as required.\n        // Return the sum of the per-digit difference between n1 and n2.\n        // If n1 and n2 are equal, return 0.\n        // If n1 or n2 are negative, return -1.\n        // If n1 or n2 are not integers, return -2.\n        // If n1 or n2 are not within the range of long, return -3.\n        // If n1 or n2 are not within the range of int, return -4.\n        // If n1 or n2 are not within the range of short, return -5.\n        // If n1 or n2 are not within the range of byte, return -6.\n        // If n1 or n2 are not within the range of sbyte, return -7.\n        // If n1 or n2 are not within the range of uint, return -8.\n        // If n1 or n2 are not within the range of ushort, return -9.\n        // If n1 or n2 are not within the range of ulong, return -10.\n        // If n1 or n2 are not within the range of decimal, return -11.\n        // If n1 or n2 are not within the range of float, return -12.\n        // If n1 or n2 are not within the range of double, return -13.\n        // If n1 or n2 are not within the range of BigInteger, return -14.\n        // If n1 or n2 are not within the range of Complex, return -15.\n        // If n1 or n2 are not within the range of Rational, return -16.\n        // If n1 or n2 are not within the range of BigRational, return -17.\n        // If n1 or n2 are not within the range of BigDecimal, return -18.\n        // If n1 or n2 are not within the range of BigFloat, return -19.\n        // If n1 or n2 are not within the range of BigComplex, return -20.\n        // If n1 or n2 are not within the range of BigRationalComplex, return -21.\n        // If n1 or n2 are not\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123454,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsi6d1igo.cs(10,24): error CS0161: 'Problem.DigitDistanceNums(long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Your code here\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123454,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9a54c089afb4fe78066f6fbe377426e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9a54c089afb4fe78066f6fbe377426e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Select((c, i) => Math.Abs(c - n2.ToString()[i])).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Select((c, i) => Math.Abs(c - n2.ToString()[i])).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Convert the numbers to strings\n        string s1 = n1.ToString();\n        string s2 = n2.ToString();\n        // Find the length of the longest string\n        int maxLength = Math.Max(s1.Length, s2.Length);\n        // Pad the shorter string with zeros\n        s1 = s1.PadLeft(maxLength, '0');\n        s2 = s2.PadLeft(maxLength, '0');\n        // Sum the differences between the digits\n        long sum = 0;\n        for (int i = 0; i < maxLength; i++) {\n            sum += Math.Abs(s1[i] - s2[i]);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Sum(c => Math.Abs(c - n2.ToString()[n1.ToString().IndexOf(c)]));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Select((c, i) => Math.Abs(c - n2.ToString()[i])).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Sum(c => Math.Abs(c - n2.ToString()[n1.ToString().IndexOf(c)])) + n2.ToString().Sum(c => Math.Abs(c - n1.ToString()[n2.ToString().IndexOf(c)]));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b746a2fd4623418e8a0d96d5242f01c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b746a2fd4623418e8a0d96d5242f01c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Your code here\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123454,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        var d1 = n1.ToString().Select(c => c - '0').ToArray();\n        var d2 = n2.ToString().Select(c => c - '0').ToArray();\n        var d = d1.Length > d2.Length ? d1.Length : d2.Length;\n        var r = 0;\n        for (var i = 0; i < d; i++) {\n            var a = i < d1.Length ? d1[i] : 0;\n            var b = i < d2.Length ? d2[i] : 0;\n            r += Math.Abs(a - b);\n        }\n        return r;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Convert to string\n        string s1 = n1.ToString();\n        string s2 = n2.ToString();\n\n        // Pad with zeros\n        if (s1.Length > s2.Length) {\n            s2 = s2.PadLeft(s1.Length, '0');\n        } else if (s2.Length > s1.Length) {\n            s1 = s1.PadLeft(s2.Length, '0');\n        }\n\n        // Sum the differences\n        long sum = 0;\n        for (int i = 0; i < s1.Length; i++) {\n            sum += Math.Abs(s1[i] - s2[i]);\n        }\n\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123454,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Select((c, i) => Math.Abs(c - n2.ToString()[i])).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Your code goes here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83345c46737741ec92f4f9a202f88bb6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83345c46737741ec92f4f9a202f88bb6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 != 0 || n2 != 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9a54c089afb4fe78066f6fbe377426e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9a54c089afb4fe78066f6fbe377426e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <90ee9a11d4fc4d7db0cf821f2c8b2452>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <90ee9a11d4fc4d7db0cf821f2c8b2452>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Sum(c => Math.Abs(c - n2.ToString()[n1.ToString().IndexOf(c)]));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Sum(c => Math.Abs(c - n2.ToString()[n1.ToString().IndexOf(c)]));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Your code goes here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83345c46737741ec92f4f9a202f88bb6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83345c46737741ec92f4f9a202f88bb6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1ca5dc8e82e24555b6d630d77fbf5386>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1ca5dc8e82e24555b6d630d77fbf5386>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Select((c, i) => Math.Abs(c - n2.ToString()[i])).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Convert to strings\n        string s1 = n1.ToString();\n        string s2 = n2.ToString();\n        // Pad with zeros\n        while (s1.Length < s2.Length) {\n            s1 = \"0\" + s1;\n        }\n        while (s2.Length < s1.Length) {\n            s2 = \"0\" + s2;\n        }\n        // Sum the differences\n        long sum = 0;\n        for (int i = 0; i < s1.Length; i++) {\n            sum += Math.Abs(s1[i] - s2[i]);\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123454,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Select((c, i) => Math.Abs(c - n2.ToString()[i])).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs(n1 % 10 - n2 % 10);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123454,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Select((c, i) => Math.Abs(c - n2.ToString()[i])).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Your code here\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long n1_digit = n1 % 10;\n            long n2_digit = n2 % 10;\n            sum += Math.Abs(n1_digit - n2_digit);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123454,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Select((c, i) => Math.Abs(c - n2.ToString()[i])).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Your code here\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123454,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs(n1 % 10 - n2 % 10);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123454,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Select((c, i) => Math.Abs(c - n2.ToString()[i])).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 != 0 || n2 != 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Select((c, i) => Math.Abs(c - n2.ToString()[i])).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Sum(c => Math.Abs(c - n2.ToString()[n1.ToString().IndexOf(c)]));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Select((c, i) => Math.Abs(c - n2.ToString()[i])).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9a54c089afb4fe78066f6fbe377426e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9a54c089afb4fe78066f6fbe377426e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Your code goes here\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Select((c, i) => Math.Abs(c - n2.ToString()[i])).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs(n1 % 10 - n2 % 10);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123454,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        // Your code goes here\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.Abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123454,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.Abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1665510383,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of the per-digit difference between two integers.\n    public static long DigitDistanceNums(long n1, long n2) {\n        return n1.ToString().Select((c, i) => Math.Abs(c - n2.ToString()[i])).Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(DigitDistanceNums((1L), (2L)) == (1L));\n    Debug.Assert(DigitDistanceNums((23L), (56L)) == (6L));\n    Debug.Assert(DigitDistanceNums((123L), (256L)) == (7L));\n    }\n\n}\n",
      "timestamp": 1666123455,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_99_decimal_to_binary",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n    public static string DecimalToBinary(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_99_decimal_to_binary.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(DecimalToBinary((8L)).Equals((\"1000\")));\n    Debug.Assert(DecimalToBinary((18L)).Equals((\"10010\")));\n    Debug.Assert(DecimalToBinary((7L)).Equals((\"111\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        // Your code goes here.\n        StringBuilder sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        // Your code goes here.\n        return \"\";",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        // Your code goes here.\n        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2) + binary;\n            n = n / 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        var s = \"\";\n        while (n > 0) {\n            s = (n % 2).ToString() + s;\n            n /= 2;\n        }\n        return s;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string s = \"\";\n        while (n > 0) {\n            s = (n % 2).ToString() + s;\n            n /= 2;\n        }\n        return s;",
    "        return Convert.ToString(n, 2);",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        StringBuilder sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return sb.ToString();",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string s = \"\";\n        while (n > 0) {\n            s = (n % 2).ToString() + s;\n            n /= 2;\n        }\n        return s;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return Reverse(sb.ToString());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        // Your code goes here.\n        return \"\";",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2) + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string s = \"\";\n        while (n > 0) {\n            s = (n % 2).ToString() + s;\n            n /= 2;\n        }\n        return s;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2) + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        StringBuilder sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return Reverse(sb.ToString());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return sb.ToString();",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        // Your code goes here.\n        return Convert.ToString(n, 2);",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        // Your code goes here.\n        return Convert.ToString(n, 2);",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Insert(0, n % 2);\n            n /= 2;\n        }\n        return sb.ToString();",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2) + binary;\n            n /= 2;\n        }\n        return binary;",
    "        StringBuilder sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return Reverse(sb.ToString());",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string s = \"\";\n        while (n > 0) {\n            s = (n % 2) + s;\n            n /= 2;\n        }\n        return s;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        // Your code here.",
    "        string s = \"\";\n        while (n > 0) {\n            s = (n % 2) + s;\n            n /= 2;\n        }\n        return s;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2) + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2) + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        // Your code goes here.\n        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        var s = sb.ToString();\n        var chars = s.ToCharArray();\n        Array.Reverse(chars);\n        return new string(chars);",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return sb.ToString().Reverse().ToString();",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2) + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2) + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append((n & 1) == 1 ? '1' : '0');\n            n >>= 1;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        // Your code goes here.\n        return \"\";",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string s = \"\";\n        while (n > 0) {\n            s = (n % 2) + s;\n            n /= 2;\n        }\n        return s;",
    "        // Your code goes here.\n        return \"\";",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        // Your code here\n        return \"\";",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return Reverse(sb.ToString());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        if (n == 0) {\n            return \"0\";\n        }\n        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return Reverse(sb.ToString());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return Reverse(sb.ToString());",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n & 1);\n            n >>= 1;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        // Your code goes here.\n        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return string.Join(\"\", sb.ToString().Reverse());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return sb.ToString();",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return sb.ToString();",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        return Convert.ToString(n, 2);",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return Reverse(sb.ToString());",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        // Your code here\n        return \"\";",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        StringBuilder sb = new StringBuilder();\n        while (n > 0) {\n            sb.Insert(0, n % 2);\n            n /= 2;\n        }\n        return sb.ToString();",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        StringBuilder sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return sb.ToString();",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Insert(0, n % 2);\n            n /= 2;\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return string.Join(\"\", sb.ToString().Reverse());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2) + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Insert(0, n % 2);\n            n /= 2;\n        }\n        return sb.ToString();",
    "        // Implement this function\n        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return sb.ToString();",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2) + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n /= 2;\n        }\n        return binary;",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        // Your code here\n        return Convert.ToString(n, 2);",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        string binary = \"\";\n        while (n > 0) {\n            binary = (n % 2).ToString() + binary;\n            n = n / 2;\n        }\n        return binary;",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;",
    "        // Your code goes here.\n        return Convert.ToString(n, 2);",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        var sb = new StringBuilder();\n        while (n > 0) {\n            sb.Append(n % 2);\n            n /= 2;\n        }\n        return new string(sb.ToString().Reverse().ToArray());",
    "        string result = \"\";\n        while (n > 0) {\n            result = (n % 2).ToString() + result;\n            n /= 2;\n        }\n        return result;"
  ]
}
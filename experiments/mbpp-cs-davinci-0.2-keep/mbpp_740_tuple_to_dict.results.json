{
  "name": "mbpp_740_tuple_to_dict",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_740_tuple_to_dict.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[] {test_tup};\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptqiqm9ye.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptqiqm9ye.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptqiqm9ye.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (long i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (long i = 0; i < test_tup; i += 2) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp_58s0aq.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpp_58s0aq.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpp_58s0aq.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        var test_dict = new Dictionary<long,long>();\n        var test_list = new List<long>();\n        var test_string = test_tup.ToString();\n        for (int i = 0; i < test_string.Length; i++) {\n            test_list.Add(long.Parse(test_string[i].ToString()));\n        }\n        for (int i = 0; i < test_list.Count - 1; i++) {\n            test_dict.Add(test_list[i], test_list[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4wn87qmh.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp4wn87qmh.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp4wn87qmh.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            } else {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb8llceoa.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpb8llceoa.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpb8llceoa.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (long i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (long i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppzo5fh_r.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmppzo5fh_r.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmppzo5fh_r.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpptxybqlg.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpptxybqlg.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpptxybqlg.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for(int i = 0; i < arr.Length; i++) {\n            if(i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            } else {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzmtpzm7d.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzmtpzm7d.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzmtpzm7d.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] test_arr = test_tup.ToString().Select(x => long.Parse(x.ToString())).ToArray();\n        for(int i = 0; i < test_arr.Length - 1; i++) {\n            result.Add(test_arr[i], test_arr[i+1]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdknfdp1p.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpdknfdp1p.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpdknfdp1p.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        var dict = new Dictionary<long,long>();\n        var tup = test_tup.ToString();\n        for (int i = 0; i < tup.Length; i += 2) {\n            dict.Add(long.Parse(tup[i].ToString()), long.Parse(tup[i+1].ToString()));\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2_7aergn.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2_7aergn.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2_7aergn.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = test_tup.ToString().Select(c => long.Parse(c.ToString())).ToArray();\n        for (int i = 0; i < tup.Length; i += 2) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpz33e3m6b.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpz33e3m6b.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpz33e3m6b.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            if (i + 1 < test_tup) {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7_q36n1v.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp7_q36n1v.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp7_q36n1v.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            } else {\n                dict.Add(arr[i], arr[i+1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinwjea5d.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpinwjea5d.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpinwjea5d.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        string[] arr = test_tup.ToString().Split(',');\n        for(int i = 0; i < arr.Length; i+=2) {\n            dict.Add(long.Parse(arr[i]),long.Parse(arr[i+1]));\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwostr8qa.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpwostr8qa.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpwostr8qa.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i],arr[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpannfn8gj.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpannfn8gj.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpannfn8gj.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for(int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmk8httc_.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpmk8httc_.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpmk8httc_.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_arr.Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for(int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i],test_arr[i+1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqoij_7m4.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpqoij_7m4.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpqoij_7m4.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length; i += 2) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2tqxf13p.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2tqxf13p.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2tqxf13p.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[] { test_tup };\n        for (int i = 0; i < tup.Length - 1; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp02xa7qcq.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp02xa7qcq.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp02xa7qcq.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        for (int i = 0; i < test_tup.Length; i += 2) {\n            dict.Add(test_tup[i], test_tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt6ex3lal.cs(12,38): error CS1061: 'long' does not contain a definition for 'Length' and no accessible extension method 'Length' accepting a first argument of type 'long' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpt6ex3lal.cs(13,22): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpt6ex3lal.cs(13,35): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpt6ex3lal.cs(18,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpt6ex3lal.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpt6ex3lal.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5mp77azu.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                result.Add(tup[i], tup[0]);\n            } else {\n                result.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9_dkfqqr.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9_dkfqqr.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9_dkfqqr.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[] {test_tup};\n        for (int i = 0; i < tup.Length; i+=2) {\n            dict.Add(tup[i],tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkeuahjeq.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpkeuahjeq.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpkeuahjeq.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[] {test_tup};\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptqiqm9ye.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptqiqm9ye.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptqiqm9ye.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzwvi0z5m.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3jrdyog8.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        var dict = new Dictionary<long, long>();\n        var tup = test_tup.ToString().ToCharArray();\n        for(int i = 0; i < tup.Length; i+=2) {\n            var key = long.Parse(tup[i].ToString());\n            var value = long.Parse(tup[i+1].ToString());\n            dict.Add(key, value);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpouqlok7i.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpouqlok7i.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpouqlok7i.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        var dict = new Dictionary<long,long>();\n        var tup = test_tup.ToString().ToCharArray();\n        for (int i = 0; i < tup.Length; i += 2) {\n            dict.Add(long.Parse(tup[i].ToString()), long.Parse(tup[i+1].ToString()));\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwtob1per.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpwtob1per.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpwtob1per.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup.Length; i++) {\n            dict.Add(test_tup[i], test_tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzu276bii.cs(13,38): error CS1061: 'long' does not contain a definition for 'Length' and no accessible extension method 'Length' accepting a first argument of type 'long' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpzu276bii.cs(14,22): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpzu276bii.cs(14,35): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpzu276bii.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzu276bii.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzu276bii.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = test_tup.ToString().Select(x => Convert.ToInt64(x.ToString())).ToArray();\n        for (int i = 0; i < arr.Length; i++) {\n            if (i + 1 < arr.Length) {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpe50hk0xm.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpe50hk0xm.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpe50hk0xm.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i % 2 == 0) {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpuo1grnea.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpuo1grnea.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpuo1grnea.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzwvi0z5m.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[] { test_tup };\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], 0);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpim9t6zep.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpim9t6zep.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpim9t6zep.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] test_tup_arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            test_tup_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for(int i = 0; i < test_tup_arr.Length; i++) {\n            if(i == test_tup_arr.Length - 1) {\n                result.Add(test_tup_arr[i], test_tup_arr[0]);\n            } else {\n                result.Add(test_tup_arr[i], test_tup_arr[i + 1]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkx9ebiiw.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpkx9ebiiw.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpkx9ebiiw.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        long[] tup = new long[test_tup];\n        for (long i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (long i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2pihf4th.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2pihf4th.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2pihf4th.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_array = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_array[i] = long.Parse(test_tup.ToString().Substring(i,1));\n        }\n        for (int i = 0; i < test_array.Length; i++) {\n            if (i == test_array.Length - 1) {\n                test_dict.Add(test_array[i],test_array[0]);\n            } else {\n                test_dict.Add(test_array[i],test_array[i+1]);\n            }\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpelzwe53i.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpelzwe53i.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpelzwe53i.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        var dict = new Dictionary<long,long>();\n        var tup = test_tup.ToString();\n        for (int i = 0; i < tup.Length - 1; i++) {\n            var key = tup[i];\n            var value = tup[i + 1];\n            dict.Add(key, value);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprxskdpyh.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmprxskdpyh.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmprxskdpyh.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_arr.Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphyaubcb9.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmphyaubcb9.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmphyaubcb9.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (long i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (long i = 0; i < test_tup; i++) {\n            if (i % 2 == 0) {\n                dict.Add(tup[i], tup[i+1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptxc_5c87.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptxc_5c87.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptxc_5c87.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long, long> test_dict = new Dictionary<long, long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkuvntapp.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpkuvntapp.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpkuvntapp.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length; i += 2) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphiuxl6y6.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmphiuxl6y6.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmphiuxl6y6.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        long[] tup = new long[] { test_tup };\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        for (int i = 0; i < tup.Length; i += 2) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122711,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5hf3qxqt.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5hf3qxqt.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5hf3qxqt.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = test_tup.ToString().Select(c => long.Parse(c.ToString())).ToArray();\n        for (int i = 0; i < tup.Length - 1; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6i1np6vf.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp6i1np6vf.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp6i1np6vf.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzwvi0z5m.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            }\n            else {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpla6pxczq.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpla6pxczq.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpla6pxczq.cs(30,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        var test_tuple = new Tuple<long,long>(test_tup,test_tup);\n        var test_dict = new Dictionary<long,long>();\n        for (int i = 0; i < test_tuple.Length; i++) {\n            test_dict.Add(test_tuple.Item1,test_tuple.Item2);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122711,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphlxdvgjb.cs(13,40): error CS1061: 'Tuple<long, long>' does not contain a definition for 'Length' and no accessible extension method 'Length' accepting a first argument of type 'Tuple<long, long>' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmphlxdvgjb.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmphlxdvgjb.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmphlxdvgjb.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[] {test_tup};\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                break;\n            }\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkk7a0_cn.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpkk7a0_cn.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpkk7a0_cn.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for(int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmk8httc_.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpmk8httc_.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpmk8httc_.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        var dict = new Dictionary<long, long>();\n        var tup = test_tup.ToString().ToCharArray();\n        for (int i = 0; i < tup.Length; i += 2) {\n            dict.Add(long.Parse(tup[i].ToString()), long.Parse(tup[i + 1].ToString()));\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1a89dcrc.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp1a89dcrc.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp1a89dcrc.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        var test_list = new List<long>();\n        while (test_tup > 0) {\n            test_list.Add(test_tup % 10);\n            test_tup /= 10;\n        }\n        test_list.Reverse();\n        var test_dict = new Dictionary<long,long>();\n        for (int i = 0; i < test_list.Count - 1; i++) {\n            test_dict[test_list[i]] = test_list[i + 1];\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprop3qc3w.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmprop3qc3w.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmprop3qc3w.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup.ToString()[i];\n        }\n        for(int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy_tw_avr.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy_tw_avr.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy_tw_avr.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = test_tup.ToString().Select(x => long.Parse(x.ToString())).ToArray();\n        for (int i = 0; i < tup.Length - 1; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp40ivr4au.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp40ivr4au.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp40ivr4au.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            } else {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb8llceoa.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpb8llceoa.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpb8llceoa.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for(int i = 0; i < test_arr.Length - 1; i++) {\n            result.Add(test_arr[i],test_arr[i+1]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj0661d1m.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpj0661d1m.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpj0661d1m.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            } else {\n                dict.Add(arr[i], arr[i+1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinwjea5d.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpinwjea5d.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpinwjea5d.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            if (i == test_tup - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptv0rir0c.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptv0rir0c.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptv0rir0c.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5mp77azu.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgw6vql1q.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpgw6vql1q.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpgw6vql1q.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            if (i == test_tup - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptv0rir0c.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptv0rir0c.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptv0rir0c.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for(int i = 0; i < arr.Length; i++) {\n            if(i == arr.Length - 1) {\n                dict.Add(arr[i], 0);\n            } else {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpz6ys8c0v.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpz6ys8c0v.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpz6ys8c0v.cs(30,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long i = 0;\n        while (test_tup > 0) {\n            long key = test_tup % 10;\n            test_tup /= 10;\n            long value = test_tup % 10;\n            test_tup /= 10;\n            dict.Add(key,value);\n            i++;\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwyhzyhs5.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpwyhzyhs5.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpwyhzyhs5.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i + 1 < arr.Length) {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9p3oumlt.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9p3oumlt.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9p3oumlt.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(tup);\n        for (int i = 0; i < tup.Length-1; i++) {\n            dict.Add(tup[i],tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphn6sda7l.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmphn6sda7l.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmphn6sda7l.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzwvi0z5m.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (long i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (long i = 0; i < test_tup; i += 2) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa34vf09n.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpa34vf09n.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpa34vf09n.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        // Convert the tuple to a list\n        List<long> test_list = new List<long>();\n        while (test_tup > 0) {\n            test_list.Add(test_tup % 10);\n            test_tup /= 10;\n        }\n        test_list.Reverse();\n        // Convert the list to a dictionary\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        for (int i = 0; i < test_list.Count; i += 2) {\n            test_dict.Add(test_list[i], test_list[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9og0pby_.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9og0pby_.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9og0pby_.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            } else {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb8llceoa.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpb8llceoa.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpb8llceoa.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            if (i == test_tup - 1) {\n                dict.Add(tup[i], tup[0]);\n            }\n            else {\n                dict.Add(tup[i], tup[i+1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1vt6w2r4.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp1vt6w2r4.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp1vt6w2r4.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(test_arr);\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i],test_arr[i+1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpebtf_9xq.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpebtf_9xq.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpebtf_9xq.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_arr.Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for(int i = 0; i < test_arr.Length; i++) {\n            if(i == test_arr.Length - 1) {\n                test_dict.Add(test_arr[i], test_arr[0]);\n            } else {\n                test_dict.Add(test_arr[i], test_arr[i + 1]);\n            }\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpugfi2re7.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpugfi2re7.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpugfi2re7.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                result.Add(tup[i], tup[0]);\n            } else {\n                result.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9_dkfqqr.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9_dkfqqr.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9_dkfqqr.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        for (int i = 0; i < test_tup.Length; i += 2) {\n            dict.Add(test_tup[i], test_tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfr96mlep.cs(12,38): error CS1061: 'long' does not contain a definition for 'Length' and no accessible extension method 'Length' accepting a first argument of type 'long' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpfr96mlep.cs(13,22): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpfr96mlep.cs(13,35): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpfr96mlep.cs(18,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpfr96mlep.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpfr96mlep.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5mp77azu.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for(int i = 0; i < tup.Length; i++) {\n            if(i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6i_ib51t.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp6i_ib51t.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp6i_ib51t.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < tup.Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length - 1; i++) {\n            result.Add(tup[i], tup[i + 1]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfoja3h3f.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpfoja3h3f.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpfoja3h3f.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length - 1; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy8xcr9f2.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy8xcr9f2.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy8xcr9f2.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length - 1; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy8xcr9f2.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy8xcr9f2.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy8xcr9f2.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i+=2) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp47yyj3n_.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp47yyj3n_.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp47yyj3n_.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (long i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (long i = 0; i < test_tup-1; i++) {\n            dict.Add(tup[i],tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt96crvh_.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpt96crvh_.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpt96crvh_.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> d = new Dictionary<long,long>();\n        long[] t = test_tup.ToString().Select(c => long.Parse(c.ToString())).ToArray();\n        for (int i = 0; i < t.Length - 1; i++) {\n            d.Add(t[i], t[i + 1]);\n        }\n        return d;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi5mmg80h.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpi5mmg80h.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpi5mmg80h.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = long.Parse(test_tup.ToString()[i].ToString());\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            result.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpid1c_gan.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpid1c_gan.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpid1c_gan.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[] { test_tup };\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo2k39aaz.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpo2k39aaz.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpo2k39aaz.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        var dict = new Dictionary<long,long>();\n        var tup = test_tup.ToString().Select(x => long.Parse(x.ToString())).ToArray();\n        for(int i = 0; i < tup.Length - 1; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw2ssvq5l.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpw2ssvq5l.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpw2ssvq5l.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = test_tup.ToString().Select(x => long.Parse(x.ToString())).ToArray();\n        for (int i = 0; i < tup.Length - 1; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp40ivr4au.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp40ivr4au.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp40ivr4au.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] test_tup_arr = test_tup.ToString().Select(c => long.Parse(c.ToString())).ToArray();\n        for (int i = 0; i < test_tup_arr.Length - 1; i++) {\n            result.Add(test_tup_arr[i], test_tup_arr[i + 1]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc3nlkqcn.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpc3nlkqcn.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpc3nlkqcn.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            if (i == test_tup - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i+1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8bww8gnv.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp8bww8gnv.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp8bww8gnv.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpptxybqlg.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpptxybqlg.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpptxybqlg.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (long i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (long i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7o3213sm.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp7o3213sm.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp7o3213sm.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length - 1; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy8xcr9f2.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy8xcr9f2.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy8xcr9f2.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] tup = test_tup.ToString().Select(x => long.Parse(x.ToString())).ToArray();\n        for (int i = 0; i < tup.Length; i += 2) {\n            result.Add(tup[i], tup[i + 1]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkl8by937.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpkl8by937.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpkl8by937.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzwvi0z5m.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for(int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i],arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqoo2grk2.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpqoo2grk2.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpqoo2grk2.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            result.Add(tup[i],tup[i+1]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgwzh6bs1.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpgwzh6bs1.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpgwzh6bs1.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[] { test_tup };\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo2k39aaz.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpo2k39aaz.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpo2k39aaz.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            if (i % 2 == 0) {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzgwafqar.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzgwafqar.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzgwafqar.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (long i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (long i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppzo5fh_r.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmppzo5fh_r.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmppzo5fh_r.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] test_tup_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_tup_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_tup_arr.Length; i += 2) {\n            dict.Add(test_tup_arr[i], test_tup_arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdsinqy6f.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpdsinqy6f.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpdsinqy6f.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length; i++) {\n            if (i % 2 == 0) {\n                dict.Add(tup[i], tup[i+1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3xxr4am7.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3xxr4am7.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3xxr4am7.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzwvi0z5m.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < tup.Length; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_e12ik24.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp_e12ik24.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp_e12ik24.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for(int i = 0; i < test_tup; i++) {\n            tup[i] = Convert.ToInt64(Console.ReadLine());\n        }\n        for(int i = 0; i < test_tup; i++) {\n            if(i == test_tup - 1) {\n                dict.Add(tup[i],tup[0]);\n            } else {\n                dict.Add(tup[i],tup[i+1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp00frgnst.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp00frgnst.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp00frgnst.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7gcr1xcg.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp7gcr1xcg.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp7gcr1xcg.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length - 1; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy8xcr9f2.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy8xcr9f2.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy8xcr9f2.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = long.Parse(test_tup.ToString()[i].ToString());\n        }\n        for (int i = 0; i < test_arr.Length; i++) {\n            if (i == test_arr.Length - 1) {\n                test_dict.Add(test_arr[i], test_arr[0]);\n            } else {\n                test_dict.Add(test_arr[i], test_arr[i + 1]);\n            }\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptc70pnas.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptc70pnas.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptc70pnas.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length; i++) {\n            if (i + 1 < tup.Length) {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplz5ed3sj.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmplz5ed3sj.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmplz5ed3sj.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i],arr[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprsu1rl1f.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmprsu1rl1f.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmprsu1rl1f.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] tup = new long[] { test_tup };\n        for (int i = 0; i < tup.Length; i++) {\n            if (i + 1 < tup.Length) {\n                result.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2jartf6m.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2jartf6m.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2jartf6m.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3jrdyog8.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[] { test_tup };\n        for (int i = 0; i < arr.Length; i += 2) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxgz827ba.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpxgz827ba.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpxgz827ba.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3jrdyog8.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3jrdyog8.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        var tup = test_tup.ToString().ToCharArray();\n        for (int i = 0; i < tup.Length; i+=2) {\n            dict.Add(long.Parse(tup[i].ToString()), long.Parse(tup[i+1].ToString()));\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1h2aa521.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp1h2aa521.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp1h2aa521.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup.ToString()[i] - '0';\n        }\n        for(int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i],test_arr[i+1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpivmv5wev.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpivmv5wev.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpivmv5wev.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for(int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps7t9n8y1.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmps7t9n8y1.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmps7t9n8y1.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (long i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (long i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppzo5fh_r.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmppzo5fh_r.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmppzo5fh_r.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        var dict = new Dictionary<long,long>();\n        var tup = test_tup.ToString();\n        for(int i = 0; i < tup.Length; i+=2) {\n            var key = long.Parse(tup[i].ToString());\n            var val = long.Parse(tup[i+1].ToString());\n            dict[key] = val;\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm_e4a5e8.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpm_e4a5e8.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpm_e4a5e8.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = test_tup.ToString().Select(c => long.Parse(c.ToString())).ToArray();\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i+1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdytov9td.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpdytov9td.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpdytov9td.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i + 1 < arr.Length) {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9p3oumlt.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9p3oumlt.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9p3oumlt.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        for (int i = 0; i < test_tup.Length; i++) {\n            dict.Add(test_tup[i], test_tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpudpffc8i.cs(12,38): error CS1061: 'long' does not contain a definition for 'Length' and no accessible extension method 'Length' accepting a first argument of type 'long' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpudpffc8i.cs(13,22): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpudpffc8i.cs(13,35): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpudpffc8i.cs(18,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpudpffc8i.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpudpffc8i.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (long i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (long i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppzo5fh_r.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmppzo5fh_r.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmppzo5fh_r.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            result.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp64mjpy50.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp64mjpy50.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp64mjpy50.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[] { test_tup };\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == 0) {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n            else if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[i - 1]);\n            }\n            else {\n                dict.Add(tup[i], tup[i - 1]);\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc26xckiy.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpc26xckiy.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpc26xckiy.cs(30,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = test_tup.ToString().Select(c => long.Parse(c.ToString())).ToArray();\n        for (int i = 0; i < tup.Length - 1; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6i1np6vf.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp6i1np6vf.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp6i1np6vf.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3jrdyog8.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3jrdyog8.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        long[] arr = test_tup.ToString().Select(x => long.Parse(x.ToString())).ToArray();\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpuzvyov5f.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpuzvyov5f.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpuzvyov5f.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzwvi0z5m.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] test_tup_arr = test_tup.ToString().Select(c => c - '0').ToArray();\n        for (int i = 0; i < test_tup_arr.Length - 1; i++) {\n            result.Add(test_tup_arr[i], test_tup_arr[i + 1]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpndsgytdg.cs(12,31): error CS0029: Cannot implicitly convert type 'int[]' to 'long[]'\n/tmp/tmpndsgytdg.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpndsgytdg.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpndsgytdg.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for(int i = 0; i < arr.Length; i++) {\n            if(i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            } else {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6gfuzsy9.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp6gfuzsy9.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp6gfuzsy9.cs(30,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = test_tup.ToString().Select(x => long.Parse(x.ToString())).ToArray();\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i+1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpoyydnqaw.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpoyydnqaw.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpoyydnqaw.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            if (i % 2 == 0) {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0tymfm18.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp0tymfm18.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp0tymfm18.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7gcr1xcg.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp7gcr1xcg.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp7gcr1xcg.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (long i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (long i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3pp52r59.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3pp52r59.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3pp52r59.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i + 1 < arr.Length) {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9p3oumlt.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9p3oumlt.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9p3oumlt.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = (long)Char.GetNumericValue(test_tup.ToString()[i]);\n        }\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgodiga30.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpgodiga30.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpgodiga30.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for(int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmk8httc_.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpmk8httc_.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpmk8httc_.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] tup = new long[] { test_tup };\n        for (int i = 0; i < tup.Length; i++) {\n            if (i + 1 < tup.Length) {\n                result.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2jartf6m.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2jartf6m.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2jartf6m.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] test_arr = test_tup.ToString().Select(x => long.Parse(x.ToString())).ToArray();\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgv41uhh1.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpgv41uhh1.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpgv41uhh1.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptr1bswi_.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptr1bswi_.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptr1bswi_.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzwvi0z5m.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for(int i = 0; i < tup.Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for(int i = 0; i < tup.Length; i += 2) {\n            result.Add(tup[i], tup[i + 1]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpq_ju3c84.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpq_ju3c84.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpq_ju3c84.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3jrdyog8.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = test_tup.ToString().Select(c => long.Parse(c.ToString())).ToArray();\n        for(int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsei6j462.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpsei6j462.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpsei6j462.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5mp77azu.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5mp77azu.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i % 2 == 0) {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpuo1grnea.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpuo1grnea.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpuo1grnea.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[] { test_tup };\n        for (int i = 0; i < tup.Length; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_43p3v0s.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp_43p3v0s.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp_43p3v0s.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5mp77azu.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> d = new Dictionary<long,long>();\n        long[] t = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            t[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < t.Length - 1; i++) {\n            d.Add(t[i], t[i + 1]);\n        }\n        return d;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw_c09nni.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpw_c09nni.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpw_c09nni.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (long i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (long i = 0; i < test_tup; i++) {\n            result.Add(tup[i],tup[i+1]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpilk7j_1_.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpilk7j_1_.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpilk7j_1_.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_arr.Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphyaubcb9.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmphyaubcb9.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmphyaubcb9.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[] {test_tup};\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], 0);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfsld6yp6.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpfsld6yp6.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpfsld6yp6.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for(int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for(int i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9dp2emmi.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9dp2emmi.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9dp2emmi.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        for(int i = 0; i < test_tup.Length; i+=2) {\n            dict.Add(test_tup[i], test_tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzqjnia5e.cs(12,37): error CS1061: 'long' does not contain a definition for 'Length' and no accessible extension method 'Length' accepting a first argument of type 'long' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpzqjnia5e.cs(13,22): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpzqjnia5e.cs(13,35): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpzqjnia5e.cs(18,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzqjnia5e.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzqjnia5e.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length; i++) {\n            if (i == test_arr.Length - 1) {\n                test_dict.Add(test_arr[i], test_arr[0]);\n            } else {\n                test_dict.Add(test_arr[i], test_arr[i + 1]);\n            }\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp_ty117j.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpp_ty117j.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpp_ty117j.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = test_tup.ToString().Select(c => long.Parse(c.ToString())).ToArray();\n        for (int i = 0; i < arr.Length; i++) {\n            if (i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            } else {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdztlytf_.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpdztlytf_.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpdztlytf_.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpptxybqlg.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpptxybqlg.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpptxybqlg.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = test_tup.ToString().Select(c => long.Parse(c.ToString())).ToArray();\n        for (int i = 0; i < tup.Length-1; i++) {\n            dict.Add(tup[i],tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfz_lifrp.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpfz_lifrp.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpfz_lifrp.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            } else {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb8llceoa.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpb8llceoa.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpb8llceoa.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            } else {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb8llceoa.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpb8llceoa.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpb8llceoa.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length - 1; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy8xcr9f2.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy8xcr9f2.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy8xcr9f2.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        var dict = new Dictionary<long,long>();\n        var tup = test_tup.ToString().ToCharArray();\n        for (int i = 0; i < tup.Length; i += 2) {\n            dict.Add(long.Parse(tup[i].ToString()), long.Parse(tup[i+1].ToString()));\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwtob1per.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpwtob1per.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpwtob1per.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = test_tup.ToString().Select(x => long.Parse(x.ToString())).ToArray();\n        for (int i = 0; i < tup.Length - 1; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp40ivr4au.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp40ivr4au.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp40ivr4au.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i=0;i<test_tup.ToString().Length;i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for(int i=0;i<arr.Length-1;i++) {\n            dict.Add(arr[i],arr[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3n5_0wjt.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3n5_0wjt.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3n5_0wjt.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3jrdyog8.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            }\n            else {\n                dict.Add(arr[i], arr[i+1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph2zxhcwd.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmph2zxhcwd.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmph2zxhcwd.cs(30,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        var tup = test_tup.ToString().ToCharArray();\n        for (int i = 0; i < tup.Length; i++) {\n            if (i + 1 < tup.Length) {\n                dict.Add(long.Parse(tup[i].ToString()), long.Parse(tup[i + 1].ToString()));\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5iolt7jc.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5iolt7jc.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5iolt7jc.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length; i++) {\n            if (i == test_arr.Length - 1) {\n                test_dict.Add(test_arr[i], test_arr[0]);\n            } else {\n                test_dict.Add(test_arr[i], test_arr[i + 1]);\n            }\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp_ty117j.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpp_ty117j.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpp_ty117j.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for(int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i],arr[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpd_7w1a8v.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpd_7w1a8v.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpd_7w1a8v.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        for (int i = 0; i < test_tup.Length; i += 2) {\n            test_dict.Add(test_tup[i], test_tup[i+1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmsdigbgl.cs(12,38): error CS1061: 'long' does not contain a definition for 'Length' and no accessible extension method 'Length' accepting a first argument of type 'long' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpmsdigbgl.cs(13,27): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpmsdigbgl.cs(13,40): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpmsdigbgl.cs(18,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpmsdigbgl.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpmsdigbgl.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i + 1 < arr.Length) {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9p3oumlt.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9p3oumlt.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp9p3oumlt.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] test_array = test_tup.ToString().Select(x => long.Parse(x.ToString())).ToArray();\n        for (int i = 0; i < test_array.Length - 1; i++) {\n            result.Add(test_array[i], test_array[i+1]);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3380yygx.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3380yygx.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3380yygx.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i],test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpeuw8zau7.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpeuw8zau7.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpeuw8zau7.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3jrdyog8.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        var dict = new Dictionary<long,long>();\n        var tup = test_tup.ToString().ToCharArray();\n        for (int i = 0; i < tup.Length; i += 2) {\n            var key = tup[i].ToString();\n            var value = tup[i+1].ToString();\n            dict.Add(long.Parse(key), long.Parse(value));\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi_v6y9qz.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpi_v6y9qz.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpi_v6y9qz.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for(int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i],arr[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpd_7w1a8v.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpd_7w1a8v.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpd_7w1a8v.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = long.Parse(test_tup.ToString()[i].ToString());\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7gst3i4b.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp7gst3i4b.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp7gst3i4b.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long i = 0;\n        while (i < test_tup.Length) {\n            dict.Add(test_tup[i], test_tup[i+1]);\n            i += 2;\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzro0ckmq.cs(13,29): error CS1061: 'long' does not contain a definition for 'Length' and no accessible extension method 'Length' accepting a first argument of type 'long' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpzro0ckmq.cs(14,22): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpzro0ckmq.cs(14,35): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpzro0ckmq.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzro0ckmq.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzro0ckmq.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (long i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (long i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppzo5fh_r.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmppzo5fh_r.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmppzo5fh_r.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < tup.Length; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < tup.Length; i += 2) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122715,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcg5bagsg.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpcg5bagsg.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpcg5bagsg.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5mp77azu.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp5mp77azu.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122715,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyuipci6w.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpyuipci6w.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpyuipci6w.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzwvi0z5m.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpzwvi0z5m.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[] {test_tup};\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptqiqm9ye.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptqiqm9ye.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmptqiqm9ye.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> result = new Dictionary<long,long>();\n        long[] test_tup_arr = test_tup.ToString().Select(c => Convert.ToInt64(c.ToString())).ToArray();\n        for (int i = 0; i < test_tup_arr.Length; i++) {\n            if (i == test_tup_arr.Length - 1) {\n                result.Add(test_tup_arr[i], 0);\n            } else {\n                result.Add(test_tup_arr[i], test_tup_arr[i + 1]);\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122715,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbx0birxt.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpbx0birxt.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpbx0birxt.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for(int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmk8httc_.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpmk8httc_.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpmk8httc_.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        var tup = test_tup.ToString().ToCharArray();\n        for (int i = 0; i < tup.Length; i+=2) {\n            dict.Add(long.Parse(tup[i].ToString()), long.Parse(tup[i+1].ToString()));\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1h2aa521.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp1h2aa521.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp1h2aa521.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            } else {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb8llceoa.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpb8llceoa.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpb8llceoa.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(test_arr);\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i], test_arr[i + 1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122715,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4gb75u96.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp4gb75u96.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp4gb75u96.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < arr.Length; i += 2) {\n            dict.Add(arr[i], arr[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122715,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdby4vmln.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpdby4vmln.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpdby4vmln.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for (int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for (int i = 0; i < test_tup; i++) {\n            dict.Add(tup[i], tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3jrdyog8.cs(22,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp3jrdyog8.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length; i++) {\n            if (i == tup.Length - 1) {\n                dict.Add(tup[i], tup[0]);\n            } else {\n                dict.Add(tup[i], tup[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpptxybqlg.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpptxybqlg.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpptxybqlg.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        var dict = new Dictionary<long,long>();\n        var tup = test_tup.ToString();\n        for (int i = 0; i < tup.Length; i += 2) {\n            dict.Add(long.Parse(tup[i].ToString()), long.Parse(tup[i+1].ToString()));\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1665509862,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2_7aergn.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2_7aergn.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2_7aergn.cs(21,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for (int i = 0; i < arr.Length-1; i++) {\n            dict.Add(arr[i],arr[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122715,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjatnc1aa.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpjatnc1aa.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpjatnc1aa.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for(int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for(int i = 0; i < arr.Length; i++) {\n            if(i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            } else {\n                dict.Add(arr[i], arr[i+1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122715,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwsgl1l_3.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpwsgl1l_3.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpwsgl1l_3.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        Array.Reverse(arr);\n        for (int i = 0; i < arr.Length - 1; i++) {\n            dict.Add(arr[i], arr[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122715,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyuipci6w.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpyuipci6w.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpyuipci6w.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup];\n        for(int i = 0; i < test_tup; i++) {\n            tup[i] = i;\n        }\n        for(int i = 0; i < test_tup; i++) {\n            if(i % 2 == 0) {\n                dict.Add(tup[i], tup[i+1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122715,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2pjavf7j.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2pjavf7j.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmp2pjavf7j.cs(26,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] arr = new long[test_tup.ToString().Length];\n        for (long i = 0; i < test_tup.ToString().Length; i++) {\n            arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (long i = 0; i < arr.Length; i++) {\n            if (i == arr.Length - 1) {\n                dict.Add(arr[i], arr[0]);\n            } else {\n                dict.Add(arr[i], arr[i + 1]);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122715,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsc2ljvvd.cs(27,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpsc2ljvvd.cs(28,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpsc2ljvvd.cs(29,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        long[] tup = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            tup[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < tup.Length - 1; i++) {\n            dict.Add(tup[i], tup[i + 1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy8xcr9f2.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy8xcr9f2.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpy8xcr9f2.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> test_dict = new Dictionary<long,long>();\n        long[] test_arr = new long[test_tup.ToString().Length];\n        for (int i = 0; i < test_tup.ToString().Length; i++) {\n            test_arr[i] = test_tup % 10;\n            test_tup /= 10;\n        }\n        for (int i = 0; i < test_arr.Length - 1; i++) {\n            test_dict.Add(test_arr[i],test_arr[i+1]);\n        }\n        return test_dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122715,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdqnespfh.cs(23,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpdqnespfh.cs(24,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpdqnespfh.cs(25,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    public static Dictionary<long,long> TupleToDict(long test_tup) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        for (int i = 0; i < test_tup.Length; i++) {\n            dict.Add(test_tup[i], test_tup[i+1]);\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 5L, 7L, 10L, 13L, 5L)).Equals((new Dictionary<long,long>(){{1L, 5L}, {7L, 10L}, {13L, 5L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(1L, 2L, 3L, 4L, 5L, 6L)).Equals((new Dictionary<long,long>(){{1L, 2L}, {3L, 4L}, {5L, 6L}})));\n    Debug.Assert(TupleToDict((long)Tuple.Create(7L, 8L, 9L, 10L, 11L, 12L)).Equals((new Dictionary<long,long>(){{7L, 8L}, {9L, 10L}, {11L, 12L}})));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpudpffc8i.cs(12,38): error CS1061: 'long' does not contain a definition for 'Length' and no accessible extension method 'Length' accepting a first argument of type 'long' could be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpudpffc8i.cs(13,22): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpudpffc8i.cs(13,35): error CS0021: Cannot apply indexing with [] to an expression of type 'long'\n/tmp/tmpudpffc8i.cs(18,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpudpffc8i.cs(19,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n/tmp/tmpudpffc8i.cs(20,30): error CS0030: Cannot convert type 'System.Tuple<long, long, long, long, long, long>' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
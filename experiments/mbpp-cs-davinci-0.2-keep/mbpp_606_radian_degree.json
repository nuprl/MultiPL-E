{
  "name": "mbpp_606_radian_degree",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert degrees to radians.\n    public static float RadianDegree(long degree) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_606_radian_degree.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(RadianDegree((90L)) == (1.5707963267948966f));\n    Debug.Assert(RadianDegree((60L)) == (1.0471975511965976f));\n    Debug.Assert(RadianDegree((120L)) == (2.0943951023931953f));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * (Math.PI / 180));",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float)(degree * (Math.PI / 180));",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;"
  ]
}
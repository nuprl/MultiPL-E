{
  "name": "mbpp_61_count_Substrings",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_61_count_Substrings.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += (int)s[k] - (int)'0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                if (sub.Sum(c => c - '0') == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        int n = s.Length;\n        long res = 0;\n        for (int i = 0; i < n; i++) {\n            int sum = 0;\n            for (int j = i; j < n; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    res++;\n                }\n            }\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                if (SumDigits(s.Substring(i, j - i + 1)) == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwlxss3bt.cs(15,21): error CS0103: The name 'SumDigits' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                if (s.Substring(i, j - i + 1).SumDigits() == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo_82la0_.cs(14,47): error CS1061: 'string' does not contain a definition for 'SumDigits' and no accessible extension method 'SumDigits' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                int sum = 0;\n                foreach (char c in sub) {\n                    sum += (int)char.GetNumericValue(c);\n                }\n                if (sum == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        int n = s.Length;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                if (sub.Sum(c => c - '0') == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                if (SumDigits(s.Substring(i, j - i)) == j - i) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpv14q907j.cs(14,21): error CS0103: The name 'SumDigits' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                string sub = s.Substring(i, j - i + 1);\n                int sum = 0;\n                foreach (char c in sub) {\n                    sum += (int)c - 48;\n                }\n                if (sum == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += (int)s[k] - 48;\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        int n = s.Length;\n        long[] dp = new long[n + 1];\n        dp[0] = 1;\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            int sum = 0;\n            for (int j = i; j >= 0; j--) {\n                sum += s[j] - '0';\n                if (sum == (i - j + 1)) {\n                    ans += dp[j];\n                }\n            }\n            dp[i + 1] = ans;\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ffca30b87a754f9caa234bb2dd9387e2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ffca30b87a754f9caa234bb2dd9387e2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                if (s.Substring(i, j - i + 1).SumDigits() == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo_82la0_.cs(14,47): error CS1061: 'string' does not contain a definition for 'SumDigits' and no accessible extension method 'SumDigits' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        int n = s.Length;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += (s[k] - '0');\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        long[] dp = new long[s.Length];\n        for (int i = 0; i < s.Length; i++) {\n            dp[i] = s[i] - '0';\n            count += dp[i];\n        }\n        for (int i = 1; i < s.Length; i++) {\n            for (int j = 0; j < i; j++) {\n                dp[j] = dp[j] * 10 + s[i] - '0';\n                count += dp[j];\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d360e76b65c14075bd7c07ea351375dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d360e76b65c14075bd7c07ea351375dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        int n = s.Length;\n        for (int i = 0; i < n; i++) {\n            int sum = 0;\n            for (int j = i; j < n; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k < j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        int n = s.Length;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j <= n; j++) {\n                int sum = 0;\n                for (int k = i; k < j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                int sum = 0;\n                foreach (char c in sub) {\n                    sum += int.Parse(c.ToString());\n                }\n                if (sum == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        int len = s.Length;\n        for (int i = 0; i < len; i++) {\n            for (int j = i; j < len; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Your code goes here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                if (sub.Sum(c => c - '0') == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                var sum = s.Substring(i, j - i).Sum(c => c - '0');\n                if (sum == j - i) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                if (s.Substring(i, j - i + 1).SumDigits() == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo_82la0_.cs(14,47): error CS1061: 'string' does not contain a definition for 'SumDigits' and no accessible extension method 'SumDigits' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += (int)s[k] - 48;\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                if (SumDigits(s.Substring(i, j - i)) == j - i) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpv14q907j.cs(14,21): error CS0103: The name 'SumDigits' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                if (sub.Sum(c => c - '0') == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                int sum = 0;\n                foreach (char c in sub) {\n                    sum += (int)c - 48;\n                }\n                if (sum == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                var sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += (int)s[k] - 48;\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                long sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4c85b5728d0b4694812c40a657bcbb41>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4c85b5728d0b4694812c40a657bcbb41>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                if (sub.Sum(c => c - '0') == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                int sum = 0;\n                foreach (char c in sub) {\n                    sum += c - '0';\n                }\n                if (sum == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        int n = s.Length;\n        long[] dp = new long[n + 1];\n        dp[0] = 1;\n        for (int i = 1; i <= n; i++) {\n            dp[i] = dp[i - 1] * 10;\n        }\n        long res = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j <= n; j++) {\n                long sum = 0;\n                for (int k = i; k < j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i) {\n                    res += dp[n - j];\n                }\n            }\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <568177fc4ce14a39b6ac64ad4895c4f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <568177fc4ce14a39b6ac64ad4895c4f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        int n = s.Length;\n        long[] dp = new long[n + 1];\n        dp[0] = 1;\n        for (int i = 1; i <= n; i++) {\n            int sum = 0;\n            for (int j = i; j >= 1; j--) {\n                sum += s[j - 1] - '0';\n                if (sum == i - j + 1) {\n                    dp[i] += dp[j - 1];\n                }\n            }\n        }\n        return dp[n];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c3fce7a0b6894e91976643ec889960bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c3fce7a0b6894e91976643ec889960bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        int n = s.Length;\n        long[] dp = new long[n + 1];\n        dp[0] = 1;\n        for (int i = 0; i < n; i++) {\n            int c = s[i] - '0';\n            for (int j = i + 1; j >= 1; j--) {\n                c += s[j - 1] - '0';\n                if (c == j) {\n                    dp[j] += dp[j - 1];\n                }\n            }\n        }\n        return dp[n];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <af775c5c69e3420ebd325c6f43af0aae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <af775c5c69e3420ebd325c6f43af0aae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                if (SumDigits(s.Substring(i, j - i + 1)) == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwlxss3bt.cs(15,21): error CS0103: The name 'SumDigits' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += int.Parse(s[k].ToString());\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k < j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                if (sub.Sum(c => c - '0') == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                if (s.Substring(i, j - i).SumDigits() == j - i) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnjsdt5mw.cs(14,43): error CS1061: 'string' does not contain a definition for 'SumDigits' and no accessible extension method 'SumDigits' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                if (sub.Sum(c => c - '0') == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += int.Parse(s[j].ToString());\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        int n = s.Length;\n        long[] dp = new long[n];\n        long[] sum = new long[n];\n        for (int i = 0; i < n; i++) {\n            dp[i] = 1;\n            sum[i] = s[i] - '0';\n        }\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j < i; j++) {\n                if (sum[j] == i - j) {\n                    dp[i] += dp[j];\n                }\n                sum[j] += s[i] - '0';\n            }\n        }\n        return dp[n - 1];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7e75cdb1139847daaa3827f3495751c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7e75cdb1139847daaa3827f3495751c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                string sub = s.Substring(i, j - i + 1);\n                if (sub.Length == sub.Sum(c => c - '0')) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                if (sub.Sum(c => c - '0') == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += (int)Char.GetNumericValue(s[k]);\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        int n = s.Length;\n        for (int i = 0; i < n; i++) {\n            int sum = 0;\n            for (int j = i; j < n; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i + 1; j <= s.Length; j++) {\n                string sub = s.Substring(i, j - i);\n                int sum = 0;\n                foreach (char c in sub) {\n                    sum += c - '0';\n                }\n                if (sum == sub.Length) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1666122714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
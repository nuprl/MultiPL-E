{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorSum(i);\n            if (a != i && DivisorSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a == i) continue;\n            long b = SumOfDivisors(a);\n            if (b == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a > i && DivisorSum(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a == i) continue;\n            if (DivisorSum(a) == i) sum += i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = 0;\n            long sum2 = 0;\n            for (long j = 1; j < i; j++) {\n                if (i % j == 0) {\n                    sum1 += j;\n                }\n            }\n            for (long j = 1; j < sum1; j++) {\n                if (sum1 % j == 0) {\n                    sum2 += j;\n                }\n            }\n            if (sum2 == i && sum1 != i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a > i && SumOfProperDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i) {\n                long b = SumOfDivisors(a);\n                if (b == i) {\n                    sum += i + a;\n                }\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a > i && SumOfProperDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = DivisorSum(i);\n            if (i == DivisorSum(d) && i != d) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorSum(i);\n            if (sum1 > i && DivisorSum(sum1) == i) {\n                sum += i + sum1;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            long b = SumOfProperDivisors(a);\n            if (b == i && a != b) {\n                sum += a + b;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = Divisors(i).Sum();\n            if (sumOfDivisors != i && Divisors(sumOfDivisors).Sum() == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a > i && DivisorsSum(a) == i) {\n                sum += a + i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a > i && DivisorsSum(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = SumOfProperDivisors(a);\n            if (a == b) continue;\n            if (SumOfProperDivisors(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = Divisors.SumOfDivisors(i);\n            if (sumOfDivisors > i && Divisors.SumOfDivisors(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d = SumOfProperDivisors(i);\n            if (d != i && SumOfProperDivisors(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i) {\n                long b = SumOfDivisors(a);\n                if (b == i) {\n                    sum += a + b;\n                }\n            }\n        }\n        return sum;"
  ]
}
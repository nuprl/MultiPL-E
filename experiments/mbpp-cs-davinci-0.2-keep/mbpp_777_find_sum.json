{
  "name": "mbpp_777_find_sum",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the sum of non-repeated elements in a given list.\n    public static long FindSum(List<long> arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)1L, (long)1L, (long)4L, (long)5L, (long)6L}))) == (21L));\n    Debug.Assert(FindSum((new List<long>(new long[]{(long)1L, (long)10L, (long)9L, (long)4L, (long)2L, (long)10L, (long)10L, (long)45L, (long)4L}))) == (71L));\n    Debug.Assert(FindSum((new List<long>(new long[]{(long)12L, (long)10L, (long)9L, (long)45L, (long)2L, (long)10L, (long)10L, (long)45L, (long)10L}))) == (78L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (!arr.Contains(arr[i], i + 1)) {\n                sum += arr[i];\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            bool found = false;\n            for (int j = 0; j < arr.Count; j++) {\n                if (i != j && arr[i] == arr[j]) {\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                sum += arr[i];\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        foreach (long i in arr) {\n            if (!arr.Contains(i)) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        foreach (long num in arr) {\n            sum += num;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr.IndexOf(arr[i]) == arr.LastIndexOf(arr[i])) {\n                sum += arr[i];\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (!arr.Contains(arr[i])) {\n                sum += arr[i];\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        foreach (long i in arr) {\n            if (!arr.Contains(i)) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            bool isRepeated = false;\n            for (int j = 0; j < arr.Count; j++) {\n                if (i != j && arr[i] == arr[j]) {\n                    isRepeated = true;\n                    break;\n                }\n            }\n            if (!isRepeated) {\n                sum += arr[i];\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr.Count(x => x == arr[i]) == 1) {\n                sum += arr[i];\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr.IndexOf(arr[i]) == arr.LastIndexOf(arr[i])) {\n                sum += arr[i];\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        foreach (long i in arr) {\n            if (arr.FindAll(x => x == i).Count == 1) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        foreach (long num in arr) {\n            sum += num;\n        }\n        return sum;",
    "        long sum = 0;\n        foreach (long i in arr) {\n            sum += i;\n        }\n        return sum;",
    "        long sum = 0;\n        foreach (long i in arr) {\n            if (arr.IndexOf(i) == arr.LastIndexOf(i)) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        foreach (long num in arr) {\n            sum += num;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr.IndexOf(arr[i]) == arr.LastIndexOf(arr[i])) {\n                sum += arr[i];\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        foreach (long num in arr) {\n            if (arr.IndexOf(num) == arr.LastIndexOf(num)) {\n                sum += num;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        foreach (long item in arr) {\n            sum += item;\n        }\n        return sum;",
    "        long sum = 0;\n        foreach (long i in arr) {\n            sum += i;\n        }\n        return sum;",
    "        // Write your code here\n        return arr.Distinct().Sum();"
  ]
}
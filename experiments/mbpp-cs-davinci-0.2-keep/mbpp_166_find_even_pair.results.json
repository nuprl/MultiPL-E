{
  "name": "mbpp_166_find_even_pair",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_166_find_even_pair.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use a hash table to count the number of times each number appears in the list.\n        // Then we can iterate through the list again, and for each number, we can check how many\n        // times its complement appears in the list.\n        // The complement of a number is the number that, when xor'd with the original number,\n        // yields an even number.\n        // The complement of a number is the number with the same parity as the original number,\n        // but with the opposite sign.\n        // For example, the complement of -2 is 2, and the complement of 2 is -2.\n        // The complement of -1 is 1, and the complement of 1 is -1.\n        // The complement of 0 is 0.\n        // We can compute the complement of a number by taking its absolute value, and then\n        // negating it if the original number was negative.\n        // We can use a hash table to count the number of times each number appears in the list.\n        // Then we can iterate through the list again, and for each number, we can check how many\n        // times its complement appears in the list.\n        // The complement of a number is the number that, when xor'd with the original number,\n        // yields an even number.\n        // The complement of a number is the number with the same parity as the original number,\n        // but with the opposite sign.\n        // For example, the complement of -2 is 2, and the complement of 2 is -2.\n        // The complement of -1 is 1, and the complement of 1 is -1.\n        // The complement of 0 is 0.\n        // We can compute the complement of a number by taking its absolute value, and then\n        // negating it if the original number was negative.\n        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long a in A) {\n            if (!counts.ContainsKey(a)) {\n                counts[a] = 0;\n            }\n            counts[a]++;\n        }\n        long answer = 0;\n        foreach (long a in A) {\n            long complement = Math.Abs(a);\n            if (a < 0) {\n                complement = -complement;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb6tckrpx.cs(49,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpb6tckrpx.cs(55,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use the fact that xor is associative and commutative to group the numbers into pairs.\n        // For example, if we have the list [1, 2, 3, 4, 5], we can group them into the following pairs:\n        // (1, 2), (3, 4), (5, 0)\n        // The xor of each pair is an even number, so we can count the number of pairs by counting the number of even numbers.\n        // We can do this by counting the number of numbers that have an even number of 1 bits.\n        // To do this, we can use the fact that the number of 1 bits in a number is the same as the number of 1 bits in the number modulo 4.\n        // For example, the number of 1 bits in the number 0b10101 is the same as the number of 1 bits in 0b10101 modulo 4, which is 1.\n        // We can use this fact to count the number of numbers that have an even number of 1 bits by counting the number of numbers that have 0, 2, or 4 1 bits.\n        // We can do this by counting the number of numbers that have 0, 2, or 4 1 bits modulo 4.\n        // We can do this by counting the number of numbers that have 0, 2, or 4 1 bits modulo 4 for each of the 4 possible values of the last 2 bits.\n        // For example, if the last 2 bits are 0b00, then we can count the number of numbers that have 0, 2, or 4 1 bits modulo 4 by counting the number of numbers that have 0, 2, or 4 1 bits modulo 4 and have the last 2 bits 0b00.\n        // We can do this by counting the number of numbers that have 0, 2, or 4 1 bits modulo 4 and have the last 2 bits 0b00 for each of the 4 possible values of the last 4 bits.\n        // We can do this by counting the number of numbers that have 0, 2, or 4 1 bits modulo 4 and have the last 2 bits 0b00 for each of the 4 possible values of the last 4 bits.\n        // We can do this by counting the number of numbers that have 0, 2, or 4 1 bits modulo 4 and have the last 2 bits 0b00 for each of the 4 possible values\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk4vrbxau.cs(10,24): error CS0161: 'Problem.FindEvenPair(List<long>)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use the fact that xor is commutative and associative to rewrite the problem as:\n        // Count the number of pairs of integers in A that xor to an even number, where the first integer is even.\n        // This is equivalent to:\n        // Count the number of pairs of integers in A that xor to an even number, where the first integer is odd.\n        // This is equivalent to:\n        // Count the number of pairs of integers in A that xor to an odd number.\n        // This is equivalent to:\n        // Count the number of pairs of integers in A that xor to an odd number, where the first integer is even.\n        // This is equivalent to:\n        // Count the number of pairs of integers in A that xor to an odd number, where the first integer is odd.\n        // This is equivalent to:\n        // Count the number of pairs of integers in A that xor to an even number.\n        // So we can just count the number of pairs of integers in A that xor to an even number.\n        // We can do this by counting the number of pairs of integers in A that xor to an even number, where the first integer is even,\n        // and adding this to the number of pairs of integers in A that xor to an even number, where the first integer is odd.\n        // We can do this by counting the number of pairs of integers in A that xor to an even number, where the first integer is even,\n        // and adding this to the number of pairs of integers in A that xor to an even number, where the first integer is odd.\n        // We can do this by counting the number of pairs of integers in A that xor to an even number, where the first integer is even,\n        // and adding this to the number of pairs of integers in A that xor to an even number, where the first integer is odd.\n        // We can do this by counting the number of pairs of integers in A that xor to an even number, where the first integer is even,\n        // and adding this to the number of pairs of integers in A that xor to an even number, where the first integer is odd.\n        // We can do this by counting the number of pairs of integers in A that xor to an even number, where the first\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpuazlpl8h.cs(10,24): error CS0161: 'Problem.FindEvenPair(List<long>)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8185d81e1975494fb3c30c31e67aa340>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8185d81e1975494fb3c30c31e67aa340>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long evenPairs = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    evenPairs++;\n                }\n            }\n        }\n        return evenPairs;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <42f9d67ff542498ca31c43cb61e019c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <42f9d67ff542498ca31c43cb61e019c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21b802de08e24fff890fcbb08296de05>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21b802de08e24fff890fcbb08296de05>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        // TODO: Implement this function\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <456cea7929604b21b32625092d2d0dbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <456cea7929604b21b32625092d2d0dbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use a hash table to count the number of times each number appears in the list.\n        // Then, for each number, we can count the number of times it xors with an even number.\n        // This is equal to the number of times it xors with an odd number, since the number of\n        // even numbers is equal to the number of odd numbers.\n        //\n        // We can count the number of times a number xors with an odd number by counting the number\n        // of times it xors with a number that has an odd number of 1s in its binary representation.\n        // This is equal to the number of times it xors with a number that has an even number of 1s\n        // in its binary representation, since the number of numbers with an odd number of 1s is\n        // equal to the number of numbers with an even number of 1s.\n        //\n        // We can count the number of times a number xors with a number that has an even number of\n        // 1s in its binary representation by counting the number of times it xors with a number\n        // that has a 1 in each of the even-numbered bits in its binary representation.\n        // This is equal to the number of times it xors with a number that has a 0 in each of the\n        // even-numbered bits in its binary representation, since the number of numbers with a 1 in\n        // each of the even-numbered bits is equal to the number of numbers with a 0 in each of the\n        // even-numbered bits.\n        //\n        // We can count the number of times a number xors with a number that has a 0 in each of the\n        // even-numbered bits in its binary representation by counting the number of times it xors\n        // with a number that has a 1 in each of the odd-numbered bits in its binary representation.\n        // This is equal to the number of times it xors with a number that has a 0 in each of the\n        // odd-numbered bits in its binary representation, since the number of numbers with a 1 in\n        // each of the odd-numbered bits is equal to the number of numbers with a 0 in each of the\n        // odd-numbered bits.\n        //\n        // We can count the number of times a number xors with a number that has a\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7ncwokg_.cs(10,24): error CS0161: 'Problem.FindEvenPair(List<long>)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // This is a simple problem, but it's a good example of a problem that can be solved with a hash table.\n        // The idea is to count the number of times each number appears in the list, and then count the number of\n        // pairs of numbers that xor to an even number.\n        //\n        // To do this, we need to count the number of times each number appears in the list. We can do this with a\n        // hash table.\n        //\n        // The hash table will map from a number to the number of times it appears in the list.\n        //\n        // We can then iterate through the hash table and count the number of pairs of numbers that xor to an even\n        // number.\n        //\n        // To do this, we iterate through the hash table and for each number, we count the number of times it xors\n        // to an even number with each other number in the hash table.\n        //\n        // We can do this by counting the number of times the number xors to an even number with each bit of the\n        // number.\n        //\n        // For example, if the number is 1010, we count the number of times it xors to an even number with each bit\n        // of 1010.\n        //\n        // We can do this by counting the number of times each bit of 1010 appears in the hash table.\n        //\n        // For example, if the hash table contains the numbers 1010, 0101, and 0110, then the number of times 1010\n        // xors to an even number with the bit 1000 is 2 (1010 and 0110).\n        //\n        // We can do this by counting the number of times each bit appears in the hash table.\n        //\n        // We can do this by counting the number of times each bit appears in the hash table.\n        //\n        // We can do this by counting the number of times each bit appears in the hash table.\n        //\n        // We can do this by counting the number of times each bit appears in the hash table.\n        //\n        // We can do this by counting the number of times each bit appears in the hash table.\n        //\n        // We can do this by counting the number of times each bit appears in the hash table.\n        //\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvkas3lp_.cs(10,24): error CS0161: 'Problem.FindEvenPair(List<long>)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use the fact that a ^ b = c iff a ^ c = b.\n        // So we can iterate through the list, and for each element, we can check how many elements in the list xor to it.\n        // This will take O(n^2) time.\n        // We can improve this by using a hash table.\n        // We can iterate through the list, and for each element, we can check if the hash table contains the xor of the element with an even number.\n        // If it does, we can add the number of elements that xor to it to the count.\n        // If it doesn't, we can add the element to the hash table.\n        // This will take O(n) time.\n        // We can improve this by using a bit array.\n        // We can iterate through the list, and for each element, we can check if the bit array contains the xor of the element with an even number.\n        // If it does, we can add the number of elements that xor to it to the count.\n        // If it doesn't, we can add the element to the bit array.\n        // This will take O(n) time.\n        // We can improve this by using a bit array and a hash table.\n        // We can iterate through the list, and for each element, we can check if the bit array contains the xor of the element with an even number.\n        // If it does, we can add the number of elements that xor to it to the count.\n        // If it doesn't, we can add the element to the hash table.\n        // This will take O(n) time.\n        // We can improve this by using a bit array and a hash table.\n        // We can iterate through the list, and for each element, we can check if the bit array contains the xor of the element with an even number.\n        // If it does, we can add the number of elements that xor to it to the count.\n        // If it doesn't, we can add the element to the hash table.\n        // This will take O(n) time.\n        // We can improve this by using a bit array and a hash table.\n        // We can iterate through the list, and for each element,\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4954lp4y.cs(10,24): error CS0161: 'Problem.FindEvenPair(List<long>)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use a hash table to store the number of times each number appears in the list.\n        // Then, we can iterate through the list and check how many times the xor of each number\n        // with each other number appears in the list.\n        //\n        // We can use a hash table to store the number of times each number appears in the list.\n        // Then, we can iterate through the list and check how many times the xor of each number\n        // with each other number appears in the list.\n        //\n        // We can use a hash table to store the number of times each number appears in the list.\n        // Then, we can iterate through the list and check how many times the xor of each number\n        // with each other number appears in the list.\n        //\n        // We can use a hash table to store the number of times each number appears in the list.\n        // Then, we can iterate through the list and check how many times the xor of each number\n        // with each other number appears in the list.\n        //\n        // We can use a hash table to store the number of times each number appears in the list.\n        // Then, we can iterate through the list and check how many times the xor of each number\n        // with each other number appears in the list.\n        //\n        // We can use a hash table to store the number of times each number appears in the list.\n        // Then, we can iterate through the list and check how many times the xor of each number\n        // with each other number appears in the list.\n        //\n        // We can use a hash table to store the number of times each number appears in the list.\n        // Then, we can iterate through the list and check how many times the xor of each number\n        // with each other number appears in the list.\n        //\n        // We can use a hash table to store the number of times each number appears in the list.\n        // Then, we can iterate through the list and check how many times the xor of each number\n        // with each other number appears in the list.\n        //\n        // We can use a hash table to store the number of times each number appears in the list.\n        // Then, we can iterate through\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpuzy4df56.cs(10,24): error CS0161: 'Problem.FindEvenPair(List<long>)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Implement this placeholder.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21b802de08e24fff890fcbb08296de05>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21b802de08e24fff890fcbb08296de05>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Count the number of even and odd numbers in the list.\n        long evenCount = 0;\n        long oddCount = 0;\n        foreach (long a in A) {\n            if (a % 2 == 0) {\n                evenCount++;\n            } else {\n                oddCount++;\n            }\n        }\n        // The number of pairs that xor to an even number is the number of even numbers times the number of odd numbers.\n        return evenCount * oddCount;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c668c61ea30b4490b6f51ba8fa287ef3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c668c61ea30b4490b6f51ba8fa287ef3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We want to count the number of pairs of integers that xor to an even number.\n        // We can do this by counting the number of pairs of integers that xor to an odd number,\n        // and subtracting that from the total number of pairs.\n        // The total number of pairs is n choose 2, which is n(n-1)/2.\n        // The number of pairs that xor to an odd number is the number of pairs that have the same parity.\n        // We can count the number of pairs that have the same parity by counting the number of even numbers\n        // and the number of odd numbers, and multiplying them.\n        // The number of pairs that xor to an even number is then n(n-1)/2 - evens*odds.\n        // We can compute the number of evens and odds in O(n) time by iterating through the list.\n        long evens = 0;\n        long odds = 0;\n        foreach (long a in A) {\n            if (a % 2 == 0) {\n                evens++;\n            } else {\n                odds++;\n            }\n        }\n        return (A.Count * (A.Count - 1) / 2) - evens * odds;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1228fee9ac4f467bbbebae4b5569bc42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long even = 0;\n        long odd = 0;\n        foreach (long a in A) {\n            if (a % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n        return even * (even - 1) / 2 + odd * (odd - 1) / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We want to count the number of pairs (a, b) such that a ^ b is even.\n        // We can rewrite this as the number of pairs (a, b) such that a ^ b = 0 (mod 2).\n        // This is equivalent to the number of pairs (a, b) such that a = b (mod 2).\n        // This is equivalent to the number of pairs (a, b) such that a = b.\n        // We can count this by counting the number of times each element appears in the list.\n        // We can do this with a dictionary.\n        var counts = new Dictionary<long, long>();\n        foreach (var a in A) {\n            if (!counts.ContainsKey(a)) {\n                counts[a] = 0;\n            }\n            counts[a]++;\n        }\n        // Now we just need to count the number of pairs (a, a) for each a.\n        // This is the number of pairs (a, a) for each a, which is the number of times a appears in the list.\n        // This is the number of times a appears in the list, squared.\n        // This is the square of the number of times a appears in the list.\n        // We can compute this by squaring the number of times a appears in the list.\n        return counts.Values.Sum(c => c * c);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b63850a38ad84d029fc5951b58a28f71>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b63850a38ad84d029fc5951b58a28f71>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // The xor of two numbers is even if and only if the number of 1 bits in the xor is even.\n        // We can count the number of 1 bits in the xor of two numbers by counting the number of 1 bits in each number and multiplying them.\n        // For example, if we have two numbers with 2 and 3 1 bits, respectively, then the xor of those two numbers will have 5 1 bits.\n        // We can count the number of 1 bits in a number by counting the number of 1 bits in each of its binary digits.\n        // For example, if we have a number with 2 1 bits in its first binary digit and 3 1 bits in its second binary digit, then the number has 5 1 bits.\n        // We can count the number of 1 bits in a binary digit by counting the number of 1 bits in each of its bits.\n        // For example, if we have a binary digit with 2 1 bits in its first bit and 3 1 bits in its second bit, then the binary digit has 5 1 bits.\n        // We can count the number of 1 bits in a bit by counting the number of 1 bits in each of its digits.\n        // For example, if we have a bit with 2 1 bits in its first digit and 3 1 bits in its second digit, then the bit has 5 1 bits.\n        // We can count the number of 1 bits in a digit by counting the number of 1 bits in each of its bits.\n        // For example, if we have a digit with 2 1 bits in its first bit and 3 1 bits in its second bit, then the digit has 5 1 bits.\n        // We can count the number of 1 bits in a bit by counting the number of 1 bits in each of its digits.\n        // For example, if we have a bit with 2 1 bits in its first digit and 3 1 bits in its second digit, then the bit has 5 1 bits.\n        // We can count the number of 1 bits in a digit by counting the number of 1 bits in each of its bits.\n        // For example, if we have a digit with 2 1 bits in its first bit and 3 1 bits in its second bit, then the digit has 5 1 bits.\n        // We can count the number of 1 bits in a bit by counting the number of 1 bits in each of its digits.\n        // For example, if we\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgjuk4xqm.cs(10,24): error CS0161: 'Problem.FindEvenPair(List<long>)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long result = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    result++;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122765,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4304678d6aeb46a7943eb4ac275b0456>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4304678d6aeb46a7943eb4ac275b0456>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use a hash table to count the number of times each number appears in the list.\n        // Then, for each number, we can check how many times the number xor'd with an even number appears.\n        // We can use a bitmask to check if a number is even or odd.\n        // If a number is even, then the last bit of the number will be 0.\n        // If a number is odd, then the last bit of the number will be 1.\n        // We can use the bitwise AND operator to check if the last bit of a number is 0.\n        // If the last bit is 0, then the number is even.\n        // If the last bit is 1, then the number is odd.\n        // We can use the bitwise XOR operator to flip the last bit of a number.\n        // If the last bit is 0, then the number is even, and the last bit will be flipped to 1.\n        // If the last bit is 1, then the number is odd, and the last bit will be flipped to 0.\n        // We can use the bitwise XOR operator to flip the last bit of a number.\n        // If the last bit is 0, then the number is even, and the last bit will be flipped to 1.\n        // If the last bit is 1, then the number is odd, and the last bit will be flipped to 0.\n        // We can use the bitwise XOR operator to flip the last bit of a number.\n        // If the last bit is 0, then the number is even, and the last bit will be flipped to 1.\n        // If the last bit is 1, then the number is odd, and the last bit will be flipped to 0.\n        // We can use the bitwise XOR operator to flip the last bit of a number.\n        // If the last bit is 0, then the number is even, and the last bit will be flipped to 1.\n        // If the last bit is 1, then the number is odd, and the last bit will be flipped to 0.\n        // We can use the bitwise XOR operator to flip the last bit of a number.\n        // If the last bit is 0, then the number is even, and the last bit will be flipped to 1.\n        // If the last bit is 1, then\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfwh3x673.cs(10,24): error CS0161: 'Problem.FindEvenPair(List<long>)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Write your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4e7cba1981e64d9c9e70d1f8209fca9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4e7cba1981e64d9c9e70d1f8209fca9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use a hash table to count the number of times each number appears in the list.\n        // Then, for each number, we can count the number of times it xors with an even number.\n        // The total number of pairs is the sum of these counts.\n        // We can use a hash table to count the number of times each number appears in the list.\n        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long a in A) {\n            if (!counts.ContainsKey(a)) {\n                counts[a] = 0;\n            }\n            counts[a]++;\n        }\n        // Then, for each number, we can count the number of times it xors with an even number.\n        long result = 0;\n        foreach (long a in counts.Keys) {\n            // The number of times a xors with an even number is the number of times it xors with 0.\n            // This is the number of times it appears in the list.\n            result += counts[a];\n        }\n        // The total number of pairs is the sum of these counts.\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87f4b8f7522d48bf9b3147341c22c7a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87f4b8f7522d48bf9b3147341c22c7a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use a bitmask to count the number of even and odd numbers in the list.\n        // Then, we can use the fact that the number of even pairs is the number of even numbers\n        // times the number of odd numbers plus the number of odd numbers times the number of even numbers.\n        // This is because we can pair an even number with an odd number or an odd number with an even number.\n        // We can do this for each bitmask.\n        long evenCount = 0;\n        long oddCount = 0;\n        for (int i = 0; i < A.Count; i++) {\n            if (A[i] % 2 == 0) {\n                evenCount++;\n            } else {\n                oddCount++;\n            }\n        }\n        return evenCount * oddCount + evenCount * oddCount;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <944fd4b1dcb447a1aec0449e1415fb2e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <944fd4b1dcb447a1aec0449e1415fb2e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long evenPairs = 0;\n        long oddPairs = 0;\n        foreach (long a in A) {\n            if (a % 2 == 0) {\n                evenPairs++;\n            } else {\n                oddPairs++;\n            }\n        }\n        return evenPairs * evenPairs + oddPairs * oddPairs;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f0898c17fc7245f6a3b119f70d82a6e8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f0898c17fc7245f6a3b119f70d82a6e8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long result = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    result++;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        foreach (long a in A) {\n            foreach (long b in A) {\n                if ((a ^ b) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4074fac7664b427eb4af89d9913b51ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4074fac7664b427eb4af89d9913b51ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // Write your code here\n        long count = 0;\n        foreach (long a in A) {\n            foreach (long b in A) {\n                if ((a ^ b) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fbf45d327b48ebb1ccc43ebff074d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fbf45d327b48ebb1ccc43ebff074d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // We can use a hash table to store the number of times each number appears in the list.\n        // We can then iterate through the list and for each number, we can check if the xor of that number and every other number in the list is even.\n        // If it is, we add the number of times that other number appears in the list to our answer.\n        // We can also add the number of times the number appears in the list to our answer, since the xor of a number with itself is always even.\n        // We can use a hash table to store the number of times each number appears in the list.\n        Dictionary<long, long> count = new Dictionary<long, long>();\n        foreach (long x in A) {\n            if (count.ContainsKey(x)) {\n                count[x]++;\n            } else {\n                count[x] = 1;\n            }\n        }\n        // We can then iterate through the list and for each number, we can check if the xor of that number and every other number in the list is even.\n        // If it is, we add the number of times that other number appears in the list to our answer.\n        // We can also add the number of times the number appears in the list to our answer, since the xor of a number with itself is always even.\n        long answer = 0;\n        foreach (long x in A) {\n            foreach (long y in count.Keys) {\n                if ((x ^ y) % 2 == 0) {\n                    answer += count[y];\n                }\n            }\n            answer += count[x] - 1;\n        }\n        return answer / 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122767,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f6264f0b0b54d81842a121266252900>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3f6264f0b0b54d81842a121266252900>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long result = 0;\n        // Implement this placeholder.\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122768,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0edaebcfaa7446f6a373af0cd13e2c91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0edaebcfaa7446f6a373af0cd13e2c91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long result = 0;\n        // Write your code here\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1666122768,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <869eb27ba7764d03a41b20616ddde250>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <869eb27ba7764d03a41b20616ddde250>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0e0155b1f0d24e22b0c9a43d183893ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    public static long FindEvenPair(List<long> A) {\n        long count = 0;\n        for (int i = 0; i < A.Count; i++) {\n            for (int j = i + 1; j < A.Count; j++) {\n                if ((A[i] ^ A[j]) % 2 == 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)5L, (long)4L, (long)7L, (long)2L, (long)1L}))) == (4L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)7L, (long)2L, (long)8L, (long)1L, (long)0L, (long)5L, (long)11L}))) == (9L));\n    Debug.Assert(FindEvenPair((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (1L));\n    }\n\n}\n",
      "timestamp": 1665510178,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
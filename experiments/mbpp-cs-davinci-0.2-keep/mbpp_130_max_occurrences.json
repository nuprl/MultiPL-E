{
  "name": "mbpp_130_max_occurrences",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given list.\n    public static long MaxOccurrences(List<long> nums) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_130_max_occurrences.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxOccurrences((new List<long>(new long[]{(long)2L, (long)3L, (long)8L, (long)4L, (long)7L, (long)9L, (long)8L, (long)2L, (long)6L, (long)5L, (long)1L, (long)6L, (long)1L, (long)2L, (long)3L, (long)2L, (long)4L, (long)6L, (long)9L, (long)1L, (long)2L}))) == (2L));\n    Debug.Assert(MaxOccurrences((new List<long>(new long[]{(long)2L, (long)3L, (long)8L, (long)4L, (long)7L, (long)9L, (long)8L, (long)7L, (long)9L, (long)15L, (long)14L, (long)10L, (long)12L, (long)13L, (long)16L, (long)18L}))) == (8L));\n    Debug.Assert(MaxOccurrences((new List<long>(new long[]{(long)10L, (long)20L, (long)20L, (long)30L, (long)40L, (long)90L, (long)80L, (long)50L, (long)30L, (long)20L, (long)50L, (long)10L}))) == (20L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        // Your code here\n        return 0;",
    "        var freq = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!freq.ContainsKey(num)) {\n                freq[num] = 0;\n            }\n            freq[num]++;\n        }\n        return freq.Values.Max();",
    "        // Your code here\n        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        var max = dict.Values.Max();\n        return dict.First(x => x.Value == max).Key;",
    "        // Your code here\n        return 0;",
    "        // Your code here.\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var kvp in dict) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n            }\n        }\n        return max;",
    "        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (freq.ContainsKey(num)) {\n                freq[num]++;\n            } else {\n                freq[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> pair in freq) {\n            if (pair.Value > max) {\n                max = pair.Value;\n                maxKey = pair.Key;\n            }\n        }\n        return maxKey;",
    "        Dictionary<long, long> d = new Dictionary<long, long>();\n        foreach (long n in nums) {\n            if (d.ContainsKey(n)) {\n                d[n]++;\n            } else {\n                d[n] = 1;\n            }\n        }\n        return d.Values.Max();",
    "        // Your code goes here.\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (freq.ContainsKey(num)) {\n                freq[num] += 1;\n            } else {\n                freq[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxNum = 0;\n        foreach (long num in freq.Keys) {\n            if (freq[num] > max) {\n                max = freq[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        Dictionary<long, long> occurrences = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (occurrences.ContainsKey(num)) {\n                occurrences[num]++;\n            } else {\n                occurrences[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long key in occurrences.Keys) {\n            if (occurrences[key] > max) {\n                max = occurrences[key];\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        // Your code goes here.\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Aggregate((l, r) => l.Value > r.Value ? l : r).Key;",
    "        var dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxNum = 0;\n        foreach (KeyValuePair<long, long> entry in dict) {\n            if (entry.Value > max) {\n                max = entry.Value;\n                maxNum = entry.Key;\n            }\n        }\n        return maxNum;",
    "        Dictionary<long, long> occurrences = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (occurrences.ContainsKey(num)) {\n                occurrences[num]++;\n            } else {\n                occurrences[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in occurrences.Keys) {\n            if (occurrences[num] > max) {\n                max = occurrences[num];\n            }\n        }\n        return max;",
    "        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (!freq.ContainsKey(num)) {\n                freq[num] = 0;\n            }\n            freq[num]++;\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (long key in freq.Keys) {\n            if (freq[key] > max) {\n                max = freq[key];\n                maxKey = key;\n            }\n        }\n        return maxKey;",
    "        // Your code goes here.\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (counts.ContainsKey(n)) {\n                counts[n]++;\n            } else {\n                counts[n] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > maxCount) {\n                maxCount = counts[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        // Your code here\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num))\n                counts[num] = 0;\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        // Your code goes here.\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        var max = 0L;\n        foreach (var count in counts.Values) {\n            max = Math.Max(max, count);\n        }\n        return max;",
    "        Dictionary<long, long> occurences = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (occurences.ContainsKey(num)) {\n                occurences[num]++;\n            } else {\n                occurences[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> kvp in occurences) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                maxKey = kvp.Key;\n            }\n        }\n        return maxKey;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        long max = 0;\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (!dict.ContainsKey(n)) {\n                dict[n] = 0;\n            }\n            dict[n]++;\n        }\n        long max = 0;\n        long max_num = 0;\n        foreach (var kvp in dict) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                max_num = kvp.Key;\n            }\n        }\n        return max_num;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        // TODO: Implement this function\n        return 0;",
    "        var freq = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!freq.ContainsKey(num)) {\n                freq[num] = 0;\n            }\n            freq[num]++;\n        }\n        return freq.Values.Max();",
    "        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (freq.ContainsKey(num)) {\n                freq[num]++;\n            } else {\n                freq[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxNum = 0;\n        foreach (long num in freq.Keys) {\n            if (freq[num] > max) {\n                max = freq[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        // Write your code here.\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict.Add(num, 1);\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> entry in dict) {\n            if (entry.Value > max) {\n                max = entry.Value;\n                maxKey = entry.Key;\n            }\n        }\n        return maxKey;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (counts.ContainsKey(n)) {\n                counts[n]++;\n            } else {\n                counts[n] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        long max = 0;\n        long maxCount = 0;\n        foreach (var kvp in counts) {\n            if (kvp.Value > maxCount) {\n                max = kvp.Key;\n                maxCount = kvp.Value;\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        var max = 0L;\n        foreach (var count in counts.Values) {\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        return dict.Values.Max();",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        // Your code here.\n        return 0;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        Dictionary<long, long> occurrences = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (occurrences.ContainsKey(num)) {\n                occurrences[num]++;\n            } else {\n                occurrences[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> kvp in occurrences) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                maxKey = kvp.Key;\n            }\n        }\n        return maxKey;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Aggregate((l, r) => l.Value > r.Value ? l : r).Key;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > maxCount) {\n                maxCount = counts[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num] += 1;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> pair in dict) {\n            if (pair.Value > max) {\n                max = pair.Value;\n                maxKey = pair.Key;\n            }\n        }\n        return maxKey;",
    "        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long key in dict.Keys) {\n            if (dict[key] > max) {\n                max = dict[key];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        // Your code here\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Max(kvp => kvp.Value);",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (var pair in counts) {\n            if (pair.Value > maxCount) {\n                maxCount = pair.Value;\n                maxNum = pair.Key;\n            }\n        }\n        return maxNum;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        var max = 0L;\n        var maxNum = 0L;\n        foreach (var kvp in counts) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                maxNum = kvp.Key;\n            }\n        }\n        return maxNum;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long maxCount = 0;\n        long maxItem = 0;\n        foreach (var item in counts.Keys) {\n            if (counts[item] > maxCount) {\n                maxCount = counts[item];\n                maxItem = item;\n            }\n        }\n        return maxItem;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (var key in counts.Keys) {\n            if (counts[key] > max) {\n                max = counts[key];\n                maxKey = key;\n            }\n        }\n        return maxKey;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long key in counts.Keys) {\n            if (counts[key] > max) {\n                max = counts[key];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 1;\n            } else {\n                dict[num]++;\n            }\n        }\n        return dict.Values.Max();",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        // Your code goes here.\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict.Add(num, 1);\n            }\n        }\n        long max = 0;\n        foreach (long num in dict.Keys) {\n            if (dict[num] > max) {\n                max = num;\n            }\n        }\n        return max;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> pair in counts) {\n            if (pair.Value > max) {\n                max = pair.Value;\n                maxKey = pair.Key;\n            }\n        }\n        return maxKey;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var kvp in dict) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        return dict.Aggregate((x, y) => x.Value > y.Value ? x : y).Key;",
    "        // Write your code here\n        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var max = nums.Max();\n        var min = nums.Min();\n        var count = new long[max - min + 1];\n        foreach (var num in nums) {\n            count[num - min]++;\n        }\n        return count.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Max(kvp => kvp.Value);",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict.Add(num, 1);\n            }\n        }\n        var max = dict.Values.Max();\n        return dict.First(x => x.Value == max).Key;",
    "        // Write your code here.\n        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict.Add(num, 1);\n            }\n        }\n        var max = dict.Values.Max();\n        return dict.First(x => x.Value == max).Key;",
    "        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        // Your code here\n        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict.Add(num, 1);\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        var max = 0L;\n        foreach (var count in counts.Values) {\n            max = Math.Max(max, count);\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        var max = 0L;\n        var maxKey = 0L;\n        foreach (var key in counts.Keys) {\n            if (counts[key] > max) {\n                max = counts[key];\n                maxKey = key;\n            }\n        }\n        return maxKey;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (dict.ContainsKey(n)) {\n                dict[n]++;\n            } else {\n                dict[n] = 1;\n            }\n        }\n        long max = 0;\n        long max_key = 0;\n        foreach (var kvp in dict) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                max_key = kvp.Key;\n            }\n        }\n        return max_key;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long n in nums) {\n            if (counts.ContainsKey(n)) {\n                counts[n]++;\n            } else {\n                counts[n] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> kvp in counts) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                maxKey = kvp.Key;\n            }\n        }\n        return maxKey;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Aggregate((x, y) => x.Value > y.Value ? x : y).Key;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        var max = dict.Values.Max();\n        return dict.First(kvp => kvp.Value == max).Key;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxNum = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var key in dict.Keys) {\n            if (dict[key] > max) {\n                max = dict[key];\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (!counts.ContainsKey(n)) {\n                counts[n] = 0;\n            }\n            counts[n]++;\n        }\n        return counts.Values.Max();",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (KeyValuePair<long, long> pair in counts) {\n            if (pair.Value > max) {\n                max = pair.Value;\n            }\n        }\n        return max;",
    "        Dictionary<long, long> occurrences = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (occurrences.ContainsKey(num)) {\n                occurrences[num]++;\n            } else {\n                occurrences[num] = 1;\n            }\n        }\n        long maxOccurrences = 0;\n        long maxNum = 0;\n        foreach (KeyValuePair<long, long> entry in occurrences) {\n            if (entry.Value > maxOccurrences) {\n                maxOccurrences = entry.Value;\n                maxNum = entry.Key;\n            }\n        }\n        return maxNum;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        // Your code here\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (var key in counts.Keys) {\n            if (counts[key] > max) {\n                max = counts[key];\n                maxKey = key;\n            }\n        }\n        return maxKey;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Aggregate((l, r) => l.Value > r.Value ? l : r).Key;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (freq.ContainsKey(num)) {\n                freq[num]++;\n            } else {\n                freq[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> entry in freq) {\n            if (entry.Value > max) {\n                max = entry.Value;\n                maxKey = entry.Key;\n            }\n        }\n        return maxKey;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var max = 0L;\n        var count = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!count.ContainsKey(num)) {\n                count[num] = 0;\n            }\n            count[num]++;\n            max = Math.Max(max, count[num]);\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        // Your code here\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num))\n                counts[num] = 0;\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        // Your code goes here.\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        // Your code here\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        var max = dict.Values.Max();\n        return dict.First(x => x.Value == max).Key;",
    "        // Your code here\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        var map = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!map.ContainsKey(num)) {\n                map.Add(num, 0);\n            }\n            map[num]++;\n        }\n        long max = 0;\n        foreach (var kvp in map) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        // Your code here\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        long max = 0;\n        foreach (var kv in dict) {\n            if (kv.Value > max) {\n                max = kv.Value;\n            }\n        }\n        return max;",
    "        // Your code goes here.\n        return 0;",
    "        // Write your code here\n        var max = 0;\n        var maxCount = 0;\n        var dict = new Dictionary<long, int>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n            if (dict[num] > maxCount) {\n                maxCount = dict[num];\n                max = num;\n            }\n        }\n        return max;",
    "        // Your code goes here.\n        return 0;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > maxCount) {\n                maxCount = counts[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        // Your code goes here.\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        // TODO: Implement this function\n        return 0;",
    "        long max = 0;\n        long maxCount = 0;\n        Dictionary<long, long> count = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (count.ContainsKey(num)) {\n                count[num]++;\n            } else {\n                count[num] = 1;\n            }\n            if (count[num] > maxCount) {\n                maxCount = count[num];\n                max = num;\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        // Your code goes here.\n        return 0;",
    "        // Your code here.\n        return 0;",
    "        // Write your code here\n        long max = 0;\n        long count = 0;\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict.Add(num, 1);\n            }\n        }\n        foreach (KeyValuePair<long, long> pair in dict) {\n            if (pair.Value > count) {\n                count = pair.Value;\n                max = pair.Key;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        Dictionary<long, long> occurrences = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (!occurrences.ContainsKey(num)) {\n                occurrences[num] = 0;\n            }\n            occurrences[num]++;\n        }\n        long max = 0;\n        long maxNum = 0;\n        foreach (long num in occurrences.Keys) {\n            if (occurrences[num] > max) {\n                max = occurrences[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (freq.ContainsKey(num)) {\n                freq[num]++;\n            } else {\n                freq[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (long key in freq.Keys) {\n            if (freq[key] > max) {\n                max = freq[key];\n                maxKey = key;\n            }\n        }\n        return maxKey;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num] += 1;\n        }\n        return counts.Values.Max();",
    "        // Your code goes here.\n        return 0;",
    "        // Your code here\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (!counts.ContainsKey(n)) {\n                counts[n] = 0;\n            }\n            counts[n]++;\n        }\n        var max = counts.Values.Max();\n        return counts.Where(kvp => kvp.Value == max).Select(kvp => kvp.Key).Min();",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (KeyValuePair<long, long> pair in counts) {\n            if (pair.Value > maxCount) {\n                maxCount = pair.Value;\n                maxNum = pair.Key;\n            }\n        }\n        return maxNum;",
    "        // Your code goes here.\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict.Add(num, 1);\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> pair in dict) {\n            if (pair.Value > max) {\n                max = pair.Value;\n                maxKey = pair.Key;\n            }\n        }\n        return maxKey;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        // Your code here!\n        return 0;",
    "        long max = 0;\n        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        var max = 0L;\n        foreach (var kvp in dict) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var pair in counts) {\n            if (pair.Value > max) {\n                max = pair.Value;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        long max = 0;\n        long maxCount = 0;\n        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n            if (counts[num] > maxCount) {\n                maxCount = counts[num];\n                max = num;\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (counts.ContainsKey(n)) {\n                counts[n]++;\n            } else {\n                counts[n] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (dict.ContainsKey(n)) {\n                dict[n]++;\n            } else {\n                dict[n] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var count in counts.Values) {\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> pair in counts) {\n            if (pair.Value > max) {\n                max = pair.Value;\n                maxKey = pair.Key;\n            }\n        }\n        return maxKey;",
    "        // Your code here.\n        return 0;",
    "        // Your code here\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        Dictionary<long, long> occurrences = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (occurrences.ContainsKey(num)) {\n                occurrences[num]++;\n            } else {\n                occurrences[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxNum = 0;\n        foreach (KeyValuePair<long, long> pair in occurrences) {\n            if (pair.Value > max) {\n                max = pair.Value;\n                maxNum = pair.Key;\n            }\n        }\n        return maxNum;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxNum = 0;\n        foreach (var kvp in counts) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                maxNum = kvp.Key;\n            }\n        }\n        return maxNum;",
    "        // TODO: Implement this function\n        return 0;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > maxCount) {\n                maxCount = counts[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (dict.ContainsKey(n)) {\n                dict[n]++;\n            } else {\n                dict[n] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var kv in dict) {\n            if (kv.Value > max) {\n                max = kv.Value;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var key in dict.Keys) {\n            if (dict[key] > max) {\n                max = dict[key];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long key in dict.Keys) {\n            if (dict[key] > max) {\n                max = dict[key];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, int>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        return dict.Aggregate((x, y) => x.Value > y.Value ? x : y).Key;",
    "        // Your code here\n        long max = 0;\n        long maxCount = 0;\n        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n            if (counts[num] > maxCount) {\n                maxCount = counts[num];\n                max = num;\n            }\n        }\n        return max;",
    "        var max = 0;\n        var max_count = 0;\n        var counts = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (!counts.ContainsKey(n)) {\n                counts[n] = 0;\n            }\n            counts[n]++;\n            if (counts[n] > max_count) {\n                max = n;\n                max_count = counts[n];\n            }\n        }\n        return max;",
    "        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        long max = 0;\n        foreach (long num in dict.Keys) {\n            if (dict[num] > max) {\n                max = dict[num];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        var max = counts.Values.Max();\n        return counts.First(kvp => kvp.Value == max).Key;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        var max = 0L;\n        foreach (var count in counts.Values) {\n            max = Math.Max(max, count);\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        var max = dict.Values.Max();\n        return dict.First(x => x.Value == max).Key;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (dict.ContainsKey(n)) {\n                dict[n]++;\n            } else {\n                dict[n] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        var max = 0L;\n        foreach (var pair in dict) {\n            if (pair.Value > max) {\n                max = pair.Value;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        return nums.GroupBy(x => x).OrderByDescending(x => x.Count()).First().Key;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (var pair in counts) {\n            if (pair.Value > maxCount) {\n                maxCount = pair.Value;\n                maxNum = pair.Key;\n            }\n        }\n        return maxNum;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxNum = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var kvp in dict) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        return dict.Values.Max();"
  ]
}
{
  "name": "mbpp_268_find_star_num",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the n'th star number.\n    public static long FindStarNum(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_268_find_star_num.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindStarNum((3L)) == (37L));\n    Debug.Assert(FindStarNum((4L)) == (73L));\n    Debug.Assert(FindStarNum((5L)) == (121L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            if (IsStarNum(i)) {\n                count++;\n            }\n            i++;\n        }\n        return i - 1;",
    "        long starNum = 0;\n        long i = 1;\n        while (n > 0) {\n            if (IsStarNum(i)) {\n                starNum = i;\n                n--;\n            }\n            i++;\n        }\n        return starNum;",
    "        long starNum = 0;\n        long i = 1;\n        while (n > 0) {\n            if (IsStarNum(i)) {\n                starNum = i;\n                n--;\n            }\n            i++;\n        }\n        return starNum;",
    "        long i = 1;\n        long star = 1;\n        while (i < n) {\n            star += 6 * i;\n            i++;\n        }\n        return star;",
    "        long starNum = 1;\n        long count = 1;\n        while (count < n) {\n            starNum++;\n            if (IsStarNum(starNum)) {\n                count++;\n            }\n        }\n        return starNum;",
    "        long i = 1;\n        long starNum = 0;\n        while (i <= n) {\n            starNum += i;\n            i++;\n        }\n        return starNum;",
    "        long i = 0;\n        long num = 0;\n        while (i < n) {\n            num++;\n            if (IsStarNum(num)) {\n                i++;\n            }\n        }\n        return num;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (IsStarNum(i)) {\n                count++;\n            }\n        }\n        return i;",
    "        // The n'th star number is the n'th triangular number * 2.\n        return n * (n + 1) / 2 * 2;",
    "        long i = 1;\n        long star = 0;\n        while (n > 0) {\n            star = (i * (i + 1)) / 2;\n            i++;\n            n--;\n        }\n        return star;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (IsStarNum(i)) {\n                count++;\n            }\n        }\n        return i;",
    "        long num = 1;\n        long count = 1;\n        while (count < n) {\n            num++;\n            if (IsStarNum(num)) {\n                count++;\n            }\n        }\n        return num;",
    "        long starNum = 0;\n        long i = 1;\n        while (n > 0) {\n            starNum = i * (i + 1) * (i + 2);\n            i++;\n            n--;\n        }\n        return starNum;",
    "        long num = 1;\n        long count = 1;\n        while (count < n) {\n            num++;\n            if (IsStarNum(num)) {\n                count++;\n            }\n        }\n        return num;",
    "        long starNum = 0;\n        long i = 1;\n        while (n > 0) {\n            if (IsStarNum(i)) {\n                starNum = i;\n                n--;\n            }\n            i++;\n        }\n        return starNum;",
    "        // Your code here.\n        return 0;",
    "        long starNum = 1;\n        long i = 1;\n        while (i < n) {\n            starNum += 6 * i;\n            i++;\n        }\n        return starNum;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            if (IsStarNum(i)) {\n                count++;\n            }\n            i++;\n        }\n        return i - 1;",
    "        // Your code here.\n        return 0;",
    "        long starNum = 1;\n        long count = 1;\n        while (count < n) {\n            starNum++;\n            if (IsStarNum(starNum)) {\n                count++;\n            }\n        }\n        return starNum;"
  ]
}
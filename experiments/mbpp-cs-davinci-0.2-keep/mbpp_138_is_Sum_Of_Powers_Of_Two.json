{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n    public static bool IsSumOfPowersOfTwo(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsSumOfPowersOfTwo((10L)) == (true));\n    Debug.Assert(IsSumOfPowersOfTwo((7L)) == (false));\n    Debug.Assert(IsSumOfPowersOfTwo((14L)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (n == 0) return true;\n        if (n == 1) return true;\n        if (n == 2) return true;\n        if (n == 3) return false;\n        if (n == 4) return true;\n        if (n == 5) return false;\n        if (n == 6) return false;\n        if (n == 7) return false;\n        if (n == 8) return true;\n        if (n == 9) return false;\n        if (n == 10) return false;\n        if (n == 11) return false;\n        if (n == 12) return false;\n        if (n == 13) return false;\n        if (n == 14) return false;\n        if (n == 15) return false;\n        if (n == 16) return true;\n        if (n == 17) return false;\n        if (n == 18) return false;\n        if (n == 19) return false;\n        if (n == 20) return false;\n        if (n == 21) return false;\n        if (n == 22) return false;\n        if (n == 23) return false;\n        if (n == 24) return false;\n        if (n == 25) return false;\n        if (n == 26) return false;\n        if (n == 27) return false;\n        if (n == 28) return false;\n        if (n == 29) return false;\n        if (n == 30) return false;\n        if (n == 31) return false;\n        if (n == 32) return true;\n        if (n == 33) return false;\n        if (n == 34) return false;\n        if (n == 35) return false;\n        if (n == 36) return false;\n        if (n == 37) return false;\n        if (n == 38) return false;\n        if (n == 39) return false;\n        if (n == 40) return false;\n        if (n == 41) return false;\n        if (n == 42) return false;\n        if (n == 43) return false;\n        if (n == 44) return false;\n        if (n == 45) return false;\n        if (n ==",
    "        if (n == 0) return true;\n        if (n == 1) return false;\n        if (n % 2 == 0) return IsSumOfPowersOfTwo(n / 2);\n        return IsSumOfPowersOfTwo(n - 1);",
    "        if (n < 0) {\n            return false;\n        }\n        if (n == 0) {\n            return true;\n        }\n        if (n == 1) {\n            return false;\n        }\n        long sum = 0;\n        long power = 1;\n        while (sum < n) {\n            sum += power;\n            power *= 2;\n        }\n        return sum == n;",
    "        if (n == 0) return true;\n        if (n == 1) return false;\n        if (n % 2 == 1) return false;\n        return IsSumOfPowersOfTwo(n / 2);",
    "        if (n == 0) return false;\n        while (n != 1) {\n            if (n % 2 != 0) return false;\n            n /= 2;\n        }\n        return true;",
    "        if (n == 0) return false;\n        if (n == 1) return true;\n        if (n == 2) return true;\n        if (n == 3) return false;\n        long x = 2;\n        while (x < n) {\n            x *= 2;\n        }\n        if (x == n) return true;\n        return IsSumOfPowersOfTwo(n - x / 2);",
    "        if (n == 0) return true;\n        if (n == 1) return true;\n        if (n == 2) return true;\n        if (n == 3) return false;\n        if (n == 4) return true;\n        if (n == 5) return false;\n        if (n == 6) return false;\n        if (n == 7) return false;\n        if (n == 8) return true;\n        if (n == 9) return false;\n        if (n == 10) return false;\n        if (n == 11) return false;\n        if (n == 12) return false;\n        if (n == 13) return false;\n        if (n == 14) return false;\n        if (n == 15) return false;\n        if (n == 16) return true;\n        if (n == 17) return false;\n        if (n == 18) return false;\n        if (n == 19) return false;\n        if (n == 20) return false;\n        if (n == 21) return false;\n        if (n == 22) return false;\n        if (n == 23) return false;\n        if (n == 24) return false;\n        if (n == 25) return false;\n        if (n == 26) return false;\n        if (n == 27) return false;\n        if (n == 28) return false;\n        if (n == 29) return false;\n        if (n == 30) return false;\n        if (n == 31) return false;\n        if (n == 32) return true;\n        if (n == 33) return false;\n        if (n == 34) return false;\n        if (n == 35) return false;\n        if (n == 36) return false;\n        if (n == 37) return false;\n        if (n == 38) return false;\n        if (n == 39) return false;\n        if (n == 40) return false;\n        if (n == 41) return false;\n        if (n == 42) return false;\n        if (n == 43) return false;\n        if (n == 44) return false;\n        if (n == 45) return false;\n        if (n ==",
    "        if (n == 0) return true;\n        if (n == 1) return false;\n        if (n % 2 == 1) return false;\n        return IsSumOfPowersOfTwo(n / 2);",
    "        long sum = 0;\n        long power = 1;\n        while (sum < n) {\n            sum += power;\n            power <<= 1;\n        }\n        return sum == n;",
    "        if (n == 0)\n            return false;\n        if (n == 1)\n            return true;\n        if (n % 2 == 1)\n            return false;\n        return IsSumOfPowersOfTwo(n / 2);",
    "        if (n == 0) {\n            return false;\n        }\n        while (n > 0) {\n            if (n % 2 == 1) {\n                return false;\n            }\n            n /= 2;\n        }\n        return true;",
    "        if (n == 0) return true;\n        if (n == 1) return true;\n        if (n == 2) return true;\n        if (n == 3) return false;\n        if (n == 4) return true;\n        if (n == 5) return false;\n        if (n == 6) return false;\n        if (n == 7) return false;\n        if (n == 8) return true;\n        if (n == 9) return false;\n        if (n == 10) return false;\n        if (n == 11) return false;\n        if (n == 12) return false;\n        if (n == 13) return false;\n        if (n == 14) return false;\n        if (n == 15) return false;\n        if (n == 16) return true;\n        if (n == 17) return false;\n        if (n == 18) return false;\n        if (n == 19) return false;\n        if (n == 20) return false;\n        if (n == 21) return false;\n        if (n == 22) return false;\n        if (n == 23) return false;\n        if (n == 24) return false;\n        if (n == 25) return false;\n        if (n == 26) return false;\n        if (n == 27) return false;\n        if (n == 28) return false;\n        if (n == 29) return false;\n        if (n == 30) return false;\n        if (n == 31) return false;\n        if (n == 32) return true;\n        if (n == 33) return false;\n        if (n == 34) return false;\n        if (n == 35) return false;\n        if (n == 36) return false;\n        if (n == 37) return false;\n        if (n == 38) return false;\n        if (n == 39) return false;\n        if (n == 40) return false;\n        if (n == 41) return false;\n        if (n == 42) return false;\n        if (n == 43) return false;\n        if (n == 44) return false;\n        if (n == 45) return false;\n        if (n ==",
    "        if (n == 0) return false;\n        if (n == 1) return true;\n        if (n % 2 == 1) return false;\n        return IsSumOfPowersOfTwo(n / 2);",
    "        long sum = 0;\n        long power = 1;\n        while (sum < n) {\n            sum += power;\n            power *= 2;\n        }\n        return sum == n;",
    "        if (n == 0) {\n            return false;\n        }\n        while (n % 2 == 0) {\n            n /= 2;\n        }\n        return n == 1;",
    "        if (n == 0) return true;\n        if (n == 1) return false;\n        if (n % 2 == 1) return false;\n        return IsSumOfPowersOfTwo(n / 2);",
    "        if (n == 0) return true;\n        if (n == 1) return true;\n        if (n == 2) return true;\n        if (n == 3) return false;\n        if (n == 4) return true;\n        if (n == 5) return false;\n        if (n == 6) return false;\n        if (n == 7) return false;\n        if (n == 8) return true;\n        if (n == 9) return false;\n        if (n == 10) return false;\n        if (n == 11) return false;\n        if (n == 12) return false;\n        if (n == 13) return false;\n        if (n == 14) return false;\n        if (n == 15) return false;\n        if (n == 16) return true;\n        if (n == 17) return false;\n        if (n == 18) return false;\n        if (n == 19) return false;\n        if (n == 20) return false;\n        if (n == 21) return false;\n        if (n == 22) return false;\n        if (n == 23) return false;\n        if (n == 24) return false;\n        if (n == 25) return false;\n        if (n == 26) return false;\n        if (n == 27) return false;\n        if (n == 28) return false;\n        if (n == 29) return false;\n        if (n == 30) return false;\n        if (n == 31) return false;\n        if (n == 32) return true;\n        if (n == 33) return false;\n        if (n == 34) return false;\n        if (n == 35) return false;\n        if (n == 36) return false;\n        if (n == 37) return false;\n        if (n == 38) return false;\n        if (n == 39) return false;\n        if (n == 40) return false;\n        if (n == 41) return false;\n        if (n == 42) return false;\n        if (n == 43) return false;\n        if (n == 44) return false;\n        if (n == 45) return false;\n        if (n ==",
    "        if (n == 0)\n            return false;\n        if (n == 1)\n            return true;\n        var powers = new List<long>();\n        for (long i = 0; i < n; i++) {\n            if (IsPowerOfTwo(i))\n                powers.Add(i);\n        }\n        return powers.Any(p => powers.Contains(n - p));",
    "        if (n == 0) return true;\n        if (n < 0) return false;\n        long x = 1;\n        while (x <= n) {\n            if (IsSumOfPowersOfTwo(n - x)) return true;\n            x *= 2;\n        }\n        return false;",
    "        if (n == 0) return false;\n        if (n == 1) return true;\n        if (n % 2 == 1) return false;\n        return IsSumOfPowersOfTwo(n / 2);"
  ]
}
{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorSum(i);\n            if (a != i && DivisorSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4j_f2pzp.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp4j_f2pzp.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a == i) continue;\n            long b = SumOfDivisors(a);\n            if (b == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3eudadnr.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp3eudadnr.cs(15,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a > i && DivisorSum(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf0gg_a0z.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpf0gg_a0z.cs(14,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (int i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a == i) continue;\n            if (DivisorSum(a) == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpebzjkfj8.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpebzjkfj8.cs(15,17): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = 0;\n            long sum2 = 0;\n            for (long j = 1; j < i; j++) {\n                if (i % j == 0) {\n                    sum1 += j;\n                }\n            }\n            for (long j = 1; j < sum1; j++) {\n                if (sum1 % j == 0) {\n                    sum2 += j;\n                }\n            }\n            if (sum2 == i && sum1 != i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a > i && SumOfProperDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32av6a3_.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp32av6a3_.cs(14,26): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i) {\n                long b = SumOfDivisors(a);\n                if (b == i) {\n                    sum += i + a;\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp61q8b2y1.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp61q8b2y1.cs(15,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a > i && SumOfProperDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph69qmnbf.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmph69qmnbf.cs(14,26): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = DivisorSum(i);\n            if (i == DivisorSum(d) && i != d) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0nlgke8v.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp0nlgke8v.cs(14,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2mkwczwt.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp2mkwczwt.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorSum(i);\n            if (sum1 > i && DivisorSum(sum1) == i) {\n                sum += i + sum1;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmx3wykt9.cs(13,25): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpmx3wykt9.cs(14,29): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            long b = SumOfProperDivisors(a);\n            if (b == i && a != b) {\n                sum += a + b;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7l617k0q.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp7l617k0q.cs(14,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = Divisors(i).Sum();\n            if (sumOfDivisors != i && Divisors(sumOfDivisors).Sum() == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpegoheb2c.cs(13,34): error CS0103: The name 'Divisors' does not exist in the current context\n/tmp/tmpegoheb2c.cs(14,39): error CS0103: The name 'Divisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a > i && DivisorsSum(a) == i) {\n                sum += a + i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1rj3we08.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp1rj3we08.cs(14,26): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpabd_7i36.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpabd_7i36.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a > i && DivisorsSum(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_bieickk.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp_bieickk.cs(14,26): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = SumOfProperDivisors(a);\n            if (a == b) continue;\n            if (SumOfProperDivisors(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_pk38bru.cs(14,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp_pk38bru.cs(16,17): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = Divisors.SumOfDivisors(i);\n            if (sumOfDivisors > i && Divisors.SumOfDivisors(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjmxq4cif.cs(13,34): error CS0103: The name 'Divisors' does not exist in the current context\n/tmp/tmpjmxq4cif.cs(14,38): error CS0103: The name 'Divisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d = SumOfProperDivisors(i);\n            if (d != i && SumOfProperDivisors(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp372o1ofk.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp372o1ofk.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (int i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i) {\n                long b = SumOfDivisors(a);\n                if (b == i) {\n                    sum += a + b;\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl54gb64j.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpl54gb64j.cs(15,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = SumOfDivisors(a);\n            if (a != b && SumOfDivisors(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl7j0t7su.cs(14,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpl7j0t7su.cs(15,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = SumOfDivisors(i);\n            if (sumOfDivisors > i && SumOfDivisors(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw8tz0ek2.cs(13,34): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpw8tz0ek2.cs(14,38): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a > i && a <= limit && i == SumOfProperDivisors(a)) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw9va7euk.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpw9va7euk.cs(14,45): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmfsb9w2v.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpmfsb9w2v.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (int i = 1; i <= limit; i++) {\n            long divisorSum = DivisorSum(i);\n            if (divisorSum > i && DivisorSum(divisorSum) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpudavimwm.cs(13,31): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpudavimwm.cs(14,35): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            if (IsAmicable(i)) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp52ajfwqz.cs(13,17): error CS0103: The name 'IsAmicable' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a == i) continue;\n            long b = DivisorsSum(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzmnwmnt6.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpzmnwmnt6.cs(15,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i) {\n                long b = SumOfDivisors(a);\n                if (b == i) {\n                    sum += a + b;\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp__3a8k9l.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp__3a8k9l.cs(15,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a == i) continue;\n            if (SumOfDivisors(a) == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_up59ziz.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp_up59ziz.cs(15,17): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            long b = SumOfDivisors(a);\n            if (b == i && a != b) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1r2q5jj9.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp1r2q5jj9.cs(14,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4f2560e137c4ed4916379b3020a877e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4f2560e137c4ed4916379b3020a877e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (b > a && DivisorsSum(b) == a) {\n                sum += a + b;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_8mx3fs3.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp_8mx3fs3.cs(15,26): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (int i = 2; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpu1y_q7k6.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpu1y_q7k6.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = SumOfDivisors(i);\n            if (sumOfDivisors != i && SumOfDivisors(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgqrmp3fw.cs(13,34): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpgqrmp3fw.cs(14,39): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long j = SumOfDivisors(i);\n            if (i == SumOfDivisors(j) && i != j) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphwqxuaj1.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmphwqxuaj1.cs(14,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            long b = SumOfDivisors(a);\n            if (b == i && a != b) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1r2q5jj9.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp1r2q5jj9.cs(14,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = 0;\n            long sum2 = 0;\n            for (long j = 1; j < i; j++) {\n                if (i % j == 0) {\n                    sum1 += j;\n                }\n            }\n            for (long k = 1; k < sum1; k++) {\n                if (sum1 % k == 0) {\n                    sum2 += k;\n                }\n            }\n            if (sum2 == i && sum1 != i) {\n                sum += sum1;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a == DivisorsSum(b) && a != b) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwa7eacxi.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpwa7eacxi.cs(15,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2t5anzmf.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp2t5anzmf.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkiqy30h4.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpkiqy30h4.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d = DivisorsSum(i);\n            if (d != i && DivisorsSum(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkta7bz_f.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpkta7bz_f.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            long sum2 = SumOfDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp36vxel4r.cs(13,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp36vxel4r.cs(14,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            if (sum1 > i) {\n                long sum2 = DivisorsSum(sum1);\n                if (sum2 == i) {\n                    sum += i;\n                    sum += sum1;\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl_pgc3pe.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpl_pgc3pe.cs(15,29): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a != i && DivisorSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp38jogfmg.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp38jogfmg.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            long b = SumOfProperDivisors(a);\n            if (b == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph_flp84b.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmph_flp84b.cs(15,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2t5anzmf.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp2t5anzmf.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx75wuf7_.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpx75wuf7_.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a == i) continue;\n            long b = SumOfDivisors(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpq4al861r.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpq4al861r.cs(15,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d = DivisorSum(i);\n            if (d != i && DivisorSum(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkqaw5ov4.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpkqaw5ov4.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            long b = SumOfProperDivisors(a);\n            if (b == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph_flp84b.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmph_flp84b.cs(15,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrmp7kib.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpjrmp7kib.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a == i) continue;\n            long b = DivisorSum(a);\n            if (b == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxoelcoox.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpxoelcoox.cs(15,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a != i && DivisorSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp38jogfmg.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp38jogfmg.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            long sum2 = SumOfDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp36vxel4r.cs(13,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp36vxel4r.cs(14,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppwv1m2ng.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmppwv1m2ng.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d = DivisorSum(i);\n            if (d > i && DivisorSum(d) == i) {\n                sum += i + d;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpob2xvt_d.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpob2xvt_d.cs(14,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5zxnqzmm.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp5zxnqzmm.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = SumOfDivisors(i);\n            if (SumOfDivisors(sumOfDivisors) == i && sumOfDivisors != i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpemgl5qds.cs(13,34): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpemgl5qds.cs(14,17): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2mkwczwt.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp2mkwczwt.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a != i && DivisorSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp38jogfmg.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp38jogfmg.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqttmpe9f.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpqttmpe9f.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            if (SumOfProperDivisors(a) == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6yxyrtky.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp6yxyrtky.cs(15,17): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorSum(i);\n            if (a > i && DivisorSum(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpma4uvbfz.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpma4uvbfz.cs(14,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 2; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a != i && DivisorSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkjnzs0i2.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpkjnzs0i2.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a == i) continue;\n            long b = DivisorSum(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpncxgpfwl.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpncxgpfwl.cs(15,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5zxnqzmm.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp5zxnqzmm.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = SumOfProperDivisors(a);\n            if (b > a && SumOfProperDivisors(b) == a) {\n                sum += a + b;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpexdy2bl3.cs(14,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpexdy2bl3.cs(15,26): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            long sum2 = SumOfDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp36vxel4r.cs(13,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp36vxel4r.cs(14,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            long sum2 = SumOfDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp36vxel4r.cs(13,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp36vxel4r.cs(14,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (i == SumOfDivisors(a) && i != a) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppn7a_mjj.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmppn7a_mjj.cs(14,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2mkwczwt.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp2mkwczwt.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2t5anzmf.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp2t5anzmf.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = SumOfDivisors(i);\n            if (d > i && SumOfDivisors(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprlfkb73h.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmprlfkb73h.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5zxnqzmm.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp5zxnqzmm.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfProperDivisors(i);\n            long sum2 = SumOfProperDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8ium4zhd.cs(13,25): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp8ium4zhd.cs(14,25): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = 0;\n            long sum2 = 0;\n            for (long j = 1; j < i; j++) {\n                if (i % j == 0) {\n                    sum1 += j;\n                }\n            }\n            for (long j = 1; j < sum1; j++) {\n                if (sum1 % j == 0) {\n                    sum2 += j;\n                }\n            }\n            if (sum2 == i && sum1 != i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a != i && DivisorSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp38jogfmg.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp38jogfmg.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1_4r5vyj.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp1_4r5vyj.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            long b = DivisorsSum(a);\n            if (i == b && a != b) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl5oe84f7.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpl5oe84f7.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 2; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpn57m2z_h.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpn57m2z_h.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5yi2gycs.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp5yi2gycs.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2mkwczwt.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp2mkwczwt.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5zxnqzmm.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp5zxnqzmm.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d = DivisorSum(i);\n            if (d > i && DivisorSum(d) == i) {\n                sum += i + d;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpob2xvt_d.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpob2xvt_d.cs(14,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a == i) continue;\n            long b = DivisorsSum(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzmnwmnt6.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpzmnwmnt6.cs(15,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = i;\n            long b = SumOfProperDivisors(a);\n            if (a != b && SumOfProperDivisors(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_98sch5q.cs(14,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp_98sch5q.cs(15,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            long b = SumOfDivisors(a);\n            if (b == i && a != b) {\n                sum += a + b;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi887swhk.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpi887swhk.cs(14,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2mkwczwt.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp2mkwczwt.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a == i) continue;\n            long b = SumOfDivisors(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpq4al861r.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpq4al861r.cs(15,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        // Create a list of all the divisors of each number from 1 to the limit.\n        var divisors = new List<long>();\n        for (long i = 1; i <= limit; i++) {\n            divisors.Add(DivisorsSum(i));\n        }\n        // Check if each number is amicable with another number.\n        var amicableNumbers = new List<long>();\n        for (long i = 1; i <= limit; i++) {\n            // If the sum of the divisors of the number is less than the limit,\n            // and the sum of the divisors of the sum of the divisors of the number is\n            // equal to the number, then the number is amicable.\n            if (divisors[(int)i - 1] <= limit && divisors[(int)divisors[(int)i - 1] - 1] == i && i != divisors[(int)i - 1]) {\n                amicableNumbers.Add(i);\n            }\n        }\n        // Return the sum of all the amicable numbers.\n        return amicableNumbers.Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2j8j1mv0.cs(14,26): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = Divisors.SumOfDivisors(i);\n            if (sumOfDivisors != i && Divisors.SumOfDivisors(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyoo_k219.cs(13,34): error CS0103: The name 'Divisors' does not exist in the current context\n/tmp/tmpyoo_k219.cs(14,39): error CS0103: The name 'Divisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long divisorSum = DivisorSum(i);\n            if (divisorSum != i && DivisorSum(divisorSum) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9g2zp_ow.cs(13,31): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp9g2zp_ow.cs(14,36): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_ux4d4k2.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp_ux4d4k2.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = SumOfDivisors(i);\n            if (sumOfDivisors > i && SumOfDivisors(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1im_89n9.cs(13,34): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp1im_89n9.cs(14,38): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpabd_7i36.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpabd_7i36.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && i != sum1) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp69u00kqs.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp69u00kqs.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorsSum(i);\n            if (a > i && DivisorsSum(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphj97ntcs.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmphj97ntcs.cs(14,26): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long j = SumOfDivisors(i);\n            if (i != j && SumOfDivisors(j) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp10901s_4.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp10901s_4.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkiqy30h4.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpkiqy30h4.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d1 = DivisorSum(i);\n            if (d1 > i) {\n                long d2 = DivisorSum(d1);\n                if (d2 == i) {\n                    sum += i + d1;\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdk_tewrc.cs(13,23): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpdk_tewrc.cs(15,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5zxnqzmm.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp5zxnqzmm.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = Divisors(i).Sum();\n            if (i != sumOfDivisors && Divisors(sumOfDivisors).Sum() == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpoe1komw3.cs(13,34): error CS0103: The name 'Divisors' does not exist in the current context\n/tmp/tmpoe1komw3.cs(14,39): error CS0103: The name 'Divisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (int i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a > i && SumOfProperDivisors(a) == i) {\n                sum += a + i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmplq1ecxv4.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmplq1ecxv4.cs(14,26): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (int i = 1; i < limit; i++) {\n            int a = i;\n            int b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptbczfjlo.cs(14,21): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmptbczfjlo.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = i;\n            long b = DivisorSum(a);\n            if (b > a && DivisorSum(b) == a) {\n                sum += a + b;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvkwxmh0g.cs(14,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpvkwxmh0g.cs(15,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && i == SumOfProperDivisors(a)) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy3j37__p.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpy3j37__p.cs(14,32): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            long b = SumOfProperDivisors(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpojj57qj4.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpojj57qj4.cs(15,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5yi2gycs.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp5yi2gycs.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = DivisorSum(i);\n            if (d != i && DivisorSum(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp056ntpgf.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp056ntpgf.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i) {\n                long sumOfDivisorsOfSumOfDivisors = DivisorsSum(sumOfDivisors);\n                if (sumOfDivisorsOfSumOfDivisors == i) {\n                    sum += i + sumOfDivisors;\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmyb24fjm.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpmyb24fjm.cs(15,53): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = DivisorsSum(i);\n            if (d != i && DivisorsSum(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphpu1uz8y.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmphpu1uz8y.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5zxnqzmm.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp5zxnqzmm.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a > i && DivisorsSum(a) == i) {\n                sum += a + i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1rj3we08.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp1rj3we08.cs(14,26): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            long b = SumOfProperDivisors(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpojj57qj4.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpojj57qj4.cs(15,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            long sum2 = SumOfDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp36vxel4r.cs(13,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp36vxel4r.cs(14,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (int i = 1; i < limit; i++) {\n            if (IsAmicable(i)) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbxzf2a4p.cs(13,17): error CS0103: The name 'IsAmicable' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (i == DivisorsSum(sumOfDivisors) && i != sumOfDivisors) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkgqk_ero.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpkgqk_ero.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_ux4d4k2.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp_ux4d4k2.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a == i)\n                continue;\n            if (SumOfDivisors(a) == i)\n                sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6geaohl2.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp6geaohl2.cs(16,17): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1_4r5vyj.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp1_4r5vyj.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (i != sumOfDivisors && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsg5dmnc0.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpsg5dmnc0.cs(14,39): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            long sum2 = SumOfDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp36vxel4r.cs(13,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp36vxel4r.cs(14,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && a < limit && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5sjtdxvd.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp5sjtdxvd.cs(14,39): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors != i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwg0i6237.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpwg0i6237.cs(14,39): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5yi2gycs.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp5yi2gycs.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (i == sum2 && i != sum1) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpggroa5nj.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpggroa5nj.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkiqy30h4.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpkiqy30h4.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (i == DivisorsSum(sumOfDivisors) && i != sumOfDivisors) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkgqk_ero.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpkgqk_ero.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = SumOfProperDivisors(a);\n            if (a != b && SumOfProperDivisors(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpaudsm8rz.cs(14,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpaudsm8rz.cs(15,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = Divisors(i).Sum();\n            if (sumOfDivisors > i && Divisors(sumOfDivisors).Sum() == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpe5f86vee.cs(13,34): error CS0103: The name 'Divisors' does not exist in the current context\n/tmp/tmpe5f86vee.cs(14,38): error CS0103: The name 'Divisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        // We can use the fact that the sum of the proper divisors of a number is\n        // equal to the sum of the proper divisors of the sum of the proper divisors\n        // of that number.\n        //\n        // For example, the sum of the proper divisors of 220 is 284, and the sum of\n        // the proper divisors of 284 is 220.\n        //\n        // We can use this fact to find all amicable numbers in O(n) time.\n        //\n        // We can also use the fact that the sum of the proper divisors of a number\n        // is less than the number itself.\n        //\n        // For example, the sum of the proper divisors of 220 is 284, and 284 < 220.\n        //\n        // We can use this fact to find all amicable numbers in O(n) time.\n        //\n        // We can also use the fact that the sum of the proper divisors of a number\n        // is less than the square root of the number itself.\n        //\n        // For example, the sum of the proper divisors of 220 is 284, and sqrt(220) = 14.7.\n        //\n        // We can use this fact to find all amicable numbers in O(n) time.\n        //\n        // We can also use the fact that the sum of the proper divisors of a number\n        // is equal to the sum of the proper divisors of the number divided by 2.\n        //\n        // For example, the sum of the proper divisors of 220 is 284, and the sum of\n        // the proper divisors of 220 / 2 = 110 is 284.\n        //\n        // We can use this fact to find all amicable numbers in O(n) time.\n        //\n        // We can also use the fact that the sum of the proper divisors of a number\n        // is equal to the sum of the proper divisors of the number divided by 2\n        // plus the number itself.\n        //\n        // For example, the sum of the proper divisors of 220 is 284, and the sum of\n        // the proper divisors of 220 / 2 = 110 is 284 + 110 = 394.\n        //\n        // We\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxf118cbr.cs(10,24): error CS0161: 'Problem.AmicableNumbersSum(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            long b = SumOfProperDivisors(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpojj57qj4.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpojj57qj4.cs(15,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = SumOfProperDivisors(a);\n            if (a != b && SumOfProperDivisors(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpaudsm8rz.cs(14,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpaudsm8rz.cs(15,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2t5anzmf.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp2t5anzmf.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorSum(i);\n            if (a > i && DivisorSum(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpma4uvbfz.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpma4uvbfz.cs(14,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            long b = SumOfDivisors(a);\n            if (b == i && a != b) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1r2q5jj9.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp1r2q5jj9.cs(14,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            long b = SumOfProperDivisors(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpojj57qj4.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpojj57qj4.cs(15,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5zxnqzmm.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp5zxnqzmm.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a > i && SumOfProperDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp32av6a3_.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp32av6a3_.cs(14,26): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = SumOfDivisors(i);\n            if (sumOfDivisors > i && SumOfDivisors(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw8tz0ek2.cs(13,34): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpw8tz0ek2.cs(14,38): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = Divisors(i).Sum();\n            if (sumOfDivisors != i && Divisors(sumOfDivisors).Sum() == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpegoheb2c.cs(13,34): error CS0103: The name 'Divisors' does not exist in the current context\n/tmp/tmpegoheb2c.cs(14,39): error CS0103: The name 'Divisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = SumOfProperDivisors(a);\n            if (a != b && SumOfProperDivisors(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpaudsm8rz.cs(14,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpaudsm8rz.cs(15,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorSum(a);\n            if (a == b) continue;\n            if (DivisorSum(b) == a) sum += a;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122650,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkivute00.cs(14,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpkivute00.cs(16,17): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5yi2gycs.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp5yi2gycs.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorSum(i);\n            if (a > i && DivisorSum(a) == i) {\n                sum += a + i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw90hiav5.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpw90hiav5.cs(14,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2mkwczwt.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp2mkwczwt.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a == i) continue;\n            long b = DivisorSum(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122649,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpncxgpfwl.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpncxgpfwl.cs(15,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppwv1m2ng.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmppwv1m2ng.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            long b = SumOfProperDivisors(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpojj57qj4.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpojj57qj4.cs(15,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
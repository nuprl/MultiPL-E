{
  "name": "mbpp_438_count_bidirectional",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_438_count_bidirectional.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        var count = 0;\n        var dict = new Dictionary<long, long>();\n        foreach (var item in test_list) {\n            if (dict.ContainsKey(item)) {\n                count += dict[item];\n                dict[item]++;\n            } else {\n                dict[item] = 1;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx49cz2qa.cs(15,17): error CS0266: Cannot implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?)\n/tmp/tmpx49cz2qa.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpx49cz2qa.cs(25,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpx49cz2qa.cs(26,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        // TODO: Implement this function.\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmb7czobq.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpmb7czobq.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpmb7czobq.cs(18,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg63e3p4j.cs(10,24): error CS0161: 'Problem.CountBidirectional(List<long>)': not all code paths return a value\n/tmp/tmpg63e3p4j.cs(14,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpg63e3p4j.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpg63e3p4j.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg63e3p4j.cs(10,24): error CS0161: 'Problem.CountBidirectional(List<long>)': not all code paths return a value\n/tmp/tmpg63e3p4j.cs(14,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpg63e3p4j.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpg63e3p4j.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        long count = 0;\n        foreach (long i in test_list) {\n            if (dict.ContainsKey(i)) {\n                count += dict[i];\n                dict[i]++;\n            } else {\n                dict[i] = 1;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp58lg7wbg.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp58lg7wbg.cs(25,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp58lg7wbg.cs(26,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] * test_list[j] > 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpn2hdyzn5.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpn2hdyzn5.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpn2hdyzn5.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        foreach (long i in test_list) {\n            foreach (long j in test_list) {\n                if (i < j) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp40ar35d4.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp40ar35d4.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp40ar35d4.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        var count = 0L;\n        var dict = new Dictionary<long, long>();\n        foreach (var item in test_list) {\n            if (dict.ContainsKey(item)) {\n                count += dict[item];\n                dict[item]++;\n            } else {\n                dict[item] = 1;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124036,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp17dx49o2.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp17dx49o2.cs(25,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp17dx49o2.cs(26,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        // Hint: You can use the following code to get the number of elements in a list.\n        // long count = test_list.Count;\n        // Hint: You can use the following code to get the number of elements in a list.\n        // long count = test_list.Count;\n        long count = 0;\n        for (long i = 0; i < test_list.Count; i++)\n        {\n            for (long j = i + 1; j < test_list.Count; j++)\n            {\n                if (test_list[i] == test_list[j])\n                {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_i15h30i.cs(21,31): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp_i15h30i.cs(21,47): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp_i15h30i.cs(30,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_i15h30i.cs(31,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_i15h30i.cs(32,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        // This function should return the number of bidirectional tuple pairs.\n        // For example, if the input list is [1, 2, 3, 4, 5], the output should be 3.\n        // The bidirectional tuple pairs are (1, 2), (2, 3), and (3, 4).\n        // You can assume that the input list is sorted in ascending order.\n        long count = 0;\n        for (int i = 0; i < test_list.Count - 1; i++) {\n            if (test_list[i] + 1 == test_list[i + 1]) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph3dqcfe1.cs(25,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmph3dqcfe1.cs(26,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmph3dqcfe1.cs(27,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        var count = 0L;\n        var dict = new Dictionary<long, long>();\n        foreach (var item in test_list) {\n            if (dict.ContainsKey(item)) {\n                count += dict[item];\n                dict[item] += 1;\n            } else {\n                dict[item] = 1;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcqlzxs9a.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpcqlzxs9a.cs(25,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpcqlzxs9a.cs(26,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Implement this function.\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp35_1sl3f.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp35_1sl3f.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp35_1sl3f.cs(25,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Write your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124035,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvd7nbwsl.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvd7nbwsl.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvd7nbwsl.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] < test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzvss1js0.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpzvss1js0.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpzvss1js0.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = 0; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124035,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpngjiym4p.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpngjiym4p.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpngjiym4p.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        var count = 0;\n        for (var i = 0; i < test_list.Count; i++) {\n            for (var j = 0; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzhsjmw65.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpzhsjmw65.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpzhsjmw65.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Implement this function.\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++)\n        {\n            for (int j = i + 1; j < test_list.Count; j++)\n            {\n                if (test_list[i] == test_list[j])\n                {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmnomi2_h.cs(26,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpmnomi2_h.cs(27,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpmnomi2_h.cs(28,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Write your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124035,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvd7nbwsl.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvd7nbwsl.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvd7nbwsl.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement your solution here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpldt7fxor.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpldt7fxor.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpldt7fxor.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        // You may add additional functions and classes as needed.\n        // You may not use any built-in functions other than the ones listed below.\n        // You may use any of the following built-in functions:\n        //   Math.Pow(x, y)\n        //   Math.Sqrt(x)\n        //   Math.Floor(x)\n        //   Math.Ceiling(x)\n        //   Math.Abs(x)\n        //   Math.Max(x, y)\n        //   Math.Min(x, y)\n        //   test_list.Count\n        //   test_list[i] (for i in range(0, test_list.Count))\n        // You may not use any other built-in functions.\n        // You may not use any mutable (changeable) data structures such as lists,\n        // dictionaries, sets, etc.\n        // You may use any immutable (unchangeable) data structures such as tuples,\n        // ints, floats, strings, etc.\n        // You may not import any additional libraries.\n        // You may not use Python's built-in 'eval' function.\n        // You may not define any new functions without parameters.\n        // You may define new functions that take parameters, as needed.\n        // You may not use global variables.\n        // You may not use nonlocal variables.\n        // You may not use Python's 'input' function.\n        // You may not use print statements.\n        // You may not use while or for loops.\n        // You may not use break or continue statements.\n        // You may not use try, except, else, or finally statements.\n        // You may not use raise statements.\n        // You may not use ternary expressions.\n        // You may not use lambda expressions.\n        // You may not use list comprehensions.\n        // You may not use any methods or attributes on any data structures.\n        // You may not use any operators, including but not limited to:\n        //   +   -   *   /   %   //   **   &   |   ^   >>   <<   +=   -=   *=   /=   %=\n        //   //=  \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwl0u0ir8.cs(10,24): error CS0161: 'Problem.CountBidirectional(List<long>)': not all code paths return a value\n/tmp/tmpwl0u0ir8.cs(50,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpwl0u0ir8.cs(51,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpwl0u0ir8.cs(52,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count += 1;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdzi3i5fz.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpdzi3i5fz.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpdzi3i5fz.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        var count = 0L;\n        var dict = new Dictionary<long, long>();\n        for (var i = 0; i < test_list.Count; i++) {\n            var a = test_list[i];\n            if (dict.ContainsKey(a)) {\n                count += dict[a];\n            }\n            if (dict.ContainsKey(-a)) {\n                dict[-a]++;\n            } else {\n                dict[-a] = 1;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptqmm31go.cs(27,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmptqmm31go.cs(28,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmptqmm31go.cs(29,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124035,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpiwqmz9u6.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpiwqmz9u6.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpiwqmz9u6.cs(25,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement me!\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpph94r49q.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpph94r49q.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpph94r49q.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        var count = 0;\n        for (var i = 0; i < test_list.Count; i++) {\n            for (var j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmaoc4pi4.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpmaoc4pi4.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpmaoc4pi4.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124035,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpiwqmz9u6.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpiwqmz9u6.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpiwqmz9u6.cs(25,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = 0; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124035,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpngjiym4p.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpngjiym4p.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpngjiym4p.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Implement this function.\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp35_1sl3f.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp35_1sl3f.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp35_1sl3f.cs(25,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++)\n        {\n            for (int j = i + 1; j < test_list.Count; j++)\n            {\n                if (test_list[i] == test_list[j])\n                {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124036,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1_c3a3so.cs(26,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp1_c3a3so.cs(27,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp1_c3a3so.cs(28,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = 0; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124035,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpngjiym4p.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpngjiym4p.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpngjiym4p.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Implement this function.\n        // You can add other functions and classes as you need.\n        // You can also modify function arguments and return type.\n        // You can also add new test cases in ProblemTest.cs.\n        // Good luck!\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbq6uzfl8.cs(27,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpbq6uzfl8.cs(28,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpbq6uzfl8.cs(29,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Implement this function.\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++)\n        {\n            for (int j = i + 1; j < test_list.Count; j++)\n            {\n                if (test_list[i] == test_list[j])\n                {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmnomi2_h.cs(26,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpmnomi2_h.cs(27,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpmnomi2_h.cs(28,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg63e3p4j.cs(10,24): error CS0161: 'Problem.CountBidirectional(List<long>)': not all code paths return a value\n/tmp/tmpg63e3p4j.cs(14,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpg63e3p4j.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpg63e3p4j.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Write your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp574ufhli.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp574ufhli.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp574ufhli.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3065871s.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp3065871s.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp3065871s.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        // You can add any helper functions you want.\n        // You can use any data structures you want.\n        // You can use any algorithm you want.\n        // You can use any language you want.\n        // You can use any IDE you want.\n        // You can use any operating system you want.\n        // You can use any computer you want.\n        // You can use any brain you want.\n        // You can use any body you want.\n        // You can use any soul you want.\n        // You can use any universe you want.\n        // You can use any dimension you want.\n        // You can use any time you want.\n        // You can use any space you want.\n        // You can use any energy you want.\n        // You can use any matter you want.\n        // You can use any force you want.\n        // You can use any speed you want.\n        // You can use any power you want.\n        // You can use any life you want.\n        // You can use any death you want.\n        // You can use any god you want.\n        // You can use any devil you want.\n        // You can use any angel you want.\n        // You can use any demon you want.\n        // You can use any heaven you want.\n        // You can use any hell you want.\n        // You can use any love you want.\n        // You can use any hate you want.\n        // You can use any light you want.\n        // You can use any darkness you want.\n        // You can use any good you want.\n        // You can use any evil you want.\n        // You can use any truth you want.\n        // You can use any lie you want.\n        // You can use any knowledge you want.\n        // You can use any ignorance you want.\n        // You can use any wisdom you want.\n        // You can use any foolishness you want.\n        // You can use any life you want.\n        // You can use any death you want.\n        // You can use any creation you want.\n        // You can use any destruction you want.\n        // You can use any beginning you want.\n        // You can use any end you want.\n        //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdfm5ql4l.cs(10,24): error CS0161: 'Problem.CountBidirectional(List<long>)': not all code paths return a value\n/tmp/tmpdfm5ql4l.cs(60,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpdfm5ql4l.cs(61,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpdfm5ql4l.cs(62,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124035,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpiwqmz9u6.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpiwqmz9u6.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpiwqmz9u6.cs(25,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Use a dictionary to count the number of times each element appears in the list.\n        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long element in test_list) {\n            if (counts.ContainsKey(element)) {\n                counts[element] += 1;\n            } else {\n                counts[element] = 1;\n            }\n        }\n        // Count the number of bidirectional pairs.\n        long bidirectional_pairs = 0;\n        foreach (long element in counts.Keys) {\n            long count = counts[element];\n            bidirectional_pairs += count * (count - 1) / 2;\n        }\n        return bidirectional_pairs;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpradpyk5d.cs(29,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpradpyk5d.cs(30,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpradpyk5d.cs(31,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Write your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp574ufhli.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp574ufhli.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp574ufhli.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        // TODO: Implement your solution here.\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi7jsoh0h.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpi7jsoh0h.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpi7jsoh0h.cs(18,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        // TODO: Write your code here.\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1666124037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzbmelvmv.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpzbmelvmv.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpzbmelvmv.cs(18,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvf_wgtmf.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpvf_wgtmf.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpirbz6ft5.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpirbz6ft5.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_p19vpv8.cs(22,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(23,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmp_p19vpv8.cs(24,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count bidirectional tuple pairs.\n    public static long CountBidirectional(List<long> test_list) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (3L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 1L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (2L));\n    Debug.Assert(CountBidirectional((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 6L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(9L, 2L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(2L, 1L)}))) == (4L));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnvc5agpc.cs(15,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(16,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n/tmp/tmpnvc5agpc.cs(17,53): error CS1503: Argument 1: cannot convert from 'System.Tuple<long, long>[]' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
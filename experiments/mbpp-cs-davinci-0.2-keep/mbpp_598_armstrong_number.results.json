{
  "name": "mbpp_598_armstrong_number",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_598_armstrong_number.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cb1a93438646462188c5fd8cca6aceb8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Floor(Math.Log10(number)) + 1;\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // TODO: Write your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c9b2a1a6b3bc4e2aabd3380b3828d184>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <140982d9905043a19cf7ea723e3c887a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // TODO: Implement me\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f150f9a7f9af45528cc4e14798783973>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var n = number;\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)temp % 10);\n            temp /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Floor(Math.Log10(number) + 1);\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Convert the number to a string.\n        string numberString = number.ToString();\n        // Get the length of the number.\n        int length = numberString.Length;\n        // Create a variable to store the sum of the digits.\n        long sum = 0;\n        // Loop through each digit of the number.\n        for (int i = 0; i < length; i++) {\n            // Get the digit at the current index.\n            int digit = int.Parse(numberString[i].ToString());\n            // Add the digit to the sum.\n            sum += (long)Math.Pow(digit, length);\n        }\n        // Return whether the sum is equal to the number.\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Write your code here.\n        var digits = number.ToString().Select(c => (int)char.GetNumericValue(c)).ToArray();\n        var sum = digits.Select(d => (long)Math.Pow(d, digits.Length)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Convert number to string\n        string numberString = number.ToString();\n        // Get the length of the number\n        int numberLength = numberString.Length;\n        // Calculate the power of each digit and sum them\n        long sum = 0;\n        for (int i = 0; i < numberLength; i++) {\n            sum += (long)Math.Pow(numberString[i] - '0', numberLength);\n        }\n        // Compare the sum with the number\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cb1a93438646462188c5fd8cca6aceb8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Convert the number to a string\n        string numberString = number.ToString();\n        // Get the length of the string\n        int length = numberString.Length;\n        // Create a new BigInteger to hold the sum\n        BigInteger sum = 0;\n        // Loop through each digit\n        foreach (char digit in numberString) {\n            // Convert the digit to an integer\n            int digitInteger = int.Parse(digit.ToString());\n            // Add the digit to the sum\n            sum += BigInteger.Pow(digitInteger, length);\n        }\n        // Check if the sum is equal to the number\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => (int)char.GetNumericValue(c)).ToArray();\n        var sum = digits.Select(d => (long)Math.Pow(d, digits.Length)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<long>();\n        while (number > 0) {\n            digits.Add(number % 10);\n            number /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123120,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a196b3327564aef84cf8c04b17cc2e1>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Get the number of digits in the number\n        int digits = (int)Math.Floor(Math.Log10(number) + 1);\n        // Get the sum of the digits raised to the power of the number of digits\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        // Return whether the sum is equal to the number\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => (int)Char.GetNumericValue(c)).ToList();\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cb1a93438646462188c5fd8cca6aceb8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cb1a93438646462188c5fd8cca6aceb8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db797313d1c1449f9c35849f4e3cc48a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db797313d1c1449f9c35849f4e3cc48a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => (int)Char.GetNumericValue(c)).ToArray();\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Length));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => int.Parse(c.ToString())).ToArray();\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Length));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // 1. Find the number of digits in the number.\n        int digits = (int)Math.Floor(Math.Log10(number)) + 1;\n        // 2. Find the sum of the digits raised to the power of the number of digits.\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        // 3. If the sum is equal to the number, then the number is an Armstrong number.\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Convert the number to a string\n        var numberString = number.ToString();\n        // Get the length of the number\n        var length = numberString.Length;\n        // Initialize the sum\n        var sum = 0;\n        // Loop through each digit\n        foreach (var digit in numberString) {\n            // Convert the digit to an integer\n            var digitInt = int.Parse(digit.ToString());\n            // Add the digit to the sum\n            sum += (int)Math.Pow(digitInt, length);\n        }\n        // Return whether the sum is equal to the number\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123117,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => int.Parse(c.ToString())).ToArray();\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Length));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Select(d => (long)Math.Pow(d, digits.Count)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123117,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9693ced514344191ab5c0f1840daf4cf>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => (int)char.GetNumericValue(c)).ToArray();\n        var sum = digits.Select(d => (long)Math.Pow(d, digits.Length)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => (int)Char.GetNumericValue(c)).ToArray();\n        var sum = digits.Select(d => (long)Math.Pow(d, digits.Length)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Floor(Math.Log10(number)) + 1;\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            int digit = (int)(temp % 10);\n            sum += (long)Math.Pow(digit, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123116,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea26fc5db82a483b85b5b2262102eb6e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => (int)Char.GetNumericValue(c)).ToArray();\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Length));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123116,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea26fc5db82a483b85b5b2262102eb6e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Select(d => (long)Math.Pow(d, digits.Count)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123117,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9693ced514344191ab5c0f1840daf4cf>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db797313d1c1449f9c35849f4e3cc48a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var n = number;\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<long>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add(temp % 10);\n            temp /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => int.Parse(c.ToString())).ToList();\n        var sum = digits.Select(d => BigInteger.Pow(d, digits.Count)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpatixduz4.cs(12,19): error CS1929: 'IEnumerable<BigInteger>' does not contain a definition for 'Sum' and the best extension method overload 'ParallelEnumerable.Sum(ParallelQuery<int>)' requires a receiver of type 'ParallelQuery<int>'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        return digits.Sum(d => (int)Math.Pow(d, digits.Count)) == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123120,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f74422a56c684541bab14859929ee5ff>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var n = number;\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // The number of digits in the number.\n        int digits = (int)Math.Floor(Math.Log10(number)) + 1;\n        // The sum of the digits raised to the power of the number of digits.\n        long sum = 0;\n        // The current digit.\n        long digit;\n        // The number of digits in the number.\n        for (int i = 0; i < digits; i++) {\n            // Get the current digit.\n            digit = number % 10;\n            // Add the digit to the sum.\n            sum += (long)Math.Pow(digit, digits);\n            // Remove the digit from the number.\n            number /= 10;\n        }\n        // Return whether the number is an armstrong number.\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123120,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <671043b61746455a89246ea4e13d9a58>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(x => (int)Char.GetNumericValue(x)).ToArray();\n        var sum = digits.Select(x => (long)Math.Pow(x, digits.Length)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Select(d => (long)Math.Pow(d, digits.Count)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123117,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9693ced514344191ab5c0f1840daf4cf>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cb1a93438646462188c5fd8cca6aceb8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Convert the number to a string\n        string numberString = number.ToString();\n        // Get the length of the number\n        int numberLength = numberString.Length;\n        // Initialize the sum\n        long sum = 0;\n        // Loop through each digit\n        for (int i = 0; i < numberLength; i++) {\n            // Get the current digit\n            int digit = int.Parse(numberString[i].ToString());\n            // Add the digit to the sum\n            sum += (long)Math.Pow(digit, numberLength);\n        }\n        // Check if the sum is equal to the number\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Get the number of digits in the number\n        int digits = (int)Math.Floor(Math.Log10(number)) + 1;\n        // Get the sum of the digits raised to the power of the number of digits\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        // Check if the sum is equal to the number\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Log10(number) + 1;\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => int.Parse(c.ToString())).ToArray();\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Length));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => int.Parse(c.ToString())).ToArray();\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Length));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        return digits.Sum(d => d * d * d) == digits.Aggregate(0, (a, d) => a * 10 + d);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123116,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8d6b069b12cd4845a423e638a361470a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // TODO: Implement this function\n        // Hint: You can use the logarithm function to get the number of digits.\n        // Hint: You can use the modulo operator to get the last digit of a number.\n        // Hint: You can use the division operator to remove the last digit of a number.\n        // Hint: You can use the power function to raise a number to a power.\n        // Hint: You can use the floor function to round a number down.\n        // Hint: You can use the round function to round a number to a given precision.\n        // Hint: You can use the abs function to get the absolute value of a number.\n        // Hint: You can use the sum function to sum a collection of numbers.\n        // Hint: You can use the map function to apply a function to a collection of numbers.\n        // Hint: You can use the filter function to filter a collection of numbers.\n        // Hint: You can use the range function to generate a range of numbers.\n        // Hint: You can use the zip function to combine two collections of numbers.\n        // Hint: You can use the fold function to fold a collection of numbers.\n        // Hint: You can use the fold function to fold a collection of numbers.\n        // Hint: You can use the fold function to fold a collection of numbers.\n        // Hint: You can use the fold function to fold a collection of numbers.\n        // Hint: You can use the fold function to fold a collection of numbers.\n        // Hint: You can use the fold function to fold a collection of numbers.\n        // Hint: You can use the fold function to fold a collection of numbers.\n        // Hint: You can use the fold function to fold a collection of numbers.\n        // Hint: You can use the fold function to fold a collection of numbers.\n        // Hint: You can use the fold function to fold a collection of numbers.\n        // Hint: You can use the fold function to fold a collection of numbers.\n        // Hint: You can use the fold function to fold a collection of numbers.\n        // Hint: You can use the fold function to fold a collection of numbers.\n        // Hint: You can use the fold function to\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpr2fn1qif.cs(10,24): error CS0161: 'Problem.ArmstrongNumber(long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Floor(Math.Log10(number)) + 1;\n        long sum = 0;\n        long n = number;\n        while (n > 0) {\n            long digit = n % 10;\n            sum += (long)Math.Pow(digit, digits);\n            n /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Convert number to string\n        string numberString = number.ToString();\n        // Get length of string\n        int length = numberString.Length;\n        // Initialize sum\n        BigInteger sum = 0;\n        // Loop through each character in string\n        for (int i = 0; i < length; i++) {\n            // Get the current character\n            char current = numberString[i];\n            // Convert character to integer\n            int currentInt = (int)Char.GetNumericValue(current);\n            // Add current integer to the sum\n            sum += BigInteger.Pow(currentInt, length);\n        }\n        // Return whether the sum is equal to the number\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Floor(Math.Log10(number)) + 1;\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <140982d9905043a19cf7ea723e3c887a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var n = number;\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Select(x => (long)Math.Pow(x, digits.Count)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123118,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <97a6d1e16f5b49e18a4b7214f1103de6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cb1a93438646462188c5fd8cca6aceb8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Your code goes here\n        var digits = number.ToString().Select(x => int.Parse(x.ToString())).ToArray();\n        var sum = digits.Sum(x => (long)Math.Pow(x, digits.Length));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123120,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <140982d9905043a19cf7ea723e3c887a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123116,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea26fc5db82a483b85b5b2262102eb6e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // TODO: Implement this function.\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6be14acd823b40fd807588d6d980ea58>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => (int)Char.GetNumericValue(c)).ToArray();\n        var sum = digits.Select(d => (long)Math.Pow(d, digits.Length)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Select(d => (long)Math.Pow(d, digits.Count)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123117,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9693ced514344191ab5c0f1840daf4cf>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123117,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <01c3a8aea8534e47af29f9486960639c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Floor(Math.Log10(number) + 1);\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Floor(Math.Log10(number)) + 1;\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db797313d1c1449f9c35849f4e3cc48a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)number % 10);\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123120,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <677f5217481b45b89bc0b86461959095>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(x => (long)Math.Pow(x, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123118,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2afccc85f2a748fcbec5bc7d97a960dc>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var n = number;\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db797313d1c1449f9c35849f4e3cc48a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        return digits.Sum(d => d * d * d) == digits.Aggregate(0, (a, d) => a * 10 + d);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123116,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8d6b069b12cd4845a423e638a361470a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Floor(Math.Log10(number)) + 1;\n        long sum = 0;\n        long n = number;\n        while (n > 0) {\n            sum += (long)Math.Pow(n % 10, digits);\n            n /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <140982d9905043a19cf7ea723e3c887a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => int.Parse(c.ToString())).ToArray();\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Length));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long digits = (long)Math.Floor(Math.Log10(number) + 1);\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += (long)Math.Pow(digit, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123116,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Convert the number to a string.\n        string numberString = number.ToString();\n        // Get the length of the number.\n        int length = numberString.Length;\n        // Create a variable to store the sum.\n        long sum = 0;\n        // Loop through each digit in the number.\n        for (int i = 0; i < length; i++) {\n            // Get the current digit.\n            int digit = int.Parse(numberString[i].ToString());\n            // Add the digit to the sum.\n            sum += (long)Math.Pow(digit, length);\n        }\n        // Return whether the number is an Armstrong number.\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return number == sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Select(x => (long)Math.Pow(x, digits.Count)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123118,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <97a6d1e16f5b49e18a4b7214f1103de6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Select(d => (long)Math.Pow(d, digits.Count)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123117,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9693ced514344191ab5c0f1840daf4cf>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Convert the number to a string.\n        string numberString = number.ToString();\n        // Get the length of the string.\n        int numberLength = numberString.Length;\n        // Create a variable to store the sum of the digits.\n        long sum = 0;\n        // Loop through each digit in the number.\n        for (int i = 0; i < numberLength; i++) {\n            // Convert the digit to a number.\n            int digit = int.Parse(numberString[i].ToString());\n            // Add the digit to the sum.\n            sum += (long)Math.Pow(digit, numberLength);\n        }\n        // Return whether the number is equal to the sum.\n        return number == sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123119,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (number > 0) {\n            sum += (long)Math.Pow(number % 10, 3);\n            number /= 10;\n        }\n        return sum == temp;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Floor(Math.Log10(number) + 1);\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => c - '0').ToArray();\n        var sum = digits.Select(d => BigInteger.Pow(d, digits.Length)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123120,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpedtfqn2f.cs(12,19): error CS1929: 'IEnumerable<BigInteger>' does not contain a definition for 'Sum' and the best extension method overload 'ParallelEnumerable.Sum(ParallelQuery<int>)' requires a receiver of type 'ParallelQuery<int>'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db797313d1c1449f9c35849f4e3cc48a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => int.Parse(c.ToString())).ToArray();\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Length));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(x => (int)Math.Pow(x, digits.Count));\n        return sum == digits.Aggregate((x, y) => x * 10 + y);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123117,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87ba3182472c48d393e1b64554c98ee1>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // The number is an Armstrong number if the sum of the cubes of its digits is equal to the number itself.\n        // For example, 371 is an Armstrong number, since 3**3 + 7**3 + 1**3 = 371.\n        // The number is an Armstrong number if the sum of the cubes of its digits is equal to the number itself.\n        // For example, 371 is an Armstrong number, since 3**3 + 7**3 + 1**3 = 371.\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123120,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Select(x => (long)Math.Pow(x, digits.Count)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123118,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <97a6d1e16f5b49e18a4b7214f1103de6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cb1a93438646462188c5fd8cca6aceb8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)temp % 10);\n            temp /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123120,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => int.Parse(c.ToString())).ToArray();\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Length));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => (int)char.GetNumericValue(c)).ToArray();\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Length));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123120,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Select(d => (long)Math.Pow(d, digits.Count)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123117,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9693ced514344191ab5c0f1840daf4cf>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => c - '0').ToArray();\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Length));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123120,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Log10(number) + 1;\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123116,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea26fc5db82a483b85b5b2262102eb6e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Select(d => (long)Math.Pow(d, digits.Count)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123117,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9693ced514344191ab5c0f1840daf4cf>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var n = number;\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(x => (int)Math.Pow(x, digits.Count));\n        return sum == digits.Aggregate((x, y) => x * 10 + y);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123117,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87ba3182472c48d393e1b64554c98ee1>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Floor(Math.Log10(number)) + 1;\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += (long)Math.Pow(digit, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123118,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(x => (int)Math.Pow(x, digits.Count));\n        return sum == digits.Aggregate((x, y) => x * 10 + y);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123117,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <87ba3182472c48d393e1b64554c98ee1>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        return digits.Sum(d => d * d * d) == digits.Aggregate(0, (a, d) => a * 10 + d);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123116,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8d6b069b12cd4845a423e638a361470a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => int.Parse(c.ToString())).ToArray();\n        var sum = digits.Select(d => BigInteger.Pow(d, digits.Length)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpunuy38c4.cs(12,19): error CS1929: 'IEnumerable<BigInteger>' does not contain a definition for 'Sum' and the best extension method overload 'ParallelEnumerable.Sum(ParallelQuery<int>)' requires a receiver of type 'ParallelQuery<int>'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e5adcc4c38694415bae9ed605ca27fc7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <140982d9905043a19cf7ea723e3c887a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Convert the number to a string\n        string numberString = number.ToString();\n        // Get the length of the number\n        int numberLength = numberString.Length;\n        // Create a variable to store the sum\n        long sum = 0;\n        // Loop through each digit\n        for (int i = 0; i < numberLength; i++) {\n            // Get the digit\n            int digit = int.Parse(numberString[i].ToString());\n            // Add the digit to the sum\n            sum += (long)Math.Pow(digit, numberLength);\n        }\n        // Return whether the sum is equal to the number\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123120,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // TODO: Implement\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123118,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db1f34546a10479d993387f09bb09a4c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == digits.Aggregate(0, (a, d) => a * 10 + d);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123117,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <78cc690ac65b4e5a9b17589718fccad3>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(c => int.Parse(c.ToString())).ToArray();\n        var sum = digits.Sum(d => (long)Math.Pow(d, digits.Length));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db797313d1c1449f9c35849f4e3cc48a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // Convert the number to a string\n        string numberString = number.ToString();\n        // Get the length of the number\n        int numberLength = numberString.Length;\n        // Get the sum of the digits raised to the power of the length\n        long sum = 0;\n        for (int i = 0; i < numberLength; i++) {\n            sum += (long)Math.Pow(numberString[i] - '0', numberLength);\n        }\n        // Return whether the sum is equal to the number\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123120,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, 3);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Floor(Math.Log10(number) + 1);\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var n = number;\n        while (n > 0) {\n            digits.Add((int)(n % 10));\n            n /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123116,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea26fc5db82a483b85b5b2262102eb6e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Log10(number) + 1;\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        var temp = number;\n        while (temp > 0) {\n            digits.Add((int)(temp % 10));\n            temp /= 10;\n        }\n        var sum = 0L;\n        foreach (var digit in digits) {\n            sum += (long)Math.Pow(digit, digits.Count);\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123115,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Select(x => (long)Math.Pow(x, digits.Count)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123118,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <97a6d1e16f5b49e18a4b7214f1103de6>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = number.ToString().Select(x => int.Parse(x.ToString())).ToArray();\n        var sum = digits.Select(x => (long)Math.Pow(x, digits.Length)).Sum();\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123120,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = 0;\n        foreach (var digit in digits) {\n            sum += (int)Math.Pow(digit, digits.Count);\n        }\n        return sum == digits.Aggregate((a, b) => a * 10 + b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db797313d1c1449f9c35849f4e3cc48a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit * digit * digit;\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        var digits = new List<int>();\n        while (number > 0) {\n            digits.Add((int)(number % 10));\n            number /= 10;\n        }\n        var sum = digits.Sum(d => (int)Math.Pow(d, digits.Count));\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <140982d9905043a19cf7ea723e3c887a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is armstrong or not.\n    public static bool ArmstrongNumber(long number) {\n        int digits = (int)Math.Floor(Math.Log10(number)) + 1;\n        long sum = 0;\n        long temp = number;\n        while (temp > 0) {\n            sum += (long)Math.Pow(temp % 10, digits);\n            temp /= 10;\n        }\n        return sum == number;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ArmstrongNumber((153L)) == (true));\n    Debug.Assert(ArmstrongNumber((259L)) == (false));\n    Debug.Assert(ArmstrongNumber((4458L)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510426,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
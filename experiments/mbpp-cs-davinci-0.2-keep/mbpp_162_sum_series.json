{
  "name": "mbpp_162_sum_series",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    public static long SumSeries(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_162_sum_series.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SumSeries((6L)) == (12L));\n    Debug.Assert(SumSeries((10L)) == (30L));\n    Debug.Assert(SumSeries((9L)) == (25L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - (2 * i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n; i += 2) {\n            sum += n - i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = n;\n        long i = 1;\n        while (n - 2 * i >= 0) {\n            sum += n - 2 * i;\n            i++;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i <= n / 2; i++) {\n            sum += n - 2 * i;\n        }\n        return sum;"
  ]
}
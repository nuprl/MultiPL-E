{
  "name": "mbpp_67_bell_number",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the number of ways to partition a set of Bell numbers.\n    public static long BellNumber(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_67_bell_number.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(BellNumber((2L)) == (2L));\n    Debug.Assert(BellNumber((10L)) == (115975L));\n    Debug.Assert(BellNumber((56L)) == (6775685320645824322581483068371419745979053216268760300L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        if (n == 0) return 1;\n        long sum = 0;\n        for (long k = 0; k < n; k++) {\n            sum += BellNumber(k) * BellNumber(n - k - 1);\n        }\n        return sum;",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[] bell = new long[n + 1];\n        bell[0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i] = 0;\n            for (long j = 0; j < i; j++) {\n                bell[i] += bell[j] * bell[i - j - 1];\n            }\n        }\n        return bell[n];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (long j = 1; j <= i; j++)\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        if (n == 0) return 1;\n        long sum = 0;\n        for (long k = 0; k < n; k++) {\n            sum += BellNumber(k) * BellNumber(n - 1 - k);\n        }\n        return sum;",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[][] bell = new long[n + 1][];\n        bell[0] = new long[] { 1 };\n        for (int i = 1; i <= n; i++) {\n            bell[i] = new long[i + 1];\n            bell[i][0] = bell[i - 1][i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n            }\n        }\n        return bell[n][0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        if (n == 0) return 1;\n        long sum = 0;\n        for (long k = 0; k < n; k++) {\n            sum += BellNumber(k) * BellNumber(n - k - 1);\n        }\n        return sum;",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        if (n == 0) return 1;\n        long sum = 0;\n        for (long k = 0; k < n; k++) {\n            sum += BellNumber(k) * BellNumber(n - k - 1);\n        }\n        return sum;",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[] bell = new long[n + 1];\n        bell[0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i] = 0;\n            for (int j = 0; j < i; j++) {\n                bell[i] += bell[j] * bell[i - j - 1];\n            }\n        }\n        return bell[n];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        if (n == 0) return 1;\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += BellNumber(i) * BellNumber(n - i - 1);\n        }\n        return sum;",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        if (n == 0) {\n            return 1;\n        }\n        long sum = 0;\n        for (long k = 0; k < n; k++) {\n            sum += BellNumber(k) * BellNumber(n - k - 1);\n        }\n        return sum;",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        if (n < 0) throw new ArgumentOutOfRangeException();\n        if (n == 0) return 1;\n        long sum = 0;\n        for (long k = 0; k <= n - 1; k++) {\n            sum += BellNumber(k) * BellNumber(n - 1 - k);\n        }\n        return sum;",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] b = new long[n+1, n+1];\n        b[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            b[i, 0] = b[i-1, i-1];\n            for (long j = 1; j <= i; j++) {\n                b[i, j] = b[i-1, j-1] + b[i, j-1];\n            }\n        }\n        return b[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        // Bell numbers are the number of ways to partition a set of n elements.\n        // B(n) = sum(k=0 to n) S(n, k)\n        // S(n, k) is the Stirling number of the second kind.\n        // S(n, k) = k*S(n-1, k) + S(n-1, k-1)\n        // S(n, 0) = 0, S(n, n) = 1\n        // S(n, k) = 0 for k > n\n        // S(n, k) = 1 for k = 1\n        // S(n, k) = 0 for k = 0\n        // S(n, k) = (n-1)*S(n-1, k) + S(n-1, k-1)\n        long[,] S = new long[n+1, n+1];\n        for (long i = 0; i <= n; i++) {\n            S[i, 0] = 0;\n            S[i, i] = 1;\n        }\n        for (long i = 1; i <= n; i++) {\n            for (long j = 1; j < i; j++) {\n                S[i, j] = (i-1)*S[i-1, j] + S[i-1, j-1];\n            }\n        }\n        long B = 0;\n        for (long i = 0; i <= n; i++) {\n            B += S[n, i];\n        }\n        return B;",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        if (n == 0) return 1;\n        long sum = 0;\n        for (long k = 0; k < n; k++) {\n            sum += BellNumber(k) * BellNumber(n - 1 - k);\n        }\n        return sum;",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        return (long)Math.Pow(2, n - 1) * (n - 1);",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[] bell = new long[n + 1];\n        bell[0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i] = 0;\n            for (int j = 0; j < i; j++) {\n                bell[i] += bell[j] * bell[i - j - 1];\n            }\n        }\n        return bell[n];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        if (n < 0) {\n            throw new ArgumentException(\"n must be nonnegative\");\n        }\n        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++)\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n+1, n+1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i-1, i-1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i-1, j-1] + bell[i, j-1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (long j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];",
    "        long[,] bell = new long[n + 1, n + 1];\n        bell[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i, 0] = bell[i - 1, i - 1];\n            for (int j = 1; j <= i; j++) {\n                bell[i, j] = bell[i - 1, j - 1] + bell[i, j - 1];\n            }\n        }\n        return bell[n, 0];"
  ]
}
{
  "name": "mbpp_793_last",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_793_last.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int n = arr.Count;\n        int l = 0;\n        int r = n - 1;\n        int ans = -1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (arr[mid] == x) {\n                ans = mid;\n                l = mid + 1;\n            } else if (arr[mid] < x) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int n = arr.Count;\n        int start = 0, end = n - 1;\n        int ans = -1;\n        while (start <= end) {\n            int mid = (start + end) / 2;\n            if (arr[mid] == x) {\n                ans = mid;\n                start = mid + 1;\n            } else if (arr[mid] > x) {\n                end = mid - 1;\n            } else {\n                start = mid + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int l = 0;\n        int r = arr.Count - 1;\n        int m = 0;\n        while (l <= r) {\n            m = l + (r - l) / 2;\n            if (arr[m] == x) {\n                if (m == arr.Count - 1 || arr[m + 1] > x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] <= x) {\n                ans = m;\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp25j0vv84.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp25j0vv84.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = lo + (hi - lo + 1) / 2;\n            if (arr[mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        if (arr[lo] == x) {\n            return lo;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2bgw0q61.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp2bgw0q61.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        while (left < right) {\n            long mid = (left + right) / 2;\n            if (arr[mid] <= x) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        if (arr[left] == x) {\n            return left;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvcx2z9wy.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpvcx2z9wy.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <945a34700a4448a8804df45f57e325bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <945a34700a4448a8804df45f57e325bc>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpn4dvrwlq.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2hz1uux0.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp2hz1uux0.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp60m08e4w.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp60m08e4w.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)m + 1] != x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Binary search\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long mid = 0;\n        while (lo <= hi) {\n            mid = lo + (hi - lo) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1 || arr[(int)mid + 1] != x) {\n                    return mid;\n                }\n                else {\n                    lo = mid + 1;\n                }\n            }\n            else if (arr[(int)mid] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi = mid - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = l + (r - l) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)(m + 1)] > x) {\n                    return m;\n                } else {\n                    l = m + 1;\n                }\n            } else if (arr[(int)m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqrirs3bt.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)(m + 1)] != x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1 || arr[(int)mid + 1] > x) {\n                    return mid;\n                } else {\n                    left = mid + 1;\n                }\n            } else if (arr[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long low = 0;\n        long high = arr.Count - 1;\n        long ans = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (arr[(int)mid] == x) {\n                ans = mid;\n                low = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = l + (r - l) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)(m + 1)] > x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[(int)m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Your code goes here\n        int i = 0;\n        int j = arr.Count - 1;\n        int last = -1;\n        while (i <= j) {\n            int mid = (i + j) / 2;\n            if (arr[mid] == x) {\n                last = mid;\n                i = mid + 1;\n            }\n            else if (arr[mid] > x) {\n                j = mid - 1;\n            }\n            else {\n                i = mid + 1;\n            }\n        }\n        return last;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        return arr.LastIndexOf(x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long ans = -1;\n\n        while (lo <= hi) {\n            long mid = (lo + hi) / 2;\n            if (arr[(int)mid] == x) {\n                ans = mid;\n                lo = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long mid = 0;\n        long result = -1;\n        while (lo <= hi) {\n            mid = lo + (hi - lo) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                lo = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long last = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (arr[(int)mid] == x) {\n                last = mid;\n                lo = mid + 1;\n            }\n            else if (arr[(int)mid] > x) {\n                hi = mid - 1;\n            }\n            else {\n                lo = mid + 1;\n            }\n        }\n        return last;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi + 1) / 2;\n            if (arr[(int)mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        if (arr[(int)lo] == x) {\n            return lo;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = l + (r - l) / 2;\n            if (arr[(int)m] > x) {\n                r = m - 1;\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                if (m == arr.Count - 1 || arr[(int)m + 1] != x) {\n                    return m;\n                } else {\n                    l = m + 1;\n                }\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int l = 0;\n        int r = arr.Count - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <13ee1fb4331a45f7a7c37fb760e933f3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <13ee1fb4331a45f7a7c37fb760e933f3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <945a34700a4448a8804df45f57e325bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <945a34700a4448a8804df45f57e325bc>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int l = 0;\n        int r = arr.Count - 1;\n        while (l < r) {\n            int m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph5h6am2e.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph5h6am2e.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpd017krs6.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpd017krs6.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Binary search\n        long left = 0;\n        long right = arr.Count - 1;\n        long mid = 0;\n        while (left <= right) {\n            mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1) {\n                    return mid;\n                } else if (arr[(int)mid + 1] != x) {\n                    return mid;\n                } else {\n                    left = mid + 1;\n                }\n            } else if (arr[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi) / 2;\n            if (arr[mid] <= x) {\n                lo = mid + 1;\n            } else {\n                hi = mid;\n            }\n        }\n        if (arr[lo] == x) {\n            return lo;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyl277yis.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpyl277yis.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int l = 0;\n        int r = arr.Count - 1;\n        int m = 0;\n        while (l <= r) {\n            m = (l + r) / 2;\n            if (arr[m] == x && (m == arr.Count - 1 || arr[m + 1] != x)) {\n                return m;\n            }\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Binary search\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)m + 1] != x) {\n                    return m;\n                }\n                else {\n                    l = m + 1;\n                }\n            }\n            else if (arr[(int)m] < x) {\n                l = m + 1;\n            }\n            else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp25j0vv84.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp25j0vv84.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Your code here\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long mid = 0;\n        long result = -1;\n        while (lo <= hi) {\n            mid = (lo + hi) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                lo = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi13pec2a.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return arr[l] == x ? l : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3mcf36yc.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp3mcf36yc.cs(20,20): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi + 1) / 2;\n            if (arr[(int)mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return lo;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Binary search\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo <= hi) {\n            long mid = (lo + hi) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1 || arr[(int)mid + 1] != x) {\n                    return mid;\n                }\n                lo = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp25j0vv84.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp25j0vv84.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        long ans = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                ans = mid;\n                left = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long mid = (l + r) / 2;\n            if (arr[mid] <= x) {\n                l = mid + 1;\n            } else {\n                r = mid;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfj9gqtcn.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpfj9gqtcn.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Binary search for the last position of x in arr\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long ans = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (arr[(int)mid] <= x) {\n                ans = mid;\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long last = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                last = m;\n                l = m + 1;\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return last;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi13pec2a.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp25j0vv84.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp25j0vv84.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi + 1) / 2;\n            if (arr[mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        if (arr[lo] == x) {\n            return lo;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpshbblb47.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpshbblb47.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int n = arr.Count;\n        int start = 0;\n        int end = n - 1;\n        int ans = -1;\n        while (start <= end) {\n            int mid = (start + end) / 2;\n            if (arr[mid] == x) {\n                ans = mid;\n                start = mid + 1;\n            } else if (arr[mid] > x) {\n                end = mid - 1;\n            } else {\n                start = mid + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi13pec2a.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                ans = m;\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm_fuwugl.cs(16,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Binary search\n        long left = 0;\n        long right = arr.Count - 1;\n        long mid = 0;\n        while (left <= right) {\n            mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1) {\n                    return mid;\n                }\n                else if (arr[(int)mid + 1] != x) {\n                    return mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n            else if (arr[(int)mid] < x) {\n                left = mid + 1;\n            }\n            else {\n                right = mid - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp25j0vv84.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp25j0vv84.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Binary search\n        long l = 0;\n        long r = arr.Count - 1;\n        long m = 0;\n        while (l <= r) {\n            m = l + (r - l) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)m + 1] > x) {\n                    return m;\n                } else {\n                    l = m + 1;\n                }\n            } else if (arr[(int)m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[m] == x) {\n                if (m == arr.Count - 1 || arr[m + 1] != x) {\n                    return m;\n                } else {\n                    l = m + 1;\n                }\n            } else if (arr[m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvz5tnsts.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpvz5tnsts.cs(15,47): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpvz5tnsts.cs(20,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp25j0vv84.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp25j0vv84.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy9rv3t3r.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpy9rv3t3r.cs(20,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long mid = (l + r + 1) / 2;\n            if (arr[mid] <= x) {\n                l = mid;\n            } else {\n                r = mid - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6u28o6gn.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp6u28o6gn.cs(20,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp25j0vv84.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp25j0vv84.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                left = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long low = 0;\n        long high = arr.Count - 1;\n        long last = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (arr[(int)mid] == x) {\n                last = mid;\n                low = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return last;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)m + 1] != x) {\n                    return m;\n                } else {\n                    l = m + 1;\n                }\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1 || arr[(int)mid + 1] != x) {\n                    return mid;\n                }\n                lo = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int l = 0;\n        int r = arr.Count - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (arr[m] == x) {\n                if (m == arr.Count - 1 || arr[m + 1] > x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi13pec2a.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Binary search\n        int low = 0;\n        int high = arr.Count - 1;\n        int last = -1;\n        while (low <= high) {\n            int mid = (low + high) / 2;\n            if (arr[mid] == x) {\n                last = mid;\n                low = mid + 1;\n            } else if (arr[mid] < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return last;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi13pec2a.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int n = arr.Count;\n        int l = 0, r = n - 1;\n        int ans = -1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (arr[mid] == x) {\n                ans = mid;\n                l = mid + 1;\n            } else if (arr[mid] < x) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long ans = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (arr[(int)mid] == x) {\n                ans = mid;\n                lo = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[m] == x) {\n                ans = m;\n                l = m + 1;\n            } else if (arr[m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppueidwhl.cs(16,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmppueidwhl.cs(19,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long low = 0;\n        long high = arr.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                low = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph5h6am2e.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[m] == x) {\n                ans = m;\n                l = m + 1;\n            } else if (arr[m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppueidwhl.cs(16,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmppueidwhl.cs(19,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                ans = m;\n                l = m + 1;\n            } else if (arr[(int)m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi13pec2a.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] > x) {\n                r = m - 1;\n            } else {\n                l = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpeafo8w21.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpeafo8w21.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] != x) {\n            return -1;\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpls1yd1cy.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpls1yd1cy.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi13pec2a.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long last = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                last = m;\n                l = m + 1;\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return last;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi + 1) / 2;\n            if (arr[(int)mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        if (arr[(int)lo] == x) {\n            return lo;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1) {\n                    return mid;\n                } else if (arr[(int)mid + 1] == x) {\n                    lo = mid + 1;\n                } else {\n                    return mid;\n                }\n            } else if (arr[(int)mid] < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1 || arr[(int)(mid + 1)] != x) {\n                    return mid;\n                } else {\n                    left = mid + 1;\n                }\n            } else if (arr[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp60m08e4w.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp60m08e4w.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2hz1uux0.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp2hz1uux0.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[m] == x) {\n                ans = m;\n                l = m + 1;\n            } else if (arr[m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpodko4e91.cs(16,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpodko4e91.cs(19,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)(m + 1)] != x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Write your code here\n        long n = arr.Count;\n        long low = 0;\n        long high = n - 1;\n        long ans = -1;\n        while (low <= high) {\n            long mid = low + (high - low) / 2;\n            if (arr[(int)mid] == x) {\n                ans = mid;\n                low = mid + 1;\n            }\n            else if (arr[(int)mid] < x) {\n                low = mid + 1;\n            }\n            else {\n                high = mid - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)(m + 1)] != x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0, hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi + 1) / 2;\n            if (arr[mid] <= x)\n                lo = mid;\n            else\n                hi = mid - 1;\n        }\n        return lo;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy0naniqs.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6vqgytca.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp6vqgytca.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph5h6am2e.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long mid = l + (r - l) / 2;\n            if (arr[(int)mid] == x) {\n                ans = mid;\n                l = mid + 1;\n            }\n            else if (arr[(int)mid] > x) {\n                r = mid - 1;\n            }\n            else {\n                l = mid + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l <= r) {\n            long m = l + (r - l) / 2;\n            if (arr[m] == x) {\n                if (m == arr.Count - 1 || arr[m + 1] > x)\n                    return m;\n                else\n                    l = m + 1;\n            }\n            else if (arr[m] < x)\n                l = m + 1;\n            else\n                r = m - 1;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2dpu8bqo.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp2dpu8bqo.cs(15,47): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp2dpu8bqo.cs(20,26): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                left = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int n = arr.Count;\n        int l = 0;\n        int r = n - 1;\n        int ans = -1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (arr[mid] == x) {\n                ans = mid;\n                l = mid + 1;\n            } else if (arr[mid] < x) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long last = -1;\n        while (lo <= hi) {\n            long mid = (lo + hi) / 2;\n            if (arr[(int)mid] == x) {\n                last = mid;\n                lo = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return last;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1) {\n                    return mid;\n                } else if (arr[(int)mid + 1] != x) {\n                    return mid;\n                } else {\n                    left = mid + 1;\n                }\n            } else if (arr[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long result = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] <= x) {\n                result = m;\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi + 1) / 2;\n            if (arr[mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        if (arr[lo] == x) {\n            return lo;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpshbblb47.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpshbblb47.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        return arr.LastIndexOf(x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                ans = m;\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm_fuwugl.cs(16,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int n = arr.Count;\n        int start = 0;\n        int end = n - 1;\n        int ans = -1;\n        while (start <= end) {\n            int mid = (start + end) / 2;\n            if (arr[mid] == x) {\n                ans = mid;\n                start = mid + 1;\n            } else if (arr[mid] > x) {\n                end = mid - 1;\n            } else {\n                start = mid + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)m + 1] != x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp60m08e4w.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp60m08e4w.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long m;\n        long result = -1;\n        while (l <= r) {\n            m = (l + r) / 2;\n            if (arr[(int)m] <= x) {\n                result = m;\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp25j0vv84.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp25j0vv84.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long ans = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (arr[(int)mid] <= x) {\n                ans = mid;\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi + 1) / 2;\n            if (arr[(int)mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        if (arr[(int)lo] == x) {\n            return lo;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int n = arr.Count;\n        int lo = 0;\n        int hi = n - 1;\n        int ans = -1;\n        while (lo <= hi) {\n            int mid = lo + (hi - lo) / 2;\n            if (arr[mid] == x) {\n                ans = mid;\n                lo = mid + 1;\n            } else if (arr[mid] > x) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                left = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvj3fq6de.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpvj3fq6de.cs(20,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long ans = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (arr[(int)mid] == x) {\n                ans = mid;\n                lo = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long ans = -1;\n        while (lo <= hi) {\n            long mid = (lo + hi) / 2;\n            if (arr[(int)mid] == x) {\n                ans = mid;\n                lo = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2hz1uux0.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp2hz1uux0.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpn4dvrwlq.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph5h6am2e.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                ans = m;\n                l = m + 1;\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                left = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprauv1tze.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp25j0vv84.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp25j0vv84.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph5h6am2e.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // TODO: Implement your solution here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4876a85f92054145ab0104fde3432ff7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4876a85f92054145ab0104fde3432ff7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long last = -1;\n        while (lo <= hi) {\n            long mid = (lo + hi) / 2;\n            if (arr[(int)mid] == x) {\n                last = mid;\n                lo = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return last;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph5h6am2e.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi + 1) / 2;\n            if (arr[(int)mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        if (arr[(int)lo] != x) {\n            return -1;\n        }\n        return lo;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int lo = 0;\n        int hi = arr.Count - 1;\n        int last = -1;\n        while (lo <= hi) {\n            int mid = (lo + hi) / 2;\n            if (arr[mid] == x) {\n                last = mid;\n                lo = mid + 1;\n            } else if (arr[mid] < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return last;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long mid = (l + r + 1) / 2;\n            if (arr[mid] <= x) {\n                l = mid;\n            } else {\n                r = mid - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkdh8pmlx.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpkdh8pmlx.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp60m08e4w.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp60m08e4w.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long mid = (l + r) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1 || arr[(int)(mid + 1)] != x) {\n                    return mid;\n                }\n                l = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        while (left < right) {\n            long mid = (left + right) / 2;\n            if (arr[mid] <= x) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        if (arr[left] == x) {\n            return left;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkca_aw7e.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpkca_aw7e.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)(m + 1)] > x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[(int)m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi13pec2a.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph5h6am2e.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2hz1uux0.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp2hz1uux0.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Your code here\n        return arr.LastIndexOf(x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvj3fq6de.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpvj3fq6de.cs(20,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprauv1tze.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                ans = m;\n                l = m + 1;\n            } else if (arr[(int)m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long mid = (l + r) / 2;\n            if (arr[(int)mid] == x) {\n                ans = mid;\n                l = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return r;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0yztudr5.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long last = -1;\n        while (l <= r) {\n            long mid = (l + r) / 2;\n            if (arr[mid] == x) {\n                last = mid;\n                l = mid + 1;\n            } else if (arr[mid] > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return last;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpr9gzmpub.cs(16,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpr9gzmpub.cs(19,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2hz1uux0.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp2hz1uux0.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <945a34700a4448a8804df45f57e325bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <945a34700a4448a8804df45f57e325bc>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                left = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long low = 0;\n        long high = arr.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                low = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Binary search\n        long left = 0;\n        long right = arr.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                left = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi + 1) / 2;\n            if (arr[mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        if (arr[lo] == x) {\n            return lo;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpshbblb47.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpshbblb47.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long low = 0;\n        long high = arr.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                low = mid + 1;\n            }\n            else if (arr[(int)mid] > x) {\n                high = mid - 1;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // your code here\n        long left = 0;\n        long right = arr.Count - 1;\n        long mid = 0;\n        while (left <= right) {\n            mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1) {\n                    return mid;\n                }\n                if (arr[(int)mid + 1] != x) {\n                    return mid;\n                }\n                left = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)m + 1] != x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1 || arr[(int)mid + 1] != x) {\n                    return mid;\n                }\n                lo = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return arr[l] == x ? l : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3mcf36yc.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp3mcf36yc.cs(20,20): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                left = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprauv1tze.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1 || arr[(int)(mid + 1)] > x) {\n                    return mid;\n                }\n                left = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi + 1) / 2;\n            if (arr[(int)mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        if (arr[(int)lo] == x) {\n            return lo;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = lo + (hi - lo + 1) / 2;\n            if (arr[mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        if (arr[lo] == x) {\n            return lo;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpysov2f0d.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpysov2f0d.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                left = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long low = 0;\n        long high = arr.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (arr[(int)mid] <= x) {\n                result = mid;\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi13pec2a.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)m + 1] != x) {\n                    return m;\n                } else {\n                    l = m + 1;\n                }\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        int n = arr.Count;\n        int l = 0;\n        int r = n - 1;\n        int res = -1;\n        while (l <= r) {\n            int m = l + (r - l) / 2;\n            if (arr[m] == x) {\n                res = m;\n                l = m + 1;\n            }\n            else if (arr[m] < x) {\n                l = m + 1;\n            }\n            else {\n                r = m - 1;\n            }\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)(m + 1)] != x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        while (left < right) {\n            long mid = (left + right) / 2;\n            if (arr[mid] <= x) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        if (arr[left] == x) {\n            return left;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkca_aw7e.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpkca_aw7e.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long ans = -1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (arr[(int)mid] == x) {\n                ans = mid;\n                lo = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count;\n        while (lo < hi) {\n            long mid = lo + (hi - lo + 1) / 2;\n            if (arr[(int)mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return lo;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1 || arr[(int)mid + 1] != x) {\n                    return mid;\n                }\n                left = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <945a34700a4448a8804df45f57e325bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <945a34700a4448a8804df45f57e325bc>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Your code here\n        long left = 0;\n        long right = arr.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                left = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi13pec2a.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Binary search for the last position of x\n        long low = 0;\n        long high = arr.Count - 1;\n        long ans = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (arr[(int)mid] == x) {\n                ans = mid;\n                low = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long mid = (l + r + 1) / 2;\n            if (arr[mid] <= x) {\n                l = mid;\n            } else {\n                r = mid - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkdh8pmlx.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpkdh8pmlx.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprauv1tze.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi + 1) / 2;\n            if (arr[mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        if (arr[lo] == x) {\n            return lo;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpshbblb47.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpshbblb47.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp25j0vv84.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp25j0vv84.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Your code here\n        return arr.LastIndexOf(x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)(m + 1)] != x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfnk8dncm.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpfnk8dncm.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi) / 2;\n            if (arr[mid] > x) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        if (arr[lo] == x) {\n            return lo;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpafbbz0rl.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpafbbz0rl.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                left = mid + 1;\n            } else if (arr[(int)mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long ans = -1;\n        while (lo <= hi) {\n            long mid = (lo + hi) / 2;\n            if (arr[(int)mid] == x) {\n                ans = mid;\n                lo = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) {\n                l = m;\n            } else {\n                r = m - 1;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6vqgytca.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmp6vqgytca.cs(21,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long low = 0;\n        long high = arr.Count - 1;\n        long result = -1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                low = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[m] == x) {\n                ans = m;\n                l = m + 1;\n            } else if (arr[m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpodko4e91.cs(16,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpodko4e91.cs(19,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return arr[l] == x ? l : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyvox_855.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpyvox_855.cs(19,20): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long m = 0;\n        while (l <= r) {\n            m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1) {\n                    return m;\n                }\n                if (arr[(int)m + 1] > x) {\n                    return m;\n                }\n                l = m + 1;\n            }\n            else if (arr[(int)m] < x) {\n                l = m + 1;\n            }\n            else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long left = 0;\n        long right = arr.Count - 1;\n        long result = -1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (arr[(int)mid] == x) {\n                result = mid;\n                left = mid + 1;\n            } else if (arr[(int)mid] < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x)\n                l = m;\n            else\n                r = m - 1;\n        }\n        return arr[l] == x ? l : -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyvox_855.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpyvox_855.cs(19,20): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long ans = -1;\n        while (lo <= hi) {\n            long mid = (lo + hi) / 2;\n            if (arr[(int)mid] <= x) {\n                ans = mid;\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[m] == x) {\n                if (m == arr.Count - 1 || arr[m + 1] != x) {\n                    return m;\n                } else {\n                    l = m + 1;\n                }\n            } else if (arr[m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpngiasa66.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpngiasa66.cs(16,47): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpngiasa66.cs(21,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long low = 0, high = arr.Count - 1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1 || arr[(int)mid + 1] != x) {\n                    return mid;\n                }\n                else {\n                    low = mid + 1;\n                }\n            }\n            else if (arr[(int)mid] > x) {\n                high = mid - 1;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        long mid = 0;\n        while (lo <= hi) {\n            mid = (lo + hi) / 2;\n            if (arr[(int)mid] == x) {\n                if (mid == arr.Count - 1) {\n                    return mid;\n                }\n                if (arr[(int)mid + 1] != x) {\n                    return mid;\n                }\n                lo = mid + 1;\n            }\n            else if (arr[(int)mid] > x) {\n                hi = mid - 1;\n            }\n            else {\n                lo = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                if (m == arr.Count - 1 || arr[(int)(m + 1)] != x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[(int)m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510583,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0;\n        long r = arr.Count - 1;\n        long ans = -1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[(int)m] == x) {\n                ans = m;\n                l = m + 1;\n            } else if (arr[(int)m] > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (arr[m] == x) {\n                if (m == arr.Count - 1 || arr[m + 1] != x) {\n                    return m;\n                }\n                l = m + 1;\n            } else if (arr[m] < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxjeq3oaw.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpxjeq3oaw.cs(15,47): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpxjeq3oaw.cs(19,28): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr[m] <= x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (arr[l] == x) {\n            return l;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvj3fq6de.cs(14,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n/tmp/tmpvj3fq6de.cs(20,17): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        // Binary search\n        long l = 0, r = arr.Count - 1;\n        while (l < r) {\n            long m = (l + r + 1) / 2;\n            if (arr[m] <= x) l = m;\n            else r = m - 1;\n        }\n        return l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7l0cnps_.cs(15,21): error CS1503: Argument 1: cannot convert from 'long' to 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a python function to find the last position of an element in a sorted array.\n    public static long Last(List<long> arr, long x) {\n        long lo = 0;\n        long hi = arr.Count - 1;\n        while (lo < hi) {\n            long mid = (lo + hi + 1) / 2;\n            if (arr[(int)mid] <= x) {\n                lo = mid;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        if (arr[(int)lo] == x) {\n            return lo;\n        } else {\n            return -1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (1L)) == (0L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)3L, (long)4L})), (1L)) == (2L));\n    Debug.Assert(Last((new List<long>(new long[]{(long)2L, (long)3L, (long)2L, (long)3L, (long)6L, (long)8L, (long)9L})), (3L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}